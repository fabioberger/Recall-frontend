"use strict";
(function($topLevelThis) {

Error.stackTraceLimit = Infinity;

var $global, $module;
if (typeof window !== "undefined") { /* web page */
  $global = window;
} else if (typeof self !== "undefined") { /* web worker */
  $global = self;
} else if (typeof global !== "undefined") { /* Node.js */
  $global = global;
  $global.require = require;
} else { /* others (e.g. Nashorn) */
  $global = $topLevelThis;
}

if ($global === undefined || $global.Array === undefined) {
  throw new Error("no global object found");
}
if (typeof module !== "undefined") {
  $module = module;
}

var $packages = {}, $idCounter = 0;
var $keys = function(m) { return m ? Object.keys(m) : []; };
var $min = Math.min;
var $mod = function(x, y) { return x % y; };
var $parseInt = parseInt;
var $parseFloat = function(f) {
  if (f !== undefined && f !== null && f.constructor === Number) {
    return f;
  }
  return parseFloat(f);
};
var $flushConsole = function() {};

var $mapArray = function(array, f) {
  var newArray = new array.constructor(array.length);
  for (var i = 0; i < array.length; i++) {
    newArray[i] = f(array[i]);
  }
  return newArray;
};

var $methodVal = function(recv, name) {
  var vals = recv.$methodVals || {};
  recv.$methodVals = vals; /* noop for primitives */
  var f = vals[name];
  if (f !== undefined) {
    return f;
  }
  var method = recv[name];
  f = function() {
    $stackDepthOffset--;
    try {
      return method.apply(recv, arguments);
    } finally {
      $stackDepthOffset++;
    }
  };
  vals[name] = f;
  return f;
};

var $methodExpr = function(method) {
  if (method.$expr === undefined) {
    method.$expr = function() {
      $stackDepthOffset--;
      try {
        return Function.call.apply(method, arguments);
      } finally {
        $stackDepthOffset++;
      }
    };
  }
  return method.$expr;
};

var $subslice = function(slice, low, high, max) {
  if (low < 0 || high < low || max < high || high > slice.$capacity || max > slice.$capacity) {
    $throwRuntimeError("slice bounds out of range");
  }
  var s = new slice.constructor(slice.$array);
  s.$offset = slice.$offset + low;
  s.$length = slice.$length - low;
  s.$capacity = slice.$capacity - low;
  if (high !== undefined) {
    s.$length = high - low;
  }
  if (max !== undefined) {
    s.$capacity = max - low;
  }
  return s;
};

var $sliceToArray = function(slice) {
  if (slice.$length === 0) {
    return [];
  }
  if (slice.$array.constructor !== Array) {
    return slice.$array.subarray(slice.$offset, slice.$offset + slice.$length);
  }
  return slice.$array.slice(slice.$offset, slice.$offset + slice.$length);
};

var $decodeRune = function(str, pos) {
  var c0 = str.charCodeAt(pos);

  if (c0 < 0x80) {
    return [c0, 1];
  }

  if (c0 !== c0 || c0 < 0xC0) {
    return [0xFFFD, 1];
  }

  var c1 = str.charCodeAt(pos + 1);
  if (c1 !== c1 || c1 < 0x80 || 0xC0 <= c1) {
    return [0xFFFD, 1];
  }

  if (c0 < 0xE0) {
    var r = (c0 & 0x1F) << 6 | (c1 & 0x3F);
    if (r <= 0x7F) {
      return [0xFFFD, 1];
    }
    return [r, 2];
  }

  var c2 = str.charCodeAt(pos + 2);
  if (c2 !== c2 || c2 < 0x80 || 0xC0 <= c2) {
    return [0xFFFD, 1];
  }

  if (c0 < 0xF0) {
    var r = (c0 & 0x0F) << 12 | (c1 & 0x3F) << 6 | (c2 & 0x3F);
    if (r <= 0x7FF) {
      return [0xFFFD, 1];
    }
    if (0xD800 <= r && r <= 0xDFFF) {
      return [0xFFFD, 1];
    }
    return [r, 3];
  }

  var c3 = str.charCodeAt(pos + 3);
  if (c3 !== c3 || c3 < 0x80 || 0xC0 <= c3) {
    return [0xFFFD, 1];
  }

  if (c0 < 0xF8) {
    var r = (c0 & 0x07) << 18 | (c1 & 0x3F) << 12 | (c2 & 0x3F) << 6 | (c3 & 0x3F);
    if (r <= 0xFFFF || 0x10FFFF < r) {
      return [0xFFFD, 1];
    }
    return [r, 4];
  }

  return [0xFFFD, 1];
};

var $encodeRune = function(r) {
  if (r < 0 || r > 0x10FFFF || (0xD800 <= r && r <= 0xDFFF)) {
    r = 0xFFFD;
  }
  if (r <= 0x7F) {
    return String.fromCharCode(r);
  }
  if (r <= 0x7FF) {
    return String.fromCharCode(0xC0 | r >> 6, 0x80 | (r & 0x3F));
  }
  if (r <= 0xFFFF) {
    return String.fromCharCode(0xE0 | r >> 12, 0x80 | (r >> 6 & 0x3F), 0x80 | (r & 0x3F));
  }
  return String.fromCharCode(0xF0 | r >> 18, 0x80 | (r >> 12 & 0x3F), 0x80 | (r >> 6 & 0x3F), 0x80 | (r & 0x3F));
};

var $stringToBytes = function(str) {
  var array = new Uint8Array(str.length);
  for (var i = 0; i < str.length; i++) {
    array[i] = str.charCodeAt(i);
  }
  return array;
};

var $bytesToString = function(slice) {
  if (slice.$length === 0) {
    return "";
  }
  var str = "";
  for (var i = 0; i < slice.$length; i += 10000) {
    str += String.fromCharCode.apply(null, slice.$array.subarray(slice.$offset + i, slice.$offset + Math.min(slice.$length, i + 10000)));
  }
  return str;
};

var $stringToRunes = function(str) {
  var array = new Int32Array(str.length);
  var rune, j = 0;
  for (var i = 0; i < str.length; i += rune[1], j++) {
    rune = $decodeRune(str, i);
    array[j] = rune[0];
  }
  return array.subarray(0, j);
};

var $runesToString = function(slice) {
  if (slice.$length === 0) {
    return "";
  }
  var str = "";
  for (var i = 0; i < slice.$length; i++) {
    str += $encodeRune(slice.$array[slice.$offset + i]);
  }
  return str;
};

var $copyString = function(dst, src) {
  var n = Math.min(src.length, dst.$length);
  for (var i = 0; i < n; i++) {
    dst.$array[dst.$offset + i] = src.charCodeAt(i);
  }
  return n;
};

var $copySlice = function(dst, src) {
  var n = Math.min(src.$length, dst.$length);
  $internalCopy(dst.$array, src.$array, dst.$offset, src.$offset, n, dst.constructor.elem);
  return n;
};

var $copy = function(dst, src, type) {
  switch (type.kind) {
  case $kindArray:
    $internalCopy(dst, src, 0, 0, src.length, type.elem);
    break;
  case $kindStruct:
    for (var i = 0; i < type.fields.length; i++) {
      var f = type.fields[i];
      switch (f.type.kind) {
      case $kindArray:
      case $kindStruct:
        $copy(dst[f.prop], src[f.prop], f.type);
        continue;
      default:
        dst[f.prop] = src[f.prop];
        continue;
      }
    }
    break;
  }
};

var $internalCopy = function(dst, src, dstOffset, srcOffset, n, elem) {
  if (n === 0 || (dst === src && dstOffset === srcOffset)) {
    return;
  }

  if (src.subarray) {
    dst.set(src.subarray(srcOffset, srcOffset + n), dstOffset);
    return;
  }

  switch (elem.kind) {
  case $kindArray:
  case $kindStruct:
    if (dst === src && dstOffset > srcOffset) {
      for (var i = n - 1; i >= 0; i--) {
        $copy(dst[dstOffset + i], src[srcOffset + i], elem);
      }
      return;
    }
    for (var i = 0; i < n; i++) {
      $copy(dst[dstOffset + i], src[srcOffset + i], elem);
    }
    return;
  }

  if (dst === src && dstOffset > srcOffset) {
    for (var i = n - 1; i >= 0; i--) {
      dst[dstOffset + i] = src[srcOffset + i];
    }
    return;
  }
  for (var i = 0; i < n; i++) {
    dst[dstOffset + i] = src[srcOffset + i];
  }
};

var $clone = function(src, type) {
  var clone = type.zero();
  $copy(clone, src, type);
  return clone;
};

var $pointerOfStructConversion = function(obj, type) {
  if(obj.$proxies === undefined) {
    obj.$proxies = {};
    obj.$proxies[obj.constructor.string] = obj;
  }
  var proxy = obj.$proxies[type.string];
  if (proxy === undefined) {
    var properties = {};
    for (var i = 0; i < type.elem.fields.length; i++) {
      (function(fieldProp) {
        properties[fieldProp] = {
          get: function() { return obj[fieldProp]; },
          set: function(value) { obj[fieldProp] = value; },
        };
      })(type.elem.fields[i].prop);
    }
    proxy = Object.create(type.prototype, properties);
    proxy.$val = proxy;
    obj.$proxies[type.string] = proxy;
    proxy.$proxies = obj.$proxies;
  }
  return proxy;
};

var $append = function(slice) {
  return $internalAppend(slice, arguments, 1, arguments.length - 1);
};

var $appendSlice = function(slice, toAppend) {
  return $internalAppend(slice, toAppend.$array, toAppend.$offset, toAppend.$length);
};

var $internalAppend = function(slice, array, offset, length) {
  if (length === 0) {
    return slice;
  }

  var newArray = slice.$array;
  var newOffset = slice.$offset;
  var newLength = slice.$length + length;
  var newCapacity = slice.$capacity;

  if (newLength > newCapacity) {
    newOffset = 0;
    newCapacity = Math.max(newLength, slice.$capacity < 1024 ? slice.$capacity * 2 : Math.floor(slice.$capacity * 5 / 4));

    if (slice.$array.constructor === Array) {
      newArray = slice.$array.slice(slice.$offset, slice.$offset + slice.$length);
      newArray.length = newCapacity;
      var zero = slice.constructor.elem.zero;
      for (var i = slice.$length; i < newCapacity; i++) {
        newArray[i] = zero();
      }
    } else {
      newArray = new slice.$array.constructor(newCapacity);
      newArray.set(slice.$array.subarray(slice.$offset, slice.$offset + slice.$length));
    }
  }

  $internalCopy(newArray, array, newOffset + slice.$length, offset, length, slice.constructor.elem);

  var newSlice = new slice.constructor(newArray);
  newSlice.$offset = newOffset;
  newSlice.$length = newLength;
  newSlice.$capacity = newCapacity;
  return newSlice;
};

var $equal = function(a, b, type) {
  switch (type.kind) {
  case $kindFloat32:
    return $float32IsEqual(a, b);
  case $kindComplex64:
    return $float32IsEqual(a.$real, b.$real) && $float32IsEqual(a.$imag, b.$imag);
  case $kindComplex128:
    return a.$real === b.$real && a.$imag === b.$imag;
  case $kindInt64:
  case $kindUint64:
    return a.$high === b.$high && a.$low === b.$low;
  case $kindPtr:
    if (a.constructor.elem) {
      return a === b;
    }
    return $pointerIsEqual(a, b);
  case $kindArray:
    if (a.length != b.length) {
      return false;
    }
    for (var i = 0; i < a.length; i++) {
      if (!$equal(a[i], b[i], type.elem)) {
        return false;
      }
    }
    return true;
  case $kindStruct:
    for (var i = 0; i < type.fields.length; i++) {
      var f = type.fields[i];
      if (!$equal(a[f.prop], b[f.prop], f.type)) {
        return false;
      }
    }
    return true;
  case $kindInterface:
    if (type === $js.Object) {
      return a === b;
    }
    return $interfaceIsEqual(a, b);
  default:
    return a === b;
  }
};

var $interfaceIsEqual = function(a, b) {
  if (a === $ifaceNil || b === $ifaceNil) {
    return a === b;
  }
  if (a.constructor !== b.constructor) {
    return false;
  }
  if (!a.constructor.comparable) {
    $throwRuntimeError("comparing uncomparable type " + a.constructor.string);
  }
  return $equal(a.$val, b.$val, a.constructor);
};

var $float32IsEqual = function(a, b) {
  if (a === b) {
    return true;
  }
  if (a === 1/0 || b === 1/0 || a === -1/0 || b === -1/0 || a !== a || b !== b) {
    return false;
  }
  var math = $packages["math"];
  return math !== undefined && math.Float32bits(a) === math.Float32bits(b);
};

var $pointerIsEqual = function(a, b) {
  if (a === b) {
    return true;
  }
  if (a.$get === $throwNilPointerError || b.$get === $throwNilPointerError) {
    return a.$get === $throwNilPointerError && b.$get === $throwNilPointerError;
  }
  var va = a.$get();
  var vb = b.$get();
  if (va !== vb) {
    return false;
  }
  var dummy = va + 1;
  a.$set(dummy);
  var equal = b.$get() === dummy;
  a.$set(va);
  return equal;
};

var $kindBool = 1;
var $kindInt = 2;
var $kindInt8 = 3;
var $kindInt16 = 4;
var $kindInt32 = 5;
var $kindInt64 = 6;
var $kindUint = 7;
var $kindUint8 = 8;
var $kindUint16 = 9;
var $kindUint32 = 10;
var $kindUint64 = 11;
var $kindUintptr = 12;
var $kindFloat32 = 13;
var $kindFloat64 = 14;
var $kindComplex64 = 15;
var $kindComplex128 = 16;
var $kindArray = 17;
var $kindChan = 18;
var $kindFunc = 19;
var $kindInterface = 20;
var $kindMap = 21;
var $kindPtr = 22;
var $kindSlice = 23;
var $kindString = 24;
var $kindStruct = 25;
var $kindUnsafePointer = 26;

var $newType = function(size, kind, string, name, pkg, constructor) {
  var typ;
  switch(kind) {
  case $kindBool:
  case $kindInt:
  case $kindInt8:
  case $kindInt16:
  case $kindInt32:
  case $kindUint:
  case $kindUint8:
  case $kindUint16:
  case $kindUint32:
  case $kindUintptr:
  case $kindString:
  case $kindUnsafePointer:
    typ = function(v) { this.$val = v; };
    typ.prototype.$key = function() { return string + "$" + this.$val; };
    break;

  case $kindFloat32:
  case $kindFloat64:
    typ = function(v) { this.$val = v; };
    typ.prototype.$key = function() { return string + "$" + $floatKey(this.$val); };
    break;

  case $kindInt64:
    typ = function(high, low) {
      this.$high = (high + Math.floor(Math.ceil(low) / 4294967296)) >> 0;
      this.$low = low >>> 0;
      this.$val = this;
    };
    typ.prototype.$key = function() { return string + "$" + this.$high + "$" + this.$low; };
    break;

  case $kindUint64:
    typ = function(high, low) {
      this.$high = (high + Math.floor(Math.ceil(low) / 4294967296)) >>> 0;
      this.$low = low >>> 0;
      this.$val = this;
    };
    typ.prototype.$key = function() { return string + "$" + this.$high + "$" + this.$low; };
    break;

  case $kindComplex64:
  case $kindComplex128:
    typ = function(real, imag) {
      this.$real = real;
      this.$imag = imag;
      this.$val = this;
    };
    typ.prototype.$key = function() { return string + "$" + this.$real + "$" + this.$imag; };
    break;

  case $kindArray:
    typ = function(v) { this.$val = v; };
    typ.ptr = $newType(4, $kindPtr, "*" + string, "", "", function(array) {
      this.$get = function() { return array; };
      this.$set = function(v) { $copy(this, v, typ); };
      this.$val = array;
    });
    typ.init = function(elem, len) {
      typ.elem = elem;
      typ.len = len;
      typ.comparable = elem.comparable;
      typ.prototype.$key = function() {
        return string + "$" + Array.prototype.join.call($mapArray(this.$val, function(e) {
          var key = e.$key ? e.$key() : String(e);
          return key.replace(/\\/g, "\\\\").replace(/\$/g, "\\$");
        }), "$");
      };
      typ.ptr.init(typ);
      Object.defineProperty(typ.ptr.nil, "nilCheck", { get: $throwNilPointerError });
    };
    break;

  case $kindChan:
    typ = function(capacity) {
      this.$val = this;
      this.$capacity = capacity;
      this.$buffer = [];
      this.$sendQueue = [];
      this.$recvQueue = [];
      this.$closed = false;
    };
    typ.prototype.$key = function() {
      if (this.$id === undefined) {
        $idCounter++;
        this.$id = $idCounter;
      }
      return String(this.$id);
    };
    typ.init = function(elem, sendOnly, recvOnly) {
      typ.elem = elem;
      typ.sendOnly = sendOnly;
      typ.recvOnly = recvOnly;
      typ.nil = new typ(0);
      typ.nil.$sendQueue = typ.nil.$recvQueue = { length: 0, push: function() {}, shift: function() { return undefined; }, indexOf: function() { return -1; } };
    };
    break;

  case $kindFunc:
    typ = function(v) { this.$val = v; };
    typ.init = function(params, results, variadic) {
      typ.params = params;
      typ.results = results;
      typ.variadic = variadic;
      typ.comparable = false;
    };
    break;

  case $kindInterface:
    typ = { implementedBy: {}, missingMethodFor: {} };
    typ.init = function(methods) {
      typ.methods = methods;
    };
    break;

  case $kindMap:
    typ = function(v) { this.$val = v; };
    typ.init = function(key, elem) {
      typ.key = key;
      typ.elem = elem;
      typ.comparable = false;
    };
    break;

  case $kindPtr:
    typ = constructor || function(getter, setter, target) {
      this.$get = getter;
      this.$set = setter;
      this.$target = target;
      this.$val = this;
    };
    typ.prototype.$key = function() {
      if (this.$id === undefined) {
        $idCounter++;
        this.$id = $idCounter;
      }
      return String(this.$id);
    };
    typ.init = function(elem) {
      typ.elem = elem;
      typ.nil = new typ($throwNilPointerError, $throwNilPointerError);
    };
    break;

  case $kindSlice:
    typ = function(array) {
      if (array.constructor !== typ.nativeArray) {
        array = new typ.nativeArray(array);
      }
      this.$array = array;
      this.$offset = 0;
      this.$length = array.length;
      this.$capacity = array.length;
      this.$val = this;
    };
    typ.init = function(elem) {
      typ.elem = elem;
      typ.comparable = false;
      typ.nativeArray = $nativeArray(elem.kind);
      typ.nil = new typ([]);
    };
    break;

  case $kindStruct:
    typ = function(v) { this.$val = v; };
    typ.ptr = $newType(4, $kindPtr, "*" + string, "", "", constructor);
    typ.ptr.elem = typ;
    typ.ptr.prototype.$get = function() { return this; };
    typ.ptr.prototype.$set = function(v) { $copy(this, v, typ); };
    typ.init = function(fields) {
      typ.fields = fields;
      fields.forEach(function(f) {
        if (!f.type.comparable) {
          typ.comparable = false;
        }
      });
      typ.prototype.$key = function() {
        var val = this.$val;
        return string + "$" + $mapArray(fields, function(f) {
          var e = val[f.prop];
          var key = e.$key ? e.$key() : String(e);
          return key.replace(/\\/g, "\\\\").replace(/\$/g, "\\$");
        }).join("$");
      };
      /* nil value */
      var properties = {};
      fields.forEach(function(f) {
        properties[f.prop] = { get: $throwNilPointerError, set: $throwNilPointerError };
      });
      typ.ptr.nil = Object.create(constructor.prototype, properties);
      typ.ptr.nil.$val = typ.ptr.nil;
      /* methods for embedded fields */
      var forwardMethod = function(target, m, f) {
        if (target.prototype[m.prop] !== undefined) { return; }
        target.prototype[m.prop] = function() {
          var v = this.$val[f.prop];
          if (f.type === $js.Object) {
            v = new $js.container.ptr(v);
          }
          if (v.$val === undefined) {
            v = new f.type(v);
          }
          return v[m.prop].apply(v, arguments);
        };
      };
      fields.forEach(function(f) {
        if (f.name === "") {
          f.type.methods.forEach(function(m) {
            forwardMethod(typ, m, f);
            forwardMethod(typ.ptr, m, f);
          });
          $ptrType(f.type).methods.forEach(function(m) {
            forwardMethod(typ.ptr, m, f);
          });
        }
      });
    };
    break;

  default:
    $panic(new $String("invalid kind: " + kind));
  }

  switch (kind) {
  case $kindBool:
  case $kindMap:
    typ.zero = function() { return false; };
    break;

  case $kindInt:
  case $kindInt8:
  case $kindInt16:
  case $kindInt32:
  case $kindUint:
  case $kindUint8 :
  case $kindUint16:
  case $kindUint32:
  case $kindUintptr:
  case $kindUnsafePointer:
  case $kindFloat32:
  case $kindFloat64:
    typ.zero = function() { return 0; };
    break;

  case $kindString:
    typ.zero = function() { return ""; };
    break;

  case $kindInt64:
  case $kindUint64:
  case $kindComplex64:
  case $kindComplex128:
    var zero = new typ(0, 0);
    typ.zero = function() { return zero; };
    break;

  case $kindChan:
  case $kindPtr:
  case $kindSlice:
    typ.zero = function() { return typ.nil; };
    break;

  case $kindFunc:
    typ.zero = function() { return $throwNilPointerError; };
    break;

  case $kindInterface:
    typ.zero = function() { return $ifaceNil; };
    break;

  case $kindArray:
    typ.zero = function() {
      var arrayClass = $nativeArray(typ.elem.kind);
      if (arrayClass !== Array) {
        return new arrayClass(typ.len);
      }
      var array = new Array(typ.len);
      for (var i = 0; i < typ.len; i++) {
        array[i] = typ.elem.zero();
      }
      return array;
    };
    break;

  case $kindStruct:
    typ.zero = function() { return new typ.ptr(); };
    break;

  default:
    $panic(new $String("invalid kind: " + kind));
  }

  typ.size = size;
  typ.kind = kind;
  typ.string = string;
  typ.typeName = name;
  typ.pkg = pkg;
  typ.methods = [];
  typ.comparable = true;
  var rt = null;
  return typ;
};

var $Bool          = $newType( 1, $kindBool,          "bool",           "bool",       "", null);
var $Int           = $newType( 4, $kindInt,           "int",            "int",        "", null);
var $Int8          = $newType( 1, $kindInt8,          "int8",           "int8",       "", null);
var $Int16         = $newType( 2, $kindInt16,         "int16",          "int16",      "", null);
var $Int32         = $newType( 4, $kindInt32,         "int32",          "int32",      "", null);
var $Int64         = $newType( 8, $kindInt64,         "int64",          "int64",      "", null);
var $Uint          = $newType( 4, $kindUint,          "uint",           "uint",       "", null);
var $Uint8         = $newType( 1, $kindUint8,         "uint8",          "uint8",      "", null);
var $Uint16        = $newType( 2, $kindUint16,        "uint16",         "uint16",     "", null);
var $Uint32        = $newType( 4, $kindUint32,        "uint32",         "uint32",     "", null);
var $Uint64        = $newType( 8, $kindUint64,        "uint64",         "uint64",     "", null);
var $Uintptr       = $newType( 4, $kindUintptr,       "uintptr",        "uintptr",    "", null);
var $Float32       = $newType( 4, $kindFloat32,       "float32",        "float32",    "", null);
var $Float64       = $newType( 8, $kindFloat64,       "float64",        "float64",    "", null);
var $Complex64     = $newType( 8, $kindComplex64,     "complex64",      "complex64",  "", null);
var $Complex128    = $newType(16, $kindComplex128,    "complex128",     "complex128", "", null);
var $String        = $newType( 8, $kindString,        "string",         "string",     "", null);
var $UnsafePointer = $newType( 4, $kindUnsafePointer, "unsafe.Pointer", "Pointer",    "", null);

var $anonTypeInits = [];
var $addAnonTypeInit = function(f) {
  if ($anonTypeInits === null) {
    f();
    return;
  }
  $anonTypeInits.push(f);
};
var $initAnonTypes = function() {
  $anonTypeInits.forEach(function(f) { f(); });
  $anonTypeInits = null;
};

var $nativeArray = function(elemKind) {
  switch (elemKind) {
  case $kindInt:
    return Int32Array;
  case $kindInt8:
    return Int8Array;
  case $kindInt16:
    return Int16Array;
  case $kindInt32:
    return Int32Array;
  case $kindUint:
    return Uint32Array;
  case $kindUint8:
    return Uint8Array;
  case $kindUint16:
    return Uint16Array;
  case $kindUint32:
    return Uint32Array;
  case $kindUintptr:
    return Uint32Array;
  case $kindFloat32:
    return Float32Array;
  case $kindFloat64:
    return Float64Array;
  default:
    return Array;
  }
};
var $toNativeArray = function(elemKind, array) {
  var nativeArray = $nativeArray(elemKind);
  if (nativeArray === Array) {
    return array;
  }
  return new nativeArray(array);
};
var $arrayTypes = {};
var $arrayType = function(elem, len) {
  var string = "[" + len + "]" + elem.string;
  var typ = $arrayTypes[string];
  if (typ === undefined) {
    typ = $newType(12, $kindArray, string, "", "", null);
    $arrayTypes[string] = typ;
    $addAnonTypeInit(function() { typ.init(elem, len); });
  }
  return typ;
};

var $chanType = function(elem, sendOnly, recvOnly) {
  var string = (recvOnly ? "<-" : "") + "chan" + (sendOnly ? "<- " : " ") + elem.string;
  var field = sendOnly ? "SendChan" : (recvOnly ? "RecvChan" : "Chan");
  var typ = elem[field];
  if (typ === undefined) {
    typ = $newType(4, $kindChan, string, "", "", null);
    elem[field] = typ;
    $addAnonTypeInit(function() { typ.init(elem, sendOnly, recvOnly); });
  }
  return typ;
};

var $funcTypes = {};
var $funcType = function(params, results, variadic) {
  var paramTypes = $mapArray(params, function(p) { return p.string; });
  if (variadic) {
    paramTypes[paramTypes.length - 1] = "..." + paramTypes[paramTypes.length - 1].substr(2);
  }
  var string = "func(" + paramTypes.join(", ") + ")";
  if (results.length === 1) {
    string += " " + results[0].string;
  } else if (results.length > 1) {
    string += " (" + $mapArray(results, function(r) { return r.string; }).join(", ") + ")";
  }
  var typ = $funcTypes[string];
  if (typ === undefined) {
    typ = $newType(4, $kindFunc, string, "", "", null);
    $funcTypes[string] = typ;
    $addAnonTypeInit(function() { typ.init(params, results, variadic); });
  }
  return typ;
};

var $interfaceTypes = {};
var $interfaceType = function(methods) {
  var string = "interface {}";
  if (methods.length !== 0) {
    string = "interface { " + $mapArray(methods, function(m) {
      return (m.pkg !== "" ? m.pkg + "." : "") + m.name + m.type.string.substr(4);
    }).join("; ") + " }";
  }
  var typ = $interfaceTypes[string];
  if (typ === undefined) {
    typ = $newType(8, $kindInterface, string, "", "", null);
    $interfaceTypes[string] = typ;
    $addAnonTypeInit(function() { typ.init(methods); });
  }
  return typ;
};
var $emptyInterface = $interfaceType([]);
var $ifaceNil = { $key: function() { return "nil"; } };
var $error = $newType(8, $kindInterface, "error", "error", "", null);
$error.init([{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}]);

var $Map = function() {};
(function() {
  var names = Object.getOwnPropertyNames(Object.prototype);
  for (var i = 0; i < names.length; i++) {
    $Map.prototype[names[i]] = undefined;
  }
})();
var $mapTypes = {};
var $mapType = function(key, elem) {
  var string = "map[" + key.string + "]" + elem.string;
  var typ = $mapTypes[string];
  if (typ === undefined) {
    typ = $newType(4, $kindMap, string, "", "", null);
    $mapTypes[string] = typ;
    $addAnonTypeInit(function() { typ.init(key, elem); });
  }
  return typ;
};


var $throwNilPointerError = function() { $throwRuntimeError("invalid memory address or nil pointer dereference"); };
var $ptrType = function(elem) {
  var typ = elem.ptr;
  if (typ === undefined) {
    typ = $newType(4, $kindPtr, "*" + elem.string, "", "", null);
    elem.ptr = typ;
    $addAnonTypeInit(function() { typ.init(elem); });
  }
  return typ;
};

var $newDataPointer = function(data, constructor) {
  if (constructor.elem.kind === $kindStruct) {
    return data;
  }
  return new constructor(function() { return data; }, function(v) { data = v; });
};

var $sliceType = function(elem) {
  var typ = elem.Slice;
  if (typ === undefined) {
    typ = $newType(12, $kindSlice, "[]" + elem.string, "", "", null);
    elem.Slice = typ;
    $addAnonTypeInit(function() { typ.init(elem); });
  }
  return typ;
};
var $makeSlice = function(typ, length, capacity) {
  capacity = capacity || length;
  var array = new typ.nativeArray(capacity);
  if (typ.nativeArray === Array) {
    for (var i = 0; i < capacity; i++) {
      array[i] = typ.elem.zero();
    }
  }
  var slice = new typ(array);
  slice.$length = length;
  return slice;
};

var $structTypes = {};
var $structType = function(fields) {
  var string = "struct { " + $mapArray(fields, function(f) {
    return f.name + " " + f.type.string + (f.tag !== "" ? (" \"" + f.tag.replace(/\\/g, "\\\\").replace(/"/g, "\\\"") + "\"") : "");
  }).join("; ") + " }";
  if (fields.length === 0) {
    string = "struct {}";
  }
  var typ = $structTypes[string];
  if (typ === undefined) {
    typ = $newType(0, $kindStruct, string, "", "", function() {
      this.$val = this;
      for (var i = 0; i < fields.length; i++) {
        var f = fields[i];
        var arg = arguments[i];
        this[f.prop] = arg !== undefined ? arg : f.type.zero();
      }
    });
    $structTypes[string] = typ;
    $anonTypeInits.push(function() {
      /* collect methods for anonymous fields */
      for (var i = 0; i < fields.length; i++) {
        var f = fields[i];
        if (f.name === "") {
          f.type.methods.forEach(function(m) {
            typ.methods.push(m);
            typ.ptr.methods.push(m);
          });
          $ptrType(f.type).methods.forEach(function(m) {
            typ.ptr.methods.push(m);
          });
        }
      };
      typ.init(fields);
    });
  }
  return typ;
};

var $assertType = function(value, type, returnTuple) {
  var isInterface = (type.kind === $kindInterface), ok, missingMethod = "";
  if (value === $ifaceNil) {
    ok = false;
  } else if (!isInterface) {
    ok = value.constructor === type;
  } else {
    var valueTypeString = value.constructor.string;
    ok = type.implementedBy[valueTypeString];
    if (ok === undefined) {
      ok = true;
      var valueMethods = value.constructor.methods;
      var typeMethods = type.methods;
      for (var i = 0; i < typeMethods.length; i++) {
        var tm = typeMethods[i];
        var found = false;
        for (var j = 0; j < valueMethods.length; j++) {
          var vm = valueMethods[j];
          if (vm.name === tm.name && vm.pkg === tm.pkg && vm.type === tm.type) {
            found = true;
            break;
          }
        }
        if (!found) {
          ok = false;
          type.missingMethodFor[valueTypeString] = tm.name;
          break;
        }
      }
      type.implementedBy[valueTypeString] = ok;
    }
    if (!ok) {
      missingMethod = type.missingMethodFor[valueTypeString];
    }
  }

  if (!ok) {
    if (returnTuple) {
      return [type.zero(), false];
    }
    $panic(new $packages["runtime"].TypeAssertionError.ptr("", (value === $ifaceNil ? "" : value.constructor.string), type.string, missingMethod));
  }

  if (!isInterface) {
    value = value.$val;
  }
  if (type === $js.Object) {
    value = value.Object;
  }
  return returnTuple ? [value, true] : value;
};

var $coerceFloat32 = function(f) {
  var math = $packages["math"];
  if (math === undefined) {
    return f;
  }
  return math.Float32frombits(math.Float32bits(f));
};

var $floatKey = function(f) {
  if (f !== f) {
    $idCounter++;
    return "NaN$" + $idCounter;
  }
  return String(f);
};

var $flatten64 = function(x) {
  return x.$high * 4294967296 + x.$low;
};

var $shiftLeft64 = function(x, y) {
  if (y === 0) {
    return x;
  }
  if (y < 32) {
    return new x.constructor(x.$high << y | x.$low >>> (32 - y), (x.$low << y) >>> 0);
  }
  if (y < 64) {
    return new x.constructor(x.$low << (y - 32), 0);
  }
  return new x.constructor(0, 0);
};

var $shiftRightInt64 = function(x, y) {
  if (y === 0) {
    return x;
  }
  if (y < 32) {
    return new x.constructor(x.$high >> y, (x.$low >>> y | x.$high << (32 - y)) >>> 0);
  }
  if (y < 64) {
    return new x.constructor(x.$high >> 31, (x.$high >> (y - 32)) >>> 0);
  }
  if (x.$high < 0) {
    return new x.constructor(-1, 4294967295);
  }
  return new x.constructor(0, 0);
};

var $shiftRightUint64 = function(x, y) {
  if (y === 0) {
    return x;
  }
  if (y < 32) {
    return new x.constructor(x.$high >>> y, (x.$low >>> y | x.$high << (32 - y)) >>> 0);
  }
  if (y < 64) {
    return new x.constructor(0, x.$high >>> (y - 32));
  }
  return new x.constructor(0, 0);
};

var $mul64 = function(x, y) {
  var high = 0, low = 0;
  if ((y.$low & 1) !== 0) {
    high = x.$high;
    low = x.$low;
  }
  for (var i = 1; i < 32; i++) {
    if ((y.$low & 1<<i) !== 0) {
      high += x.$high << i | x.$low >>> (32 - i);
      low += (x.$low << i) >>> 0;
    }
  }
  for (var i = 0; i < 32; i++) {
    if ((y.$high & 1<<i) !== 0) {
      high += x.$low << i;
    }
  }
  return new x.constructor(high, low);
};

var $div64 = function(x, y, returnRemainder) {
  if (y.$high === 0 && y.$low === 0) {
    $throwRuntimeError("integer divide by zero");
  }

  var s = 1;
  var rs = 1;

  var xHigh = x.$high;
  var xLow = x.$low;
  if (xHigh < 0) {
    s = -1;
    rs = -1;
    xHigh = -xHigh;
    if (xLow !== 0) {
      xHigh--;
      xLow = 4294967296 - xLow;
    }
  }

  var yHigh = y.$high;
  var yLow = y.$low;
  if (y.$high < 0) {
    s *= -1;
    yHigh = -yHigh;
    if (yLow !== 0) {
      yHigh--;
      yLow = 4294967296 - yLow;
    }
  }

  var high = 0, low = 0, n = 0;
  while (yHigh < 2147483648 && ((xHigh > yHigh) || (xHigh === yHigh && xLow > yLow))) {
    yHigh = (yHigh << 1 | yLow >>> 31) >>> 0;
    yLow = (yLow << 1) >>> 0;
    n++;
  }
  for (var i = 0; i <= n; i++) {
    high = high << 1 | low >>> 31;
    low = (low << 1) >>> 0;
    if ((xHigh > yHigh) || (xHigh === yHigh && xLow >= yLow)) {
      xHigh = xHigh - yHigh;
      xLow = xLow - yLow;
      if (xLow < 0) {
        xHigh--;
        xLow += 4294967296;
      }
      low++;
      if (low === 4294967296) {
        high++;
        low = 0;
      }
    }
    yLow = (yLow >>> 1 | yHigh << (32 - 1)) >>> 0;
    yHigh = yHigh >>> 1;
  }

  if (returnRemainder) {
    return new x.constructor(xHigh * rs, xLow * rs);
  }
  return new x.constructor(high * s, low * s);
};

var $divComplex = function(n, d) {
  var ninf = n.$real === 1/0 || n.$real === -1/0 || n.$imag === 1/0 || n.$imag === -1/0;
  var dinf = d.$real === 1/0 || d.$real === -1/0 || d.$imag === 1/0 || d.$imag === -1/0;
  var nnan = !ninf && (n.$real !== n.$real || n.$imag !== n.$imag);
  var dnan = !dinf && (d.$real !== d.$real || d.$imag !== d.$imag);
  if(nnan || dnan) {
    return new n.constructor(0/0, 0/0);
  }
  if (ninf && !dinf) {
    return new n.constructor(1/0, 1/0);
  }
  if (!ninf && dinf) {
    return new n.constructor(0, 0);
  }
  if (d.$real === 0 && d.$imag === 0) {
    if (n.$real === 0 && n.$imag === 0) {
      return new n.constructor(0/0, 0/0);
    }
    return new n.constructor(1/0, 1/0);
  }
  var a = Math.abs(d.$real);
  var b = Math.abs(d.$imag);
  if (a <= b) {
    var ratio = d.$real / d.$imag;
    var denom = d.$real * ratio + d.$imag;
    return new n.constructor((n.$real * ratio + n.$imag) / denom, (n.$imag * ratio - n.$real) / denom);
  }
  var ratio = d.$imag / d.$real;
  var denom = d.$imag * ratio + d.$real;
  return new n.constructor((n.$imag * ratio + n.$real) / denom, (n.$imag - n.$real * ratio) / denom);
};

var $stackDepthOffset = 0;
var $getStackDepth = function() {
  var err = new Error();
  if (err.stack === undefined) {
    return undefined;
  }
  return $stackDepthOffset + err.stack.split("\n").length;
};

var $deferFrames = [], $skippedDeferFrames = 0, $jumpToDefer = false, $panicStackDepth = null, $panicValue;
var $callDeferred = function(deferred, jsErr) {
  if ($skippedDeferFrames !== 0) {
    $skippedDeferFrames--;
    throw jsErr;
  }
  if ($jumpToDefer) {
    $jumpToDefer = false;
    throw jsErr;
  }
  if (jsErr) {
    var newErr = null;
    try {
      $deferFrames.push(deferred);
      $panic(new $js.Error.ptr(jsErr));
    } catch (err) {
      newErr = err;
    }
    $deferFrames.pop();
    $callDeferred(deferred, newErr);
    return;
  }

  $stackDepthOffset--;
  var outerPanicStackDepth = $panicStackDepth;
  var outerPanicValue = $panicValue;

  var localPanicValue = $curGoroutine.panicStack.pop();
  if (localPanicValue !== undefined) {
    $panicStackDepth = $getStackDepth();
    $panicValue = localPanicValue;
  }

  var call, localSkippedDeferFrames = 0;
  try {
    while (true) {
      if (deferred === null) {
        deferred = $deferFrames[$deferFrames.length - 1 - localSkippedDeferFrames];
        if (deferred === undefined) {
          var msg;
          if (localPanicValue.constructor === $String) {
            msg = localPanicValue.$val;
          } else if (localPanicValue.Error !== undefined) {
            msg = localPanicValue.Error();
          } else if (localPanicValue.String !== undefined) {
            msg = localPanicValue.String();
          } else {
            msg = localPanicValue;
          }
          var e = new Error(msg);
          if (localPanicValue.Stack !== undefined) {
            e.stack = localPanicValue.Stack();
            e.stack = msg + e.stack.substr(e.stack.indexOf("\n"));
          }
          throw e;
        }
      }
      var call = deferred.pop();
      if (call === undefined) {
        if (localPanicValue !== undefined) {
          localSkippedDeferFrames++;
          deferred = null;
          continue;
        }
        return;
      }
      var r = call[0].apply(undefined, call[1]);
      if (r && r.$blocking) {
        deferred.push([r, []]);
      }

      if (localPanicValue !== undefined && $panicStackDepth === null) {
        throw null; /* error was recovered */
      }
    }
  } finally {
    $skippedDeferFrames += localSkippedDeferFrames;
    if ($curGoroutine.asleep) {
      deferred.push(call);
      $jumpToDefer = true;
    }
    if (localPanicValue !== undefined) {
      if ($panicStackDepth !== null) {
        $curGoroutine.panicStack.push(localPanicValue);
      }
      $panicStackDepth = outerPanicStackDepth;
      $panicValue = outerPanicValue;
    }
    $stackDepthOffset++;
  }
};

var $panic = function(value) {
  $curGoroutine.panicStack.push(value);
  $callDeferred(null, null);
};
var $recover = function() {
  if ($panicStackDepth === null || ($panicStackDepth !== undefined && $panicStackDepth !== $getStackDepth() - 2)) {
    return $ifaceNil;
  }
  $panicStackDepth = null;
  return $panicValue;
};
var $throw = function(err) { throw err; };
var $throwRuntimeError; /* set by package "runtime" */

var $BLOCKING = new Object();
var $nonblockingCall = function() {
  $panic(new $packages["runtime"].NotSupportedError.ptr("non-blocking call to blocking function, see https://github.com/gopherjs/gopherjs#goroutines"));
};

var $dummyGoroutine = { asleep: false, exit: false, panicStack: [] };
var $curGoroutine = $dummyGoroutine, $totalGoroutines = 0, $awakeGoroutines = 0, $checkForDeadlock = true;
var $go = function(fun, args, direct) {
  $totalGoroutines++;
  $awakeGoroutines++;
  args.push($BLOCKING);
  var goroutine = function() {
    var rescheduled = false;
    try {
      $curGoroutine = goroutine;
      $skippedDeferFrames = 0;
      $jumpToDefer = false;
      var r = fun.apply(undefined, args);
      if (r && r.$blocking) {
        fun = r;
        args = [];
        $schedule(goroutine, direct);
        rescheduled = true;
        return;
      }
      goroutine.exit = true;
    } catch (err) {
      if (!$curGoroutine.asleep) {
        goroutine.exit = true;
        throw err;
      }
    } finally {
      $curGoroutine = $dummyGoroutine;
      if (goroutine.exit && !rescheduled) { /* also set by runtime.Goexit() */
        $totalGoroutines--;
        goroutine.asleep = true;
      }
      if (goroutine.asleep && !rescheduled) {
        $awakeGoroutines--;
        if ($awakeGoroutines === 0 && $totalGoroutines !== 0 && $checkForDeadlock) {
          console.error("fatal error: all goroutines are asleep - deadlock!");
        }
      }
    }
  };
  goroutine.asleep = false;
  goroutine.exit = false;
  goroutine.panicStack = [];
  $schedule(goroutine, direct);
};

var $scheduled = [], $schedulerLoopActive = false;
var $schedule = function(goroutine, direct) {
  if (goroutine.asleep) {
    goroutine.asleep = false;
    $awakeGoroutines++;
  }

  if (direct) {
    goroutine();
    return;
  }

  $scheduled.push(goroutine);
  if (!$schedulerLoopActive) {
    $schedulerLoopActive = true;
    setTimeout(function() {
      while (true) {
        var r = $scheduled.shift();
        if (r === undefined) {
          $schedulerLoopActive = false;
          break;
        }
        r();
      };
    }, 0);
  }
};

var $send = function(chan, value) {
  if (chan.$closed) {
    $throwRuntimeError("send on closed channel");
  }
  var queuedRecv = chan.$recvQueue.shift();
  if (queuedRecv !== undefined) {
    queuedRecv([value, true]);
    return;
  }
  if (chan.$buffer.length < chan.$capacity) {
    chan.$buffer.push(value);
    return;
  }

  var thisGoroutine = $curGoroutine;
  chan.$sendQueue.push(function() {
    $schedule(thisGoroutine);
    return value;
  });
  var blocked = false;
  var f = function() {
    if (blocked) {
      if (chan.$closed) {
        $throwRuntimeError("send on closed channel");
      }
      return;
    };
    blocked = true;
    $curGoroutine.asleep = true;
    throw null;
  };
  f.$blocking = true;
  return f;
};
var $recv = function(chan) {
  var queuedSend = chan.$sendQueue.shift();
  if (queuedSend !== undefined) {
    chan.$buffer.push(queuedSend());
  }
  var bufferedValue = chan.$buffer.shift();
  if (bufferedValue !== undefined) {
    return [bufferedValue, true];
  }
  if (chan.$closed) {
    return [chan.constructor.elem.zero(), false];
  }

  var thisGoroutine = $curGoroutine, value;
  var queueEntry = function(v) {
    value = v;
    $schedule(thisGoroutine);
  };
  chan.$recvQueue.push(queueEntry);
  var blocked = false;
  var f = function() {
    if (blocked) {
      return value;
    };
    blocked = true;
    $curGoroutine.asleep = true;
    throw null;
  };
  f.$blocking = true;
  return f;
};
var $close = function(chan) {
  if (chan.$closed) {
    $throwRuntimeError("close of closed channel");
  }
  chan.$closed = true;
  while (true) {
    var queuedSend = chan.$sendQueue.shift();
    if (queuedSend === undefined) {
      break;
    }
    queuedSend(); /* will panic because of closed channel */
  }
  while (true) {
    var queuedRecv = chan.$recvQueue.shift();
    if (queuedRecv === undefined) {
      break;
    }
    queuedRecv([chan.constructor.elem.zero(), false]);
  }
};
var $select = function(comms) {
  var ready = [];
  var selection = -1;
  for (var i = 0; i < comms.length; i++) {
    var comm = comms[i];
    var chan = comm[0];
    switch (comm.length) {
    case 0: /* default */
      selection = i;
      break;
    case 1: /* recv */
      if (chan.$sendQueue.length !== 0 || chan.$buffer.length !== 0 || chan.$closed) {
        ready.push(i);
      }
      break;
    case 2: /* send */
      if (chan.$closed) {
        $throwRuntimeError("send on closed channel");
      }
      if (chan.$recvQueue.length !== 0 || chan.$buffer.length < chan.$capacity) {
        ready.push(i);
      }
      break;
    }
  }

  if (ready.length !== 0) {
    selection = ready[Math.floor(Math.random() * ready.length)];
  }
  if (selection !== -1) {
    var comm = comms[selection];
    switch (comm.length) {
    case 0: /* default */
      return [selection];
    case 1: /* recv */
      return [selection, $recv(comm[0])];
    case 2: /* send */
      $send(comm[0], comm[1]);
      return [selection];
    }
  }

  var entries = [];
  var thisGoroutine = $curGoroutine;
  var removeFromQueues = function() {
    for (var i = 0; i < entries.length; i++) {
      var entry = entries[i];
      var queue = entry[0];
      var index = queue.indexOf(entry[1]);
      if (index !== -1) {
        queue.splice(index, 1);
      }
    }
  };
  for (var i = 0; i < comms.length; i++) {
    (function(i) {
      var comm = comms[i];
      switch (comm.length) {
      case 1: /* recv */
        var queueEntry = function(value) {
          selection = [i, value];
          removeFromQueues();
          $schedule(thisGoroutine);
        };
        entries.push([comm[0].$recvQueue, queueEntry]);
        comm[0].$recvQueue.push(queueEntry);
        break;
      case 2: /* send */
        var queueEntry = function() {
          if (comm[0].$closed) {
            $throwRuntimeError("send on closed channel");
          }
          selection = [i];
          removeFromQueues();
          $schedule(thisGoroutine);
          return comm[1];
        };
        entries.push([comm[0].$sendQueue, queueEntry]);
        comm[0].$sendQueue.push(queueEntry);
        break;
      }
    })(i);
  }
  var blocked = false;
  var f = function() {
    if (blocked) {
      return selection;
    };
    blocked = true;
    $curGoroutine.asleep = true;
    throw null;
  };
  f.$blocking = true;
  return f;
};

var $js;

var $needsExternalization = function(t) {
  switch (t.kind) {
    case $kindBool:
    case $kindInt:
    case $kindInt8:
    case $kindInt16:
    case $kindInt32:
    case $kindUint:
    case $kindUint8:
    case $kindUint16:
    case $kindUint32:
    case $kindUintptr:
    case $kindFloat32:
    case $kindFloat64:
      return false;
    case $kindInterface:
      return t !== $js.Object;
    default:
      return true;
  }
};

var $externalize = function(v, t) {
  switch (t.kind) {
  case $kindBool:
  case $kindInt:
  case $kindInt8:
  case $kindInt16:
  case $kindInt32:
  case $kindUint:
  case $kindUint8:
  case $kindUint16:
  case $kindUint32:
  case $kindUintptr:
  case $kindFloat32:
  case $kindFloat64:
    return v;
  case $kindInt64:
  case $kindUint64:
    return $flatten64(v);
  case $kindArray:
    if ($needsExternalization(t.elem)) {
      return $mapArray(v, function(e) { return $externalize(e, t.elem); });
    }
    return v;
  case $kindFunc:
    if (v === $throwNilPointerError) {
      return null;
    }
    if (v.$externalizeWrapper === undefined) {
      $checkForDeadlock = false;
      var convert = false;
      for (var i = 0; i < t.params.length; i++) {
        convert = convert || (t.params[i] !== $js.Object);
      }
      for (var i = 0; i < t.results.length; i++) {
        convert = convert || $needsExternalization(t.results[i]);
      }
      v.$externalizeWrapper = v;
      if (convert) {
        v.$externalizeWrapper = function() {
          var args = [];
          for (var i = 0; i < t.params.length; i++) {
            if (t.variadic && i === t.params.length - 1) {
              var vt = t.params[i].elem, varargs = [];
              for (var j = i; j < arguments.length; j++) {
                varargs.push($internalize(arguments[j], vt));
              }
              args.push(new (t.params[i])(varargs));
              break;
            }
            args.push($internalize(arguments[i], t.params[i]));
          }
          var result = v.apply(this, args);
          switch (t.results.length) {
          case 0:
            return;
          case 1:
            return $externalize(result, t.results[0]);
          default:
            for (var i = 0; i < t.results.length; i++) {
              result[i] = $externalize(result[i], t.results[i]);
            }
            return result;
          }
        };
      }
    }
    return v.$externalizeWrapper;
  case $kindInterface:
    if (t === $js.Object) {
      return v;
    }
    if (v === $ifaceNil) {
      return null;
    }
    return $externalize(v.$val, v.constructor);
  case $kindMap:
    var m = {};
    var keys = $keys(v);
    for (var i = 0; i < keys.length; i++) {
      var entry = v[keys[i]];
      m[$externalize(entry.k, t.key)] = $externalize(entry.v, t.elem);
    }
    return m;
  case $kindPtr:
    return $externalize(v.$get(), t.elem);
  case $kindSlice:
    if ($needsExternalization(t.elem)) {
      return $mapArray($sliceToArray(v), function(e) { return $externalize(e, t.elem); });
    }
    return $sliceToArray(v);
  case $kindString:
    if (v.search(/^[\x00-\x7F]*$/) !== -1) {
      return v;
    }
    var s = "", r;
    for (var i = 0; i < v.length; i += r[1]) {
      r = $decodeRune(v, i);
      s += String.fromCharCode(r[0]);
    }
    return s;
  case $kindStruct:
    var timePkg = $packages["time"];
    if (timePkg && v.constructor === timePkg.Time.ptr) {
      var milli = $div64(v.UnixNano(), new $Int64(0, 1000000));
      return new Date($flatten64(milli));
    }

    var searchJsObject = function(v, t) {
      if (t === $js.Object) {
        return v;
      }
      if (t.kind === $kindPtr) {
        var o = searchJsObject(v.$get(), t.elem);
        if (o !== undefined) {
          return o;
        }
      }
      if (t.kind === $kindStruct) {
        for (var i = 0; i < t.fields.length; i++) {
          var f = t.fields[i];
          var o = searchJsObject(v[f.prop], f.type);
          if (o !== undefined) {
            return o;
          }
        }
      }
      return undefined;
    };
    var o = searchJsObject(v, t);
    if (o !== undefined) {
      return o;
    }

    o = {};
    for (var i = 0; i < t.fields.length; i++) {
      var f = t.fields[i];
      if (f.pkg !== "") { /* not exported */
        continue;
      }
      o[f.name] = $externalize(v[f.prop], f.type);
    }
    return o;
  }
  $panic(new $String("cannot externalize " + t.string));
};

var $internalize = function(v, t, recv) {
  switch (t.kind) {
  case $kindBool:
    return !!v;
  case $kindInt:
    return parseInt(v);
  case $kindInt8:
    return parseInt(v) << 24 >> 24;
  case $kindInt16:
    return parseInt(v) << 16 >> 16;
  case $kindInt32:
    return parseInt(v) >> 0;
  case $kindUint:
    return parseInt(v);
  case $kindUint8:
    return parseInt(v) << 24 >>> 24;
  case $kindUint16:
    return parseInt(v) << 16 >>> 16;
  case $kindUint32:
  case $kindUintptr:
    return parseInt(v) >>> 0;
  case $kindInt64:
  case $kindUint64:
    return new t(0, v);
  case $kindFloat32:
  case $kindFloat64:
    return parseFloat(v);
  case $kindArray:
    if (v.length !== t.len) {
      $throwRuntimeError("got array with wrong size from JavaScript native");
    }
    return $mapArray(v, function(e) { return $internalize(e, t.elem); });
  case $kindFunc:
    return function() {
      var args = [];
      for (var i = 0; i < t.params.length; i++) {
        if (t.variadic && i === t.params.length - 1) {
          var vt = t.params[i].elem, varargs = arguments[i];
          for (var j = 0; j < varargs.$length; j++) {
            args.push($externalize(varargs.$array[varargs.$offset + j], vt));
          }
          break;
        }
        args.push($externalize(arguments[i], t.params[i]));
      }
      var result = v.apply(recv, args);
      switch (t.results.length) {
      case 0:
        return;
      case 1:
        return $internalize(result, t.results[0]);
      default:
        for (var i = 0; i < t.results.length; i++) {
          result[i] = $internalize(result[i], t.results[i]);
        }
        return result;
      }
    };
  case $kindInterface:
    if (t === $js.Object) {
      return v;
    }
    if (t.methods.length !== 0) {
      $panic(new $String("cannot internalize " + t.string));
    }
    if (v === null) {
      return $ifaceNil;
    }
    switch (v.constructor) {
    case Int8Array:
      return new ($sliceType($Int8))(v);
    case Int16Array:
      return new ($sliceType($Int16))(v);
    case Int32Array:
      return new ($sliceType($Int))(v);
    case Uint8Array:
      return new ($sliceType($Uint8))(v);
    case Uint16Array:
      return new ($sliceType($Uint16))(v);
    case Uint32Array:
      return new ($sliceType($Uint))(v);
    case Float32Array:
      return new ($sliceType($Float32))(v);
    case Float64Array:
      return new ($sliceType($Float64))(v);
    case Array:
      return $internalize(v, $sliceType($emptyInterface));
    case Boolean:
      return new $Bool(!!v);
    case Date:
      var timePkg = $packages["time"];
      if (timePkg) {
        return new timePkg.Time(timePkg.Unix(new $Int64(0, 0), new $Int64(0, v.getTime() * 1000000)));
      }
    case Function:
      var funcType = $funcType([$sliceType($emptyInterface)], [$js.Object], true);
      return new funcType($internalize(v, funcType));
    case Number:
      return new $Float64(parseFloat(v));
    case String:
      return new $String($internalize(v, $String));
    default:
      if ($global.Node && v instanceof $global.Node) {
        return new $js.container.ptr(v);
      }
      var mapType = $mapType($String, $emptyInterface);
      return new mapType($internalize(v, mapType));
    }
  case $kindMap:
    var m = new $Map();
    var keys = $keys(v);
    for (var i = 0; i < keys.length; i++) {
      var key = $internalize(keys[i], t.key);
      m[key.$key ? key.$key() : key] = { k: key, v: $internalize(v[keys[i]], t.elem) };
    }
    return m;
  case $kindPtr:
    if (t.elem.kind === $kindStruct) {
      return $internalize(v, t.elem);
    }
  case $kindSlice:
    return new t($mapArray(v, function(e) { return $internalize(e, t.elem); }));
  case $kindString:
    v = String(v);
    if (v.search(/^[\x00-\x7F]*$/) !== -1) {
      return v;
    }
    var s = "";
    for (var i = 0; i < v.length; i++) {
      s += $encodeRune(v.charCodeAt(i));
    }
    return s;
  case $kindStruct:
    var searchJsObject = function(v, t) {
      if (t === $js.Object) {
        return v;
      }
      if (t.kind === $kindPtr && t.elem.kind === $kindStruct) {
        var o = searchJsObject(v, t.elem);
        if (o !== undefined) {
          return o;
        }
      }
      if (t.kind === $kindStruct) {
        for (var i = 0; i < t.fields.length; i++) {
          var f = t.fields[i];
          var o = searchJsObject(v, f.type);
          if (o !== undefined) {
            var n = new t.ptr();
            n[f.prop] = o;
            return n;
          }
        }
      }
      return undefined;
    };
    var o = searchJsObject(v, t);
    if (o !== undefined) {
      return o;
    }
  }
  $panic(new $String("cannot internalize " + t.string));
};

$packages["github.com/gopherjs/gopherjs/js"] = (function() {
	var $pkg = {}, Object, container, Error, sliceType$1, ptrType, ptrType$1, init;
	Object = $pkg.Object = $newType(8, $kindInterface, "js.Object", "Object", "github.com/gopherjs/gopherjs/js", null);
	container = $pkg.container = $newType(0, $kindStruct, "js.container", "container", "github.com/gopherjs/gopherjs/js", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	Error = $pkg.Error = $newType(0, $kindStruct, "js.Error", "Error", "github.com/gopherjs/gopherjs/js", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
		sliceType$1 = $sliceType($emptyInterface);
		ptrType = $ptrType(container);
		ptrType$1 = $ptrType(Error);
	container.ptr.prototype.Get = function(key) {
		var c;
		c = this;
		return c.Object[$externalize(key, $String)];
	};
	container.prototype.Get = function(key) { return this.$val.Get(key); };
	container.ptr.prototype.Set = function(key, value) {
		var c;
		c = this;
		c.Object[$externalize(key, $String)] = $externalize(value, $emptyInterface);
	};
	container.prototype.Set = function(key, value) { return this.$val.Set(key, value); };
	container.ptr.prototype.Delete = function(key) {
		var c;
		c = this;
		delete c.Object[$externalize(key, $String)];
	};
	container.prototype.Delete = function(key) { return this.$val.Delete(key); };
	container.ptr.prototype.Length = function() {
		var c;
		c = this;
		return $parseInt(c.Object.length);
	};
	container.prototype.Length = function() { return this.$val.Length(); };
	container.ptr.prototype.Index = function(i) {
		var c;
		c = this;
		return c.Object[i];
	};
	container.prototype.Index = function(i) { return this.$val.Index(i); };
	container.ptr.prototype.SetIndex = function(i, value) {
		var c;
		c = this;
		c.Object[i] = $externalize(value, $emptyInterface);
	};
	container.prototype.SetIndex = function(i, value) { return this.$val.SetIndex(i, value); };
	container.ptr.prototype.Call = function(name, args) {
		var c, obj;
		c = this;
		return (obj = c.Object, obj[$externalize(name, $String)].apply(obj, $externalize(args, sliceType$1)));
	};
	container.prototype.Call = function(name, args) { return this.$val.Call(name, args); };
	container.ptr.prototype.Invoke = function(args) {
		var c;
		c = this;
		return c.Object.apply(undefined, $externalize(args, sliceType$1));
	};
	container.prototype.Invoke = function(args) { return this.$val.Invoke(args); };
	container.ptr.prototype.New = function(args) {
		var c;
		c = this;
		return new ($global.Function.prototype.bind.apply(c.Object, [undefined].concat($externalize(args, sliceType$1))));
	};
	container.prototype.New = function(args) { return this.$val.New(args); };
	container.ptr.prototype.Bool = function() {
		var c;
		c = this;
		return !!(c.Object);
	};
	container.prototype.Bool = function() { return this.$val.Bool(); };
	container.ptr.prototype.String = function() {
		var c;
		c = this;
		return $internalize(c.Object, $String);
	};
	container.prototype.String = function() { return this.$val.String(); };
	container.ptr.prototype.Int = function() {
		var c;
		c = this;
		return $parseInt(c.Object) >> 0;
	};
	container.prototype.Int = function() { return this.$val.Int(); };
	container.ptr.prototype.Int64 = function() {
		var c;
		c = this;
		return $internalize(c.Object, $Int64);
	};
	container.prototype.Int64 = function() { return this.$val.Int64(); };
	container.ptr.prototype.Uint64 = function() {
		var c;
		c = this;
		return $internalize(c.Object, $Uint64);
	};
	container.prototype.Uint64 = function() { return this.$val.Uint64(); };
	container.ptr.prototype.Float = function() {
		var c;
		c = this;
		return $parseFloat(c.Object);
	};
	container.prototype.Float = function() { return this.$val.Float(); };
	container.ptr.prototype.Interface = function() {
		var c;
		c = this;
		return $internalize(c.Object, $emptyInterface);
	};
	container.prototype.Interface = function() { return this.$val.Interface(); };
	container.ptr.prototype.Unsafe = function() {
		var c;
		c = this;
		return c.Object;
	};
	container.prototype.Unsafe = function() { return this.$val.Unsafe(); };
	Error.ptr.prototype.Error = function() {
		var err;
		err = this;
		return "JavaScript error: " + $internalize(err.Object.message, $String);
	};
	Error.prototype.Error = function() { return this.$val.Error(); };
	Error.ptr.prototype.Stack = function() {
		var err;
		err = this;
		return $internalize(err.Object.stack, $String);
	};
	Error.prototype.Stack = function() { return this.$val.Stack(); };
	init = function() {
		var _tmp, _tmp$1, c, e;
		c = new container.ptr(null);
		e = new Error.ptr(null);
		
	};
	ptrType.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Error.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$1.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "Stack", name: "Stack", pkg: "", type: $funcType([], [$String], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Object.init([{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}]);
	container.init([{prop: "Object", name: "", pkg: "", type: Object, tag: ""}]);
	Error.init([{prop: "Object", name: "", pkg: "", type: Object, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_js = function() { while (true) { switch ($s) { case 0:
		init();
		/* */ } return; } }; $init_js.$blocking = true; return $init_js;
	};
	return $pkg;
})();
$packages["runtime"] = (function() {
	var $pkg = {}, js, NotSupportedError, Error, TypeAssertionError, errorString, ptrType$5, ptrType$6, ptrType$7, init, GOROOT, GOMAXPROCS, SetFinalizer;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	NotSupportedError = $pkg.NotSupportedError = $newType(0, $kindStruct, "runtime.NotSupportedError", "NotSupportedError", "runtime", function(Feature_) {
		this.$val = this;
		this.Feature = Feature_ !== undefined ? Feature_ : "";
	});
	Error = $pkg.Error = $newType(8, $kindInterface, "runtime.Error", "Error", "runtime", null);
	TypeAssertionError = $pkg.TypeAssertionError = $newType(0, $kindStruct, "runtime.TypeAssertionError", "TypeAssertionError", "runtime", function(interfaceString_, concreteString_, assertedString_, missingMethod_) {
		this.$val = this;
		this.interfaceString = interfaceString_ !== undefined ? interfaceString_ : "";
		this.concreteString = concreteString_ !== undefined ? concreteString_ : "";
		this.assertedString = assertedString_ !== undefined ? assertedString_ : "";
		this.missingMethod = missingMethod_ !== undefined ? missingMethod_ : "";
	});
	errorString = $pkg.errorString = $newType(8, $kindString, "runtime.errorString", "errorString", "runtime", null);
		ptrType$5 = $ptrType(NotSupportedError);
		ptrType$6 = $ptrType(TypeAssertionError);
		ptrType$7 = $ptrType(errorString);
	NotSupportedError.ptr.prototype.Error = function() {
		var err;
		err = this;
		return "not supported by GopherJS: " + err.Feature;
	};
	NotSupportedError.prototype.Error = function() { return this.$val.Error(); };
	init = function() {
		var e;
		$js = $packages[$externalize("github.com/gopherjs/gopherjs/js", $String)];
		$throwRuntimeError = (function(msg) {
			$panic(new errorString(msg));
		});
		e = $ifaceNil;
		e = new TypeAssertionError.ptr("", "", "", "");
		e = new NotSupportedError.ptr("");
	};
	GOROOT = $pkg.GOROOT = function() {
		var goroot, process;
		process = $global.process;
		if (process === undefined) {
			return "/";
		}
		goroot = process.env.GOROOT;
		if (!(goroot === undefined)) {
			return $internalize(goroot, $String);
		}
		return "/usr/local/go";
	};
	GOMAXPROCS = $pkg.GOMAXPROCS = function(n) {
		if (n > 1) {
			$panic(new NotSupportedError.ptr("GOMAXPROCS > 1"));
		}
		return 1;
	};
	SetFinalizer = $pkg.SetFinalizer = function(x, f) {
	};
	TypeAssertionError.ptr.prototype.RuntimeError = function() {
	};
	TypeAssertionError.prototype.RuntimeError = function() { return this.$val.RuntimeError(); };
	TypeAssertionError.ptr.prototype.Error = function() {
		var e, inter;
		e = this;
		inter = e.interfaceString;
		if (inter === "") {
			inter = "interface";
		}
		if (e.concreteString === "") {
			return "interface conversion: " + inter + " is nil, not " + e.assertedString;
		}
		if (e.missingMethod === "") {
			return "interface conversion: " + inter + " is " + e.concreteString + ", not " + e.assertedString;
		}
		return "interface conversion: " + e.concreteString + " is not " + e.assertedString + ": missing method " + e.missingMethod;
	};
	TypeAssertionError.prototype.Error = function() { return this.$val.Error(); };
	errorString.prototype.RuntimeError = function() {
		var e;
		e = this.$val;
	};
	$ptrType(errorString).prototype.RuntimeError = function() { return new errorString(this.$get()).RuntimeError(); };
	errorString.prototype.Error = function() {
		var e;
		e = this.$val;
		return "runtime error: " + e;
	};
	$ptrType(errorString).prototype.Error = function() { return new errorString(this.$get()).Error(); };
	ptrType$5.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$6.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "RuntimeError", name: "RuntimeError", pkg: "", type: $funcType([], [], false)}];
	errorString.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "RuntimeError", name: "RuntimeError", pkg: "", type: $funcType([], [], false)}];
	ptrType$7.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "RuntimeError", name: "RuntimeError", pkg: "", type: $funcType([], [], false)}];
	NotSupportedError.init([{prop: "Feature", name: "Feature", pkg: "", type: $String, tag: ""}]);
	Error.init([{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "RuntimeError", name: "RuntimeError", pkg: "", type: $funcType([], [], false)}]);
	TypeAssertionError.init([{prop: "interfaceString", name: "interfaceString", pkg: "runtime", type: $String, tag: ""}, {prop: "concreteString", name: "concreteString", pkg: "runtime", type: $String, tag: ""}, {prop: "assertedString", name: "assertedString", pkg: "runtime", type: $String, tag: ""}, {prop: "missingMethod", name: "missingMethod", pkg: "runtime", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_runtime = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		init();
		/* */ } return; } }; $init_runtime.$blocking = true; return $init_runtime;
	};
	return $pkg;
})();
$packages["errors"] = (function() {
	var $pkg = {}, errorString, ptrType, New;
	errorString = $pkg.errorString = $newType(0, $kindStruct, "errors.errorString", "errorString", "errors", function(s_) {
		this.$val = this;
		this.s = s_ !== undefined ? s_ : "";
	});
		ptrType = $ptrType(errorString);
	New = $pkg.New = function(text) {
		return new errorString.ptr(text);
	};
	errorString.ptr.prototype.Error = function() {
		var e;
		e = this;
		return e.s;
	};
	errorString.prototype.Error = function() { return this.$val.Error(); };
	ptrType.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	errorString.init([{prop: "s", name: "s", pkg: "errors", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_errors = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_errors.$blocking = true; return $init_errors;
	};
	return $pkg;
})();
$packages["sync/atomic"] = (function() {
	var $pkg = {}, js, CompareAndSwapInt32, AddInt32, LoadUint32, StoreInt32, StoreUint32;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	CompareAndSwapInt32 = $pkg.CompareAndSwapInt32 = function(addr, old, new$1) {
		if (addr.$get() === old) {
			addr.$set(new$1);
			return true;
		}
		return false;
	};
	AddInt32 = $pkg.AddInt32 = function(addr, delta) {
		var new$1;
		new$1 = addr.$get() + delta >> 0;
		addr.$set(new$1);
		return new$1;
	};
	LoadUint32 = $pkg.LoadUint32 = function(addr) {
		return addr.$get();
	};
	StoreInt32 = $pkg.StoreInt32 = function(addr, val) {
		addr.$set(val);
	};
	StoreUint32 = $pkg.StoreUint32 = function(addr, val) {
		addr.$set(val);
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_atomic = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_atomic.$blocking = true; return $init_atomic;
	};
	return $pkg;
})();
$packages["sync"] = (function() {
	var $pkg = {}, runtime, atomic, Pool, Mutex, Locker, Once, poolLocal, syncSema, RWMutex, rlocker, ptrType, sliceType, ptrType$2, ptrType$3, ptrType$5, sliceType$2, ptrType$7, ptrType$8, funcType, ptrType$10, funcType$1, ptrType$11, arrayType, allPools, runtime_registerPoolCleanup, runtime_Syncsemcheck, poolCleanup, init, indexLocal, raceEnable, runtime_Semacquire, runtime_Semrelease, init$1;
	runtime = $packages["runtime"];
	atomic = $packages["sync/atomic"];
	Pool = $pkg.Pool = $newType(0, $kindStruct, "sync.Pool", "Pool", "sync", function(local_, localSize_, store_, New_) {
		this.$val = this;
		this.local = local_ !== undefined ? local_ : 0;
		this.localSize = localSize_ !== undefined ? localSize_ : 0;
		this.store = store_ !== undefined ? store_ : sliceType$2.nil;
		this.New = New_ !== undefined ? New_ : $throwNilPointerError;
	});
	Mutex = $pkg.Mutex = $newType(0, $kindStruct, "sync.Mutex", "Mutex", "sync", function(state_, sema_) {
		this.$val = this;
		this.state = state_ !== undefined ? state_ : 0;
		this.sema = sema_ !== undefined ? sema_ : 0;
	});
	Locker = $pkg.Locker = $newType(8, $kindInterface, "sync.Locker", "Locker", "sync", null);
	Once = $pkg.Once = $newType(0, $kindStruct, "sync.Once", "Once", "sync", function(m_, done_) {
		this.$val = this;
		this.m = m_ !== undefined ? m_ : new Mutex.ptr();
		this.done = done_ !== undefined ? done_ : 0;
	});
	poolLocal = $pkg.poolLocal = $newType(0, $kindStruct, "sync.poolLocal", "poolLocal", "sync", function(private$0_, shared_, Mutex_, pad_) {
		this.$val = this;
		this.private$0 = private$0_ !== undefined ? private$0_ : $ifaceNil;
		this.shared = shared_ !== undefined ? shared_ : sliceType$2.nil;
		this.Mutex = Mutex_ !== undefined ? Mutex_ : new Mutex.ptr();
		this.pad = pad_ !== undefined ? pad_ : arrayType.zero();
	});
	syncSema = $pkg.syncSema = $newType(0, $kindStruct, "sync.syncSema", "syncSema", "sync", function(lock_, head_, tail_) {
		this.$val = this;
		this.lock = lock_ !== undefined ? lock_ : 0;
		this.head = head_ !== undefined ? head_ : 0;
		this.tail = tail_ !== undefined ? tail_ : 0;
	});
	RWMutex = $pkg.RWMutex = $newType(0, $kindStruct, "sync.RWMutex", "RWMutex", "sync", function(w_, writerSem_, readerSem_, readerCount_, readerWait_) {
		this.$val = this;
		this.w = w_ !== undefined ? w_ : new Mutex.ptr();
		this.writerSem = writerSem_ !== undefined ? writerSem_ : 0;
		this.readerSem = readerSem_ !== undefined ? readerSem_ : 0;
		this.readerCount = readerCount_ !== undefined ? readerCount_ : 0;
		this.readerWait = readerWait_ !== undefined ? readerWait_ : 0;
	});
	rlocker = $pkg.rlocker = $newType(0, $kindStruct, "sync.rlocker", "rlocker", "sync", function(w_, writerSem_, readerSem_, readerCount_, readerWait_) {
		this.$val = this;
		this.w = w_ !== undefined ? w_ : new Mutex.ptr();
		this.writerSem = writerSem_ !== undefined ? writerSem_ : 0;
		this.readerSem = readerSem_ !== undefined ? readerSem_ : 0;
		this.readerCount = readerCount_ !== undefined ? readerCount_ : 0;
		this.readerWait = readerWait_ !== undefined ? readerWait_ : 0;
	});
		ptrType = $ptrType(Pool);
		sliceType = $sliceType(ptrType);
		ptrType$2 = $ptrType($Uint32);
		ptrType$3 = $ptrType($Int32);
		ptrType$5 = $ptrType(poolLocal);
		sliceType$2 = $sliceType($emptyInterface);
		ptrType$7 = $ptrType(rlocker);
		ptrType$8 = $ptrType(RWMutex);
		funcType = $funcType([], [$emptyInterface], false);
		ptrType$10 = $ptrType(Mutex);
		funcType$1 = $funcType([], [], false);
		ptrType$11 = $ptrType(Once);
		arrayType = $arrayType($Uint8, 128);
	Pool.ptr.prototype.Get = function() {
		var p, x, x$1, x$2;
		p = this;
		if (p.store.$length === 0) {
			if (!(p.New === $throwNilPointerError)) {
				return p.New();
			}
			return $ifaceNil;
		}
		x$2 = (x = p.store, x$1 = p.store.$length - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		p.store = $subslice(p.store, 0, (p.store.$length - 1 >> 0));
		return x$2;
	};
	Pool.prototype.Get = function() { return this.$val.Get(); };
	Pool.ptr.prototype.Put = function(x) {
		var p;
		p = this;
		if ($interfaceIsEqual(x, $ifaceNil)) {
			return;
		}
		p.store = $append(p.store, x);
	};
	Pool.prototype.Put = function(x) { return this.$val.Put(x); };
	runtime_registerPoolCleanup = function(cleanup) {
	};
	runtime_Syncsemcheck = function(size) {
	};
	Mutex.ptr.prototype.Lock = function() {
		var awoke, m, new$1, old;
		m = this;
		if (atomic.CompareAndSwapInt32(new ptrType$3(function() { return this.$target.state; }, function($v) { this.$target.state = $v; }, m), 0, 1)) {
			return;
		}
		awoke = false;
		while (true) {
			old = m.state;
			new$1 = old | 1;
			if (!(((old & 1) === 0))) {
				new$1 = old + 4 >> 0;
			}
			if (awoke) {
				new$1 = new$1 & ~(2);
			}
			if (atomic.CompareAndSwapInt32(new ptrType$3(function() { return this.$target.state; }, function($v) { this.$target.state = $v; }, m), old, new$1)) {
				if ((old & 1) === 0) {
					break;
				}
				runtime_Semacquire(new ptrType$2(function() { return this.$target.sema; }, function($v) { this.$target.sema = $v; }, m));
				awoke = true;
			}
		}
	};
	Mutex.prototype.Lock = function() { return this.$val.Lock(); };
	Mutex.ptr.prototype.Unlock = function() {
		var m, new$1, old;
		m = this;
		new$1 = atomic.AddInt32(new ptrType$3(function() { return this.$target.state; }, function($v) { this.$target.state = $v; }, m), -1);
		if ((((new$1 + 1 >> 0)) & 1) === 0) {
			$panic(new $String("sync: unlock of unlocked mutex"));
		}
		old = new$1;
		while (true) {
			if (((old >> 2 >> 0) === 0) || !(((old & 3) === 0))) {
				return;
			}
			new$1 = ((old - 4 >> 0)) | 2;
			if (atomic.CompareAndSwapInt32(new ptrType$3(function() { return this.$target.state; }, function($v) { this.$target.state = $v; }, m), old, new$1)) {
				runtime_Semrelease(new ptrType$2(function() { return this.$target.sema; }, function($v) { this.$target.sema = $v; }, m));
				return;
			}
			old = m.state;
		}
	};
	Mutex.prototype.Unlock = function() { return this.$val.Unlock(); };
	Once.ptr.prototype.Do = function(f) {
		var $deferred = [], $err = null, o;
		/* */ try { $deferFrames.push($deferred);
		o = this;
		if (atomic.LoadUint32(new ptrType$2(function() { return this.$target.done; }, function($v) { this.$target.done = $v; }, o)) === 1) {
			return;
		}
		o.m.Lock();
		$deferred.push([$methodVal(o.m, "Unlock"), []]);
		if (o.done === 0) {
			$deferred.push([atomic.StoreUint32, [new ptrType$2(function() { return this.$target.done; }, function($v) { this.$target.done = $v; }, o), 1]]);
			f();
		}
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	Once.prototype.Do = function(f) { return this.$val.Do(f); };
	poolCleanup = function() {
		var _i, _i$1, _ref, _ref$1, i, i$1, j, l, p, x;
		_ref = allPools;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			p = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= allPools.$length) ? $throwRuntimeError("index out of range") : allPools.$array[allPools.$offset + i] = ptrType.nil;
			i$1 = 0;
			while (i$1 < (p.localSize >> 0)) {
				l = indexLocal(p.local, i$1);
				l.private$0 = $ifaceNil;
				_ref$1 = l.shared;
				_i$1 = 0;
				while (_i$1 < _ref$1.$length) {
					j = _i$1;
					(x = l.shared, (j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j] = $ifaceNil);
					_i$1++;
				}
				l.shared = sliceType$2.nil;
				i$1 = i$1 + (1) >> 0;
			}
			p.local = 0;
			p.localSize = 0;
			_i++;
		}
		allPools = new sliceType([]);
	};
	init = function() {
		runtime_registerPoolCleanup(poolCleanup);
	};
	indexLocal = function(l, i) {
		var x;
		return (x = l, (x.nilCheck, ((i < 0 || i >= x.length) ? $throwRuntimeError("index out of range") : x[i])));
	};
	raceEnable = function() {
	};
	runtime_Semacquire = function() {
		$panic("Native function not implemented: sync.runtime_Semacquire");
	};
	runtime_Semrelease = function() {
		$panic("Native function not implemented: sync.runtime_Semrelease");
	};
	init$1 = function() {
		var s;
		s = $clone(new syncSema.ptr(), syncSema);
		runtime_Syncsemcheck(12);
	};
	RWMutex.ptr.prototype.RLock = function() {
		var rw;
		rw = this;
		if (atomic.AddInt32(new ptrType$3(function() { return this.$target.readerCount; }, function($v) { this.$target.readerCount = $v; }, rw), 1) < 0) {
			runtime_Semacquire(new ptrType$2(function() { return this.$target.readerSem; }, function($v) { this.$target.readerSem = $v; }, rw));
		}
	};
	RWMutex.prototype.RLock = function() { return this.$val.RLock(); };
	RWMutex.ptr.prototype.RUnlock = function() {
		var r, rw;
		rw = this;
		r = atomic.AddInt32(new ptrType$3(function() { return this.$target.readerCount; }, function($v) { this.$target.readerCount = $v; }, rw), -1);
		if (r < 0) {
			if (((r + 1 >> 0) === 0) || ((r + 1 >> 0) === -1073741824)) {
				raceEnable();
				$panic(new $String("sync: RUnlock of unlocked RWMutex"));
			}
			if (atomic.AddInt32(new ptrType$3(function() { return this.$target.readerWait; }, function($v) { this.$target.readerWait = $v; }, rw), -1) === 0) {
				runtime_Semrelease(new ptrType$2(function() { return this.$target.writerSem; }, function($v) { this.$target.writerSem = $v; }, rw));
			}
		}
	};
	RWMutex.prototype.RUnlock = function() { return this.$val.RUnlock(); };
	RWMutex.ptr.prototype.Lock = function() {
		var r, rw;
		rw = this;
		rw.w.Lock();
		r = atomic.AddInt32(new ptrType$3(function() { return this.$target.readerCount; }, function($v) { this.$target.readerCount = $v; }, rw), -1073741824) + 1073741824 >> 0;
		if (!((r === 0)) && !((atomic.AddInt32(new ptrType$3(function() { return this.$target.readerWait; }, function($v) { this.$target.readerWait = $v; }, rw), r) === 0))) {
			runtime_Semacquire(new ptrType$2(function() { return this.$target.writerSem; }, function($v) { this.$target.writerSem = $v; }, rw));
		}
	};
	RWMutex.prototype.Lock = function() { return this.$val.Lock(); };
	RWMutex.ptr.prototype.Unlock = function() {
		var i, r, rw;
		rw = this;
		r = atomic.AddInt32(new ptrType$3(function() { return this.$target.readerCount; }, function($v) { this.$target.readerCount = $v; }, rw), 1073741824);
		if (r >= 1073741824) {
			raceEnable();
			$panic(new $String("sync: Unlock of unlocked RWMutex"));
		}
		i = 0;
		while (i < (r >> 0)) {
			runtime_Semrelease(new ptrType$2(function() { return this.$target.readerSem; }, function($v) { this.$target.readerSem = $v; }, rw));
			i = i + (1) >> 0;
		}
		rw.w.Unlock();
	};
	RWMutex.prototype.Unlock = function() { return this.$val.Unlock(); };
	RWMutex.ptr.prototype.RLocker = function() {
		var rw;
		rw = this;
		return $pointerOfStructConversion(rw, ptrType$7);
	};
	RWMutex.prototype.RLocker = function() { return this.$val.RLocker(); };
	rlocker.ptr.prototype.Lock = function() {
		var r;
		r = this;
		$pointerOfStructConversion(r, ptrType$8).RLock();
	};
	rlocker.prototype.Lock = function() { return this.$val.Lock(); };
	rlocker.ptr.prototype.Unlock = function() {
		var r;
		r = this;
		$pointerOfStructConversion(r, ptrType$8).RUnlock();
	};
	rlocker.prototype.Unlock = function() { return this.$val.Unlock(); };
	ptrType.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Put", name: "Put", pkg: "", type: $funcType([$emptyInterface], [], false)}, {prop: "getSlow", name: "getSlow", pkg: "sync", type: $funcType([], [$emptyInterface], false)}, {prop: "pin", name: "pin", pkg: "sync", type: $funcType([], [ptrType$5], false)}, {prop: "pinSlow", name: "pinSlow", pkg: "sync", type: $funcType([], [ptrType$5], false)}];
	ptrType$10.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	ptrType$11.methods = [{prop: "Do", name: "Do", pkg: "", type: $funcType([funcType$1], [], false)}];
	ptrType$5.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	ptrType$8.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "RLock", name: "RLock", pkg: "", type: $funcType([], [], false)}, {prop: "RLocker", name: "RLocker", pkg: "", type: $funcType([], [Locker], false)}, {prop: "RUnlock", name: "RUnlock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	ptrType$7.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	Pool.init([{prop: "local", name: "local", pkg: "sync", type: $UnsafePointer, tag: ""}, {prop: "localSize", name: "localSize", pkg: "sync", type: $Uintptr, tag: ""}, {prop: "store", name: "store", pkg: "sync", type: sliceType$2, tag: ""}, {prop: "New", name: "New", pkg: "", type: funcType, tag: ""}]);
	Mutex.init([{prop: "state", name: "state", pkg: "sync", type: $Int32, tag: ""}, {prop: "sema", name: "sema", pkg: "sync", type: $Uint32, tag: ""}]);
	Locker.init([{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}]);
	Once.init([{prop: "m", name: "m", pkg: "sync", type: Mutex, tag: ""}, {prop: "done", name: "done", pkg: "sync", type: $Uint32, tag: ""}]);
	poolLocal.init([{prop: "private$0", name: "private", pkg: "sync", type: $emptyInterface, tag: ""}, {prop: "shared", name: "shared", pkg: "sync", type: sliceType$2, tag: ""}, {prop: "Mutex", name: "", pkg: "", type: Mutex, tag: ""}, {prop: "pad", name: "pad", pkg: "sync", type: arrayType, tag: ""}]);
	syncSema.init([{prop: "lock", name: "lock", pkg: "sync", type: $Uintptr, tag: ""}, {prop: "head", name: "head", pkg: "sync", type: $UnsafePointer, tag: ""}, {prop: "tail", name: "tail", pkg: "sync", type: $UnsafePointer, tag: ""}]);
	RWMutex.init([{prop: "w", name: "w", pkg: "sync", type: Mutex, tag: ""}, {prop: "writerSem", name: "writerSem", pkg: "sync", type: $Uint32, tag: ""}, {prop: "readerSem", name: "readerSem", pkg: "sync", type: $Uint32, tag: ""}, {prop: "readerCount", name: "readerCount", pkg: "sync", type: $Int32, tag: ""}, {prop: "readerWait", name: "readerWait", pkg: "sync", type: $Int32, tag: ""}]);
	rlocker.init([{prop: "w", name: "w", pkg: "sync", type: Mutex, tag: ""}, {prop: "writerSem", name: "writerSem", pkg: "sync", type: $Uint32, tag: ""}, {prop: "readerSem", name: "readerSem", pkg: "sync", type: $Uint32, tag: ""}, {prop: "readerCount", name: "readerCount", pkg: "sync", type: $Int32, tag: ""}, {prop: "readerWait", name: "readerWait", pkg: "sync", type: $Int32, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_sync = function() { while (true) { switch ($s) { case 0:
		$r = runtime.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = atomic.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		allPools = sliceType.nil;
		init();
		init$1();
		/* */ } return; } }; $init_sync.$blocking = true; return $init_sync;
	};
	return $pkg;
})();
$packages["io"] = (function() {
	var $pkg = {}, errors, runtime, sync, Reader, Writer, RuneReader, sliceType, errWhence, errOffset;
	errors = $packages["errors"];
	runtime = $packages["runtime"];
	sync = $packages["sync"];
	Reader = $pkg.Reader = $newType(8, $kindInterface, "io.Reader", "Reader", "io", null);
	Writer = $pkg.Writer = $newType(8, $kindInterface, "io.Writer", "Writer", "io", null);
	RuneReader = $pkg.RuneReader = $newType(8, $kindInterface, "io.RuneReader", "RuneReader", "io", null);
		sliceType = $sliceType($Uint8);
	Reader.init([{prop: "Read", name: "Read", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}]);
	Writer.init([{prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}]);
	RuneReader.init([{prop: "ReadRune", name: "ReadRune", pkg: "", type: $funcType([], [$Int32, $Int, $error], false)}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_io = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.ErrShortWrite = errors.New("short write");
		$pkg.ErrShortBuffer = errors.New("short buffer");
		$pkg.EOF = errors.New("EOF");
		$pkg.ErrUnexpectedEOF = errors.New("unexpected EOF");
		$pkg.ErrNoProgress = errors.New("multiple Read calls return no data or error");
		errWhence = errors.New("Seek: invalid whence");
		errOffset = errors.New("Seek: invalid offset");
		$pkg.ErrClosedPipe = errors.New("io: read/write on closed pipe");
		/* */ } return; } }; $init_io.$blocking = true; return $init_io;
	};
	return $pkg;
})();
$packages["unicode"] = (function() {
	var $pkg = {}, RangeTable, Range16, Range32, CaseRange, d, foldPair, sliceType, sliceType$1, ptrType, sliceType$2, sliceType$3, sliceType$4, _C, _Cc, _Cf, _Co, _Cs, _L, _Ll, _Lm, _Lo, _Lt, _Lu, _M, _Mc, _Me, _Mn, _N, _Nd, _Nl, _No, _P, _Pc, _Pd, _Pe, _Pf, _Pi, _Po, _Ps, _S, _Sc, _Sk, _Sm, _So, _Z, _Zl, _Zp, _Zs, _Arabic, _Armenian, _Avestan, _Balinese, _Bamum, _Bassa_Vah, _Batak, _Bengali, _Bopomofo, _Brahmi, _Braille, _Buginese, _Buhid, _Canadian_Aboriginal, _Carian, _Caucasian_Albanian, _Chakma, _Cham, _Cherokee, _Common, _Coptic, _Cuneiform, _Cypriot, _Cyrillic, _Deseret, _Devanagari, _Duployan, _Egyptian_Hieroglyphs, _Elbasan, _Ethiopic, _Georgian, _Glagolitic, _Gothic, _Grantha, _Greek, _Gujarati, _Gurmukhi, _Han, _Hangul, _Hanunoo, _Hebrew, _Hiragana, _Imperial_Aramaic, _Inherited, _Inscriptional_Pahlavi, _Inscriptional_Parthian, _Javanese, _Kaithi, _Kannada, _Katakana, _Kayah_Li, _Kharoshthi, _Khmer, _Khojki, _Khudawadi, _Lao, _Latin, _Lepcha, _Limbu, _Linear_A, _Linear_B, _Lisu, _Lycian, _Lydian, _Mahajani, _Malayalam, _Mandaic, _Manichaean, _Meetei_Mayek, _Mende_Kikakui, _Meroitic_Cursive, _Meroitic_Hieroglyphs, _Miao, _Modi, _Mongolian, _Mro, _Myanmar, _Nabataean, _New_Tai_Lue, _Nko, _Ogham, _Ol_Chiki, _Old_Italic, _Old_North_Arabian, _Old_Permic, _Old_Persian, _Old_South_Arabian, _Old_Turkic, _Oriya, _Osmanya, _Pahawh_Hmong, _Palmyrene, _Pau_Cin_Hau, _Phags_Pa, _Phoenician, _Psalter_Pahlavi, _Rejang, _Runic, _Samaritan, _Saurashtra, _Sharada, _Shavian, _Siddham, _Sinhala, _Sora_Sompeng, _Sundanese, _Syloti_Nagri, _Syriac, _Tagalog, _Tagbanwa, _Tai_Le, _Tai_Tham, _Tai_Viet, _Takri, _Tamil, _Telugu, _Thaana, _Thai, _Tibetan, _Tifinagh, _Tirhuta, _Ugaritic, _Vai, _Warang_Citi, _Yi, _CaseRanges, properties, caseOrbit, foldCommon, foldGreek, foldInherited, foldL, foldLl, foldLt, foldLu, foldM, foldMn, _map, _key, _map$1, _key$1, _map$3, _key$3, _map$4, _key$4, to, IsDigit, IsPrint, In, IsLetter, is16, is32, Is, isExcludingLatin, To, ToUpper, ToLower, SimpleFold;
	RangeTable = $pkg.RangeTable = $newType(0, $kindStruct, "unicode.RangeTable", "RangeTable", "unicode", function(R16_, R32_, LatinOffset_) {
		this.$val = this;
		this.R16 = R16_ !== undefined ? R16_ : sliceType.nil;
		this.R32 = R32_ !== undefined ? R32_ : sliceType$1.nil;
		this.LatinOffset = LatinOffset_ !== undefined ? LatinOffset_ : 0;
	});
	Range16 = $pkg.Range16 = $newType(0, $kindStruct, "unicode.Range16", "Range16", "unicode", function(Lo_, Hi_, Stride_) {
		this.$val = this;
		this.Lo = Lo_ !== undefined ? Lo_ : 0;
		this.Hi = Hi_ !== undefined ? Hi_ : 0;
		this.Stride = Stride_ !== undefined ? Stride_ : 0;
	});
	Range32 = $pkg.Range32 = $newType(0, $kindStruct, "unicode.Range32", "Range32", "unicode", function(Lo_, Hi_, Stride_) {
		this.$val = this;
		this.Lo = Lo_ !== undefined ? Lo_ : 0;
		this.Hi = Hi_ !== undefined ? Hi_ : 0;
		this.Stride = Stride_ !== undefined ? Stride_ : 0;
	});
	CaseRange = $pkg.CaseRange = $newType(0, $kindStruct, "unicode.CaseRange", "CaseRange", "unicode", function(Lo_, Hi_, Delta_) {
		this.$val = this;
		this.Lo = Lo_ !== undefined ? Lo_ : 0;
		this.Hi = Hi_ !== undefined ? Hi_ : 0;
		this.Delta = Delta_ !== undefined ? Delta_ : d.zero();
	});
	d = $pkg.d = $newType(12, $kindArray, "unicode.d", "d", "unicode", null);
	foldPair = $pkg.foldPair = $newType(0, $kindStruct, "unicode.foldPair", "foldPair", "unicode", function(From_, To_) {
		this.$val = this;
		this.From = From_ !== undefined ? From_ : 0;
		this.To = To_ !== undefined ? To_ : 0;
	});
		sliceType = $sliceType(Range16);
		sliceType$1 = $sliceType(Range32);
		ptrType = $ptrType(RangeTable);
		sliceType$2 = $sliceType(ptrType);
		sliceType$3 = $sliceType(CaseRange);
		sliceType$4 = $sliceType(foldPair);
	to = function(_case, r, caseRange) {
		var _q, cr, delta, hi, lo, m, x;
		if (_case < 0 || 3 <= _case) {
			return 65533;
		}
		lo = 0;
		hi = caseRange.$length;
		while (lo < hi) {
			m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			cr = ((m < 0 || m >= caseRange.$length) ? $throwRuntimeError("index out of range") : caseRange.$array[caseRange.$offset + m]);
			if ((cr.Lo >> 0) <= r && r <= (cr.Hi >> 0)) {
				delta = (x = cr.Delta, ((_case < 0 || _case >= x.length) ? $throwRuntimeError("index out of range") : x[_case]));
				if (delta > 1114111) {
					return (cr.Lo >> 0) + (((((r - (cr.Lo >> 0) >> 0)) & ~1) | ((_case & 1) >> 0))) >> 0;
				}
				return r + delta >> 0;
			}
			if (r < (cr.Lo >> 0)) {
				hi = m;
			} else {
				lo = m + 1 >> 0;
			}
		}
		return r;
	};
	IsDigit = $pkg.IsDigit = function(r) {
		if (r <= 255) {
			return 48 <= r && r <= 57;
		}
		return isExcludingLatin($pkg.Digit, r);
	};
	IsPrint = $pkg.IsPrint = function(r) {
		var x;
		if ((r >>> 0) <= 255) {
			return !(((((x = (r << 24 >>> 24), ((x < 0 || x >= properties.length) ? $throwRuntimeError("index out of range") : properties[x])) & 128) >>> 0) === 0));
		}
		return In(r, $pkg.PrintRanges);
	};
	In = $pkg.In = function(r, ranges) {
		var _i, _ref, inside;
		_ref = ranges;
		_i = 0;
		while (_i < _ref.$length) {
			inside = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (Is(inside, r)) {
				return true;
			}
			_i++;
		}
		return false;
	};
	IsLetter = $pkg.IsLetter = function(r) {
		var x;
		if ((r >>> 0) <= 255) {
			return !(((((x = (r << 24 >>> 24), ((x < 0 || x >= properties.length) ? $throwRuntimeError("index out of range") : properties[x])) & 96) >>> 0) === 0));
		}
		return isExcludingLatin($pkg.Letter, r);
	};
	is16 = function(ranges, r) {
		var _i, _q, _r, _r$1, _ref, hi, i, lo, m, range_, range_$1;
		if (ranges.$length <= 18 || r <= 255) {
			_ref = ranges;
			_i = 0;
			while (_i < _ref.$length) {
				i = _i;
				range_ = ((i < 0 || i >= ranges.$length) ? $throwRuntimeError("index out of range") : ranges.$array[ranges.$offset + i]);
				if (r < range_.Lo) {
					return false;
				}
				if (r <= range_.Hi) {
					return (_r = ((r - range_.Lo << 16 >>> 16)) % range_.Stride, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0;
				}
				_i++;
			}
			return false;
		}
		lo = 0;
		hi = ranges.$length;
		while (lo < hi) {
			m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			range_$1 = ((m < 0 || m >= ranges.$length) ? $throwRuntimeError("index out of range") : ranges.$array[ranges.$offset + m]);
			if (range_$1.Lo <= r && r <= range_$1.Hi) {
				return (_r$1 = ((r - range_$1.Lo << 16 >>> 16)) % range_$1.Stride, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero")) === 0;
			}
			if (r < range_$1.Lo) {
				hi = m;
			} else {
				lo = m + 1 >> 0;
			}
		}
		return false;
	};
	is32 = function(ranges, r) {
		var _i, _q, _r, _r$1, _ref, hi, i, lo, m, range_, range_$1;
		if (ranges.$length <= 18) {
			_ref = ranges;
			_i = 0;
			while (_i < _ref.$length) {
				i = _i;
				range_ = ((i < 0 || i >= ranges.$length) ? $throwRuntimeError("index out of range") : ranges.$array[ranges.$offset + i]);
				if (r < range_.Lo) {
					return false;
				}
				if (r <= range_.Hi) {
					return (_r = ((r - range_.Lo >>> 0)) % range_.Stride, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0;
				}
				_i++;
			}
			return false;
		}
		lo = 0;
		hi = ranges.$length;
		while (lo < hi) {
			m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			range_$1 = $clone(((m < 0 || m >= ranges.$length) ? $throwRuntimeError("index out of range") : ranges.$array[ranges.$offset + m]), Range32);
			if (range_$1.Lo <= r && r <= range_$1.Hi) {
				return (_r$1 = ((r - range_$1.Lo >>> 0)) % range_$1.Stride, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero")) === 0;
			}
			if (r < range_$1.Lo) {
				hi = m;
			} else {
				lo = m + 1 >> 0;
			}
		}
		return false;
	};
	Is = $pkg.Is = function(rangeTab, r) {
		var r16, r32, x;
		r16 = rangeTab.R16;
		if (r16.$length > 0 && r <= ((x = r16.$length - 1 >> 0, ((x < 0 || x >= r16.$length) ? $throwRuntimeError("index out of range") : r16.$array[r16.$offset + x])).Hi >> 0)) {
			return is16(r16, (r << 16 >>> 16));
		}
		r32 = rangeTab.R32;
		if (r32.$length > 0 && r >= (((0 < 0 || 0 >= r32.$length) ? $throwRuntimeError("index out of range") : r32.$array[r32.$offset + 0]).Lo >> 0)) {
			return is32(r32, (r >>> 0));
		}
		return false;
	};
	isExcludingLatin = function(rangeTab, r) {
		var off, r16, r32, x;
		r16 = rangeTab.R16;
		off = rangeTab.LatinOffset;
		if (r16.$length > off && r <= ((x = r16.$length - 1 >> 0, ((x < 0 || x >= r16.$length) ? $throwRuntimeError("index out of range") : r16.$array[r16.$offset + x])).Hi >> 0)) {
			return is16($subslice(r16, off), (r << 16 >>> 16));
		}
		r32 = rangeTab.R32;
		if (r32.$length > 0 && r >= (((0 < 0 || 0 >= r32.$length) ? $throwRuntimeError("index out of range") : r32.$array[r32.$offset + 0]).Lo >> 0)) {
			return is32(r32, (r >>> 0));
		}
		return false;
	};
	To = $pkg.To = function(_case, r) {
		return to(_case, r, $pkg.CaseRanges);
	};
	ToUpper = $pkg.ToUpper = function(r) {
		if (r <= 127) {
			if (97 <= r && r <= 122) {
				r = r - (32) >> 0;
			}
			return r;
		}
		return To(0, r);
	};
	ToLower = $pkg.ToLower = function(r) {
		if (r <= 127) {
			if (65 <= r && r <= 90) {
				r = r + (32) >> 0;
			}
			return r;
		}
		return To(1, r);
	};
	SimpleFold = $pkg.SimpleFold = function(r) {
		var _q, hi, l, lo, m;
		lo = 0;
		hi = caseOrbit.$length;
		while (lo < hi) {
			m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			if ((((m < 0 || m >= caseOrbit.$length) ? $throwRuntimeError("index out of range") : caseOrbit.$array[caseOrbit.$offset + m]).From >> 0) < r) {
				lo = m + 1 >> 0;
			} else {
				hi = m;
			}
		}
		if (lo < caseOrbit.$length && ((((lo < 0 || lo >= caseOrbit.$length) ? $throwRuntimeError("index out of range") : caseOrbit.$array[caseOrbit.$offset + lo]).From >> 0) === r)) {
			return (((lo < 0 || lo >= caseOrbit.$length) ? $throwRuntimeError("index out of range") : caseOrbit.$array[caseOrbit.$offset + lo]).To >> 0);
		}
		l = ToLower(r);
		if (!((l === r))) {
			return l;
		}
		return ToUpper(r);
	};
	RangeTable.init([{prop: "R16", name: "R16", pkg: "", type: sliceType, tag: ""}, {prop: "R32", name: "R32", pkg: "", type: sliceType$1, tag: ""}, {prop: "LatinOffset", name: "LatinOffset", pkg: "", type: $Int, tag: ""}]);
	Range16.init([{prop: "Lo", name: "Lo", pkg: "", type: $Uint16, tag: ""}, {prop: "Hi", name: "Hi", pkg: "", type: $Uint16, tag: ""}, {prop: "Stride", name: "Stride", pkg: "", type: $Uint16, tag: ""}]);
	Range32.init([{prop: "Lo", name: "Lo", pkg: "", type: $Uint32, tag: ""}, {prop: "Hi", name: "Hi", pkg: "", type: $Uint32, tag: ""}, {prop: "Stride", name: "Stride", pkg: "", type: $Uint32, tag: ""}]);
	CaseRange.init([{prop: "Lo", name: "Lo", pkg: "", type: $Uint32, tag: ""}, {prop: "Hi", name: "Hi", pkg: "", type: $Uint32, tag: ""}, {prop: "Delta", name: "Delta", pkg: "", type: d, tag: ""}]);
	d.init($Int32, 3);
	foldPair.init([{prop: "From", name: "From", pkg: "", type: $Uint16, tag: ""}, {prop: "To", name: "To", pkg: "", type: $Uint16, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_unicode = function() { while (true) { switch ($s) { case 0:
		_C = new RangeTable.ptr(new sliceType([new Range16.ptr(1, 31, 1), new Range16.ptr(127, 159, 1), new Range16.ptr(173, 1536, 1363), new Range16.ptr(1537, 1541, 1), new Range16.ptr(1564, 1757, 193), new Range16.ptr(1807, 6158, 4351), new Range16.ptr(8203, 8207, 1), new Range16.ptr(8234, 8238, 1), new Range16.ptr(8288, 8292, 1), new Range16.ptr(8294, 8303, 1), new Range16.ptr(55296, 63743, 1), new Range16.ptr(65279, 65529, 250), new Range16.ptr(65530, 65531, 1)]), new sliceType$1([new Range32.ptr(69821, 113824, 44003), new Range32.ptr(113825, 113827, 1), new Range32.ptr(119155, 119162, 1), new Range32.ptr(917505, 917536, 31), new Range32.ptr(917537, 917631, 1), new Range32.ptr(983040, 1048573, 1), new Range32.ptr(1048576, 1114109, 1)]), 2);
		_Cc = new RangeTable.ptr(new sliceType([new Range16.ptr(1, 31, 1), new Range16.ptr(127, 159, 1)]), sliceType$1.nil, 2);
		_Cf = new RangeTable.ptr(new sliceType([new Range16.ptr(173, 1536, 1363), new Range16.ptr(1537, 1541, 1), new Range16.ptr(1564, 1757, 193), new Range16.ptr(1807, 6158, 4351), new Range16.ptr(8203, 8207, 1), new Range16.ptr(8234, 8238, 1), new Range16.ptr(8288, 8292, 1), new Range16.ptr(8294, 8303, 1), new Range16.ptr(65279, 65529, 250), new Range16.ptr(65530, 65531, 1)]), new sliceType$1([new Range32.ptr(69821, 113824, 44003), new Range32.ptr(113825, 113827, 1), new Range32.ptr(119155, 119162, 1), new Range32.ptr(917505, 917536, 31), new Range32.ptr(917537, 917631, 1)]), 0);
		_Co = new RangeTable.ptr(new sliceType([new Range16.ptr(57344, 63743, 1)]), new sliceType$1([new Range32.ptr(983040, 1048573, 1), new Range32.ptr(1048576, 1114109, 1)]), 0);
		_Cs = new RangeTable.ptr(new sliceType([new Range16.ptr(55296, 57343, 1)]), sliceType$1.nil, 0);
		_L = new RangeTable.ptr(new sliceType([new Range16.ptr(65, 90, 1), new Range16.ptr(97, 122, 1), new Range16.ptr(170, 181, 11), new Range16.ptr(186, 192, 6), new Range16.ptr(193, 214, 1), new Range16.ptr(216, 246, 1), new Range16.ptr(248, 705, 1), new Range16.ptr(710, 721, 1), new Range16.ptr(736, 740, 1), new Range16.ptr(748, 750, 2), new Range16.ptr(880, 884, 1), new Range16.ptr(886, 887, 1), new Range16.ptr(890, 893, 1), new Range16.ptr(895, 902, 7), new Range16.ptr(904, 906, 1), new Range16.ptr(908, 910, 2), new Range16.ptr(911, 929, 1), new Range16.ptr(931, 1013, 1), new Range16.ptr(1015, 1153, 1), new Range16.ptr(1162, 1327, 1), new Range16.ptr(1329, 1366, 1), new Range16.ptr(1369, 1377, 8), new Range16.ptr(1378, 1415, 1), new Range16.ptr(1488, 1514, 1), new Range16.ptr(1520, 1522, 1), new Range16.ptr(1568, 1610, 1), new Range16.ptr(1646, 1647, 1), new Range16.ptr(1649, 1747, 1), new Range16.ptr(1749, 1765, 16), new Range16.ptr(1766, 1774, 8), new Range16.ptr(1775, 1786, 11), new Range16.ptr(1787, 1788, 1), new Range16.ptr(1791, 1808, 17), new Range16.ptr(1810, 1839, 1), new Range16.ptr(1869, 1957, 1), new Range16.ptr(1969, 1994, 25), new Range16.ptr(1995, 2026, 1), new Range16.ptr(2036, 2037, 1), new Range16.ptr(2042, 2048, 6), new Range16.ptr(2049, 2069, 1), new Range16.ptr(2074, 2084, 10), new Range16.ptr(2088, 2112, 24), new Range16.ptr(2113, 2136, 1), new Range16.ptr(2208, 2226, 1), new Range16.ptr(2308, 2361, 1), new Range16.ptr(2365, 2384, 19), new Range16.ptr(2392, 2401, 1), new Range16.ptr(2417, 2432, 1), new Range16.ptr(2437, 2444, 1), new Range16.ptr(2447, 2448, 1), new Range16.ptr(2451, 2472, 1), new Range16.ptr(2474, 2480, 1), new Range16.ptr(2482, 2486, 4), new Range16.ptr(2487, 2489, 1), new Range16.ptr(2493, 2510, 17), new Range16.ptr(2524, 2525, 1), new Range16.ptr(2527, 2529, 1), new Range16.ptr(2544, 2545, 1), new Range16.ptr(2565, 2570, 1), new Range16.ptr(2575, 2576, 1), new Range16.ptr(2579, 2600, 1), new Range16.ptr(2602, 2608, 1), new Range16.ptr(2610, 2611, 1), new Range16.ptr(2613, 2614, 1), new Range16.ptr(2616, 2617, 1), new Range16.ptr(2649, 2652, 1), new Range16.ptr(2654, 2674, 20), new Range16.ptr(2675, 2676, 1), new Range16.ptr(2693, 2701, 1), new Range16.ptr(2703, 2705, 1), new Range16.ptr(2707, 2728, 1), new Range16.ptr(2730, 2736, 1), new Range16.ptr(2738, 2739, 1), new Range16.ptr(2741, 2745, 1), new Range16.ptr(2749, 2768, 19), new Range16.ptr(2784, 2785, 1), new Range16.ptr(2821, 2828, 1), new Range16.ptr(2831, 2832, 1), new Range16.ptr(2835, 2856, 1), new Range16.ptr(2858, 2864, 1), new Range16.ptr(2866, 2867, 1), new Range16.ptr(2869, 2873, 1), new Range16.ptr(2877, 2908, 31), new Range16.ptr(2909, 2911, 2), new Range16.ptr(2912, 2913, 1), new Range16.ptr(2929, 2947, 18), new Range16.ptr(2949, 2954, 1), new Range16.ptr(2958, 2960, 1), new Range16.ptr(2962, 2965, 1), new Range16.ptr(2969, 2970, 1), new Range16.ptr(2972, 2974, 2), new Range16.ptr(2975, 2979, 4), new Range16.ptr(2980, 2984, 4), new Range16.ptr(2985, 2986, 1), new Range16.ptr(2990, 3001, 1), new Range16.ptr(3024, 3077, 53), new Range16.ptr(3078, 3084, 1), new Range16.ptr(3086, 3088, 1), new Range16.ptr(3090, 3112, 1), new Range16.ptr(3114, 3129, 1), new Range16.ptr(3133, 3160, 27), new Range16.ptr(3161, 3168, 7), new Range16.ptr(3169, 3205, 36), new Range16.ptr(3206, 3212, 1), new Range16.ptr(3214, 3216, 1), new Range16.ptr(3218, 3240, 1), new Range16.ptr(3242, 3251, 1), new Range16.ptr(3253, 3257, 1), new Range16.ptr(3261, 3294, 33), new Range16.ptr(3296, 3297, 1), new Range16.ptr(3313, 3314, 1), new Range16.ptr(3333, 3340, 1), new Range16.ptr(3342, 3344, 1), new Range16.ptr(3346, 3386, 1), new Range16.ptr(3389, 3406, 17), new Range16.ptr(3424, 3425, 1), new Range16.ptr(3450, 3455, 1), new Range16.ptr(3461, 3478, 1), new Range16.ptr(3482, 3505, 1), new Range16.ptr(3507, 3515, 1), new Range16.ptr(3517, 3520, 3), new Range16.ptr(3521, 3526, 1), new Range16.ptr(3585, 3632, 1), new Range16.ptr(3634, 3635, 1), new Range16.ptr(3648, 3654, 1), new Range16.ptr(3713, 3714, 1), new Range16.ptr(3716, 3719, 3), new Range16.ptr(3720, 3722, 2), new Range16.ptr(3725, 3732, 7), new Range16.ptr(3733, 3735, 1), new Range16.ptr(3737, 3743, 1), new Range16.ptr(3745, 3747, 1), new Range16.ptr(3749, 3751, 2), new Range16.ptr(3754, 3755, 1), new Range16.ptr(3757, 3760, 1), new Range16.ptr(3762, 3763, 1), new Range16.ptr(3773, 3776, 3), new Range16.ptr(3777, 3780, 1), new Range16.ptr(3782, 3804, 22), new Range16.ptr(3805, 3807, 1), new Range16.ptr(3840, 3904, 64), new Range16.ptr(3905, 3911, 1), new Range16.ptr(3913, 3948, 1), new Range16.ptr(3976, 3980, 1), new Range16.ptr(4096, 4138, 1), new Range16.ptr(4159, 4176, 17), new Range16.ptr(4177, 4181, 1), new Range16.ptr(4186, 4189, 1), new Range16.ptr(4193, 4197, 4), new Range16.ptr(4198, 4206, 8), new Range16.ptr(4207, 4208, 1), new Range16.ptr(4213, 4225, 1), new Range16.ptr(4238, 4256, 18), new Range16.ptr(4257, 4293, 1), new Range16.ptr(4295, 4301, 6), new Range16.ptr(4304, 4346, 1), new Range16.ptr(4348, 4680, 1), new Range16.ptr(4682, 4685, 1), new Range16.ptr(4688, 4694, 1), new Range16.ptr(4696, 4698, 2), new Range16.ptr(4699, 4701, 1), new Range16.ptr(4704, 4744, 1), new Range16.ptr(4746, 4749, 1), new Range16.ptr(4752, 4784, 1), new Range16.ptr(4786, 4789, 1), new Range16.ptr(4792, 4798, 1), new Range16.ptr(4800, 4802, 2), new Range16.ptr(4803, 4805, 1), new Range16.ptr(4808, 4822, 1), new Range16.ptr(4824, 4880, 1), new Range16.ptr(4882, 4885, 1), new Range16.ptr(4888, 4954, 1), new Range16.ptr(4992, 5007, 1), new Range16.ptr(5024, 5108, 1), new Range16.ptr(5121, 5740, 1), new Range16.ptr(5743, 5759, 1), new Range16.ptr(5761, 5786, 1), new Range16.ptr(5792, 5866, 1), new Range16.ptr(5873, 5880, 1), new Range16.ptr(5888, 5900, 1), new Range16.ptr(5902, 5905, 1), new Range16.ptr(5920, 5937, 1), new Range16.ptr(5952, 5969, 1), new Range16.ptr(5984, 5996, 1), new Range16.ptr(5998, 6000, 1), new Range16.ptr(6016, 6067, 1), new Range16.ptr(6103, 6108, 5), new Range16.ptr(6176, 6263, 1), new Range16.ptr(6272, 6312, 1), new Range16.ptr(6314, 6320, 6), new Range16.ptr(6321, 6389, 1), new Range16.ptr(6400, 6430, 1), new Range16.ptr(6480, 6509, 1), new Range16.ptr(6512, 6516, 1), new Range16.ptr(6528, 6571, 1), new Range16.ptr(6593, 6599, 1), new Range16.ptr(6656, 6678, 1), new Range16.ptr(6688, 6740, 1), new Range16.ptr(6823, 6917, 94), new Range16.ptr(6918, 6963, 1), new Range16.ptr(6981, 6987, 1), new Range16.ptr(7043, 7072, 1), new Range16.ptr(7086, 7087, 1), new Range16.ptr(7098, 7141, 1), new Range16.ptr(7168, 7203, 1), new Range16.ptr(7245, 7247, 1), new Range16.ptr(7258, 7293, 1), new Range16.ptr(7401, 7404, 1), new Range16.ptr(7406, 7409, 1), new Range16.ptr(7413, 7414, 1), new Range16.ptr(7424, 7615, 1), new Range16.ptr(7680, 7957, 1), new Range16.ptr(7960, 7965, 1), new Range16.ptr(7968, 8005, 1), new Range16.ptr(8008, 8013, 1), new Range16.ptr(8016, 8023, 1), new Range16.ptr(8025, 8031, 2), new Range16.ptr(8032, 8061, 1), new Range16.ptr(8064, 8116, 1), new Range16.ptr(8118, 8124, 1), new Range16.ptr(8126, 8130, 4), new Range16.ptr(8131, 8132, 1), new Range16.ptr(8134, 8140, 1), new Range16.ptr(8144, 8147, 1), new Range16.ptr(8150, 8155, 1), new Range16.ptr(8160, 8172, 1), new Range16.ptr(8178, 8180, 1), new Range16.ptr(8182, 8188, 1), new Range16.ptr(8305, 8319, 14), new Range16.ptr(8336, 8348, 1), new Range16.ptr(8450, 8455, 5), new Range16.ptr(8458, 8467, 1), new Range16.ptr(8469, 8473, 4), new Range16.ptr(8474, 8477, 1), new Range16.ptr(8484, 8490, 2), new Range16.ptr(8491, 8493, 1), new Range16.ptr(8495, 8505, 1), new Range16.ptr(8508, 8511, 1), new Range16.ptr(8517, 8521, 1), new Range16.ptr(8526, 8579, 53), new Range16.ptr(8580, 11264, 2684), new Range16.ptr(11265, 11310, 1), new Range16.ptr(11312, 11358, 1), new Range16.ptr(11360, 11492, 1), new Range16.ptr(11499, 11502, 1), new Range16.ptr(11506, 11507, 1), new Range16.ptr(11520, 11557, 1), new Range16.ptr(11559, 11565, 6), new Range16.ptr(11568, 11623, 1), new Range16.ptr(11631, 11648, 17), new Range16.ptr(11649, 11670, 1), new Range16.ptr(11680, 11686, 1), new Range16.ptr(11688, 11694, 1), new Range16.ptr(11696, 11702, 1), new Range16.ptr(11704, 11710, 1), new Range16.ptr(11712, 11718, 1), new Range16.ptr(11720, 11726, 1), new Range16.ptr(11728, 11734, 1), new Range16.ptr(11736, 11742, 1), new Range16.ptr(11823, 12293, 470), new Range16.ptr(12294, 12337, 43), new Range16.ptr(12338, 12341, 1), new Range16.ptr(12347, 12348, 1), new Range16.ptr(12353, 12438, 1), new Range16.ptr(12445, 12447, 1), new Range16.ptr(12449, 12538, 1), new Range16.ptr(12540, 12543, 1), new Range16.ptr(12549, 12589, 1), new Range16.ptr(12593, 12686, 1), new Range16.ptr(12704, 12730, 1), new Range16.ptr(12784, 12799, 1), new Range16.ptr(13312, 19893, 1), new Range16.ptr(19968, 40908, 1), new Range16.ptr(40960, 42124, 1), new Range16.ptr(42192, 42237, 1), new Range16.ptr(42240, 42508, 1), new Range16.ptr(42512, 42527, 1), new Range16.ptr(42538, 42539, 1), new Range16.ptr(42560, 42606, 1), new Range16.ptr(42623, 42653, 1), new Range16.ptr(42656, 42725, 1), new Range16.ptr(42775, 42783, 1), new Range16.ptr(42786, 42888, 1), new Range16.ptr(42891, 42894, 1), new Range16.ptr(42896, 42925, 1), new Range16.ptr(42928, 42929, 1), new Range16.ptr(42999, 43009, 1), new Range16.ptr(43011, 43013, 1), new Range16.ptr(43015, 43018, 1), new Range16.ptr(43020, 43042, 1), new Range16.ptr(43072, 43123, 1), new Range16.ptr(43138, 43187, 1), new Range16.ptr(43250, 43255, 1), new Range16.ptr(43259, 43274, 15), new Range16.ptr(43275, 43301, 1), new Range16.ptr(43312, 43334, 1), new Range16.ptr(43360, 43388, 1), new Range16.ptr(43396, 43442, 1), new Range16.ptr(43471, 43488, 17), new Range16.ptr(43489, 43492, 1), new Range16.ptr(43494, 43503, 1), new Range16.ptr(43514, 43518, 1), new Range16.ptr(43520, 43560, 1), new Range16.ptr(43584, 43586, 1), new Range16.ptr(43588, 43595, 1), new Range16.ptr(43616, 43638, 1), new Range16.ptr(43642, 43646, 4), new Range16.ptr(43647, 43695, 1), new Range16.ptr(43697, 43701, 4), new Range16.ptr(43702, 43705, 3), new Range16.ptr(43706, 43709, 1), new Range16.ptr(43712, 43714, 2), new Range16.ptr(43739, 43741, 1), new Range16.ptr(43744, 43754, 1), new Range16.ptr(43762, 43764, 1), new Range16.ptr(43777, 43782, 1), new Range16.ptr(43785, 43790, 1), new Range16.ptr(43793, 43798, 1), new Range16.ptr(43808, 43814, 1), new Range16.ptr(43816, 43822, 1), new Range16.ptr(43824, 43866, 1), new Range16.ptr(43868, 43871, 1), new Range16.ptr(43876, 43877, 1), new Range16.ptr(43968, 44002, 1), new Range16.ptr(44032, 55203, 1), new Range16.ptr(55216, 55238, 1), new Range16.ptr(55243, 55291, 1), new Range16.ptr(63744, 64109, 1), new Range16.ptr(64112, 64217, 1), new Range16.ptr(64256, 64262, 1), new Range16.ptr(64275, 64279, 1), new Range16.ptr(64285, 64287, 2), new Range16.ptr(64288, 64296, 1), new Range16.ptr(64298, 64310, 1), new Range16.ptr(64312, 64316, 1), new Range16.ptr(64318, 64320, 2), new Range16.ptr(64321, 64323, 2), new Range16.ptr(64324, 64326, 2), new Range16.ptr(64327, 64433, 1), new Range16.ptr(64467, 64829, 1), new Range16.ptr(64848, 64911, 1), new Range16.ptr(64914, 64967, 1), new Range16.ptr(65008, 65019, 1), new Range16.ptr(65136, 65140, 1), new Range16.ptr(65142, 65276, 1), new Range16.ptr(65313, 65338, 1), new Range16.ptr(65345, 65370, 1), new Range16.ptr(65382, 65470, 1), new Range16.ptr(65474, 65479, 1), new Range16.ptr(65482, 65487, 1), new Range16.ptr(65490, 65495, 1), new Range16.ptr(65498, 65500, 1)]), new sliceType$1([new Range32.ptr(65536, 65547, 1), new Range32.ptr(65549, 65574, 1), new Range32.ptr(65576, 65594, 1), new Range32.ptr(65596, 65597, 1), new Range32.ptr(65599, 65613, 1), new Range32.ptr(65616, 65629, 1), new Range32.ptr(65664, 65786, 1), new Range32.ptr(66176, 66204, 1), new Range32.ptr(66208, 66256, 1), new Range32.ptr(66304, 66335, 1), new Range32.ptr(66352, 66368, 1), new Range32.ptr(66370, 66377, 1), new Range32.ptr(66384, 66421, 1), new Range32.ptr(66432, 66461, 1), new Range32.ptr(66464, 66499, 1), new Range32.ptr(66504, 66511, 1), new Range32.ptr(66560, 66717, 1), new Range32.ptr(66816, 66855, 1), new Range32.ptr(66864, 66915, 1), new Range32.ptr(67072, 67382, 1), new Range32.ptr(67392, 67413, 1), new Range32.ptr(67424, 67431, 1), new Range32.ptr(67584, 67589, 1), new Range32.ptr(67592, 67594, 2), new Range32.ptr(67595, 67637, 1), new Range32.ptr(67639, 67640, 1), new Range32.ptr(67644, 67647, 3), new Range32.ptr(67648, 67669, 1), new Range32.ptr(67680, 67702, 1), new Range32.ptr(67712, 67742, 1), new Range32.ptr(67840, 67861, 1), new Range32.ptr(67872, 67897, 1), new Range32.ptr(67968, 68023, 1), new Range32.ptr(68030, 68031, 1), new Range32.ptr(68096, 68112, 16), new Range32.ptr(68113, 68115, 1), new Range32.ptr(68117, 68119, 1), new Range32.ptr(68121, 68147, 1), new Range32.ptr(68192, 68220, 1), new Range32.ptr(68224, 68252, 1), new Range32.ptr(68288, 68295, 1), new Range32.ptr(68297, 68324, 1), new Range32.ptr(68352, 68405, 1), new Range32.ptr(68416, 68437, 1), new Range32.ptr(68448, 68466, 1), new Range32.ptr(68480, 68497, 1), new Range32.ptr(68608, 68680, 1), new Range32.ptr(69635, 69687, 1), new Range32.ptr(69763, 69807, 1), new Range32.ptr(69840, 69864, 1), new Range32.ptr(69891, 69926, 1), new Range32.ptr(69968, 70002, 1), new Range32.ptr(70006, 70019, 13), new Range32.ptr(70020, 70066, 1), new Range32.ptr(70081, 70084, 1), new Range32.ptr(70106, 70144, 38), new Range32.ptr(70145, 70161, 1), new Range32.ptr(70163, 70187, 1), new Range32.ptr(70320, 70366, 1), new Range32.ptr(70405, 70412, 1), new Range32.ptr(70415, 70416, 1), new Range32.ptr(70419, 70440, 1), new Range32.ptr(70442, 70448, 1), new Range32.ptr(70450, 70451, 1), new Range32.ptr(70453, 70457, 1), new Range32.ptr(70461, 70493, 32), new Range32.ptr(70494, 70497, 1), new Range32.ptr(70784, 70831, 1), new Range32.ptr(70852, 70853, 1), new Range32.ptr(70855, 71040, 185), new Range32.ptr(71041, 71086, 1), new Range32.ptr(71168, 71215, 1), new Range32.ptr(71236, 71296, 60), new Range32.ptr(71297, 71338, 1), new Range32.ptr(71840, 71903, 1), new Range32.ptr(71935, 72384, 449), new Range32.ptr(72385, 72440, 1), new Range32.ptr(73728, 74648, 1), new Range32.ptr(77824, 78894, 1), new Range32.ptr(92160, 92728, 1), new Range32.ptr(92736, 92766, 1), new Range32.ptr(92880, 92909, 1), new Range32.ptr(92928, 92975, 1), new Range32.ptr(92992, 92995, 1), new Range32.ptr(93027, 93047, 1), new Range32.ptr(93053, 93071, 1), new Range32.ptr(93952, 94020, 1), new Range32.ptr(94032, 94099, 67), new Range32.ptr(94100, 94111, 1), new Range32.ptr(110592, 110593, 1), new Range32.ptr(113664, 113770, 1), new Range32.ptr(113776, 113788, 1), new Range32.ptr(113792, 113800, 1), new Range32.ptr(113808, 113817, 1), new Range32.ptr(119808, 119892, 1), new Range32.ptr(119894, 119964, 1), new Range32.ptr(119966, 119967, 1), new Range32.ptr(119970, 119973, 3), new Range32.ptr(119974, 119977, 3), new Range32.ptr(119978, 119980, 1), new Range32.ptr(119982, 119993, 1), new Range32.ptr(119995, 119997, 2), new Range32.ptr(119998, 120003, 1), new Range32.ptr(120005, 120069, 1), new Range32.ptr(120071, 120074, 1), new Range32.ptr(120077, 120084, 1), new Range32.ptr(120086, 120092, 1), new Range32.ptr(120094, 120121, 1), new Range32.ptr(120123, 120126, 1), new Range32.ptr(120128, 120132, 1), new Range32.ptr(120134, 120138, 4), new Range32.ptr(120139, 120144, 1), new Range32.ptr(120146, 120485, 1), new Range32.ptr(120488, 120512, 1), new Range32.ptr(120514, 120538, 1), new Range32.ptr(120540, 120570, 1), new Range32.ptr(120572, 120596, 1), new Range32.ptr(120598, 120628, 1), new Range32.ptr(120630, 120654, 1), new Range32.ptr(120656, 120686, 1), new Range32.ptr(120688, 120712, 1), new Range32.ptr(120714, 120744, 1), new Range32.ptr(120746, 120770, 1), new Range32.ptr(120772, 120779, 1), new Range32.ptr(124928, 125124, 1), new Range32.ptr(126464, 126467, 1), new Range32.ptr(126469, 126495, 1), new Range32.ptr(126497, 126498, 1), new Range32.ptr(126500, 126503, 3), new Range32.ptr(126505, 126514, 1), new Range32.ptr(126516, 126519, 1), new Range32.ptr(126521, 126523, 2), new Range32.ptr(126530, 126535, 5), new Range32.ptr(126537, 126541, 2), new Range32.ptr(126542, 126543, 1), new Range32.ptr(126545, 126546, 1), new Range32.ptr(126548, 126551, 3), new Range32.ptr(126553, 126561, 2), new Range32.ptr(126562, 126564, 2), new Range32.ptr(126567, 126570, 1), new Range32.ptr(126572, 126578, 1), new Range32.ptr(126580, 126583, 1), new Range32.ptr(126585, 126588, 1), new Range32.ptr(126590, 126592, 2), new Range32.ptr(126593, 126601, 1), new Range32.ptr(126603, 126619, 1), new Range32.ptr(126625, 126627, 1), new Range32.ptr(126629, 126633, 1), new Range32.ptr(126635, 126651, 1), new Range32.ptr(131072, 173782, 1), new Range32.ptr(173824, 177972, 1), new Range32.ptr(177984, 178205, 1), new Range32.ptr(194560, 195101, 1)]), 6);
		_Ll = new RangeTable.ptr(new sliceType([new Range16.ptr(97, 122, 1), new Range16.ptr(181, 223, 42), new Range16.ptr(224, 246, 1), new Range16.ptr(248, 255, 1), new Range16.ptr(257, 311, 2), new Range16.ptr(312, 328, 2), new Range16.ptr(329, 375, 2), new Range16.ptr(378, 382, 2), new Range16.ptr(383, 384, 1), new Range16.ptr(387, 389, 2), new Range16.ptr(392, 396, 4), new Range16.ptr(397, 402, 5), new Range16.ptr(405, 409, 4), new Range16.ptr(410, 411, 1), new Range16.ptr(414, 417, 3), new Range16.ptr(419, 421, 2), new Range16.ptr(424, 426, 2), new Range16.ptr(427, 429, 2), new Range16.ptr(432, 436, 4), new Range16.ptr(438, 441, 3), new Range16.ptr(442, 445, 3), new Range16.ptr(446, 447, 1), new Range16.ptr(454, 460, 3), new Range16.ptr(462, 476, 2), new Range16.ptr(477, 495, 2), new Range16.ptr(496, 499, 3), new Range16.ptr(501, 505, 4), new Range16.ptr(507, 563, 2), new Range16.ptr(564, 569, 1), new Range16.ptr(572, 575, 3), new Range16.ptr(576, 578, 2), new Range16.ptr(583, 591, 2), new Range16.ptr(592, 659, 1), new Range16.ptr(661, 687, 1), new Range16.ptr(881, 883, 2), new Range16.ptr(887, 891, 4), new Range16.ptr(892, 893, 1), new Range16.ptr(912, 940, 28), new Range16.ptr(941, 974, 1), new Range16.ptr(976, 977, 1), new Range16.ptr(981, 983, 1), new Range16.ptr(985, 1007, 2), new Range16.ptr(1008, 1011, 1), new Range16.ptr(1013, 1019, 3), new Range16.ptr(1020, 1072, 52), new Range16.ptr(1073, 1119, 1), new Range16.ptr(1121, 1153, 2), new Range16.ptr(1163, 1215, 2), new Range16.ptr(1218, 1230, 2), new Range16.ptr(1231, 1327, 2), new Range16.ptr(1377, 1415, 1), new Range16.ptr(7424, 7467, 1), new Range16.ptr(7531, 7543, 1), new Range16.ptr(7545, 7578, 1), new Range16.ptr(7681, 7829, 2), new Range16.ptr(7830, 7837, 1), new Range16.ptr(7839, 7935, 2), new Range16.ptr(7936, 7943, 1), new Range16.ptr(7952, 7957, 1), new Range16.ptr(7968, 7975, 1), new Range16.ptr(7984, 7991, 1), new Range16.ptr(8000, 8005, 1), new Range16.ptr(8016, 8023, 1), new Range16.ptr(8032, 8039, 1), new Range16.ptr(8048, 8061, 1), new Range16.ptr(8064, 8071, 1), new Range16.ptr(8080, 8087, 1), new Range16.ptr(8096, 8103, 1), new Range16.ptr(8112, 8116, 1), new Range16.ptr(8118, 8119, 1), new Range16.ptr(8126, 8130, 4), new Range16.ptr(8131, 8132, 1), new Range16.ptr(8134, 8135, 1), new Range16.ptr(8144, 8147, 1), new Range16.ptr(8150, 8151, 1), new Range16.ptr(8160, 8167, 1), new Range16.ptr(8178, 8180, 1), new Range16.ptr(8182, 8183, 1), new Range16.ptr(8458, 8462, 4), new Range16.ptr(8463, 8467, 4), new Range16.ptr(8495, 8505, 5), new Range16.ptr(8508, 8509, 1), new Range16.ptr(8518, 8521, 1), new Range16.ptr(8526, 8580, 54), new Range16.ptr(11312, 11358, 1), new Range16.ptr(11361, 11365, 4), new Range16.ptr(11366, 11372, 2), new Range16.ptr(11377, 11379, 2), new Range16.ptr(11380, 11382, 2), new Range16.ptr(11383, 11387, 1), new Range16.ptr(11393, 11491, 2), new Range16.ptr(11492, 11500, 8), new Range16.ptr(11502, 11507, 5), new Range16.ptr(11520, 11557, 1), new Range16.ptr(11559, 11565, 6), new Range16.ptr(42561, 42605, 2), new Range16.ptr(42625, 42651, 2), new Range16.ptr(42787, 42799, 2), new Range16.ptr(42800, 42801, 1), new Range16.ptr(42803, 42865, 2), new Range16.ptr(42866, 42872, 1), new Range16.ptr(42874, 42876, 2), new Range16.ptr(42879, 42887, 2), new Range16.ptr(42892, 42894, 2), new Range16.ptr(42897, 42899, 2), new Range16.ptr(42900, 42901, 1), new Range16.ptr(42903, 42921, 2), new Range16.ptr(43002, 43824, 822), new Range16.ptr(43825, 43866, 1), new Range16.ptr(43876, 43877, 1), new Range16.ptr(64256, 64262, 1), new Range16.ptr(64275, 64279, 1), new Range16.ptr(65345, 65370, 1)]), new sliceType$1([new Range32.ptr(66600, 66639, 1), new Range32.ptr(71872, 71903, 1), new Range32.ptr(119834, 119859, 1), new Range32.ptr(119886, 119892, 1), new Range32.ptr(119894, 119911, 1), new Range32.ptr(119938, 119963, 1), new Range32.ptr(119990, 119993, 1), new Range32.ptr(119995, 119997, 2), new Range32.ptr(119998, 120003, 1), new Range32.ptr(120005, 120015, 1), new Range32.ptr(120042, 120067, 1), new Range32.ptr(120094, 120119, 1), new Range32.ptr(120146, 120171, 1), new Range32.ptr(120198, 120223, 1), new Range32.ptr(120250, 120275, 1), new Range32.ptr(120302, 120327, 1), new Range32.ptr(120354, 120379, 1), new Range32.ptr(120406, 120431, 1), new Range32.ptr(120458, 120485, 1), new Range32.ptr(120514, 120538, 1), new Range32.ptr(120540, 120545, 1), new Range32.ptr(120572, 120596, 1), new Range32.ptr(120598, 120603, 1), new Range32.ptr(120630, 120654, 1), new Range32.ptr(120656, 120661, 1), new Range32.ptr(120688, 120712, 1), new Range32.ptr(120714, 120719, 1), new Range32.ptr(120746, 120770, 1), new Range32.ptr(120772, 120777, 1), new Range32.ptr(120779, 120779, 1)]), 4);
		_Lm = new RangeTable.ptr(new sliceType([new Range16.ptr(688, 705, 1), new Range16.ptr(710, 721, 1), new Range16.ptr(736, 740, 1), new Range16.ptr(748, 750, 2), new Range16.ptr(884, 890, 6), new Range16.ptr(1369, 1600, 231), new Range16.ptr(1765, 1766, 1), new Range16.ptr(2036, 2037, 1), new Range16.ptr(2042, 2074, 32), new Range16.ptr(2084, 2088, 4), new Range16.ptr(2417, 3654, 1237), new Range16.ptr(3782, 4348, 566), new Range16.ptr(6103, 6211, 108), new Range16.ptr(6823, 7288, 465), new Range16.ptr(7289, 7293, 1), new Range16.ptr(7468, 7530, 1), new Range16.ptr(7544, 7579, 35), new Range16.ptr(7580, 7615, 1), new Range16.ptr(8305, 8319, 14), new Range16.ptr(8336, 8348, 1), new Range16.ptr(11388, 11389, 1), new Range16.ptr(11631, 11823, 192), new Range16.ptr(12293, 12337, 44), new Range16.ptr(12338, 12341, 1), new Range16.ptr(12347, 12445, 98), new Range16.ptr(12446, 12540, 94), new Range16.ptr(12541, 12542, 1), new Range16.ptr(40981, 42232, 1251), new Range16.ptr(42233, 42237, 1), new Range16.ptr(42508, 42623, 115), new Range16.ptr(42652, 42653, 1), new Range16.ptr(42775, 42783, 1), new Range16.ptr(42864, 42888, 24), new Range16.ptr(43000, 43001, 1), new Range16.ptr(43471, 43494, 23), new Range16.ptr(43632, 43741, 109), new Range16.ptr(43763, 43764, 1), new Range16.ptr(43868, 43871, 1), new Range16.ptr(65392, 65438, 46), new Range16.ptr(65439, 65439, 1)]), new sliceType$1([new Range32.ptr(92992, 92992, 1), new Range32.ptr(92993, 92995, 1), new Range32.ptr(94099, 94111, 1)]), 0);
		_Lo = new RangeTable.ptr(new sliceType([new Range16.ptr(170, 186, 16), new Range16.ptr(443, 448, 5), new Range16.ptr(449, 451, 1), new Range16.ptr(660, 1488, 828), new Range16.ptr(1489, 1514, 1), new Range16.ptr(1520, 1522, 1), new Range16.ptr(1568, 1599, 1), new Range16.ptr(1601, 1610, 1), new Range16.ptr(1646, 1647, 1), new Range16.ptr(1649, 1747, 1), new Range16.ptr(1749, 1774, 25), new Range16.ptr(1775, 1786, 11), new Range16.ptr(1787, 1788, 1), new Range16.ptr(1791, 1808, 17), new Range16.ptr(1810, 1839, 1), new Range16.ptr(1869, 1957, 1), new Range16.ptr(1969, 1994, 25), new Range16.ptr(1995, 2026, 1), new Range16.ptr(2048, 2069, 1), new Range16.ptr(2112, 2136, 1), new Range16.ptr(2208, 2226, 1), new Range16.ptr(2308, 2361, 1), new Range16.ptr(2365, 2384, 19), new Range16.ptr(2392, 2401, 1), new Range16.ptr(2418, 2432, 1), new Range16.ptr(2437, 2444, 1), new Range16.ptr(2447, 2448, 1), new Range16.ptr(2451, 2472, 1), new Range16.ptr(2474, 2480, 1), new Range16.ptr(2482, 2486, 4), new Range16.ptr(2487, 2489, 1), new Range16.ptr(2493, 2510, 17), new Range16.ptr(2524, 2525, 1), new Range16.ptr(2527, 2529, 1), new Range16.ptr(2544, 2545, 1), new Range16.ptr(2565, 2570, 1), new Range16.ptr(2575, 2576, 1), new Range16.ptr(2579, 2600, 1), new Range16.ptr(2602, 2608, 1), new Range16.ptr(2610, 2611, 1), new Range16.ptr(2613, 2614, 1), new Range16.ptr(2616, 2617, 1), new Range16.ptr(2649, 2652, 1), new Range16.ptr(2654, 2674, 20), new Range16.ptr(2675, 2676, 1), new Range16.ptr(2693, 2701, 1), new Range16.ptr(2703, 2705, 1), new Range16.ptr(2707, 2728, 1), new Range16.ptr(2730, 2736, 1), new Range16.ptr(2738, 2739, 1), new Range16.ptr(2741, 2745, 1), new Range16.ptr(2749, 2768, 19), new Range16.ptr(2784, 2785, 1), new Range16.ptr(2821, 2828, 1), new Range16.ptr(2831, 2832, 1), new Range16.ptr(2835, 2856, 1), new Range16.ptr(2858, 2864, 1), new Range16.ptr(2866, 2867, 1), new Range16.ptr(2869, 2873, 1), new Range16.ptr(2877, 2908, 31), new Range16.ptr(2909, 2911, 2), new Range16.ptr(2912, 2913, 1), new Range16.ptr(2929, 2947, 18), new Range16.ptr(2949, 2954, 1), new Range16.ptr(2958, 2960, 1), new Range16.ptr(2962, 2965, 1), new Range16.ptr(2969, 2970, 1), new Range16.ptr(2972, 2974, 2), new Range16.ptr(2975, 2979, 4), new Range16.ptr(2980, 2984, 4), new Range16.ptr(2985, 2986, 1), new Range16.ptr(2990, 3001, 1), new Range16.ptr(3024, 3077, 53), new Range16.ptr(3078, 3084, 1), new Range16.ptr(3086, 3088, 1), new Range16.ptr(3090, 3112, 1), new Range16.ptr(3114, 3129, 1), new Range16.ptr(3133, 3160, 27), new Range16.ptr(3161, 3168, 7), new Range16.ptr(3169, 3205, 36), new Range16.ptr(3206, 3212, 1), new Range16.ptr(3214, 3216, 1), new Range16.ptr(3218, 3240, 1), new Range16.ptr(3242, 3251, 1), new Range16.ptr(3253, 3257, 1), new Range16.ptr(3261, 3294, 33), new Range16.ptr(3296, 3297, 1), new Range16.ptr(3313, 3314, 1), new Range16.ptr(3333, 3340, 1), new Range16.ptr(3342, 3344, 1), new Range16.ptr(3346, 3386, 1), new Range16.ptr(3389, 3406, 17), new Range16.ptr(3424, 3425, 1), new Range16.ptr(3450, 3455, 1), new Range16.ptr(3461, 3478, 1), new Range16.ptr(3482, 3505, 1), new Range16.ptr(3507, 3515, 1), new Range16.ptr(3517, 3520, 3), new Range16.ptr(3521, 3526, 1), new Range16.ptr(3585, 3632, 1), new Range16.ptr(3634, 3635, 1), new Range16.ptr(3648, 3653, 1), new Range16.ptr(3713, 3714, 1), new Range16.ptr(3716, 3719, 3), new Range16.ptr(3720, 3722, 2), new Range16.ptr(3725, 3732, 7), new Range16.ptr(3733, 3735, 1), new Range16.ptr(3737, 3743, 1), new Range16.ptr(3745, 3747, 1), new Range16.ptr(3749, 3751, 2), new Range16.ptr(3754, 3755, 1), new Range16.ptr(3757, 3760, 1), new Range16.ptr(3762, 3763, 1), new Range16.ptr(3773, 3776, 3), new Range16.ptr(3777, 3780, 1), new Range16.ptr(3804, 3807, 1), new Range16.ptr(3840, 3904, 64), new Range16.ptr(3905, 3911, 1), new Range16.ptr(3913, 3948, 1), new Range16.ptr(3976, 3980, 1), new Range16.ptr(4096, 4138, 1), new Range16.ptr(4159, 4176, 17), new Range16.ptr(4177, 4181, 1), new Range16.ptr(4186, 4189, 1), new Range16.ptr(4193, 4197, 4), new Range16.ptr(4198, 4206, 8), new Range16.ptr(4207, 4208, 1), new Range16.ptr(4213, 4225, 1), new Range16.ptr(4238, 4304, 66), new Range16.ptr(4305, 4346, 1), new Range16.ptr(4349, 4680, 1), new Range16.ptr(4682, 4685, 1), new Range16.ptr(4688, 4694, 1), new Range16.ptr(4696, 4698, 2), new Range16.ptr(4699, 4701, 1), new Range16.ptr(4704, 4744, 1), new Range16.ptr(4746, 4749, 1), new Range16.ptr(4752, 4784, 1), new Range16.ptr(4786, 4789, 1), new Range16.ptr(4792, 4798, 1), new Range16.ptr(4800, 4802, 2), new Range16.ptr(4803, 4805, 1), new Range16.ptr(4808, 4822, 1), new Range16.ptr(4824, 4880, 1), new Range16.ptr(4882, 4885, 1), new Range16.ptr(4888, 4954, 1), new Range16.ptr(4992, 5007, 1), new Range16.ptr(5024, 5108, 1), new Range16.ptr(5121, 5740, 1), new Range16.ptr(5743, 5759, 1), new Range16.ptr(5761, 5786, 1), new Range16.ptr(5792, 5866, 1), new Range16.ptr(5873, 5880, 1), new Range16.ptr(5888, 5900, 1), new Range16.ptr(5902, 5905, 1), new Range16.ptr(5920, 5937, 1), new Range16.ptr(5952, 5969, 1), new Range16.ptr(5984, 5996, 1), new Range16.ptr(5998, 6000, 1), new Range16.ptr(6016, 6067, 1), new Range16.ptr(6108, 6176, 68), new Range16.ptr(6177, 6210, 1), new Range16.ptr(6212, 6263, 1), new Range16.ptr(6272, 6312, 1), new Range16.ptr(6314, 6320, 6), new Range16.ptr(6321, 6389, 1), new Range16.ptr(6400, 6430, 1), new Range16.ptr(6480, 6509, 1), new Range16.ptr(6512, 6516, 1), new Range16.ptr(6528, 6571, 1), new Range16.ptr(6593, 6599, 1), new Range16.ptr(6656, 6678, 1), new Range16.ptr(6688, 6740, 1), new Range16.ptr(6917, 6963, 1), new Range16.ptr(6981, 6987, 1), new Range16.ptr(7043, 7072, 1), new Range16.ptr(7086, 7087, 1), new Range16.ptr(7098, 7141, 1), new Range16.ptr(7168, 7203, 1), new Range16.ptr(7245, 7247, 1), new Range16.ptr(7258, 7287, 1), new Range16.ptr(7401, 7404, 1), new Range16.ptr(7406, 7409, 1), new Range16.ptr(7413, 7414, 1), new Range16.ptr(8501, 8504, 1), new Range16.ptr(11568, 11623, 1), new Range16.ptr(11648, 11670, 1), new Range16.ptr(11680, 11686, 1), new Range16.ptr(11688, 11694, 1), new Range16.ptr(11696, 11702, 1), new Range16.ptr(11704, 11710, 1), new Range16.ptr(11712, 11718, 1), new Range16.ptr(11720, 11726, 1), new Range16.ptr(11728, 11734, 1), new Range16.ptr(11736, 11742, 1), new Range16.ptr(12294, 12348, 54), new Range16.ptr(12353, 12438, 1), new Range16.ptr(12447, 12449, 2), new Range16.ptr(12450, 12538, 1), new Range16.ptr(12543, 12549, 6), new Range16.ptr(12550, 12589, 1), new Range16.ptr(12593, 12686, 1), new Range16.ptr(12704, 12730, 1), new Range16.ptr(12784, 12799, 1), new Range16.ptr(13312, 19893, 1), new Range16.ptr(19968, 40908, 1), new Range16.ptr(40960, 40980, 1), new Range16.ptr(40982, 42124, 1), new Range16.ptr(42192, 42231, 1), new Range16.ptr(42240, 42507, 1), new Range16.ptr(42512, 42527, 1), new Range16.ptr(42538, 42539, 1), new Range16.ptr(42606, 42656, 50), new Range16.ptr(42657, 42725, 1), new Range16.ptr(42999, 43003, 4), new Range16.ptr(43004, 43009, 1), new Range16.ptr(43011, 43013, 1), new Range16.ptr(43015, 43018, 1), new Range16.ptr(43020, 43042, 1), new Range16.ptr(43072, 43123, 1), new Range16.ptr(43138, 43187, 1), new Range16.ptr(43250, 43255, 1), new Range16.ptr(43259, 43274, 15), new Range16.ptr(43275, 43301, 1), new Range16.ptr(43312, 43334, 1), new Range16.ptr(43360, 43388, 1), new Range16.ptr(43396, 43442, 1), new Range16.ptr(43488, 43492, 1), new Range16.ptr(43495, 43503, 1), new Range16.ptr(43514, 43518, 1), new Range16.ptr(43520, 43560, 1), new Range16.ptr(43584, 43586, 1), new Range16.ptr(43588, 43595, 1), new Range16.ptr(43616, 43631, 1), new Range16.ptr(43633, 43638, 1), new Range16.ptr(43642, 43646, 4), new Range16.ptr(43647, 43695, 1), new Range16.ptr(43697, 43701, 4), new Range16.ptr(43702, 43705, 3), new Range16.ptr(43706, 43709, 1), new Range16.ptr(43712, 43714, 2), new Range16.ptr(43739, 43740, 1), new Range16.ptr(43744, 43754, 1), new Range16.ptr(43762, 43777, 15), new Range16.ptr(43778, 43782, 1), new Range16.ptr(43785, 43790, 1), new Range16.ptr(43793, 43798, 1), new Range16.ptr(43808, 43814, 1), new Range16.ptr(43816, 43822, 1), new Range16.ptr(43968, 44002, 1), new Range16.ptr(44032, 55203, 1), new Range16.ptr(55216, 55238, 1), new Range16.ptr(55243, 55291, 1), new Range16.ptr(63744, 64109, 1), new Range16.ptr(64112, 64217, 1), new Range16.ptr(64285, 64287, 2), new Range16.ptr(64288, 64296, 1), new Range16.ptr(64298, 64310, 1), new Range16.ptr(64312, 64316, 1), new Range16.ptr(64318, 64320, 2), new Range16.ptr(64321, 64323, 2), new Range16.ptr(64324, 64326, 2), new Range16.ptr(64327, 64433, 1), new Range16.ptr(64467, 64829, 1), new Range16.ptr(64848, 64911, 1), new Range16.ptr(64914, 64967, 1), new Range16.ptr(65008, 65019, 1), new Range16.ptr(65136, 65140, 1), new Range16.ptr(65142, 65276, 1), new Range16.ptr(65382, 65391, 1), new Range16.ptr(65393, 65437, 1), new Range16.ptr(65440, 65470, 1), new Range16.ptr(65474, 65479, 1), new Range16.ptr(65482, 65487, 1), new Range16.ptr(65490, 65495, 1), new Range16.ptr(65498, 65500, 1)]), new sliceType$1([new Range32.ptr(65536, 65547, 1), new Range32.ptr(65549, 65574, 1), new Range32.ptr(65576, 65594, 1), new Range32.ptr(65596, 65597, 1), new Range32.ptr(65599, 65613, 1), new Range32.ptr(65616, 65629, 1), new Range32.ptr(65664, 65786, 1), new Range32.ptr(66176, 66204, 1), new Range32.ptr(66208, 66256, 1), new Range32.ptr(66304, 66335, 1), new Range32.ptr(66352, 66368, 1), new Range32.ptr(66370, 66377, 1), new Range32.ptr(66384, 66421, 1), new Range32.ptr(66432, 66461, 1), new Range32.ptr(66464, 66499, 1), new Range32.ptr(66504, 66511, 1), new Range32.ptr(66640, 66717, 1), new Range32.ptr(66816, 66855, 1), new Range32.ptr(66864, 66915, 1), new Range32.ptr(67072, 67382, 1), new Range32.ptr(67392, 67413, 1), new Range32.ptr(67424, 67431, 1), new Range32.ptr(67584, 67589, 1), new Range32.ptr(67592, 67594, 2), new Range32.ptr(67595, 67637, 1), new Range32.ptr(67639, 67640, 1), new Range32.ptr(67644, 67647, 3), new Range32.ptr(67648, 67669, 1), new Range32.ptr(67680, 67702, 1), new Range32.ptr(67712, 67742, 1), new Range32.ptr(67840, 67861, 1), new Range32.ptr(67872, 67897, 1), new Range32.ptr(67968, 68023, 1), new Range32.ptr(68030, 68031, 1), new Range32.ptr(68096, 68112, 16), new Range32.ptr(68113, 68115, 1), new Range32.ptr(68117, 68119, 1), new Range32.ptr(68121, 68147, 1), new Range32.ptr(68192, 68220, 1), new Range32.ptr(68224, 68252, 1), new Range32.ptr(68288, 68295, 1), new Range32.ptr(68297, 68324, 1), new Range32.ptr(68352, 68405, 1), new Range32.ptr(68416, 68437, 1), new Range32.ptr(68448, 68466, 1), new Range32.ptr(68480, 68497, 1), new Range32.ptr(68608, 68680, 1), new Range32.ptr(69635, 69687, 1), new Range32.ptr(69763, 69807, 1), new Range32.ptr(69840, 69864, 1), new Range32.ptr(69891, 69926, 1), new Range32.ptr(69968, 70002, 1), new Range32.ptr(70006, 70019, 13), new Range32.ptr(70020, 70066, 1), new Range32.ptr(70081, 70084, 1), new Range32.ptr(70106, 70144, 38), new Range32.ptr(70145, 70161, 1), new Range32.ptr(70163, 70187, 1), new Range32.ptr(70320, 70366, 1), new Range32.ptr(70405, 70412, 1), new Range32.ptr(70415, 70416, 1), new Range32.ptr(70419, 70440, 1), new Range32.ptr(70442, 70448, 1), new Range32.ptr(70450, 70451, 1), new Range32.ptr(70453, 70457, 1), new Range32.ptr(70461, 70493, 32), new Range32.ptr(70494, 70497, 1), new Range32.ptr(70784, 70831, 1), new Range32.ptr(70852, 70853, 1), new Range32.ptr(70855, 71040, 185), new Range32.ptr(71041, 71086, 1), new Range32.ptr(71168, 71215, 1), new Range32.ptr(71236, 71296, 60), new Range32.ptr(71297, 71338, 1), new Range32.ptr(71935, 72384, 449), new Range32.ptr(72385, 72440, 1), new Range32.ptr(73728, 74648, 1), new Range32.ptr(77824, 78894, 1), new Range32.ptr(92160, 92728, 1), new Range32.ptr(92736, 92766, 1), new Range32.ptr(92880, 92909, 1), new Range32.ptr(92928, 92975, 1), new Range32.ptr(93027, 93047, 1), new Range32.ptr(93053, 93071, 1), new Range32.ptr(93952, 94020, 1), new Range32.ptr(94032, 110592, 16560), new Range32.ptr(110593, 113664, 3071), new Range32.ptr(113665, 113770, 1), new Range32.ptr(113776, 113788, 1), new Range32.ptr(113792, 113800, 1), new Range32.ptr(113808, 113817, 1), new Range32.ptr(124928, 125124, 1), new Range32.ptr(126464, 126467, 1), new Range32.ptr(126469, 126495, 1), new Range32.ptr(126497, 126498, 1), new Range32.ptr(126500, 126503, 3), new Range32.ptr(126505, 126514, 1), new Range32.ptr(126516, 126519, 1), new Range32.ptr(126521, 126523, 2), new Range32.ptr(126530, 126535, 5), new Range32.ptr(126537, 126541, 2), new Range32.ptr(126542, 126543, 1), new Range32.ptr(126545, 126546, 1), new Range32.ptr(126548, 126551, 3), new Range32.ptr(126553, 126561, 2), new Range32.ptr(126562, 126564, 2), new Range32.ptr(126567, 126570, 1), new Range32.ptr(126572, 126578, 1), new Range32.ptr(126580, 126583, 1), new Range32.ptr(126585, 126588, 1), new Range32.ptr(126590, 126592, 2), new Range32.ptr(126593, 126601, 1), new Range32.ptr(126603, 126619, 1), new Range32.ptr(126625, 126627, 1), new Range32.ptr(126629, 126633, 1), new Range32.ptr(126635, 126651, 1), new Range32.ptr(131072, 173782, 1), new Range32.ptr(173824, 177972, 1), new Range32.ptr(177984, 178205, 1), new Range32.ptr(194560, 195101, 1)]), 1);
		_Lt = new RangeTable.ptr(new sliceType([new Range16.ptr(453, 459, 3), new Range16.ptr(498, 8072, 7574), new Range16.ptr(8073, 8079, 1), new Range16.ptr(8088, 8095, 1), new Range16.ptr(8104, 8111, 1), new Range16.ptr(8124, 8140, 16), new Range16.ptr(8188, 8188, 1)]), sliceType$1.nil, 0);
		_Lu = new RangeTable.ptr(new sliceType([new Range16.ptr(65, 90, 1), new Range16.ptr(192, 214, 1), new Range16.ptr(216, 222, 1), new Range16.ptr(256, 310, 2), new Range16.ptr(313, 327, 2), new Range16.ptr(330, 376, 2), new Range16.ptr(377, 381, 2), new Range16.ptr(385, 386, 1), new Range16.ptr(388, 390, 2), new Range16.ptr(391, 393, 2), new Range16.ptr(394, 395, 1), new Range16.ptr(398, 401, 1), new Range16.ptr(403, 404, 1), new Range16.ptr(406, 408, 1), new Range16.ptr(412, 413, 1), new Range16.ptr(415, 416, 1), new Range16.ptr(418, 422, 2), new Range16.ptr(423, 425, 2), new Range16.ptr(428, 430, 2), new Range16.ptr(431, 433, 2), new Range16.ptr(434, 435, 1), new Range16.ptr(437, 439, 2), new Range16.ptr(440, 444, 4), new Range16.ptr(452, 461, 3), new Range16.ptr(463, 475, 2), new Range16.ptr(478, 494, 2), new Range16.ptr(497, 500, 3), new Range16.ptr(502, 504, 1), new Range16.ptr(506, 562, 2), new Range16.ptr(570, 571, 1), new Range16.ptr(573, 574, 1), new Range16.ptr(577, 579, 2), new Range16.ptr(580, 582, 1), new Range16.ptr(584, 590, 2), new Range16.ptr(880, 882, 2), new Range16.ptr(886, 895, 9), new Range16.ptr(902, 904, 2), new Range16.ptr(905, 906, 1), new Range16.ptr(908, 910, 2), new Range16.ptr(911, 913, 2), new Range16.ptr(914, 929, 1), new Range16.ptr(931, 939, 1), new Range16.ptr(975, 978, 3), new Range16.ptr(979, 980, 1), new Range16.ptr(984, 1006, 2), new Range16.ptr(1012, 1015, 3), new Range16.ptr(1017, 1018, 1), new Range16.ptr(1021, 1071, 1), new Range16.ptr(1120, 1152, 2), new Range16.ptr(1162, 1216, 2), new Range16.ptr(1217, 1229, 2), new Range16.ptr(1232, 1326, 2), new Range16.ptr(1329, 1366, 1), new Range16.ptr(4256, 4293, 1), new Range16.ptr(4295, 4301, 6), new Range16.ptr(7680, 7828, 2), new Range16.ptr(7838, 7934, 2), new Range16.ptr(7944, 7951, 1), new Range16.ptr(7960, 7965, 1), new Range16.ptr(7976, 7983, 1), new Range16.ptr(7992, 7999, 1), new Range16.ptr(8008, 8013, 1), new Range16.ptr(8025, 8031, 2), new Range16.ptr(8040, 8047, 1), new Range16.ptr(8120, 8123, 1), new Range16.ptr(8136, 8139, 1), new Range16.ptr(8152, 8155, 1), new Range16.ptr(8168, 8172, 1), new Range16.ptr(8184, 8187, 1), new Range16.ptr(8450, 8455, 5), new Range16.ptr(8459, 8461, 1), new Range16.ptr(8464, 8466, 1), new Range16.ptr(8469, 8473, 4), new Range16.ptr(8474, 8477, 1), new Range16.ptr(8484, 8490, 2), new Range16.ptr(8491, 8493, 1), new Range16.ptr(8496, 8499, 1), new Range16.ptr(8510, 8511, 1), new Range16.ptr(8517, 8579, 62), new Range16.ptr(11264, 11310, 1), new Range16.ptr(11360, 11362, 2), new Range16.ptr(11363, 11364, 1), new Range16.ptr(11367, 11373, 2), new Range16.ptr(11374, 11376, 1), new Range16.ptr(11378, 11381, 3), new Range16.ptr(11390, 11392, 1), new Range16.ptr(11394, 11490, 2), new Range16.ptr(11499, 11501, 2), new Range16.ptr(11506, 42560, 31054), new Range16.ptr(42562, 42604, 2), new Range16.ptr(42624, 42650, 2), new Range16.ptr(42786, 42798, 2), new Range16.ptr(42802, 42862, 2), new Range16.ptr(42873, 42877, 2), new Range16.ptr(42878, 42886, 2), new Range16.ptr(42891, 42893, 2), new Range16.ptr(42896, 42898, 2), new Range16.ptr(42902, 42922, 2), new Range16.ptr(42923, 42925, 1), new Range16.ptr(42928, 42929, 1), new Range16.ptr(65313, 65338, 1)]), new sliceType$1([new Range32.ptr(66560, 66599, 1), new Range32.ptr(71840, 71871, 1), new Range32.ptr(119808, 119833, 1), new Range32.ptr(119860, 119885, 1), new Range32.ptr(119912, 119937, 1), new Range32.ptr(119964, 119966, 2), new Range32.ptr(119967, 119973, 3), new Range32.ptr(119974, 119977, 3), new Range32.ptr(119978, 119980, 1), new Range32.ptr(119982, 119989, 1), new Range32.ptr(120016, 120041, 1), new Range32.ptr(120068, 120069, 1), new Range32.ptr(120071, 120074, 1), new Range32.ptr(120077, 120084, 1), new Range32.ptr(120086, 120092, 1), new Range32.ptr(120120, 120121, 1), new Range32.ptr(120123, 120126, 1), new Range32.ptr(120128, 120132, 1), new Range32.ptr(120134, 120138, 4), new Range32.ptr(120139, 120144, 1), new Range32.ptr(120172, 120197, 1), new Range32.ptr(120224, 120249, 1), new Range32.ptr(120276, 120301, 1), new Range32.ptr(120328, 120353, 1), new Range32.ptr(120380, 120405, 1), new Range32.ptr(120432, 120457, 1), new Range32.ptr(120488, 120512, 1), new Range32.ptr(120546, 120570, 1), new Range32.ptr(120604, 120628, 1), new Range32.ptr(120662, 120686, 1), new Range32.ptr(120720, 120744, 1), new Range32.ptr(120778, 120778, 1)]), 3);
		_M = new RangeTable.ptr(new sliceType([new Range16.ptr(768, 879, 1), new Range16.ptr(1155, 1161, 1), new Range16.ptr(1425, 1469, 1), new Range16.ptr(1471, 1473, 2), new Range16.ptr(1474, 1476, 2), new Range16.ptr(1477, 1479, 2), new Range16.ptr(1552, 1562, 1), new Range16.ptr(1611, 1631, 1), new Range16.ptr(1648, 1750, 102), new Range16.ptr(1751, 1756, 1), new Range16.ptr(1759, 1764, 1), new Range16.ptr(1767, 1768, 1), new Range16.ptr(1770, 1773, 1), new Range16.ptr(1809, 1840, 31), new Range16.ptr(1841, 1866, 1), new Range16.ptr(1958, 1968, 1), new Range16.ptr(2027, 2035, 1), new Range16.ptr(2070, 2073, 1), new Range16.ptr(2075, 2083, 1), new Range16.ptr(2085, 2087, 1), new Range16.ptr(2089, 2093, 1), new Range16.ptr(2137, 2139, 1), new Range16.ptr(2276, 2307, 1), new Range16.ptr(2362, 2364, 1), new Range16.ptr(2366, 2383, 1), new Range16.ptr(2385, 2391, 1), new Range16.ptr(2402, 2403, 1), new Range16.ptr(2433, 2435, 1), new Range16.ptr(2492, 2494, 2), new Range16.ptr(2495, 2500, 1), new Range16.ptr(2503, 2504, 1), new Range16.ptr(2507, 2509, 1), new Range16.ptr(2519, 2530, 11), new Range16.ptr(2531, 2561, 30), new Range16.ptr(2562, 2563, 1), new Range16.ptr(2620, 2622, 2), new Range16.ptr(2623, 2626, 1), new Range16.ptr(2631, 2632, 1), new Range16.ptr(2635, 2637, 1), new Range16.ptr(2641, 2672, 31), new Range16.ptr(2673, 2677, 4), new Range16.ptr(2689, 2691, 1), new Range16.ptr(2748, 2750, 2), new Range16.ptr(2751, 2757, 1), new Range16.ptr(2759, 2761, 1), new Range16.ptr(2763, 2765, 1), new Range16.ptr(2786, 2787, 1), new Range16.ptr(2817, 2819, 1), new Range16.ptr(2876, 2878, 2), new Range16.ptr(2879, 2884, 1), new Range16.ptr(2887, 2888, 1), new Range16.ptr(2891, 2893, 1), new Range16.ptr(2902, 2903, 1), new Range16.ptr(2914, 2915, 1), new Range16.ptr(2946, 3006, 60), new Range16.ptr(3007, 3010, 1), new Range16.ptr(3014, 3016, 1), new Range16.ptr(3018, 3021, 1), new Range16.ptr(3031, 3072, 41), new Range16.ptr(3073, 3075, 1), new Range16.ptr(3134, 3140, 1), new Range16.ptr(3142, 3144, 1), new Range16.ptr(3146, 3149, 1), new Range16.ptr(3157, 3158, 1), new Range16.ptr(3170, 3171, 1), new Range16.ptr(3201, 3203, 1), new Range16.ptr(3260, 3262, 2), new Range16.ptr(3263, 3268, 1), new Range16.ptr(3270, 3272, 1), new Range16.ptr(3274, 3277, 1), new Range16.ptr(3285, 3286, 1), new Range16.ptr(3298, 3299, 1), new Range16.ptr(3329, 3331, 1), new Range16.ptr(3390, 3396, 1), new Range16.ptr(3398, 3400, 1), new Range16.ptr(3402, 3405, 1), new Range16.ptr(3415, 3426, 11), new Range16.ptr(3427, 3458, 31), new Range16.ptr(3459, 3530, 71), new Range16.ptr(3535, 3540, 1), new Range16.ptr(3542, 3544, 2), new Range16.ptr(3545, 3551, 1), new Range16.ptr(3570, 3571, 1), new Range16.ptr(3633, 3636, 3), new Range16.ptr(3637, 3642, 1), new Range16.ptr(3655, 3662, 1), new Range16.ptr(3761, 3764, 3), new Range16.ptr(3765, 3769, 1), new Range16.ptr(3771, 3772, 1), new Range16.ptr(3784, 3789, 1), new Range16.ptr(3864, 3865, 1), new Range16.ptr(3893, 3897, 2), new Range16.ptr(3902, 3903, 1), new Range16.ptr(3953, 3972, 1), new Range16.ptr(3974, 3975, 1), new Range16.ptr(3981, 3991, 1), new Range16.ptr(3993, 4028, 1), new Range16.ptr(4038, 4139, 101), new Range16.ptr(4140, 4158, 1), new Range16.ptr(4182, 4185, 1), new Range16.ptr(4190, 4192, 1), new Range16.ptr(4194, 4196, 1), new Range16.ptr(4199, 4205, 1), new Range16.ptr(4209, 4212, 1), new Range16.ptr(4226, 4237, 1), new Range16.ptr(4239, 4250, 11), new Range16.ptr(4251, 4253, 1), new Range16.ptr(4957, 4959, 1), new Range16.ptr(5906, 5908, 1), new Range16.ptr(5938, 5940, 1), new Range16.ptr(5970, 5971, 1), new Range16.ptr(6002, 6003, 1), new Range16.ptr(6068, 6099, 1), new Range16.ptr(6109, 6155, 46), new Range16.ptr(6156, 6157, 1), new Range16.ptr(6313, 6432, 119), new Range16.ptr(6433, 6443, 1), new Range16.ptr(6448, 6459, 1), new Range16.ptr(6576, 6592, 1), new Range16.ptr(6600, 6601, 1), new Range16.ptr(6679, 6683, 1), new Range16.ptr(6741, 6750, 1), new Range16.ptr(6752, 6780, 1), new Range16.ptr(6783, 6832, 49), new Range16.ptr(6833, 6846, 1), new Range16.ptr(6912, 6916, 1), new Range16.ptr(6964, 6980, 1), new Range16.ptr(7019, 7027, 1), new Range16.ptr(7040, 7042, 1), new Range16.ptr(7073, 7085, 1), new Range16.ptr(7142, 7155, 1), new Range16.ptr(7204, 7223, 1), new Range16.ptr(7376, 7378, 1), new Range16.ptr(7380, 7400, 1), new Range16.ptr(7405, 7410, 5), new Range16.ptr(7411, 7412, 1), new Range16.ptr(7416, 7417, 1), new Range16.ptr(7616, 7669, 1), new Range16.ptr(7676, 7679, 1), new Range16.ptr(8400, 8432, 1), new Range16.ptr(11503, 11505, 1), new Range16.ptr(11647, 11744, 97), new Range16.ptr(11745, 11775, 1), new Range16.ptr(12330, 12335, 1), new Range16.ptr(12441, 12442, 1), new Range16.ptr(42607, 42610, 1), new Range16.ptr(42612, 42621, 1), new Range16.ptr(42655, 42736, 81), new Range16.ptr(42737, 43010, 273), new Range16.ptr(43014, 43019, 5), new Range16.ptr(43043, 43047, 1), new Range16.ptr(43136, 43137, 1), new Range16.ptr(43188, 43204, 1), new Range16.ptr(43232, 43249, 1), new Range16.ptr(43302, 43309, 1), new Range16.ptr(43335, 43347, 1), new Range16.ptr(43392, 43395, 1), new Range16.ptr(43443, 43456, 1), new Range16.ptr(43493, 43561, 68), new Range16.ptr(43562, 43574, 1), new Range16.ptr(43587, 43596, 9), new Range16.ptr(43597, 43643, 46), new Range16.ptr(43644, 43645, 1), new Range16.ptr(43696, 43698, 2), new Range16.ptr(43699, 43700, 1), new Range16.ptr(43703, 43704, 1), new Range16.ptr(43710, 43711, 1), new Range16.ptr(43713, 43755, 42), new Range16.ptr(43756, 43759, 1), new Range16.ptr(43765, 43766, 1), new Range16.ptr(44003, 44010, 1), new Range16.ptr(44012, 44013, 1), new Range16.ptr(64286, 65024, 738), new Range16.ptr(65025, 65039, 1), new Range16.ptr(65056, 65069, 1)]), new sliceType$1([new Range32.ptr(66045, 66272, 227), new Range32.ptr(66422, 66426, 1), new Range32.ptr(68097, 68099, 1), new Range32.ptr(68101, 68102, 1), new Range32.ptr(68108, 68111, 1), new Range32.ptr(68152, 68154, 1), new Range32.ptr(68159, 68325, 166), new Range32.ptr(68326, 69632, 1306), new Range32.ptr(69633, 69634, 1), new Range32.ptr(69688, 69702, 1), new Range32.ptr(69759, 69762, 1), new Range32.ptr(69808, 69818, 1), new Range32.ptr(69888, 69890, 1), new Range32.ptr(69927, 69940, 1), new Range32.ptr(70003, 70016, 13), new Range32.ptr(70017, 70018, 1), new Range32.ptr(70067, 70080, 1), new Range32.ptr(70188, 70199, 1), new Range32.ptr(70367, 70378, 1), new Range32.ptr(70401, 70403, 1), new Range32.ptr(70460, 70462, 2), new Range32.ptr(70463, 70468, 1), new Range32.ptr(70471, 70472, 1), new Range32.ptr(70475, 70477, 1), new Range32.ptr(70487, 70498, 11), new Range32.ptr(70499, 70502, 3), new Range32.ptr(70503, 70508, 1), new Range32.ptr(70512, 70516, 1), new Range32.ptr(70832, 70851, 1), new Range32.ptr(71087, 71093, 1), new Range32.ptr(71096, 71104, 1), new Range32.ptr(71216, 71232, 1), new Range32.ptr(71339, 71351, 1), new Range32.ptr(92912, 92916, 1), new Range32.ptr(92976, 92982, 1), new Range32.ptr(94033, 94078, 1), new Range32.ptr(94095, 94098, 1), new Range32.ptr(113821, 113822, 1), new Range32.ptr(119141, 119145, 1), new Range32.ptr(119149, 119154, 1), new Range32.ptr(119163, 119170, 1), new Range32.ptr(119173, 119179, 1), new Range32.ptr(119210, 119213, 1), new Range32.ptr(119362, 119364, 1), new Range32.ptr(125136, 125142, 1), new Range32.ptr(917760, 917999, 1)]), 0);
		_Mc = new RangeTable.ptr(new sliceType([new Range16.ptr(2307, 2363, 56), new Range16.ptr(2366, 2368, 1), new Range16.ptr(2377, 2380, 1), new Range16.ptr(2382, 2383, 1), new Range16.ptr(2434, 2435, 1), new Range16.ptr(2494, 2496, 1), new Range16.ptr(2503, 2504, 1), new Range16.ptr(2507, 2508, 1), new Range16.ptr(2519, 2563, 44), new Range16.ptr(2622, 2624, 1), new Range16.ptr(2691, 2750, 59), new Range16.ptr(2751, 2752, 1), new Range16.ptr(2761, 2763, 2), new Range16.ptr(2764, 2818, 54), new Range16.ptr(2819, 2878, 59), new Range16.ptr(2880, 2887, 7), new Range16.ptr(2888, 2891, 3), new Range16.ptr(2892, 2903, 11), new Range16.ptr(3006, 3007, 1), new Range16.ptr(3009, 3010, 1), new Range16.ptr(3014, 3016, 1), new Range16.ptr(3018, 3020, 1), new Range16.ptr(3031, 3073, 42), new Range16.ptr(3074, 3075, 1), new Range16.ptr(3137, 3140, 1), new Range16.ptr(3202, 3203, 1), new Range16.ptr(3262, 3264, 2), new Range16.ptr(3265, 3268, 1), new Range16.ptr(3271, 3272, 1), new Range16.ptr(3274, 3275, 1), new Range16.ptr(3285, 3286, 1), new Range16.ptr(3330, 3331, 1), new Range16.ptr(3390, 3392, 1), new Range16.ptr(3398, 3400, 1), new Range16.ptr(3402, 3404, 1), new Range16.ptr(3415, 3458, 43), new Range16.ptr(3459, 3535, 76), new Range16.ptr(3536, 3537, 1), new Range16.ptr(3544, 3551, 1), new Range16.ptr(3570, 3571, 1), new Range16.ptr(3902, 3903, 1), new Range16.ptr(3967, 4139, 172), new Range16.ptr(4140, 4145, 5), new Range16.ptr(4152, 4155, 3), new Range16.ptr(4156, 4182, 26), new Range16.ptr(4183, 4194, 11), new Range16.ptr(4195, 4196, 1), new Range16.ptr(4199, 4205, 1), new Range16.ptr(4227, 4228, 1), new Range16.ptr(4231, 4236, 1), new Range16.ptr(4239, 4250, 11), new Range16.ptr(4251, 4252, 1), new Range16.ptr(6070, 6078, 8), new Range16.ptr(6079, 6085, 1), new Range16.ptr(6087, 6088, 1), new Range16.ptr(6435, 6438, 1), new Range16.ptr(6441, 6443, 1), new Range16.ptr(6448, 6449, 1), new Range16.ptr(6451, 6456, 1), new Range16.ptr(6576, 6592, 1), new Range16.ptr(6600, 6601, 1), new Range16.ptr(6681, 6682, 1), new Range16.ptr(6741, 6743, 2), new Range16.ptr(6753, 6755, 2), new Range16.ptr(6756, 6765, 9), new Range16.ptr(6766, 6770, 1), new Range16.ptr(6916, 6965, 49), new Range16.ptr(6971, 6973, 2), new Range16.ptr(6974, 6977, 1), new Range16.ptr(6979, 6980, 1), new Range16.ptr(7042, 7073, 31), new Range16.ptr(7078, 7079, 1), new Range16.ptr(7082, 7143, 61), new Range16.ptr(7146, 7148, 1), new Range16.ptr(7150, 7154, 4), new Range16.ptr(7155, 7204, 49), new Range16.ptr(7205, 7211, 1), new Range16.ptr(7220, 7221, 1), new Range16.ptr(7393, 7410, 17), new Range16.ptr(7411, 12334, 4923), new Range16.ptr(12335, 43043, 30708), new Range16.ptr(43044, 43047, 3), new Range16.ptr(43136, 43137, 1), new Range16.ptr(43188, 43203, 1), new Range16.ptr(43346, 43347, 1), new Range16.ptr(43395, 43444, 49), new Range16.ptr(43445, 43450, 5), new Range16.ptr(43451, 43453, 2), new Range16.ptr(43454, 43456, 1), new Range16.ptr(43567, 43568, 1), new Range16.ptr(43571, 43572, 1), new Range16.ptr(43597, 43643, 46), new Range16.ptr(43645, 43755, 110), new Range16.ptr(43758, 43759, 1), new Range16.ptr(43765, 44003, 238), new Range16.ptr(44004, 44006, 2), new Range16.ptr(44007, 44009, 2), new Range16.ptr(44010, 44012, 2)]), new sliceType$1([new Range32.ptr(69632, 69634, 2), new Range32.ptr(69762, 69808, 46), new Range32.ptr(69809, 69810, 1), new Range32.ptr(69815, 69816, 1), new Range32.ptr(69932, 70018, 86), new Range32.ptr(70067, 70069, 1), new Range32.ptr(70079, 70080, 1), new Range32.ptr(70188, 70190, 1), new Range32.ptr(70194, 70195, 1), new Range32.ptr(70197, 70368, 171), new Range32.ptr(70369, 70370, 1), new Range32.ptr(70402, 70403, 1), new Range32.ptr(70462, 70463, 1), new Range32.ptr(70465, 70468, 1), new Range32.ptr(70471, 70472, 1), new Range32.ptr(70475, 70477, 1), new Range32.ptr(70487, 70498, 11), new Range32.ptr(70499, 70832, 333), new Range32.ptr(70833, 70834, 1), new Range32.ptr(70841, 70843, 2), new Range32.ptr(70844, 70846, 1), new Range32.ptr(70849, 71087, 238), new Range32.ptr(71088, 71089, 1), new Range32.ptr(71096, 71099, 1), new Range32.ptr(71102, 71216, 114), new Range32.ptr(71217, 71218, 1), new Range32.ptr(71227, 71228, 1), new Range32.ptr(71230, 71340, 110), new Range32.ptr(71342, 71343, 1), new Range32.ptr(71350, 94033, 22683), new Range32.ptr(94034, 94078, 1), new Range32.ptr(119141, 119142, 1), new Range32.ptr(119149, 119154, 1)]), 0);
		_Me = new RangeTable.ptr(new sliceType([new Range16.ptr(1160, 1161, 1), new Range16.ptr(6846, 8413, 1567), new Range16.ptr(8414, 8416, 1), new Range16.ptr(8418, 8420, 1), new Range16.ptr(42608, 42610, 1)]), sliceType$1.nil, 0);
		_Mn = new RangeTable.ptr(new sliceType([new Range16.ptr(768, 879, 1), new Range16.ptr(1155, 1159, 1), new Range16.ptr(1425, 1469, 1), new Range16.ptr(1471, 1473, 2), new Range16.ptr(1474, 1476, 2), new Range16.ptr(1477, 1479, 2), new Range16.ptr(1552, 1562, 1), new Range16.ptr(1611, 1631, 1), new Range16.ptr(1648, 1750, 102), new Range16.ptr(1751, 1756, 1), new Range16.ptr(1759, 1764, 1), new Range16.ptr(1767, 1768, 1), new Range16.ptr(1770, 1773, 1), new Range16.ptr(1809, 1840, 31), new Range16.ptr(1841, 1866, 1), new Range16.ptr(1958, 1968, 1), new Range16.ptr(2027, 2035, 1), new Range16.ptr(2070, 2073, 1), new Range16.ptr(2075, 2083, 1), new Range16.ptr(2085, 2087, 1), new Range16.ptr(2089, 2093, 1), new Range16.ptr(2137, 2139, 1), new Range16.ptr(2276, 2306, 1), new Range16.ptr(2362, 2364, 2), new Range16.ptr(2369, 2376, 1), new Range16.ptr(2381, 2385, 4), new Range16.ptr(2386, 2391, 1), new Range16.ptr(2402, 2403, 1), new Range16.ptr(2433, 2492, 59), new Range16.ptr(2497, 2500, 1), new Range16.ptr(2509, 2530, 21), new Range16.ptr(2531, 2561, 30), new Range16.ptr(2562, 2620, 58), new Range16.ptr(2625, 2626, 1), new Range16.ptr(2631, 2632, 1), new Range16.ptr(2635, 2637, 1), new Range16.ptr(2641, 2672, 31), new Range16.ptr(2673, 2677, 4), new Range16.ptr(2689, 2690, 1), new Range16.ptr(2748, 2753, 5), new Range16.ptr(2754, 2757, 1), new Range16.ptr(2759, 2760, 1), new Range16.ptr(2765, 2786, 21), new Range16.ptr(2787, 2817, 30), new Range16.ptr(2876, 2879, 3), new Range16.ptr(2881, 2884, 1), new Range16.ptr(2893, 2902, 9), new Range16.ptr(2914, 2915, 1), new Range16.ptr(2946, 3008, 62), new Range16.ptr(3021, 3072, 51), new Range16.ptr(3134, 3136, 1), new Range16.ptr(3142, 3144, 1), new Range16.ptr(3146, 3149, 1), new Range16.ptr(3157, 3158, 1), new Range16.ptr(3170, 3171, 1), new Range16.ptr(3201, 3260, 59), new Range16.ptr(3263, 3270, 7), new Range16.ptr(3276, 3277, 1), new Range16.ptr(3298, 3299, 1), new Range16.ptr(3329, 3393, 64), new Range16.ptr(3394, 3396, 1), new Range16.ptr(3405, 3426, 21), new Range16.ptr(3427, 3530, 103), new Range16.ptr(3538, 3540, 1), new Range16.ptr(3542, 3633, 91), new Range16.ptr(3636, 3642, 1), new Range16.ptr(3655, 3662, 1), new Range16.ptr(3761, 3764, 3), new Range16.ptr(3765, 3769, 1), new Range16.ptr(3771, 3772, 1), new Range16.ptr(3784, 3789, 1), new Range16.ptr(3864, 3865, 1), new Range16.ptr(3893, 3897, 2), new Range16.ptr(3953, 3966, 1), new Range16.ptr(3968, 3972, 1), new Range16.ptr(3974, 3975, 1), new Range16.ptr(3981, 3991, 1), new Range16.ptr(3993, 4028, 1), new Range16.ptr(4038, 4141, 103), new Range16.ptr(4142, 4144, 1), new Range16.ptr(4146, 4151, 1), new Range16.ptr(4153, 4154, 1), new Range16.ptr(4157, 4158, 1), new Range16.ptr(4184, 4185, 1), new Range16.ptr(4190, 4192, 1), new Range16.ptr(4209, 4212, 1), new Range16.ptr(4226, 4229, 3), new Range16.ptr(4230, 4237, 7), new Range16.ptr(4253, 4957, 704), new Range16.ptr(4958, 4959, 1), new Range16.ptr(5906, 5908, 1), new Range16.ptr(5938, 5940, 1), new Range16.ptr(5970, 5971, 1), new Range16.ptr(6002, 6003, 1), new Range16.ptr(6068, 6069, 1), new Range16.ptr(6071, 6077, 1), new Range16.ptr(6086, 6089, 3), new Range16.ptr(6090, 6099, 1), new Range16.ptr(6109, 6155, 46), new Range16.ptr(6156, 6157, 1), new Range16.ptr(6313, 6432, 119), new Range16.ptr(6433, 6434, 1), new Range16.ptr(6439, 6440, 1), new Range16.ptr(6450, 6457, 7), new Range16.ptr(6458, 6459, 1), new Range16.ptr(6679, 6680, 1), new Range16.ptr(6683, 6742, 59), new Range16.ptr(6744, 6750, 1), new Range16.ptr(6752, 6754, 2), new Range16.ptr(6757, 6764, 1), new Range16.ptr(6771, 6780, 1), new Range16.ptr(6783, 6832, 49), new Range16.ptr(6833, 6845, 1), new Range16.ptr(6912, 6915, 1), new Range16.ptr(6964, 6966, 2), new Range16.ptr(6967, 6970, 1), new Range16.ptr(6972, 6978, 6), new Range16.ptr(7019, 7027, 1), new Range16.ptr(7040, 7041, 1), new Range16.ptr(7074, 7077, 1), new Range16.ptr(7080, 7081, 1), new Range16.ptr(7083, 7085, 1), new Range16.ptr(7142, 7144, 2), new Range16.ptr(7145, 7149, 4), new Range16.ptr(7151, 7153, 1), new Range16.ptr(7212, 7219, 1), new Range16.ptr(7222, 7223, 1), new Range16.ptr(7376, 7378, 1), new Range16.ptr(7380, 7392, 1), new Range16.ptr(7394, 7400, 1), new Range16.ptr(7405, 7412, 7), new Range16.ptr(7416, 7417, 1), new Range16.ptr(7616, 7669, 1), new Range16.ptr(7676, 7679, 1), new Range16.ptr(8400, 8412, 1), new Range16.ptr(8417, 8421, 4), new Range16.ptr(8422, 8432, 1), new Range16.ptr(11503, 11505, 1), new Range16.ptr(11647, 11744, 97), new Range16.ptr(11745, 11775, 1), new Range16.ptr(12330, 12333, 1), new Range16.ptr(12441, 12442, 1), new Range16.ptr(42607, 42612, 5), new Range16.ptr(42613, 42621, 1), new Range16.ptr(42655, 42736, 81), new Range16.ptr(42737, 43010, 273), new Range16.ptr(43014, 43019, 5), new Range16.ptr(43045, 43046, 1), new Range16.ptr(43204, 43232, 28), new Range16.ptr(43233, 43249, 1), new Range16.ptr(43302, 43309, 1), new Range16.ptr(43335, 43345, 1), new Range16.ptr(43392, 43394, 1), new Range16.ptr(43443, 43446, 3), new Range16.ptr(43447, 43449, 1), new Range16.ptr(43452, 43493, 41), new Range16.ptr(43561, 43566, 1), new Range16.ptr(43569, 43570, 1), new Range16.ptr(43573, 43574, 1), new Range16.ptr(43587, 43596, 9), new Range16.ptr(43644, 43696, 52), new Range16.ptr(43698, 43700, 1), new Range16.ptr(43703, 43704, 1), new Range16.ptr(43710, 43711, 1), new Range16.ptr(43713, 43756, 43), new Range16.ptr(43757, 43766, 9), new Range16.ptr(44005, 44008, 3), new Range16.ptr(44013, 64286, 20273), new Range16.ptr(65024, 65039, 1), new Range16.ptr(65056, 65069, 1)]), new sliceType$1([new Range32.ptr(66045, 66272, 227), new Range32.ptr(66422, 66426, 1), new Range32.ptr(68097, 68099, 1), new Range32.ptr(68101, 68102, 1), new Range32.ptr(68108, 68111, 1), new Range32.ptr(68152, 68154, 1), new Range32.ptr(68159, 68325, 166), new Range32.ptr(68326, 69633, 1307), new Range32.ptr(69688, 69702, 1), new Range32.ptr(69759, 69761, 1), new Range32.ptr(69811, 69814, 1), new Range32.ptr(69817, 69818, 1), new Range32.ptr(69888, 69890, 1), new Range32.ptr(69927, 69931, 1), new Range32.ptr(69933, 69940, 1), new Range32.ptr(70003, 70016, 13), new Range32.ptr(70017, 70070, 53), new Range32.ptr(70071, 70078, 1), new Range32.ptr(70191, 70193, 1), new Range32.ptr(70196, 70198, 2), new Range32.ptr(70199, 70367, 168), new Range32.ptr(70371, 70378, 1), new Range32.ptr(70401, 70460, 59), new Range32.ptr(70464, 70502, 38), new Range32.ptr(70503, 70508, 1), new Range32.ptr(70512, 70516, 1), new Range32.ptr(70835, 70840, 1), new Range32.ptr(70842, 70847, 5), new Range32.ptr(70848, 70850, 2), new Range32.ptr(70851, 71090, 239), new Range32.ptr(71091, 71093, 1), new Range32.ptr(71100, 71101, 1), new Range32.ptr(71103, 71104, 1), new Range32.ptr(71219, 71226, 1), new Range32.ptr(71229, 71231, 2), new Range32.ptr(71232, 71339, 107), new Range32.ptr(71341, 71344, 3), new Range32.ptr(71345, 71349, 1), new Range32.ptr(71351, 92912, 21561), new Range32.ptr(92913, 92916, 1), new Range32.ptr(92976, 92982, 1), new Range32.ptr(94095, 94098, 1), new Range32.ptr(113821, 113822, 1), new Range32.ptr(119143, 119145, 1), new Range32.ptr(119163, 119170, 1), new Range32.ptr(119173, 119179, 1), new Range32.ptr(119210, 119213, 1), new Range32.ptr(119362, 119364, 1), new Range32.ptr(125136, 125142, 1), new Range32.ptr(917760, 917999, 1)]), 0);
		_N = new RangeTable.ptr(new sliceType([new Range16.ptr(48, 57, 1), new Range16.ptr(178, 179, 1), new Range16.ptr(185, 188, 3), new Range16.ptr(189, 190, 1), new Range16.ptr(1632, 1641, 1), new Range16.ptr(1776, 1785, 1), new Range16.ptr(1984, 1993, 1), new Range16.ptr(2406, 2415, 1), new Range16.ptr(2534, 2543, 1), new Range16.ptr(2548, 2553, 1), new Range16.ptr(2662, 2671, 1), new Range16.ptr(2790, 2799, 1), new Range16.ptr(2918, 2927, 1), new Range16.ptr(2930, 2935, 1), new Range16.ptr(3046, 3058, 1), new Range16.ptr(3174, 3183, 1), new Range16.ptr(3192, 3198, 1), new Range16.ptr(3302, 3311, 1), new Range16.ptr(3430, 3445, 1), new Range16.ptr(3558, 3567, 1), new Range16.ptr(3664, 3673, 1), new Range16.ptr(3792, 3801, 1), new Range16.ptr(3872, 3891, 1), new Range16.ptr(4160, 4169, 1), new Range16.ptr(4240, 4249, 1), new Range16.ptr(4969, 4988, 1), new Range16.ptr(5870, 5872, 1), new Range16.ptr(6112, 6121, 1), new Range16.ptr(6128, 6137, 1), new Range16.ptr(6160, 6169, 1), new Range16.ptr(6470, 6479, 1), new Range16.ptr(6608, 6618, 1), new Range16.ptr(6784, 6793, 1), new Range16.ptr(6800, 6809, 1), new Range16.ptr(6992, 7001, 1), new Range16.ptr(7088, 7097, 1), new Range16.ptr(7232, 7241, 1), new Range16.ptr(7248, 7257, 1), new Range16.ptr(8304, 8308, 4), new Range16.ptr(8309, 8313, 1), new Range16.ptr(8320, 8329, 1), new Range16.ptr(8528, 8578, 1), new Range16.ptr(8581, 8585, 1), new Range16.ptr(9312, 9371, 1), new Range16.ptr(9450, 9471, 1), new Range16.ptr(10102, 10131, 1), new Range16.ptr(11517, 12295, 778), new Range16.ptr(12321, 12329, 1), new Range16.ptr(12344, 12346, 1), new Range16.ptr(12690, 12693, 1), new Range16.ptr(12832, 12841, 1), new Range16.ptr(12872, 12879, 1), new Range16.ptr(12881, 12895, 1), new Range16.ptr(12928, 12937, 1), new Range16.ptr(12977, 12991, 1), new Range16.ptr(42528, 42537, 1), new Range16.ptr(42726, 42735, 1), new Range16.ptr(43056, 43061, 1), new Range16.ptr(43216, 43225, 1), new Range16.ptr(43264, 43273, 1), new Range16.ptr(43472, 43481, 1), new Range16.ptr(43504, 43513, 1), new Range16.ptr(43600, 43609, 1), new Range16.ptr(44016, 44025, 1), new Range16.ptr(65296, 65305, 1)]), new sliceType$1([new Range32.ptr(65799, 65843, 1), new Range32.ptr(65856, 65912, 1), new Range32.ptr(65930, 65931, 1), new Range32.ptr(66273, 66299, 1), new Range32.ptr(66336, 66339, 1), new Range32.ptr(66369, 66378, 9), new Range32.ptr(66513, 66517, 1), new Range32.ptr(66720, 66729, 1), new Range32.ptr(67672, 67679, 1), new Range32.ptr(67705, 67711, 1), new Range32.ptr(67751, 67759, 1), new Range32.ptr(67862, 67867, 1), new Range32.ptr(68160, 68167, 1), new Range32.ptr(68221, 68222, 1), new Range32.ptr(68253, 68255, 1), new Range32.ptr(68331, 68335, 1), new Range32.ptr(68440, 68447, 1), new Range32.ptr(68472, 68479, 1), new Range32.ptr(68521, 68527, 1), new Range32.ptr(69216, 69246, 1), new Range32.ptr(69714, 69743, 1), new Range32.ptr(69872, 69881, 1), new Range32.ptr(69942, 69951, 1), new Range32.ptr(70096, 70105, 1), new Range32.ptr(70113, 70132, 1), new Range32.ptr(70384, 70393, 1), new Range32.ptr(70864, 70873, 1), new Range32.ptr(71248, 71257, 1), new Range32.ptr(71360, 71369, 1), new Range32.ptr(71904, 71922, 1), new Range32.ptr(74752, 74862, 1), new Range32.ptr(92768, 92777, 1), new Range32.ptr(93008, 93017, 1), new Range32.ptr(93019, 93025, 1), new Range32.ptr(119648, 119665, 1), new Range32.ptr(120782, 120831, 1), new Range32.ptr(125127, 125135, 1), new Range32.ptr(127232, 127244, 1)]), 4);
		_Nd = new RangeTable.ptr(new sliceType([new Range16.ptr(48, 57, 1), new Range16.ptr(1632, 1641, 1), new Range16.ptr(1776, 1785, 1), new Range16.ptr(1984, 1993, 1), new Range16.ptr(2406, 2415, 1), new Range16.ptr(2534, 2543, 1), new Range16.ptr(2662, 2671, 1), new Range16.ptr(2790, 2799, 1), new Range16.ptr(2918, 2927, 1), new Range16.ptr(3046, 3055, 1), new Range16.ptr(3174, 3183, 1), new Range16.ptr(3302, 3311, 1), new Range16.ptr(3430, 3439, 1), new Range16.ptr(3558, 3567, 1), new Range16.ptr(3664, 3673, 1), new Range16.ptr(3792, 3801, 1), new Range16.ptr(3872, 3881, 1), new Range16.ptr(4160, 4169, 1), new Range16.ptr(4240, 4249, 1), new Range16.ptr(6112, 6121, 1), new Range16.ptr(6160, 6169, 1), new Range16.ptr(6470, 6479, 1), new Range16.ptr(6608, 6617, 1), new Range16.ptr(6784, 6793, 1), new Range16.ptr(6800, 6809, 1), new Range16.ptr(6992, 7001, 1), new Range16.ptr(7088, 7097, 1), new Range16.ptr(7232, 7241, 1), new Range16.ptr(7248, 7257, 1), new Range16.ptr(42528, 42537, 1), new Range16.ptr(43216, 43225, 1), new Range16.ptr(43264, 43273, 1), new Range16.ptr(43472, 43481, 1), new Range16.ptr(43504, 43513, 1), new Range16.ptr(43600, 43609, 1), new Range16.ptr(44016, 44025, 1), new Range16.ptr(65296, 65305, 1)]), new sliceType$1([new Range32.ptr(66720, 66729, 1), new Range32.ptr(69734, 69743, 1), new Range32.ptr(69872, 69881, 1), new Range32.ptr(69942, 69951, 1), new Range32.ptr(70096, 70105, 1), new Range32.ptr(70384, 70393, 1), new Range32.ptr(70864, 70873, 1), new Range32.ptr(71248, 71257, 1), new Range32.ptr(71360, 71369, 1), new Range32.ptr(71904, 71913, 1), new Range32.ptr(92768, 92777, 1), new Range32.ptr(93008, 93017, 1), new Range32.ptr(120782, 120831, 1)]), 1);
		_Nl = new RangeTable.ptr(new sliceType([new Range16.ptr(5870, 5872, 1), new Range16.ptr(8544, 8578, 1), new Range16.ptr(8581, 8584, 1), new Range16.ptr(12295, 12321, 26), new Range16.ptr(12322, 12329, 1), new Range16.ptr(12344, 12346, 1), new Range16.ptr(42726, 42735, 1)]), new sliceType$1([new Range32.ptr(65856, 65908, 1), new Range32.ptr(66369, 66378, 9), new Range32.ptr(66513, 66517, 1), new Range32.ptr(74752, 74862, 1)]), 0);
		_No = new RangeTable.ptr(new sliceType([new Range16.ptr(178, 179, 1), new Range16.ptr(185, 188, 3), new Range16.ptr(189, 190, 1), new Range16.ptr(2548, 2553, 1), new Range16.ptr(2930, 2935, 1), new Range16.ptr(3056, 3058, 1), new Range16.ptr(3192, 3198, 1), new Range16.ptr(3440, 3445, 1), new Range16.ptr(3882, 3891, 1), new Range16.ptr(4969, 4988, 1), new Range16.ptr(6128, 6137, 1), new Range16.ptr(6618, 8304, 1686), new Range16.ptr(8308, 8313, 1), new Range16.ptr(8320, 8329, 1), new Range16.ptr(8528, 8543, 1), new Range16.ptr(8585, 9312, 727), new Range16.ptr(9313, 9371, 1), new Range16.ptr(9450, 9471, 1), new Range16.ptr(10102, 10131, 1), new Range16.ptr(11517, 12690, 1173), new Range16.ptr(12691, 12693, 1), new Range16.ptr(12832, 12841, 1), new Range16.ptr(12872, 12879, 1), new Range16.ptr(12881, 12895, 1), new Range16.ptr(12928, 12937, 1), new Range16.ptr(12977, 12991, 1), new Range16.ptr(43056, 43061, 1)]), new sliceType$1([new Range32.ptr(65799, 65843, 1), new Range32.ptr(65909, 65912, 1), new Range32.ptr(65930, 65931, 1), new Range32.ptr(66273, 66299, 1), new Range32.ptr(66336, 66339, 1), new Range32.ptr(67672, 67679, 1), new Range32.ptr(67705, 67711, 1), new Range32.ptr(67751, 67759, 1), new Range32.ptr(67862, 67867, 1), new Range32.ptr(68160, 68167, 1), new Range32.ptr(68221, 68222, 1), new Range32.ptr(68253, 68255, 1), new Range32.ptr(68331, 68335, 1), new Range32.ptr(68440, 68447, 1), new Range32.ptr(68472, 68479, 1), new Range32.ptr(68521, 68527, 1), new Range32.ptr(69216, 69246, 1), new Range32.ptr(69714, 69733, 1), new Range32.ptr(70113, 70132, 1), new Range32.ptr(71914, 71922, 1), new Range32.ptr(93019, 93025, 1), new Range32.ptr(119648, 119665, 1), new Range32.ptr(125127, 125135, 1), new Range32.ptr(127232, 127244, 1)]), 3);
		_P = new RangeTable.ptr(new sliceType([new Range16.ptr(33, 35, 1), new Range16.ptr(37, 42, 1), new Range16.ptr(44, 47, 1), new Range16.ptr(58, 59, 1), new Range16.ptr(63, 64, 1), new Range16.ptr(91, 93, 1), new Range16.ptr(95, 123, 28), new Range16.ptr(125, 161, 36), new Range16.ptr(167, 171, 4), new Range16.ptr(182, 183, 1), new Range16.ptr(187, 191, 4), new Range16.ptr(894, 903, 9), new Range16.ptr(1370, 1375, 1), new Range16.ptr(1417, 1418, 1), new Range16.ptr(1470, 1472, 2), new Range16.ptr(1475, 1478, 3), new Range16.ptr(1523, 1524, 1), new Range16.ptr(1545, 1546, 1), new Range16.ptr(1548, 1549, 1), new Range16.ptr(1563, 1566, 3), new Range16.ptr(1567, 1642, 75), new Range16.ptr(1643, 1645, 1), new Range16.ptr(1748, 1792, 44), new Range16.ptr(1793, 1805, 1), new Range16.ptr(2039, 2041, 1), new Range16.ptr(2096, 2110, 1), new Range16.ptr(2142, 2404, 262), new Range16.ptr(2405, 2416, 11), new Range16.ptr(2800, 3572, 772), new Range16.ptr(3663, 3674, 11), new Range16.ptr(3675, 3844, 169), new Range16.ptr(3845, 3858, 1), new Range16.ptr(3860, 3898, 38), new Range16.ptr(3899, 3901, 1), new Range16.ptr(3973, 4048, 75), new Range16.ptr(4049, 4052, 1), new Range16.ptr(4057, 4058, 1), new Range16.ptr(4170, 4175, 1), new Range16.ptr(4347, 4960, 613), new Range16.ptr(4961, 4968, 1), new Range16.ptr(5120, 5741, 621), new Range16.ptr(5742, 5787, 45), new Range16.ptr(5788, 5867, 79), new Range16.ptr(5868, 5869, 1), new Range16.ptr(5941, 5942, 1), new Range16.ptr(6100, 6102, 1), new Range16.ptr(6104, 6106, 1), new Range16.ptr(6144, 6154, 1), new Range16.ptr(6468, 6469, 1), new Range16.ptr(6686, 6687, 1), new Range16.ptr(6816, 6822, 1), new Range16.ptr(6824, 6829, 1), new Range16.ptr(7002, 7008, 1), new Range16.ptr(7164, 7167, 1), new Range16.ptr(7227, 7231, 1), new Range16.ptr(7294, 7295, 1), new Range16.ptr(7360, 7367, 1), new Range16.ptr(7379, 8208, 829), new Range16.ptr(8209, 8231, 1), new Range16.ptr(8240, 8259, 1), new Range16.ptr(8261, 8273, 1), new Range16.ptr(8275, 8286, 1), new Range16.ptr(8317, 8318, 1), new Range16.ptr(8333, 8334, 1), new Range16.ptr(8968, 8971, 1), new Range16.ptr(9001, 9002, 1), new Range16.ptr(10088, 10101, 1), new Range16.ptr(10181, 10182, 1), new Range16.ptr(10214, 10223, 1), new Range16.ptr(10627, 10648, 1), new Range16.ptr(10712, 10715, 1), new Range16.ptr(10748, 10749, 1), new Range16.ptr(11513, 11516, 1), new Range16.ptr(11518, 11519, 1), new Range16.ptr(11632, 11776, 144), new Range16.ptr(11777, 11822, 1), new Range16.ptr(11824, 11842, 1), new Range16.ptr(12289, 12291, 1), new Range16.ptr(12296, 12305, 1), new Range16.ptr(12308, 12319, 1), new Range16.ptr(12336, 12349, 13), new Range16.ptr(12448, 12539, 91), new Range16.ptr(42238, 42239, 1), new Range16.ptr(42509, 42511, 1), new Range16.ptr(42611, 42622, 11), new Range16.ptr(42738, 42743, 1), new Range16.ptr(43124, 43127, 1), new Range16.ptr(43214, 43215, 1), new Range16.ptr(43256, 43258, 1), new Range16.ptr(43310, 43311, 1), new Range16.ptr(43359, 43457, 98), new Range16.ptr(43458, 43469, 1), new Range16.ptr(43486, 43487, 1), new Range16.ptr(43612, 43615, 1), new Range16.ptr(43742, 43743, 1), new Range16.ptr(43760, 43761, 1), new Range16.ptr(44011, 64830, 20819), new Range16.ptr(64831, 65040, 209), new Range16.ptr(65041, 65049, 1), new Range16.ptr(65072, 65106, 1), new Range16.ptr(65108, 65121, 1), new Range16.ptr(65123, 65128, 5), new Range16.ptr(65130, 65131, 1), new Range16.ptr(65281, 65283, 1), new Range16.ptr(65285, 65290, 1), new Range16.ptr(65292, 65295, 1), new Range16.ptr(65306, 65307, 1), new Range16.ptr(65311, 65312, 1), new Range16.ptr(65339, 65341, 1), new Range16.ptr(65343, 65371, 28), new Range16.ptr(65373, 65375, 2), new Range16.ptr(65376, 65381, 1)]), new sliceType$1([new Range32.ptr(65792, 65794, 1), new Range32.ptr(66463, 66512, 49), new Range32.ptr(66927, 67671, 744), new Range32.ptr(67871, 67903, 32), new Range32.ptr(68176, 68184, 1), new Range32.ptr(68223, 68336, 113), new Range32.ptr(68337, 68342, 1), new Range32.ptr(68409, 68415, 1), new Range32.ptr(68505, 68508, 1), new Range32.ptr(69703, 69709, 1), new Range32.ptr(69819, 69820, 1), new Range32.ptr(69822, 69825, 1), new Range32.ptr(69952, 69955, 1), new Range32.ptr(70004, 70005, 1), new Range32.ptr(70085, 70088, 1), new Range32.ptr(70093, 70200, 107), new Range32.ptr(70201, 70205, 1), new Range32.ptr(70854, 71105, 251), new Range32.ptr(71106, 71113, 1), new Range32.ptr(71233, 71235, 1), new Range32.ptr(74864, 74868, 1), new Range32.ptr(92782, 92783, 1), new Range32.ptr(92917, 92983, 66), new Range32.ptr(92984, 92987, 1), new Range32.ptr(92996, 113823, 20827)]), 11);
		_Pc = new RangeTable.ptr(new sliceType([new Range16.ptr(95, 8255, 8160), new Range16.ptr(8256, 8276, 20), new Range16.ptr(65075, 65076, 1), new Range16.ptr(65101, 65103, 1), new Range16.ptr(65343, 65343, 1)]), sliceType$1.nil, 0);
		_Pd = new RangeTable.ptr(new sliceType([new Range16.ptr(45, 1418, 1373), new Range16.ptr(1470, 5120, 3650), new Range16.ptr(6150, 8208, 2058), new Range16.ptr(8209, 8213, 1), new Range16.ptr(11799, 11802, 3), new Range16.ptr(11834, 11835, 1), new Range16.ptr(11840, 12316, 476), new Range16.ptr(12336, 12448, 112), new Range16.ptr(65073, 65074, 1), new Range16.ptr(65112, 65123, 11), new Range16.ptr(65293, 65293, 1)]), sliceType$1.nil, 0);
		_Pe = new RangeTable.ptr(new sliceType([new Range16.ptr(41, 93, 52), new Range16.ptr(125, 3899, 3774), new Range16.ptr(3901, 5788, 1887), new Range16.ptr(8262, 8318, 56), new Range16.ptr(8334, 8969, 635), new Range16.ptr(8971, 9002, 31), new Range16.ptr(10089, 10101, 2), new Range16.ptr(10182, 10215, 33), new Range16.ptr(10217, 10223, 2), new Range16.ptr(10628, 10648, 2), new Range16.ptr(10713, 10715, 2), new Range16.ptr(10749, 11811, 1062), new Range16.ptr(11813, 11817, 2), new Range16.ptr(12297, 12305, 2), new Range16.ptr(12309, 12315, 2), new Range16.ptr(12318, 12319, 1), new Range16.ptr(64830, 65048, 218), new Range16.ptr(65078, 65092, 2), new Range16.ptr(65096, 65114, 18), new Range16.ptr(65116, 65118, 2), new Range16.ptr(65289, 65341, 52), new Range16.ptr(65373, 65379, 3)]), sliceType$1.nil, 1);
		_Pf = new RangeTable.ptr(new sliceType([new Range16.ptr(187, 8217, 8030), new Range16.ptr(8221, 8250, 29), new Range16.ptr(11779, 11781, 2), new Range16.ptr(11786, 11789, 3), new Range16.ptr(11805, 11809, 4)]), sliceType$1.nil, 0);
		_Pi = new RangeTable.ptr(new sliceType([new Range16.ptr(171, 8216, 8045), new Range16.ptr(8219, 8220, 1), new Range16.ptr(8223, 8249, 26), new Range16.ptr(11778, 11780, 2), new Range16.ptr(11785, 11788, 3), new Range16.ptr(11804, 11808, 4)]), sliceType$1.nil, 0);
		_Po = new RangeTable.ptr(new sliceType([new Range16.ptr(33, 35, 1), new Range16.ptr(37, 39, 1), new Range16.ptr(42, 46, 2), new Range16.ptr(47, 58, 11), new Range16.ptr(59, 63, 4), new Range16.ptr(64, 92, 28), new Range16.ptr(161, 167, 6), new Range16.ptr(182, 183, 1), new Range16.ptr(191, 894, 703), new Range16.ptr(903, 1370, 467), new Range16.ptr(1371, 1375, 1), new Range16.ptr(1417, 1472, 55), new Range16.ptr(1475, 1478, 3), new Range16.ptr(1523, 1524, 1), new Range16.ptr(1545, 1546, 1), new Range16.ptr(1548, 1549, 1), new Range16.ptr(1563, 1566, 3), new Range16.ptr(1567, 1642, 75), new Range16.ptr(1643, 1645, 1), new Range16.ptr(1748, 1792, 44), new Range16.ptr(1793, 1805, 1), new Range16.ptr(2039, 2041, 1), new Range16.ptr(2096, 2110, 1), new Range16.ptr(2142, 2404, 262), new Range16.ptr(2405, 2416, 11), new Range16.ptr(2800, 3572, 772), new Range16.ptr(3663, 3674, 11), new Range16.ptr(3675, 3844, 169), new Range16.ptr(3845, 3858, 1), new Range16.ptr(3860, 3973, 113), new Range16.ptr(4048, 4052, 1), new Range16.ptr(4057, 4058, 1), new Range16.ptr(4170, 4175, 1), new Range16.ptr(4347, 4960, 613), new Range16.ptr(4961, 4968, 1), new Range16.ptr(5741, 5742, 1), new Range16.ptr(5867, 5869, 1), new Range16.ptr(5941, 5942, 1), new Range16.ptr(6100, 6102, 1), new Range16.ptr(6104, 6106, 1), new Range16.ptr(6144, 6149, 1), new Range16.ptr(6151, 6154, 1), new Range16.ptr(6468, 6469, 1), new Range16.ptr(6686, 6687, 1), new Range16.ptr(6816, 6822, 1), new Range16.ptr(6824, 6829, 1), new Range16.ptr(7002, 7008, 1), new Range16.ptr(7164, 7167, 1), new Range16.ptr(7227, 7231, 1), new Range16.ptr(7294, 7295, 1), new Range16.ptr(7360, 7367, 1), new Range16.ptr(7379, 8214, 835), new Range16.ptr(8215, 8224, 9), new Range16.ptr(8225, 8231, 1), new Range16.ptr(8240, 8248, 1), new Range16.ptr(8251, 8254, 1), new Range16.ptr(8257, 8259, 1), new Range16.ptr(8263, 8273, 1), new Range16.ptr(8275, 8277, 2), new Range16.ptr(8278, 8286, 1), new Range16.ptr(11513, 11516, 1), new Range16.ptr(11518, 11519, 1), new Range16.ptr(11632, 11776, 144), new Range16.ptr(11777, 11782, 5), new Range16.ptr(11783, 11784, 1), new Range16.ptr(11787, 11790, 3), new Range16.ptr(11791, 11798, 1), new Range16.ptr(11800, 11801, 1), new Range16.ptr(11803, 11806, 3), new Range16.ptr(11807, 11818, 11), new Range16.ptr(11819, 11822, 1), new Range16.ptr(11824, 11833, 1), new Range16.ptr(11836, 11839, 1), new Range16.ptr(11841, 12289, 448), new Range16.ptr(12290, 12291, 1), new Range16.ptr(12349, 12539, 190), new Range16.ptr(42238, 42239, 1), new Range16.ptr(42509, 42511, 1), new Range16.ptr(42611, 42622, 11), new Range16.ptr(42738, 42743, 1), new Range16.ptr(43124, 43127, 1), new Range16.ptr(43214, 43215, 1), new Range16.ptr(43256, 43258, 1), new Range16.ptr(43310, 43311, 1), new Range16.ptr(43359, 43457, 98), new Range16.ptr(43458, 43469, 1), new Range16.ptr(43486, 43487, 1), new Range16.ptr(43612, 43615, 1), new Range16.ptr(43742, 43743, 1), new Range16.ptr(43760, 43761, 1), new Range16.ptr(44011, 65040, 21029), new Range16.ptr(65041, 65046, 1), new Range16.ptr(65049, 65072, 23), new Range16.ptr(65093, 65094, 1), new Range16.ptr(65097, 65100, 1), new Range16.ptr(65104, 65106, 1), new Range16.ptr(65108, 65111, 1), new Range16.ptr(65119, 65121, 1), new Range16.ptr(65128, 65130, 2), new Range16.ptr(65131, 65281, 150), new Range16.ptr(65282, 65283, 1), new Range16.ptr(65285, 65287, 1), new Range16.ptr(65290, 65294, 2), new Range16.ptr(65295, 65306, 11), new Range16.ptr(65307, 65311, 4), new Range16.ptr(65312, 65340, 28), new Range16.ptr(65377, 65380, 3), new Range16.ptr(65381, 65381, 1)]), new sliceType$1([new Range32.ptr(65792, 65792, 1), new Range32.ptr(65793, 65794, 1), new Range32.ptr(66463, 66512, 49), new Range32.ptr(66927, 67671, 744), new Range32.ptr(67871, 67903, 32), new Range32.ptr(68176, 68184, 1), new Range32.ptr(68223, 68336, 113), new Range32.ptr(68337, 68342, 1), new Range32.ptr(68409, 68415, 1), new Range32.ptr(68505, 68508, 1), new Range32.ptr(69703, 69709, 1), new Range32.ptr(69819, 69820, 1), new Range32.ptr(69822, 69825, 1), new Range32.ptr(69952, 69955, 1), new Range32.ptr(70004, 70005, 1), new Range32.ptr(70085, 70088, 1), new Range32.ptr(70093, 70200, 107), new Range32.ptr(70201, 70205, 1), new Range32.ptr(70854, 71105, 251), new Range32.ptr(71106, 71113, 1), new Range32.ptr(71233, 71235, 1), new Range32.ptr(74864, 74868, 1), new Range32.ptr(92782, 92783, 1), new Range32.ptr(92917, 92983, 66), new Range32.ptr(92984, 92987, 1), new Range32.ptr(92996, 113823, 20827)]), 8);
		_Ps = new RangeTable.ptr(new sliceType([new Range16.ptr(40, 91, 51), new Range16.ptr(123, 3898, 3775), new Range16.ptr(3900, 5787, 1887), new Range16.ptr(8218, 8222, 4), new Range16.ptr(8261, 8317, 56), new Range16.ptr(8333, 8968, 635), new Range16.ptr(8970, 9001, 31), new Range16.ptr(10088, 10100, 2), new Range16.ptr(10181, 10214, 33), new Range16.ptr(10216, 10222, 2), new Range16.ptr(10627, 10647, 2), new Range16.ptr(10712, 10714, 2), new Range16.ptr(10748, 11810, 1062), new Range16.ptr(11812, 11816, 2), new Range16.ptr(11842, 12296, 454), new Range16.ptr(12298, 12304, 2), new Range16.ptr(12308, 12314, 2), new Range16.ptr(12317, 64831, 52514), new Range16.ptr(65047, 65077, 30), new Range16.ptr(65079, 65091, 2), new Range16.ptr(65095, 65113, 18), new Range16.ptr(65115, 65117, 2), new Range16.ptr(65288, 65339, 51), new Range16.ptr(65371, 65375, 4), new Range16.ptr(65378, 65378, 1)]), sliceType$1.nil, 1);
		_S = new RangeTable.ptr(new sliceType([new Range16.ptr(36, 43, 7), new Range16.ptr(60, 62, 1), new Range16.ptr(94, 96, 2), new Range16.ptr(124, 126, 2), new Range16.ptr(162, 166, 1), new Range16.ptr(168, 169, 1), new Range16.ptr(172, 174, 2), new Range16.ptr(175, 177, 1), new Range16.ptr(180, 184, 4), new Range16.ptr(215, 247, 32), new Range16.ptr(706, 709, 1), new Range16.ptr(722, 735, 1), new Range16.ptr(741, 747, 1), new Range16.ptr(749, 751, 2), new Range16.ptr(752, 767, 1), new Range16.ptr(885, 900, 15), new Range16.ptr(901, 1014, 113), new Range16.ptr(1154, 1421, 267), new Range16.ptr(1422, 1423, 1), new Range16.ptr(1542, 1544, 1), new Range16.ptr(1547, 1550, 3), new Range16.ptr(1551, 1758, 207), new Range16.ptr(1769, 1789, 20), new Range16.ptr(1790, 2038, 248), new Range16.ptr(2546, 2547, 1), new Range16.ptr(2554, 2555, 1), new Range16.ptr(2801, 2928, 127), new Range16.ptr(3059, 3066, 1), new Range16.ptr(3199, 3449, 250), new Range16.ptr(3647, 3841, 194), new Range16.ptr(3842, 3843, 1), new Range16.ptr(3859, 3861, 2), new Range16.ptr(3862, 3863, 1), new Range16.ptr(3866, 3871, 1), new Range16.ptr(3892, 3896, 2), new Range16.ptr(4030, 4037, 1), new Range16.ptr(4039, 4044, 1), new Range16.ptr(4046, 4047, 1), new Range16.ptr(4053, 4056, 1), new Range16.ptr(4254, 4255, 1), new Range16.ptr(5008, 5017, 1), new Range16.ptr(6107, 6464, 357), new Range16.ptr(6622, 6655, 1), new Range16.ptr(7009, 7018, 1), new Range16.ptr(7028, 7036, 1), new Range16.ptr(8125, 8127, 2), new Range16.ptr(8128, 8129, 1), new Range16.ptr(8141, 8143, 1), new Range16.ptr(8157, 8159, 1), new Range16.ptr(8173, 8175, 1), new Range16.ptr(8189, 8190, 1), new Range16.ptr(8260, 8274, 14), new Range16.ptr(8314, 8316, 1), new Range16.ptr(8330, 8332, 1), new Range16.ptr(8352, 8381, 1), new Range16.ptr(8448, 8449, 1), new Range16.ptr(8451, 8454, 1), new Range16.ptr(8456, 8457, 1), new Range16.ptr(8468, 8470, 2), new Range16.ptr(8471, 8472, 1), new Range16.ptr(8478, 8483, 1), new Range16.ptr(8485, 8489, 2), new Range16.ptr(8494, 8506, 12), new Range16.ptr(8507, 8512, 5), new Range16.ptr(8513, 8516, 1), new Range16.ptr(8522, 8525, 1), new Range16.ptr(8527, 8592, 65), new Range16.ptr(8593, 8967, 1), new Range16.ptr(8972, 9000, 1), new Range16.ptr(9003, 9210, 1), new Range16.ptr(9216, 9254, 1), new Range16.ptr(9280, 9290, 1), new Range16.ptr(9372, 9449, 1), new Range16.ptr(9472, 10087, 1), new Range16.ptr(10132, 10180, 1), new Range16.ptr(10183, 10213, 1), new Range16.ptr(10224, 10626, 1), new Range16.ptr(10649, 10711, 1), new Range16.ptr(10716, 10747, 1), new Range16.ptr(10750, 11123, 1), new Range16.ptr(11126, 11157, 1), new Range16.ptr(11160, 11193, 1), new Range16.ptr(11197, 11208, 1), new Range16.ptr(11210, 11217, 1), new Range16.ptr(11493, 11498, 1), new Range16.ptr(11904, 11929, 1), new Range16.ptr(11931, 12019, 1), new Range16.ptr(12032, 12245, 1), new Range16.ptr(12272, 12283, 1), new Range16.ptr(12292, 12306, 14), new Range16.ptr(12307, 12320, 13), new Range16.ptr(12342, 12343, 1), new Range16.ptr(12350, 12351, 1), new Range16.ptr(12443, 12444, 1), new Range16.ptr(12688, 12689, 1), new Range16.ptr(12694, 12703, 1), new Range16.ptr(12736, 12771, 1), new Range16.ptr(12800, 12830, 1), new Range16.ptr(12842, 12871, 1), new Range16.ptr(12880, 12896, 16), new Range16.ptr(12897, 12927, 1), new Range16.ptr(12938, 12976, 1), new Range16.ptr(12992, 13054, 1), new Range16.ptr(13056, 13311, 1), new Range16.ptr(19904, 19967, 1), new Range16.ptr(42128, 42182, 1), new Range16.ptr(42752, 42774, 1), new Range16.ptr(42784, 42785, 1), new Range16.ptr(42889, 42890, 1), new Range16.ptr(43048, 43051, 1), new Range16.ptr(43062, 43065, 1), new Range16.ptr(43639, 43641, 1), new Range16.ptr(43867, 64297, 20430), new Range16.ptr(64434, 64449, 1), new Range16.ptr(65020, 65021, 1), new Range16.ptr(65122, 65124, 2), new Range16.ptr(65125, 65126, 1), new Range16.ptr(65129, 65284, 155), new Range16.ptr(65291, 65308, 17), new Range16.ptr(65309, 65310, 1), new Range16.ptr(65342, 65344, 2), new Range16.ptr(65372, 65374, 2), new Range16.ptr(65504, 65510, 1), new Range16.ptr(65512, 65518, 1), new Range16.ptr(65532, 65533, 1)]), new sliceType$1([new Range32.ptr(65847, 65855, 1), new Range32.ptr(65913, 65929, 1), new Range32.ptr(65932, 65936, 4), new Range32.ptr(65937, 65947, 1), new Range32.ptr(65952, 66000, 48), new Range32.ptr(66001, 66044, 1), new Range32.ptr(67703, 67704, 1), new Range32.ptr(68296, 92988, 24692), new Range32.ptr(92989, 92991, 1), new Range32.ptr(92997, 113820, 20823), new Range32.ptr(118784, 119029, 1), new Range32.ptr(119040, 119078, 1), new Range32.ptr(119081, 119140, 1), new Range32.ptr(119146, 119148, 1), new Range32.ptr(119171, 119172, 1), new Range32.ptr(119180, 119209, 1), new Range32.ptr(119214, 119261, 1), new Range32.ptr(119296, 119361, 1), new Range32.ptr(119365, 119552, 187), new Range32.ptr(119553, 119638, 1), new Range32.ptr(120513, 120539, 26), new Range32.ptr(120571, 120597, 26), new Range32.ptr(120629, 120655, 26), new Range32.ptr(120687, 120713, 26), new Range32.ptr(120745, 120771, 26), new Range32.ptr(126704, 126705, 1), new Range32.ptr(126976, 127019, 1), new Range32.ptr(127024, 127123, 1), new Range32.ptr(127136, 127150, 1), new Range32.ptr(127153, 127167, 1), new Range32.ptr(127169, 127183, 1), new Range32.ptr(127185, 127221, 1), new Range32.ptr(127248, 127278, 1), new Range32.ptr(127280, 127339, 1), new Range32.ptr(127344, 127386, 1), new Range32.ptr(127462, 127490, 1), new Range32.ptr(127504, 127546, 1), new Range32.ptr(127552, 127560, 1), new Range32.ptr(127568, 127569, 1), new Range32.ptr(127744, 127788, 1), new Range32.ptr(127792, 127869, 1), new Range32.ptr(127872, 127950, 1), new Range32.ptr(127956, 127991, 1), new Range32.ptr(128000, 128254, 1), new Range32.ptr(128256, 128330, 1), new Range32.ptr(128336, 128377, 1), new Range32.ptr(128379, 128419, 1), new Range32.ptr(128421, 128578, 1), new Range32.ptr(128581, 128719, 1), new Range32.ptr(128736, 128748, 1), new Range32.ptr(128752, 128755, 1), new Range32.ptr(128768, 128883, 1), new Range32.ptr(128896, 128980, 1), new Range32.ptr(129024, 129035, 1), new Range32.ptr(129040, 129095, 1), new Range32.ptr(129104, 129113, 1), new Range32.ptr(129120, 129159, 1), new Range32.ptr(129168, 129197, 1)]), 10);
		_Sc = new RangeTable.ptr(new sliceType([new Range16.ptr(36, 162, 126), new Range16.ptr(163, 165, 1), new Range16.ptr(1423, 1547, 124), new Range16.ptr(2546, 2547, 1), new Range16.ptr(2555, 2801, 246), new Range16.ptr(3065, 3647, 582), new Range16.ptr(6107, 8352, 2245), new Range16.ptr(8353, 8381, 1), new Range16.ptr(43064, 65020, 21956), new Range16.ptr(65129, 65284, 155), new Range16.ptr(65504, 65505, 1), new Range16.ptr(65509, 65510, 1)]), sliceType$1.nil, 2);
		_Sk = new RangeTable.ptr(new sliceType([new Range16.ptr(94, 96, 2), new Range16.ptr(168, 175, 7), new Range16.ptr(180, 184, 4), new Range16.ptr(706, 709, 1), new Range16.ptr(722, 735, 1), new Range16.ptr(741, 747, 1), new Range16.ptr(749, 751, 2), new Range16.ptr(752, 767, 1), new Range16.ptr(885, 900, 15), new Range16.ptr(901, 8125, 7224), new Range16.ptr(8127, 8129, 1), new Range16.ptr(8141, 8143, 1), new Range16.ptr(8157, 8159, 1), new Range16.ptr(8173, 8175, 1), new Range16.ptr(8189, 8190, 1), new Range16.ptr(12443, 12444, 1), new Range16.ptr(42752, 42774, 1), new Range16.ptr(42784, 42785, 1), new Range16.ptr(42889, 42890, 1), new Range16.ptr(43867, 64434, 20567), new Range16.ptr(64435, 64449, 1), new Range16.ptr(65342, 65344, 2), new Range16.ptr(65507, 65507, 1)]), sliceType$1.nil, 3);
		_Sm = new RangeTable.ptr(new sliceType([new Range16.ptr(43, 60, 17), new Range16.ptr(61, 62, 1), new Range16.ptr(124, 126, 2), new Range16.ptr(172, 177, 5), new Range16.ptr(215, 247, 32), new Range16.ptr(1014, 1542, 528), new Range16.ptr(1543, 1544, 1), new Range16.ptr(8260, 8274, 14), new Range16.ptr(8314, 8316, 1), new Range16.ptr(8330, 8332, 1), new Range16.ptr(8472, 8512, 40), new Range16.ptr(8513, 8516, 1), new Range16.ptr(8523, 8592, 69), new Range16.ptr(8593, 8596, 1), new Range16.ptr(8602, 8603, 1), new Range16.ptr(8608, 8614, 3), new Range16.ptr(8622, 8654, 32), new Range16.ptr(8655, 8658, 3), new Range16.ptr(8660, 8692, 32), new Range16.ptr(8693, 8959, 1), new Range16.ptr(8992, 8993, 1), new Range16.ptr(9084, 9115, 31), new Range16.ptr(9116, 9139, 1), new Range16.ptr(9180, 9185, 1), new Range16.ptr(9655, 9665, 10), new Range16.ptr(9720, 9727, 1), new Range16.ptr(9839, 10176, 337), new Range16.ptr(10177, 10180, 1), new Range16.ptr(10183, 10213, 1), new Range16.ptr(10224, 10239, 1), new Range16.ptr(10496, 10626, 1), new Range16.ptr(10649, 10711, 1), new Range16.ptr(10716, 10747, 1), new Range16.ptr(10750, 11007, 1), new Range16.ptr(11056, 11076, 1), new Range16.ptr(11079, 11084, 1), new Range16.ptr(64297, 65122, 825), new Range16.ptr(65124, 65126, 1), new Range16.ptr(65291, 65308, 17), new Range16.ptr(65309, 65310, 1), new Range16.ptr(65372, 65374, 2), new Range16.ptr(65506, 65513, 7), new Range16.ptr(65514, 65516, 1)]), new sliceType$1([new Range32.ptr(120513, 120539, 26), new Range32.ptr(120571, 120597, 26), new Range32.ptr(120629, 120655, 26), new Range32.ptr(120687, 120713, 26), new Range32.ptr(120745, 120771, 26), new Range32.ptr(126704, 126705, 1)]), 5);
		_So = new RangeTable.ptr(new sliceType([new Range16.ptr(166, 169, 3), new Range16.ptr(174, 176, 2), new Range16.ptr(1154, 1421, 267), new Range16.ptr(1422, 1550, 128), new Range16.ptr(1551, 1758, 207), new Range16.ptr(1769, 1789, 20), new Range16.ptr(1790, 2038, 248), new Range16.ptr(2554, 2928, 374), new Range16.ptr(3059, 3064, 1), new Range16.ptr(3066, 3199, 133), new Range16.ptr(3449, 3841, 392), new Range16.ptr(3842, 3843, 1), new Range16.ptr(3859, 3861, 2), new Range16.ptr(3862, 3863, 1), new Range16.ptr(3866, 3871, 1), new Range16.ptr(3892, 3896, 2), new Range16.ptr(4030, 4037, 1), new Range16.ptr(4039, 4044, 1), new Range16.ptr(4046, 4047, 1), new Range16.ptr(4053, 4056, 1), new Range16.ptr(4254, 4255, 1), new Range16.ptr(5008, 5017, 1), new Range16.ptr(6464, 6622, 158), new Range16.ptr(6623, 6655, 1), new Range16.ptr(7009, 7018, 1), new Range16.ptr(7028, 7036, 1), new Range16.ptr(8448, 8449, 1), new Range16.ptr(8451, 8454, 1), new Range16.ptr(8456, 8457, 1), new Range16.ptr(8468, 8470, 2), new Range16.ptr(8471, 8478, 7), new Range16.ptr(8479, 8483, 1), new Range16.ptr(8485, 8489, 2), new Range16.ptr(8494, 8506, 12), new Range16.ptr(8507, 8522, 15), new Range16.ptr(8524, 8525, 1), new Range16.ptr(8527, 8597, 70), new Range16.ptr(8598, 8601, 1), new Range16.ptr(8604, 8607, 1), new Range16.ptr(8609, 8610, 1), new Range16.ptr(8612, 8613, 1), new Range16.ptr(8615, 8621, 1), new Range16.ptr(8623, 8653, 1), new Range16.ptr(8656, 8657, 1), new Range16.ptr(8659, 8661, 2), new Range16.ptr(8662, 8691, 1), new Range16.ptr(8960, 8967, 1), new Range16.ptr(8972, 8991, 1), new Range16.ptr(8994, 9000, 1), new Range16.ptr(9003, 9083, 1), new Range16.ptr(9085, 9114, 1), new Range16.ptr(9140, 9179, 1), new Range16.ptr(9186, 9210, 1), new Range16.ptr(9216, 9254, 1), new Range16.ptr(9280, 9290, 1), new Range16.ptr(9372, 9449, 1), new Range16.ptr(9472, 9654, 1), new Range16.ptr(9656, 9664, 1), new Range16.ptr(9666, 9719, 1), new Range16.ptr(9728, 9838, 1), new Range16.ptr(9840, 10087, 1), new Range16.ptr(10132, 10175, 1), new Range16.ptr(10240, 10495, 1), new Range16.ptr(11008, 11055, 1), new Range16.ptr(11077, 11078, 1), new Range16.ptr(11085, 11123, 1), new Range16.ptr(11126, 11157, 1), new Range16.ptr(11160, 11193, 1), new Range16.ptr(11197, 11208, 1), new Range16.ptr(11210, 11217, 1), new Range16.ptr(11493, 11498, 1), new Range16.ptr(11904, 11929, 1), new Range16.ptr(11931, 12019, 1), new Range16.ptr(12032, 12245, 1), new Range16.ptr(12272, 12283, 1), new Range16.ptr(12292, 12306, 14), new Range16.ptr(12307, 12320, 13), new Range16.ptr(12342, 12343, 1), new Range16.ptr(12350, 12351, 1), new Range16.ptr(12688, 12689, 1), new Range16.ptr(12694, 12703, 1), new Range16.ptr(12736, 12771, 1), new Range16.ptr(12800, 12830, 1), new Range16.ptr(12842, 12871, 1), new Range16.ptr(12880, 12896, 16), new Range16.ptr(12897, 12927, 1), new Range16.ptr(12938, 12976, 1), new Range16.ptr(12992, 13054, 1), new Range16.ptr(13056, 13311, 1), new Range16.ptr(19904, 19967, 1), new Range16.ptr(42128, 42182, 1), new Range16.ptr(43048, 43051, 1), new Range16.ptr(43062, 43063, 1), new Range16.ptr(43065, 43639, 574), new Range16.ptr(43640, 43641, 1), new Range16.ptr(65021, 65508, 487), new Range16.ptr(65512, 65517, 5), new Range16.ptr(65518, 65532, 14), new Range16.ptr(65533, 65533, 1)]), new sliceType$1([new Range32.ptr(65847, 65847, 1), new Range32.ptr(65848, 65855, 1), new Range32.ptr(65913, 65929, 1), new Range32.ptr(65932, 65936, 4), new Range32.ptr(65937, 65947, 1), new Range32.ptr(65952, 66000, 48), new Range32.ptr(66001, 66044, 1), new Range32.ptr(67703, 67704, 1), new Range32.ptr(68296, 92988, 24692), new Range32.ptr(92989, 92991, 1), new Range32.ptr(92997, 113820, 20823), new Range32.ptr(118784, 119029, 1), new Range32.ptr(119040, 119078, 1), new Range32.ptr(119081, 119140, 1), new Range32.ptr(119146, 119148, 1), new Range32.ptr(119171, 119172, 1), new Range32.ptr(119180, 119209, 1), new Range32.ptr(119214, 119261, 1), new Range32.ptr(119296, 119361, 1), new Range32.ptr(119365, 119552, 187), new Range32.ptr(119553, 119638, 1), new Range32.ptr(126976, 127019, 1), new Range32.ptr(127024, 127123, 1), new Range32.ptr(127136, 127150, 1), new Range32.ptr(127153, 127167, 1), new Range32.ptr(127169, 127183, 1), new Range32.ptr(127185, 127221, 1), new Range32.ptr(127248, 127278, 1), new Range32.ptr(127280, 127339, 1), new Range32.ptr(127344, 127386, 1), new Range32.ptr(127462, 127490, 1), new Range32.ptr(127504, 127546, 1), new Range32.ptr(127552, 127560, 1), new Range32.ptr(127568, 127569, 1), new Range32.ptr(127744, 127788, 1), new Range32.ptr(127792, 127869, 1), new Range32.ptr(127872, 127950, 1), new Range32.ptr(127956, 127991, 1), new Range32.ptr(128000, 128254, 1), new Range32.ptr(128256, 128330, 1), new Range32.ptr(128336, 128377, 1), new Range32.ptr(128379, 128419, 1), new Range32.ptr(128421, 128578, 1), new Range32.ptr(128581, 128719, 1), new Range32.ptr(128736, 128748, 1), new Range32.ptr(128752, 128755, 1), new Range32.ptr(128768, 128883, 1), new Range32.ptr(128896, 128980, 1), new Range32.ptr(129024, 129035, 1), new Range32.ptr(129040, 129095, 1), new Range32.ptr(129104, 129113, 1), new Range32.ptr(129120, 129159, 1), new Range32.ptr(129168, 129197, 1)]), 2);
		_Z = new RangeTable.ptr(new sliceType([new Range16.ptr(32, 160, 128), new Range16.ptr(5760, 8192, 2432), new Range16.ptr(8193, 8202, 1), new Range16.ptr(8232, 8233, 1), new Range16.ptr(8239, 8287, 48), new Range16.ptr(12288, 12288, 1)]), sliceType$1.nil, 1);
		_Zl = new RangeTable.ptr(new sliceType([new Range16.ptr(8232, 8232, 1)]), sliceType$1.nil, 0);
		_Zp = new RangeTable.ptr(new sliceType([new Range16.ptr(8233, 8233, 1)]), sliceType$1.nil, 0);
		_Zs = new RangeTable.ptr(new sliceType([new Range16.ptr(32, 160, 128), new Range16.ptr(5760, 8192, 2432), new Range16.ptr(8193, 8202, 1), new Range16.ptr(8239, 8287, 48), new Range16.ptr(12288, 12288, 1)]), sliceType$1.nil, 1);
		$pkg.Cc = _Cc;
		$pkg.Cf = _Cf;
		$pkg.Co = _Co;
		$pkg.Cs = _Cs;
		$pkg.Digit = _Nd;
		$pkg.Nd = _Nd;
		$pkg.Letter = _L;
		$pkg.L = _L;
		$pkg.Lm = _Lm;
		$pkg.Lo = _Lo;
		$pkg.Ll = _Ll;
		$pkg.M = _M;
		$pkg.Mc = _Mc;
		$pkg.Me = _Me;
		$pkg.Mn = _Mn;
		$pkg.Nl = _Nl;
		$pkg.No = _No;
		$pkg.N = _N;
		$pkg.C = _C;
		$pkg.Pc = _Pc;
		$pkg.Pd = _Pd;
		$pkg.Pe = _Pe;
		$pkg.Pf = _Pf;
		$pkg.Pi = _Pi;
		$pkg.Po = _Po;
		$pkg.Ps = _Ps;
		$pkg.P = _P;
		$pkg.Sc = _Sc;
		$pkg.Sk = _Sk;
		$pkg.Sm = _Sm;
		$pkg.So = _So;
		$pkg.Z = _Z;
		$pkg.S = _S;
		$pkg.PrintRanges = new sliceType$2([$pkg.L, $pkg.M, $pkg.N, $pkg.P, $pkg.S]);
		$pkg.Lt = _Lt;
		$pkg.Lu = _Lu;
		$pkg.Zl = _Zl;
		$pkg.Zp = _Zp;
		$pkg.Zs = _Zs;
		$pkg.Categories = (_map = new $Map(), _key = "C", _map[_key] = { k: _key, v: $pkg.C }, _key = "Cc", _map[_key] = { k: _key, v: $pkg.Cc }, _key = "Cf", _map[_key] = { k: _key, v: $pkg.Cf }, _key = "Co", _map[_key] = { k: _key, v: $pkg.Co }, _key = "Cs", _map[_key] = { k: _key, v: $pkg.Cs }, _key = "L", _map[_key] = { k: _key, v: $pkg.L }, _key = "Ll", _map[_key] = { k: _key, v: $pkg.Ll }, _key = "Lm", _map[_key] = { k: _key, v: $pkg.Lm }, _key = "Lo", _map[_key] = { k: _key, v: $pkg.Lo }, _key = "Lt", _map[_key] = { k: _key, v: $pkg.Lt }, _key = "Lu", _map[_key] = { k: _key, v: $pkg.Lu }, _key = "M", _map[_key] = { k: _key, v: $pkg.M }, _key = "Mc", _map[_key] = { k: _key, v: $pkg.Mc }, _key = "Me", _map[_key] = { k: _key, v: $pkg.Me }, _key = "Mn", _map[_key] = { k: _key, v: $pkg.Mn }, _key = "N", _map[_key] = { k: _key, v: $pkg.N }, _key = "Nd", _map[_key] = { k: _key, v: $pkg.Nd }, _key = "Nl", _map[_key] = { k: _key, v: $pkg.Nl }, _key = "No", _map[_key] = { k: _key, v: $pkg.No }, _key = "P", _map[_key] = { k: _key, v: $pkg.P }, _key = "Pc", _map[_key] = { k: _key, v: $pkg.Pc }, _key = "Pd", _map[_key] = { k: _key, v: $pkg.Pd }, _key = "Pe", _map[_key] = { k: _key, v: $pkg.Pe }, _key = "Pf", _map[_key] = { k: _key, v: $pkg.Pf }, _key = "Pi", _map[_key] = { k: _key, v: $pkg.Pi }, _key = "Po", _map[_key] = { k: _key, v: $pkg.Po }, _key = "Ps", _map[_key] = { k: _key, v: $pkg.Ps }, _key = "S", _map[_key] = { k: _key, v: $pkg.S }, _key = "Sc", _map[_key] = { k: _key, v: $pkg.Sc }, _key = "Sk", _map[_key] = { k: _key, v: $pkg.Sk }, _key = "Sm", _map[_key] = { k: _key, v: $pkg.Sm }, _key = "So", _map[_key] = { k: _key, v: $pkg.So }, _key = "Z", _map[_key] = { k: _key, v: $pkg.Z }, _key = "Zl", _map[_key] = { k: _key, v: $pkg.Zl }, _key = "Zp", _map[_key] = { k: _key, v: $pkg.Zp }, _key = "Zs", _map[_key] = { k: _key, v: $pkg.Zs }, _map);
		_Arabic = new RangeTable.ptr(new sliceType([new Range16.ptr(1536, 1540, 1), new Range16.ptr(1542, 1547, 1), new Range16.ptr(1549, 1562, 1), new Range16.ptr(1566, 1566, 1), new Range16.ptr(1568, 1599, 1), new Range16.ptr(1601, 1610, 1), new Range16.ptr(1622, 1631, 1), new Range16.ptr(1642, 1647, 1), new Range16.ptr(1649, 1756, 1), new Range16.ptr(1758, 1791, 1), new Range16.ptr(1872, 1919, 1), new Range16.ptr(2208, 2226, 1), new Range16.ptr(2276, 2303, 1), new Range16.ptr(64336, 64449, 1), new Range16.ptr(64467, 64829, 1), new Range16.ptr(64848, 64911, 1), new Range16.ptr(64914, 64967, 1), new Range16.ptr(65008, 65021, 1), new Range16.ptr(65136, 65140, 1), new Range16.ptr(65142, 65276, 1)]), new sliceType$1([new Range32.ptr(69216, 69246, 1), new Range32.ptr(126464, 126467, 1), new Range32.ptr(126469, 126495, 1), new Range32.ptr(126497, 126498, 1), new Range32.ptr(126500, 126500, 1), new Range32.ptr(126503, 126503, 1), new Range32.ptr(126505, 126514, 1), new Range32.ptr(126516, 126519, 1), new Range32.ptr(126521, 126521, 1), new Range32.ptr(126523, 126523, 1), new Range32.ptr(126530, 126530, 1), new Range32.ptr(126535, 126535, 1), new Range32.ptr(126537, 126537, 1), new Range32.ptr(126539, 126539, 1), new Range32.ptr(126541, 126543, 1), new Range32.ptr(126545, 126546, 1), new Range32.ptr(126548, 126548, 1), new Range32.ptr(126551, 126551, 1), new Range32.ptr(126553, 126553, 1), new Range32.ptr(126555, 126555, 1), new Range32.ptr(126557, 126557, 1), new Range32.ptr(126559, 126559, 1), new Range32.ptr(126561, 126562, 1), new Range32.ptr(126564, 126564, 1), new Range32.ptr(126567, 126570, 1), new Range32.ptr(126572, 126578, 1), new Range32.ptr(126580, 126583, 1), new Range32.ptr(126585, 126588, 1), new Range32.ptr(126590, 126590, 1), new Range32.ptr(126592, 126601, 1), new Range32.ptr(126603, 126619, 1), new Range32.ptr(126625, 126627, 1), new Range32.ptr(126629, 126633, 1), new Range32.ptr(126635, 126651, 1), new Range32.ptr(126704, 126705, 1)]), 0);
		_Armenian = new RangeTable.ptr(new sliceType([new Range16.ptr(1329, 1366, 1), new Range16.ptr(1369, 1375, 1), new Range16.ptr(1377, 1415, 1), new Range16.ptr(1418, 1418, 1), new Range16.ptr(1421, 1423, 1), new Range16.ptr(64275, 64279, 1)]), sliceType$1.nil, 0);
		_Avestan = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68352, 68405, 1), new Range32.ptr(68409, 68415, 1)]), 0);
		_Balinese = new RangeTable.ptr(new sliceType([new Range16.ptr(6912, 6987, 1), new Range16.ptr(6992, 7036, 1)]), sliceType$1.nil, 0);
		_Bamum = new RangeTable.ptr(new sliceType([new Range16.ptr(42656, 42743, 1)]), new sliceType$1([new Range32.ptr(92160, 92728, 1)]), 0);
		_Bassa_Vah = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(92880, 92909, 1), new Range32.ptr(92912, 92917, 1)]), 0);
		_Batak = new RangeTable.ptr(new sliceType([new Range16.ptr(7104, 7155, 1), new Range16.ptr(7164, 7167, 1)]), sliceType$1.nil, 0);
		_Bengali = new RangeTable.ptr(new sliceType([new Range16.ptr(2432, 2435, 1), new Range16.ptr(2437, 2444, 1), new Range16.ptr(2447, 2448, 1), new Range16.ptr(2451, 2472, 1), new Range16.ptr(2474, 2480, 1), new Range16.ptr(2482, 2482, 1), new Range16.ptr(2486, 2489, 1), new Range16.ptr(2492, 2500, 1), new Range16.ptr(2503, 2504, 1), new Range16.ptr(2507, 2510, 1), new Range16.ptr(2519, 2519, 1), new Range16.ptr(2524, 2525, 1), new Range16.ptr(2527, 2531, 1), new Range16.ptr(2534, 2555, 1)]), sliceType$1.nil, 0);
		_Bopomofo = new RangeTable.ptr(new sliceType([new Range16.ptr(746, 747, 1), new Range16.ptr(12549, 12589, 1), new Range16.ptr(12704, 12730, 1)]), sliceType$1.nil, 0);
		_Brahmi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(69632, 69709, 1), new Range32.ptr(69714, 69743, 1), new Range32.ptr(69759, 69759, 1)]), 0);
		_Braille = new RangeTable.ptr(new sliceType([new Range16.ptr(10240, 10495, 1)]), sliceType$1.nil, 0);
		_Buginese = new RangeTable.ptr(new sliceType([new Range16.ptr(6656, 6683, 1), new Range16.ptr(6686, 6687, 1)]), sliceType$1.nil, 0);
		_Buhid = new RangeTable.ptr(new sliceType([new Range16.ptr(5952, 5971, 1)]), sliceType$1.nil, 0);
		_Canadian_Aboriginal = new RangeTable.ptr(new sliceType([new Range16.ptr(5120, 5759, 1), new Range16.ptr(6320, 6389, 1)]), sliceType$1.nil, 0);
		_Carian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66208, 66256, 1)]), 0);
		_Caucasian_Albanian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66864, 66915, 1), new Range32.ptr(66927, 66927, 1)]), 0);
		_Chakma = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(69888, 69940, 1), new Range32.ptr(69942, 69955, 1)]), 0);
		_Cham = new RangeTable.ptr(new sliceType([new Range16.ptr(43520, 43574, 1), new Range16.ptr(43584, 43597, 1), new Range16.ptr(43600, 43609, 1), new Range16.ptr(43612, 43615, 1)]), sliceType$1.nil, 0);
		_Cherokee = new RangeTable.ptr(new sliceType([new Range16.ptr(5024, 5108, 1)]), sliceType$1.nil, 0);
		_Common = new RangeTable.ptr(new sliceType([new Range16.ptr(0, 64, 1), new Range16.ptr(91, 96, 1), new Range16.ptr(123, 169, 1), new Range16.ptr(171, 185, 1), new Range16.ptr(187, 191, 1), new Range16.ptr(215, 215, 1), new Range16.ptr(247, 247, 1), new Range16.ptr(697, 735, 1), new Range16.ptr(741, 745, 1), new Range16.ptr(748, 767, 1), new Range16.ptr(884, 884, 1), new Range16.ptr(894, 894, 1), new Range16.ptr(901, 901, 1), new Range16.ptr(903, 903, 1), new Range16.ptr(1417, 1417, 1), new Range16.ptr(1541, 1541, 1), new Range16.ptr(1548, 1548, 1), new Range16.ptr(1563, 1564, 1), new Range16.ptr(1567, 1567, 1), new Range16.ptr(1600, 1600, 1), new Range16.ptr(1632, 1641, 1), new Range16.ptr(1757, 1757, 1), new Range16.ptr(2404, 2405, 1), new Range16.ptr(3647, 3647, 1), new Range16.ptr(4053, 4056, 1), new Range16.ptr(4347, 4347, 1), new Range16.ptr(5867, 5869, 1), new Range16.ptr(5941, 5942, 1), new Range16.ptr(6146, 6147, 1), new Range16.ptr(6149, 6149, 1), new Range16.ptr(7379, 7379, 1), new Range16.ptr(7393, 7393, 1), new Range16.ptr(7401, 7404, 1), new Range16.ptr(7406, 7411, 1), new Range16.ptr(7413, 7414, 1), new Range16.ptr(8192, 8203, 1), new Range16.ptr(8206, 8292, 1), new Range16.ptr(8294, 8304, 1), new Range16.ptr(8308, 8318, 1), new Range16.ptr(8320, 8334, 1), new Range16.ptr(8352, 8381, 1), new Range16.ptr(8448, 8485, 1), new Range16.ptr(8487, 8489, 1), new Range16.ptr(8492, 8497, 1), new Range16.ptr(8499, 8525, 1), new Range16.ptr(8527, 8543, 1), new Range16.ptr(8585, 8585, 1), new Range16.ptr(8592, 9210, 1), new Range16.ptr(9216, 9254, 1), new Range16.ptr(9280, 9290, 1), new Range16.ptr(9312, 10239, 1), new Range16.ptr(10496, 11123, 1), new Range16.ptr(11126, 11157, 1), new Range16.ptr(11160, 11193, 1), new Range16.ptr(11197, 11208, 1), new Range16.ptr(11210, 11217, 1), new Range16.ptr(11776, 11842, 1), new Range16.ptr(12272, 12283, 1), new Range16.ptr(12288, 12292, 1), new Range16.ptr(12294, 12294, 1), new Range16.ptr(12296, 12320, 1), new Range16.ptr(12336, 12343, 1), new Range16.ptr(12348, 12351, 1), new Range16.ptr(12443, 12444, 1), new Range16.ptr(12448, 12448, 1), new Range16.ptr(12539, 12540, 1), new Range16.ptr(12688, 12703, 1), new Range16.ptr(12736, 12771, 1), new Range16.ptr(12832, 12895, 1), new Range16.ptr(12927, 13007, 1), new Range16.ptr(13144, 13311, 1), new Range16.ptr(19904, 19967, 1), new Range16.ptr(42752, 42785, 1), new Range16.ptr(42888, 42890, 1), new Range16.ptr(43056, 43065, 1), new Range16.ptr(43310, 43310, 1), new Range16.ptr(43471, 43471, 1), new Range16.ptr(43867, 43867, 1), new Range16.ptr(64830, 64831, 1), new Range16.ptr(65040, 65049, 1), new Range16.ptr(65072, 65106, 1), new Range16.ptr(65108, 65126, 1), new Range16.ptr(65128, 65131, 1), new Range16.ptr(65279, 65279, 1), new Range16.ptr(65281, 65312, 1), new Range16.ptr(65339, 65344, 1), new Range16.ptr(65371, 65381, 1), new Range16.ptr(65392, 65392, 1), new Range16.ptr(65438, 65439, 1), new Range16.ptr(65504, 65510, 1), new Range16.ptr(65512, 65518, 1), new Range16.ptr(65529, 65533, 1)]), new sliceType$1([new Range32.ptr(65792, 65794, 1), new Range32.ptr(65799, 65843, 1), new Range32.ptr(65847, 65855, 1), new Range32.ptr(65936, 65947, 1), new Range32.ptr(66000, 66044, 1), new Range32.ptr(66273, 66299, 1), new Range32.ptr(113824, 113827, 1), new Range32.ptr(118784, 119029, 1), new Range32.ptr(119040, 119078, 1), new Range32.ptr(119081, 119142, 1), new Range32.ptr(119146, 119162, 1), new Range32.ptr(119171, 119172, 1), new Range32.ptr(119180, 119209, 1), new Range32.ptr(119214, 119261, 1), new Range32.ptr(119552, 119638, 1), new Range32.ptr(119648, 119665, 1), new Range32.ptr(119808, 119892, 1), new Range32.ptr(119894, 119964, 1), new Range32.ptr(119966, 119967, 1), new Range32.ptr(119970, 119970, 1), new Range32.ptr(119973, 119974, 1), new Range32.ptr(119977, 119980, 1), new Range32.ptr(119982, 119993, 1), new Range32.ptr(119995, 119995, 1), new Range32.ptr(119997, 120003, 1), new Range32.ptr(120005, 120069, 1), new Range32.ptr(120071, 120074, 1), new Range32.ptr(120077, 120084, 1), new Range32.ptr(120086, 120092, 1), new Range32.ptr(120094, 120121, 1), new Range32.ptr(120123, 120126, 1), new Range32.ptr(120128, 120132, 1), new Range32.ptr(120134, 120134, 1), new Range32.ptr(120138, 120144, 1), new Range32.ptr(120146, 120485, 1), new Range32.ptr(120488, 120779, 1), new Range32.ptr(120782, 120831, 1), new Range32.ptr(126976, 127019, 1), new Range32.ptr(127024, 127123, 1), new Range32.ptr(127136, 127150, 1), new Range32.ptr(127153, 127167, 1), new Range32.ptr(127169, 127183, 1), new Range32.ptr(127185, 127221, 1), new Range32.ptr(127232, 127244, 1), new Range32.ptr(127248, 127278, 1), new Range32.ptr(127280, 127339, 1), new Range32.ptr(127344, 127386, 1), new Range32.ptr(127462, 127487, 1), new Range32.ptr(127489, 127490, 1), new Range32.ptr(127504, 127546, 1), new Range32.ptr(127552, 127560, 1), new Range32.ptr(127568, 127569, 1), new Range32.ptr(127744, 127788, 1), new Range32.ptr(127792, 127869, 1), new Range32.ptr(127872, 127950, 1), new Range32.ptr(127956, 127991, 1), new Range32.ptr(128000, 128254, 1), new Range32.ptr(128256, 128330, 1), new Range32.ptr(128336, 128377, 1), new Range32.ptr(128379, 128419, 1), new Range32.ptr(128421, 128578, 1), new Range32.ptr(128581, 128719, 1), new Range32.ptr(128736, 128748, 1), new Range32.ptr(128752, 128755, 1), new Range32.ptr(128768, 128883, 1), new Range32.ptr(128896, 128980, 1), new Range32.ptr(129024, 129035, 1), new Range32.ptr(129040, 129095, 1), new Range32.ptr(129104, 129113, 1), new Range32.ptr(129120, 129159, 1), new Range32.ptr(129168, 129197, 1), new Range32.ptr(917505, 917505, 1), new Range32.ptr(917536, 917631, 1)]), 7);
		_Coptic = new RangeTable.ptr(new sliceType([new Range16.ptr(994, 1007, 1), new Range16.ptr(11392, 11507, 1), new Range16.ptr(11513, 11519, 1)]), sliceType$1.nil, 0);
		_Cuneiform = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(73728, 74648, 1), new Range32.ptr(74752, 74862, 1), new Range32.ptr(74864, 74868, 1)]), 0);
		_Cypriot = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67584, 67589, 1), new Range32.ptr(67592, 67592, 1), new Range32.ptr(67594, 67637, 1), new Range32.ptr(67639, 67640, 1), new Range32.ptr(67644, 67644, 1), new Range32.ptr(67647, 67647, 1)]), 0);
		_Cyrillic = new RangeTable.ptr(new sliceType([new Range16.ptr(1024, 1156, 1), new Range16.ptr(1159, 1327, 1), new Range16.ptr(7467, 7467, 1), new Range16.ptr(7544, 7544, 1), new Range16.ptr(11744, 11775, 1), new Range16.ptr(42560, 42653, 1), new Range16.ptr(42655, 42655, 1)]), sliceType$1.nil, 0);
		_Deseret = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66560, 66639, 1)]), 0);
		_Devanagari = new RangeTable.ptr(new sliceType([new Range16.ptr(2304, 2384, 1), new Range16.ptr(2387, 2403, 1), new Range16.ptr(2406, 2431, 1), new Range16.ptr(43232, 43259, 1)]), sliceType$1.nil, 0);
		_Duployan = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(113664, 113770, 1), new Range32.ptr(113776, 113788, 1), new Range32.ptr(113792, 113800, 1), new Range32.ptr(113808, 113817, 1), new Range32.ptr(113820, 113823, 1)]), 0);
		_Egyptian_Hieroglyphs = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(77824, 78894, 1)]), 0);
		_Elbasan = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66816, 66855, 1)]), 0);
		_Ethiopic = new RangeTable.ptr(new sliceType([new Range16.ptr(4608, 4680, 1), new Range16.ptr(4682, 4685, 1), new Range16.ptr(4688, 4694, 1), new Range16.ptr(4696, 4696, 1), new Range16.ptr(4698, 4701, 1), new Range16.ptr(4704, 4744, 1), new Range16.ptr(4746, 4749, 1), new Range16.ptr(4752, 4784, 1), new Range16.ptr(4786, 4789, 1), new Range16.ptr(4792, 4798, 1), new Range16.ptr(4800, 4800, 1), new Range16.ptr(4802, 4805, 1), new Range16.ptr(4808, 4822, 1), new Range16.ptr(4824, 4880, 1), new Range16.ptr(4882, 4885, 1), new Range16.ptr(4888, 4954, 1), new Range16.ptr(4957, 4988, 1), new Range16.ptr(4992, 5017, 1), new Range16.ptr(11648, 11670, 1), new Range16.ptr(11680, 11686, 1), new Range16.ptr(11688, 11694, 1), new Range16.ptr(11696, 11702, 1), new Range16.ptr(11704, 11710, 1), new Range16.ptr(11712, 11718, 1), new Range16.ptr(11720, 11726, 1), new Range16.ptr(11728, 11734, 1), new Range16.ptr(11736, 11742, 1), new Range16.ptr(43777, 43782, 1), new Range16.ptr(43785, 43790, 1), new Range16.ptr(43793, 43798, 1), new Range16.ptr(43808, 43814, 1), new Range16.ptr(43816, 43822, 1)]), sliceType$1.nil, 0);
		_Georgian = new RangeTable.ptr(new sliceType([new Range16.ptr(4256, 4293, 1), new Range16.ptr(4295, 4295, 1), new Range16.ptr(4301, 4301, 1), new Range16.ptr(4304, 4346, 1), new Range16.ptr(4348, 4351, 1), new Range16.ptr(11520, 11557, 1), new Range16.ptr(11559, 11559, 1), new Range16.ptr(11565, 11565, 1)]), sliceType$1.nil, 0);
		_Glagolitic = new RangeTable.ptr(new sliceType([new Range16.ptr(11264, 11310, 1), new Range16.ptr(11312, 11358, 1)]), sliceType$1.nil, 0);
		_Gothic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66352, 66378, 1)]), 0);
		_Grantha = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(70401, 70403, 1), new Range32.ptr(70405, 70412, 1), new Range32.ptr(70415, 70416, 1), new Range32.ptr(70419, 70440, 1), new Range32.ptr(70442, 70448, 1), new Range32.ptr(70450, 70451, 1), new Range32.ptr(70453, 70457, 1), new Range32.ptr(70460, 70468, 1), new Range32.ptr(70471, 70472, 1), new Range32.ptr(70475, 70477, 1), new Range32.ptr(70487, 70487, 1), new Range32.ptr(70493, 70499, 1), new Range32.ptr(70502, 70508, 1), new Range32.ptr(70512, 70516, 1)]), 0);
		_Greek = new RangeTable.ptr(new sliceType([new Range16.ptr(880, 883, 1), new Range16.ptr(885, 887, 1), new Range16.ptr(890, 893, 1), new Range16.ptr(895, 895, 1), new Range16.ptr(900, 900, 1), new Range16.ptr(902, 902, 1), new Range16.ptr(904, 906, 1), new Range16.ptr(908, 908, 1), new Range16.ptr(910, 929, 1), new Range16.ptr(931, 993, 1), new Range16.ptr(1008, 1023, 1), new Range16.ptr(7462, 7466, 1), new Range16.ptr(7517, 7521, 1), new Range16.ptr(7526, 7530, 1), new Range16.ptr(7615, 7615, 1), new Range16.ptr(7936, 7957, 1), new Range16.ptr(7960, 7965, 1), new Range16.ptr(7968, 8005, 1), new Range16.ptr(8008, 8013, 1), new Range16.ptr(8016, 8023, 1), new Range16.ptr(8025, 8025, 1), new Range16.ptr(8027, 8027, 1), new Range16.ptr(8029, 8029, 1), new Range16.ptr(8031, 8061, 1), new Range16.ptr(8064, 8116, 1), new Range16.ptr(8118, 8132, 1), new Range16.ptr(8134, 8147, 1), new Range16.ptr(8150, 8155, 1), new Range16.ptr(8157, 8175, 1), new Range16.ptr(8178, 8180, 1), new Range16.ptr(8182, 8190, 1), new Range16.ptr(8486, 8486, 1), new Range16.ptr(43877, 43877, 1)]), new sliceType$1([new Range32.ptr(65856, 65932, 1), new Range32.ptr(65952, 65952, 1), new Range32.ptr(119296, 119365, 1)]), 0);
		_Gujarati = new RangeTable.ptr(new sliceType([new Range16.ptr(2689, 2691, 1), new Range16.ptr(2693, 2701, 1), new Range16.ptr(2703, 2705, 1), new Range16.ptr(2707, 2728, 1), new Range16.ptr(2730, 2736, 1), new Range16.ptr(2738, 2739, 1), new Range16.ptr(2741, 2745, 1), new Range16.ptr(2748, 2757, 1), new Range16.ptr(2759, 2761, 1), new Range16.ptr(2763, 2765, 1), new Range16.ptr(2768, 2768, 1), new Range16.ptr(2784, 2787, 1), new Range16.ptr(2790, 2801, 1)]), sliceType$1.nil, 0);
		_Gurmukhi = new RangeTable.ptr(new sliceType([new Range16.ptr(2561, 2563, 1), new Range16.ptr(2565, 2570, 1), new Range16.ptr(2575, 2576, 1), new Range16.ptr(2579, 2600, 1), new Range16.ptr(2602, 2608, 1), new Range16.ptr(2610, 2611, 1), new Range16.ptr(2613, 2614, 1), new Range16.ptr(2616, 2617, 1), new Range16.ptr(2620, 2620, 1), new Range16.ptr(2622, 2626, 1), new Range16.ptr(2631, 2632, 1), new Range16.ptr(2635, 2637, 1), new Range16.ptr(2641, 2641, 1), new Range16.ptr(2649, 2652, 1), new Range16.ptr(2654, 2654, 1), new Range16.ptr(2662, 2677, 1)]), sliceType$1.nil, 0);
		_Han = new RangeTable.ptr(new sliceType([new Range16.ptr(11904, 11929, 1), new Range16.ptr(11931, 12019, 1), new Range16.ptr(12032, 12245, 1), new Range16.ptr(12293, 12293, 1), new Range16.ptr(12295, 12295, 1), new Range16.ptr(12321, 12329, 1), new Range16.ptr(12344, 12347, 1), new Range16.ptr(13312, 19893, 1), new Range16.ptr(19968, 40908, 1), new Range16.ptr(63744, 64109, 1), new Range16.ptr(64112, 64217, 1)]), new sliceType$1([new Range32.ptr(131072, 173782, 1), new Range32.ptr(173824, 177972, 1), new Range32.ptr(177984, 178205, 1), new Range32.ptr(194560, 195101, 1)]), 0);
		_Hangul = new RangeTable.ptr(new sliceType([new Range16.ptr(4352, 4607, 1), new Range16.ptr(12334, 12335, 1), new Range16.ptr(12593, 12686, 1), new Range16.ptr(12800, 12830, 1), new Range16.ptr(12896, 12926, 1), new Range16.ptr(43360, 43388, 1), new Range16.ptr(44032, 55203, 1), new Range16.ptr(55216, 55238, 1), new Range16.ptr(55243, 55291, 1), new Range16.ptr(65440, 65470, 1), new Range16.ptr(65474, 65479, 1), new Range16.ptr(65482, 65487, 1), new Range16.ptr(65490, 65495, 1), new Range16.ptr(65498, 65500, 1)]), sliceType$1.nil, 0);
		_Hanunoo = new RangeTable.ptr(new sliceType([new Range16.ptr(5920, 5940, 1)]), sliceType$1.nil, 0);
		_Hebrew = new RangeTable.ptr(new sliceType([new Range16.ptr(1425, 1479, 1), new Range16.ptr(1488, 1514, 1), new Range16.ptr(1520, 1524, 1), new Range16.ptr(64285, 64310, 1), new Range16.ptr(64312, 64316, 1), new Range16.ptr(64318, 64318, 1), new Range16.ptr(64320, 64321, 1), new Range16.ptr(64323, 64324, 1), new Range16.ptr(64326, 64335, 1)]), sliceType$1.nil, 0);
		_Hiragana = new RangeTable.ptr(new sliceType([new Range16.ptr(12353, 12438, 1), new Range16.ptr(12445, 12447, 1)]), new sliceType$1([new Range32.ptr(110593, 110593, 1), new Range32.ptr(127488, 127488, 1)]), 0);
		_Imperial_Aramaic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67648, 67669, 1), new Range32.ptr(67671, 67679, 1)]), 0);
		_Inherited = new RangeTable.ptr(new sliceType([new Range16.ptr(768, 879, 1), new Range16.ptr(1157, 1158, 1), new Range16.ptr(1611, 1621, 1), new Range16.ptr(1648, 1648, 1), new Range16.ptr(2385, 2386, 1), new Range16.ptr(6832, 6846, 1), new Range16.ptr(7376, 7378, 1), new Range16.ptr(7380, 7392, 1), new Range16.ptr(7394, 7400, 1), new Range16.ptr(7405, 7405, 1), new Range16.ptr(7412, 7412, 1), new Range16.ptr(7416, 7417, 1), new Range16.ptr(7616, 7669, 1), new Range16.ptr(7676, 7679, 1), new Range16.ptr(8204, 8205, 1), new Range16.ptr(8400, 8432, 1), new Range16.ptr(12330, 12333, 1), new Range16.ptr(12441, 12442, 1), new Range16.ptr(65024, 65039, 1), new Range16.ptr(65056, 65069, 1)]), new sliceType$1([new Range32.ptr(66045, 66045, 1), new Range32.ptr(66272, 66272, 1), new Range32.ptr(119143, 119145, 1), new Range32.ptr(119163, 119170, 1), new Range32.ptr(119173, 119179, 1), new Range32.ptr(119210, 119213, 1), new Range32.ptr(917760, 917999, 1)]), 0);
		_Inscriptional_Pahlavi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68448, 68466, 1), new Range32.ptr(68472, 68479, 1)]), 0);
		_Inscriptional_Parthian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68416, 68437, 1), new Range32.ptr(68440, 68447, 1)]), 0);
		_Javanese = new RangeTable.ptr(new sliceType([new Range16.ptr(43392, 43469, 1), new Range16.ptr(43472, 43481, 1), new Range16.ptr(43486, 43487, 1)]), sliceType$1.nil, 0);
		_Kaithi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(69760, 69825, 1)]), 0);
		_Kannada = new RangeTable.ptr(new sliceType([new Range16.ptr(3201, 3203, 1), new Range16.ptr(3205, 3212, 1), new Range16.ptr(3214, 3216, 1), new Range16.ptr(3218, 3240, 1), new Range16.ptr(3242, 3251, 1), new Range16.ptr(3253, 3257, 1), new Range16.ptr(3260, 3268, 1), new Range16.ptr(3270, 3272, 1), new Range16.ptr(3274, 3277, 1), new Range16.ptr(3285, 3286, 1), new Range16.ptr(3294, 3294, 1), new Range16.ptr(3296, 3299, 1), new Range16.ptr(3302, 3311, 1), new Range16.ptr(3313, 3314, 1)]), sliceType$1.nil, 0);
		_Katakana = new RangeTable.ptr(new sliceType([new Range16.ptr(12449, 12538, 1), new Range16.ptr(12541, 12543, 1), new Range16.ptr(12784, 12799, 1), new Range16.ptr(13008, 13054, 1), new Range16.ptr(13056, 13143, 1), new Range16.ptr(65382, 65391, 1), new Range16.ptr(65393, 65437, 1)]), new sliceType$1([new Range32.ptr(110592, 110592, 1)]), 0);
		_Kayah_Li = new RangeTable.ptr(new sliceType([new Range16.ptr(43264, 43309, 1), new Range16.ptr(43311, 43311, 1)]), sliceType$1.nil, 0);
		_Kharoshthi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68096, 68099, 1), new Range32.ptr(68101, 68102, 1), new Range32.ptr(68108, 68115, 1), new Range32.ptr(68117, 68119, 1), new Range32.ptr(68121, 68147, 1), new Range32.ptr(68152, 68154, 1), new Range32.ptr(68159, 68167, 1), new Range32.ptr(68176, 68184, 1)]), 0);
		_Khmer = new RangeTable.ptr(new sliceType([new Range16.ptr(6016, 6109, 1), new Range16.ptr(6112, 6121, 1), new Range16.ptr(6128, 6137, 1), new Range16.ptr(6624, 6655, 1)]), sliceType$1.nil, 0);
		_Khojki = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(70144, 70161, 1), new Range32.ptr(70163, 70205, 1)]), 0);
		_Khudawadi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(70320, 70378, 1), new Range32.ptr(70384, 70393, 1)]), 0);
		_Lao = new RangeTable.ptr(new sliceType([new Range16.ptr(3713, 3714, 1), new Range16.ptr(3716, 3716, 1), new Range16.ptr(3719, 3720, 1), new Range16.ptr(3722, 3722, 1), new Range16.ptr(3725, 3725, 1), new Range16.ptr(3732, 3735, 1), new Range16.ptr(3737, 3743, 1), new Range16.ptr(3745, 3747, 1), new Range16.ptr(3749, 3749, 1), new Range16.ptr(3751, 3751, 1), new Range16.ptr(3754, 3755, 1), new Range16.ptr(3757, 3769, 1), new Range16.ptr(3771, 3773, 1), new Range16.ptr(3776, 3780, 1), new Range16.ptr(3782, 3782, 1), new Range16.ptr(3784, 3789, 1), new Range16.ptr(3792, 3801, 1), new Range16.ptr(3804, 3807, 1)]), sliceType$1.nil, 0);
		_Latin = new RangeTable.ptr(new sliceType([new Range16.ptr(65, 90, 1), new Range16.ptr(97, 122, 1), new Range16.ptr(170, 170, 1), new Range16.ptr(186, 186, 1), new Range16.ptr(192, 214, 1), new Range16.ptr(216, 246, 1), new Range16.ptr(248, 696, 1), new Range16.ptr(736, 740, 1), new Range16.ptr(7424, 7461, 1), new Range16.ptr(7468, 7516, 1), new Range16.ptr(7522, 7525, 1), new Range16.ptr(7531, 7543, 1), new Range16.ptr(7545, 7614, 1), new Range16.ptr(7680, 7935, 1), new Range16.ptr(8305, 8305, 1), new Range16.ptr(8319, 8319, 1), new Range16.ptr(8336, 8348, 1), new Range16.ptr(8490, 8491, 1), new Range16.ptr(8498, 8498, 1), new Range16.ptr(8526, 8526, 1), new Range16.ptr(8544, 8584, 1), new Range16.ptr(11360, 11391, 1), new Range16.ptr(42786, 42887, 1), new Range16.ptr(42891, 42894, 1), new Range16.ptr(42896, 42925, 1), new Range16.ptr(42928, 42929, 1), new Range16.ptr(42999, 43007, 1), new Range16.ptr(43824, 43866, 1), new Range16.ptr(43868, 43871, 1), new Range16.ptr(43876, 43876, 1), new Range16.ptr(64256, 64262, 1), new Range16.ptr(65313, 65338, 1), new Range16.ptr(65345, 65370, 1)]), sliceType$1.nil, 6);
		_Lepcha = new RangeTable.ptr(new sliceType([new Range16.ptr(7168, 7223, 1), new Range16.ptr(7227, 7241, 1), new Range16.ptr(7245, 7247, 1)]), sliceType$1.nil, 0);
		_Limbu = new RangeTable.ptr(new sliceType([new Range16.ptr(6400, 6430, 1), new Range16.ptr(6432, 6443, 1), new Range16.ptr(6448, 6459, 1), new Range16.ptr(6464, 6464, 1), new Range16.ptr(6468, 6479, 1)]), sliceType$1.nil, 0);
		_Linear_A = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67072, 67382, 1), new Range32.ptr(67392, 67413, 1), new Range32.ptr(67424, 67431, 1)]), 0);
		_Linear_B = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(65536, 65547, 1), new Range32.ptr(65549, 65574, 1), new Range32.ptr(65576, 65594, 1), new Range32.ptr(65596, 65597, 1), new Range32.ptr(65599, 65613, 1), new Range32.ptr(65616, 65629, 1), new Range32.ptr(65664, 65786, 1)]), 0);
		_Lisu = new RangeTable.ptr(new sliceType([new Range16.ptr(42192, 42239, 1)]), sliceType$1.nil, 0);
		_Lycian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66176, 66204, 1)]), 0);
		_Lydian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67872, 67897, 1), new Range32.ptr(67903, 67903, 1)]), 0);
		_Mahajani = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(69968, 70006, 1)]), 0);
		_Malayalam = new RangeTable.ptr(new sliceType([new Range16.ptr(3329, 3331, 1), new Range16.ptr(3333, 3340, 1), new Range16.ptr(3342, 3344, 1), new Range16.ptr(3346, 3386, 1), new Range16.ptr(3389, 3396, 1), new Range16.ptr(3398, 3400, 1), new Range16.ptr(3402, 3406, 1), new Range16.ptr(3415, 3415, 1), new Range16.ptr(3424, 3427, 1), new Range16.ptr(3430, 3445, 1), new Range16.ptr(3449, 3455, 1)]), sliceType$1.nil, 0);
		_Mandaic = new RangeTable.ptr(new sliceType([new Range16.ptr(2112, 2139, 1), new Range16.ptr(2142, 2142, 1)]), sliceType$1.nil, 0);
		_Manichaean = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68288, 68326, 1), new Range32.ptr(68331, 68342, 1)]), 0);
		_Meetei_Mayek = new RangeTable.ptr(new sliceType([new Range16.ptr(43744, 43766, 1), new Range16.ptr(43968, 44013, 1), new Range16.ptr(44016, 44025, 1)]), sliceType$1.nil, 0);
		_Mende_Kikakui = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(124928, 125124, 1), new Range32.ptr(125127, 125142, 1)]), 0);
		_Meroitic_Cursive = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68000, 68023, 1), new Range32.ptr(68030, 68031, 1)]), 0);
		_Meroitic_Hieroglyphs = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67968, 67999, 1)]), 0);
		_Miao = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(93952, 94020, 1), new Range32.ptr(94032, 94078, 1), new Range32.ptr(94095, 94111, 1)]), 0);
		_Modi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(71168, 71236, 1), new Range32.ptr(71248, 71257, 1)]), 0);
		_Mongolian = new RangeTable.ptr(new sliceType([new Range16.ptr(6144, 6145, 1), new Range16.ptr(6148, 6148, 1), new Range16.ptr(6150, 6158, 1), new Range16.ptr(6160, 6169, 1), new Range16.ptr(6176, 6263, 1), new Range16.ptr(6272, 6314, 1)]), sliceType$1.nil, 0);
		_Mro = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(92736, 92766, 1), new Range32.ptr(92768, 92777, 1), new Range32.ptr(92782, 92783, 1)]), 0);
		_Myanmar = new RangeTable.ptr(new sliceType([new Range16.ptr(4096, 4255, 1), new Range16.ptr(43488, 43518, 1), new Range16.ptr(43616, 43647, 1)]), sliceType$1.nil, 0);
		_Nabataean = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67712, 67742, 1), new Range32.ptr(67751, 67759, 1)]), 0);
		_New_Tai_Lue = new RangeTable.ptr(new sliceType([new Range16.ptr(6528, 6571, 1), new Range16.ptr(6576, 6601, 1), new Range16.ptr(6608, 6618, 1), new Range16.ptr(6622, 6623, 1)]), sliceType$1.nil, 0);
		_Nko = new RangeTable.ptr(new sliceType([new Range16.ptr(1984, 2042, 1)]), sliceType$1.nil, 0);
		_Ogham = new RangeTable.ptr(new sliceType([new Range16.ptr(5760, 5788, 1)]), sliceType$1.nil, 0);
		_Ol_Chiki = new RangeTable.ptr(new sliceType([new Range16.ptr(7248, 7295, 1)]), sliceType$1.nil, 0);
		_Old_Italic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66304, 66339, 1)]), 0);
		_Old_North_Arabian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68224, 68255, 1)]), 0);
		_Old_Permic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66384, 66426, 1)]), 0);
		_Old_Persian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66464, 66499, 1), new Range32.ptr(66504, 66517, 1)]), 0);
		_Old_South_Arabian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68192, 68223, 1)]), 0);
		_Old_Turkic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68608, 68680, 1)]), 0);
		_Oriya = new RangeTable.ptr(new sliceType([new Range16.ptr(2817, 2819, 1), new Range16.ptr(2821, 2828, 1), new Range16.ptr(2831, 2832, 1), new Range16.ptr(2835, 2856, 1), new Range16.ptr(2858, 2864, 1), new Range16.ptr(2866, 2867, 1), new Range16.ptr(2869, 2873, 1), new Range16.ptr(2876, 2884, 1), new Range16.ptr(2887, 2888, 1), new Range16.ptr(2891, 2893, 1), new Range16.ptr(2902, 2903, 1), new Range16.ptr(2908, 2909, 1), new Range16.ptr(2911, 2915, 1), new Range16.ptr(2918, 2935, 1)]), sliceType$1.nil, 0);
		_Osmanya = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66688, 66717, 1), new Range32.ptr(66720, 66729, 1)]), 0);
		_Pahawh_Hmong = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(92928, 92997, 1), new Range32.ptr(93008, 93017, 1), new Range32.ptr(93019, 93025, 1), new Range32.ptr(93027, 93047, 1), new Range32.ptr(93053, 93071, 1)]), 0);
		_Palmyrene = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67680, 67711, 1)]), 0);
		_Pau_Cin_Hau = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(72384, 72440, 1)]), 0);
		_Phags_Pa = new RangeTable.ptr(new sliceType([new Range16.ptr(43072, 43127, 1)]), sliceType$1.nil, 0);
		_Phoenician = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(67840, 67867, 1), new Range32.ptr(67871, 67871, 1)]), 0);
		_Psalter_Pahlavi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(68480, 68497, 1), new Range32.ptr(68505, 68508, 1), new Range32.ptr(68521, 68527, 1)]), 0);
		_Rejang = new RangeTable.ptr(new sliceType([new Range16.ptr(43312, 43347, 1), new Range16.ptr(43359, 43359, 1)]), sliceType$1.nil, 0);
		_Runic = new RangeTable.ptr(new sliceType([new Range16.ptr(5792, 5866, 1), new Range16.ptr(5870, 5880, 1)]), sliceType$1.nil, 0);
		_Samaritan = new RangeTable.ptr(new sliceType([new Range16.ptr(2048, 2093, 1), new Range16.ptr(2096, 2110, 1)]), sliceType$1.nil, 0);
		_Saurashtra = new RangeTable.ptr(new sliceType([new Range16.ptr(43136, 43204, 1), new Range16.ptr(43214, 43225, 1)]), sliceType$1.nil, 0);
		_Sharada = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(70016, 70088, 1), new Range32.ptr(70093, 70093, 1), new Range32.ptr(70096, 70106, 1)]), 0);
		_Shavian = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66640, 66687, 1)]), 0);
		_Siddham = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(71040, 71093, 1), new Range32.ptr(71096, 71113, 1)]), 0);
		_Sinhala = new RangeTable.ptr(new sliceType([new Range16.ptr(3458, 3459, 1), new Range16.ptr(3461, 3478, 1), new Range16.ptr(3482, 3505, 1), new Range16.ptr(3507, 3515, 1), new Range16.ptr(3517, 3517, 1), new Range16.ptr(3520, 3526, 1), new Range16.ptr(3530, 3530, 1), new Range16.ptr(3535, 3540, 1), new Range16.ptr(3542, 3542, 1), new Range16.ptr(3544, 3551, 1), new Range16.ptr(3558, 3567, 1), new Range16.ptr(3570, 3572, 1)]), new sliceType$1([new Range32.ptr(70113, 70132, 1)]), 0);
		_Sora_Sompeng = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(69840, 69864, 1), new Range32.ptr(69872, 69881, 1)]), 0);
		_Sundanese = new RangeTable.ptr(new sliceType([new Range16.ptr(7040, 7103, 1), new Range16.ptr(7360, 7367, 1)]), sliceType$1.nil, 0);
		_Syloti_Nagri = new RangeTable.ptr(new sliceType([new Range16.ptr(43008, 43051, 1)]), sliceType$1.nil, 0);
		_Syriac = new RangeTable.ptr(new sliceType([new Range16.ptr(1792, 1805, 1), new Range16.ptr(1807, 1866, 1), new Range16.ptr(1869, 1871, 1)]), sliceType$1.nil, 0);
		_Tagalog = new RangeTable.ptr(new sliceType([new Range16.ptr(5888, 5900, 1), new Range16.ptr(5902, 5908, 1)]), sliceType$1.nil, 0);
		_Tagbanwa = new RangeTable.ptr(new sliceType([new Range16.ptr(5984, 5996, 1), new Range16.ptr(5998, 6000, 1), new Range16.ptr(6002, 6003, 1)]), sliceType$1.nil, 0);
		_Tai_Le = new RangeTable.ptr(new sliceType([new Range16.ptr(6480, 6509, 1), new Range16.ptr(6512, 6516, 1)]), sliceType$1.nil, 0);
		_Tai_Tham = new RangeTable.ptr(new sliceType([new Range16.ptr(6688, 6750, 1), new Range16.ptr(6752, 6780, 1), new Range16.ptr(6783, 6793, 1), new Range16.ptr(6800, 6809, 1), new Range16.ptr(6816, 6829, 1)]), sliceType$1.nil, 0);
		_Tai_Viet = new RangeTable.ptr(new sliceType([new Range16.ptr(43648, 43714, 1), new Range16.ptr(43739, 43743, 1)]), sliceType$1.nil, 0);
		_Takri = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(71296, 71351, 1), new Range32.ptr(71360, 71369, 1)]), 0);
		_Tamil = new RangeTable.ptr(new sliceType([new Range16.ptr(2946, 2947, 1), new Range16.ptr(2949, 2954, 1), new Range16.ptr(2958, 2960, 1), new Range16.ptr(2962, 2965, 1), new Range16.ptr(2969, 2970, 1), new Range16.ptr(2972, 2972, 1), new Range16.ptr(2974, 2975, 1), new Range16.ptr(2979, 2980, 1), new Range16.ptr(2984, 2986, 1), new Range16.ptr(2990, 3001, 1), new Range16.ptr(3006, 3010, 1), new Range16.ptr(3014, 3016, 1), new Range16.ptr(3018, 3021, 1), new Range16.ptr(3024, 3024, 1), new Range16.ptr(3031, 3031, 1), new Range16.ptr(3046, 3066, 1)]), sliceType$1.nil, 0);
		_Telugu = new RangeTable.ptr(new sliceType([new Range16.ptr(3072, 3075, 1), new Range16.ptr(3077, 3084, 1), new Range16.ptr(3086, 3088, 1), new Range16.ptr(3090, 3112, 1), new Range16.ptr(3114, 3129, 1), new Range16.ptr(3133, 3140, 1), new Range16.ptr(3142, 3144, 1), new Range16.ptr(3146, 3149, 1), new Range16.ptr(3157, 3158, 1), new Range16.ptr(3160, 3161, 1), new Range16.ptr(3168, 3171, 1), new Range16.ptr(3174, 3183, 1), new Range16.ptr(3192, 3199, 1)]), sliceType$1.nil, 0);
		_Thaana = new RangeTable.ptr(new sliceType([new Range16.ptr(1920, 1969, 1)]), sliceType$1.nil, 0);
		_Thai = new RangeTable.ptr(new sliceType([new Range16.ptr(3585, 3642, 1), new Range16.ptr(3648, 3675, 1)]), sliceType$1.nil, 0);
		_Tibetan = new RangeTable.ptr(new sliceType([new Range16.ptr(3840, 3911, 1), new Range16.ptr(3913, 3948, 1), new Range16.ptr(3953, 3991, 1), new Range16.ptr(3993, 4028, 1), new Range16.ptr(4030, 4044, 1), new Range16.ptr(4046, 4052, 1), new Range16.ptr(4057, 4058, 1)]), sliceType$1.nil, 0);
		_Tifinagh = new RangeTable.ptr(new sliceType([new Range16.ptr(11568, 11623, 1), new Range16.ptr(11631, 11632, 1), new Range16.ptr(11647, 11647, 1)]), sliceType$1.nil, 0);
		_Tirhuta = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(70784, 70855, 1), new Range32.ptr(70864, 70873, 1)]), 0);
		_Ugaritic = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(66432, 66461, 1), new Range32.ptr(66463, 66463, 1)]), 0);
		_Vai = new RangeTable.ptr(new sliceType([new Range16.ptr(42240, 42539, 1)]), sliceType$1.nil, 0);
		_Warang_Citi = new RangeTable.ptr(new sliceType([]), new sliceType$1([new Range32.ptr(71840, 71922, 1), new Range32.ptr(71935, 71935, 1)]), 0);
		_Yi = new RangeTable.ptr(new sliceType([new Range16.ptr(40960, 42124, 1), new Range16.ptr(42128, 42182, 1)]), sliceType$1.nil, 0);
		$pkg.Arabic = _Arabic;
		$pkg.Armenian = _Armenian;
		$pkg.Avestan = _Avestan;
		$pkg.Balinese = _Balinese;
		$pkg.Bamum = _Bamum;
		$pkg.Bassa_Vah = _Bassa_Vah;
		$pkg.Batak = _Batak;
		$pkg.Bengali = _Bengali;
		$pkg.Bopomofo = _Bopomofo;
		$pkg.Brahmi = _Brahmi;
		$pkg.Braille = _Braille;
		$pkg.Buginese = _Buginese;
		$pkg.Buhid = _Buhid;
		$pkg.Canadian_Aboriginal = _Canadian_Aboriginal;
		$pkg.Carian = _Carian;
		$pkg.Caucasian_Albanian = _Caucasian_Albanian;
		$pkg.Chakma = _Chakma;
		$pkg.Cham = _Cham;
		$pkg.Cherokee = _Cherokee;
		$pkg.Common = _Common;
		$pkg.Coptic = _Coptic;
		$pkg.Cuneiform = _Cuneiform;
		$pkg.Cypriot = _Cypriot;
		$pkg.Cyrillic = _Cyrillic;
		$pkg.Deseret = _Deseret;
		$pkg.Devanagari = _Devanagari;
		$pkg.Duployan = _Duployan;
		$pkg.Egyptian_Hieroglyphs = _Egyptian_Hieroglyphs;
		$pkg.Elbasan = _Elbasan;
		$pkg.Ethiopic = _Ethiopic;
		$pkg.Georgian = _Georgian;
		$pkg.Glagolitic = _Glagolitic;
		$pkg.Gothic = _Gothic;
		$pkg.Grantha = _Grantha;
		$pkg.Greek = _Greek;
		$pkg.Gujarati = _Gujarati;
		$pkg.Gurmukhi = _Gurmukhi;
		$pkg.Han = _Han;
		$pkg.Hangul = _Hangul;
		$pkg.Hanunoo = _Hanunoo;
		$pkg.Hebrew = _Hebrew;
		$pkg.Hiragana = _Hiragana;
		$pkg.Imperial_Aramaic = _Imperial_Aramaic;
		$pkg.Inherited = _Inherited;
		$pkg.Inscriptional_Pahlavi = _Inscriptional_Pahlavi;
		$pkg.Inscriptional_Parthian = _Inscriptional_Parthian;
		$pkg.Javanese = _Javanese;
		$pkg.Kaithi = _Kaithi;
		$pkg.Kannada = _Kannada;
		$pkg.Katakana = _Katakana;
		$pkg.Kayah_Li = _Kayah_Li;
		$pkg.Kharoshthi = _Kharoshthi;
		$pkg.Khmer = _Khmer;
		$pkg.Khojki = _Khojki;
		$pkg.Khudawadi = _Khudawadi;
		$pkg.Lao = _Lao;
		$pkg.Latin = _Latin;
		$pkg.Lepcha = _Lepcha;
		$pkg.Limbu = _Limbu;
		$pkg.Linear_A = _Linear_A;
		$pkg.Linear_B = _Linear_B;
		$pkg.Lisu = _Lisu;
		$pkg.Lycian = _Lycian;
		$pkg.Lydian = _Lydian;
		$pkg.Mahajani = _Mahajani;
		$pkg.Malayalam = _Malayalam;
		$pkg.Mandaic = _Mandaic;
		$pkg.Manichaean = _Manichaean;
		$pkg.Meetei_Mayek = _Meetei_Mayek;
		$pkg.Mende_Kikakui = _Mende_Kikakui;
		$pkg.Meroitic_Cursive = _Meroitic_Cursive;
		$pkg.Meroitic_Hieroglyphs = _Meroitic_Hieroglyphs;
		$pkg.Miao = _Miao;
		$pkg.Modi = _Modi;
		$pkg.Mongolian = _Mongolian;
		$pkg.Mro = _Mro;
		$pkg.Myanmar = _Myanmar;
		$pkg.Nabataean = _Nabataean;
		$pkg.New_Tai_Lue = _New_Tai_Lue;
		$pkg.Nko = _Nko;
		$pkg.Ogham = _Ogham;
		$pkg.Ol_Chiki = _Ol_Chiki;
		$pkg.Old_Italic = _Old_Italic;
		$pkg.Old_North_Arabian = _Old_North_Arabian;
		$pkg.Old_Permic = _Old_Permic;
		$pkg.Old_Persian = _Old_Persian;
		$pkg.Old_South_Arabian = _Old_South_Arabian;
		$pkg.Old_Turkic = _Old_Turkic;
		$pkg.Oriya = _Oriya;
		$pkg.Osmanya = _Osmanya;
		$pkg.Pahawh_Hmong = _Pahawh_Hmong;
		$pkg.Palmyrene = _Palmyrene;
		$pkg.Pau_Cin_Hau = _Pau_Cin_Hau;
		$pkg.Phags_Pa = _Phags_Pa;
		$pkg.Phoenician = _Phoenician;
		$pkg.Psalter_Pahlavi = _Psalter_Pahlavi;
		$pkg.Rejang = _Rejang;
		$pkg.Runic = _Runic;
		$pkg.Samaritan = _Samaritan;
		$pkg.Saurashtra = _Saurashtra;
		$pkg.Sharada = _Sharada;
		$pkg.Shavian = _Shavian;
		$pkg.Siddham = _Siddham;
		$pkg.Sinhala = _Sinhala;
		$pkg.Sora_Sompeng = _Sora_Sompeng;
		$pkg.Sundanese = _Sundanese;
		$pkg.Syloti_Nagri = _Syloti_Nagri;
		$pkg.Syriac = _Syriac;
		$pkg.Tagalog = _Tagalog;
		$pkg.Tagbanwa = _Tagbanwa;
		$pkg.Tai_Le = _Tai_Le;
		$pkg.Tai_Tham = _Tai_Tham;
		$pkg.Tai_Viet = _Tai_Viet;
		$pkg.Takri = _Takri;
		$pkg.Tamil = _Tamil;
		$pkg.Telugu = _Telugu;
		$pkg.Thaana = _Thaana;
		$pkg.Thai = _Thai;
		$pkg.Tibetan = _Tibetan;
		$pkg.Tifinagh = _Tifinagh;
		$pkg.Tirhuta = _Tirhuta;
		$pkg.Ugaritic = _Ugaritic;
		$pkg.Vai = _Vai;
		$pkg.Warang_Citi = _Warang_Citi;
		$pkg.Yi = _Yi;
		$pkg.Scripts = (_map$1 = new $Map(), _key$1 = "Arabic", _map$1[_key$1] = { k: _key$1, v: $pkg.Arabic }, _key$1 = "Armenian", _map$1[_key$1] = { k: _key$1, v: $pkg.Armenian }, _key$1 = "Avestan", _map$1[_key$1] = { k: _key$1, v: $pkg.Avestan }, _key$1 = "Balinese", _map$1[_key$1] = { k: _key$1, v: $pkg.Balinese }, _key$1 = "Bamum", _map$1[_key$1] = { k: _key$1, v: $pkg.Bamum }, _key$1 = "Bassa_Vah", _map$1[_key$1] = { k: _key$1, v: $pkg.Bassa_Vah }, _key$1 = "Batak", _map$1[_key$1] = { k: _key$1, v: $pkg.Batak }, _key$1 = "Bengali", _map$1[_key$1] = { k: _key$1, v: $pkg.Bengali }, _key$1 = "Bopomofo", _map$1[_key$1] = { k: _key$1, v: $pkg.Bopomofo }, _key$1 = "Brahmi", _map$1[_key$1] = { k: _key$1, v: $pkg.Brahmi }, _key$1 = "Braille", _map$1[_key$1] = { k: _key$1, v: $pkg.Braille }, _key$1 = "Buginese", _map$1[_key$1] = { k: _key$1, v: $pkg.Buginese }, _key$1 = "Buhid", _map$1[_key$1] = { k: _key$1, v: $pkg.Buhid }, _key$1 = "Canadian_Aboriginal", _map$1[_key$1] = { k: _key$1, v: $pkg.Canadian_Aboriginal }, _key$1 = "Carian", _map$1[_key$1] = { k: _key$1, v: $pkg.Carian }, _key$1 = "Caucasian_Albanian", _map$1[_key$1] = { k: _key$1, v: $pkg.Caucasian_Albanian }, _key$1 = "Chakma", _map$1[_key$1] = { k: _key$1, v: $pkg.Chakma }, _key$1 = "Cham", _map$1[_key$1] = { k: _key$1, v: $pkg.Cham }, _key$1 = "Cherokee", _map$1[_key$1] = { k: _key$1, v: $pkg.Cherokee }, _key$1 = "Common", _map$1[_key$1] = { k: _key$1, v: $pkg.Common }, _key$1 = "Coptic", _map$1[_key$1] = { k: _key$1, v: $pkg.Coptic }, _key$1 = "Cuneiform", _map$1[_key$1] = { k: _key$1, v: $pkg.Cuneiform }, _key$1 = "Cypriot", _map$1[_key$1] = { k: _key$1, v: $pkg.Cypriot }, _key$1 = "Cyrillic", _map$1[_key$1] = { k: _key$1, v: $pkg.Cyrillic }, _key$1 = "Deseret", _map$1[_key$1] = { k: _key$1, v: $pkg.Deseret }, _key$1 = "Devanagari", _map$1[_key$1] = { k: _key$1, v: $pkg.Devanagari }, _key$1 = "Duployan", _map$1[_key$1] = { k: _key$1, v: $pkg.Duployan }, _key$1 = "Egyptian_Hieroglyphs", _map$1[_key$1] = { k: _key$1, v: $pkg.Egyptian_Hieroglyphs }, _key$1 = "Elbasan", _map$1[_key$1] = { k: _key$1, v: $pkg.Elbasan }, _key$1 = "Ethiopic", _map$1[_key$1] = { k: _key$1, v: $pkg.Ethiopic }, _key$1 = "Georgian", _map$1[_key$1] = { k: _key$1, v: $pkg.Georgian }, _key$1 = "Glagolitic", _map$1[_key$1] = { k: _key$1, v: $pkg.Glagolitic }, _key$1 = "Gothic", _map$1[_key$1] = { k: _key$1, v: $pkg.Gothic }, _key$1 = "Grantha", _map$1[_key$1] = { k: _key$1, v: $pkg.Grantha }, _key$1 = "Greek", _map$1[_key$1] = { k: _key$1, v: $pkg.Greek }, _key$1 = "Gujarati", _map$1[_key$1] = { k: _key$1, v: $pkg.Gujarati }, _key$1 = "Gurmukhi", _map$1[_key$1] = { k: _key$1, v: $pkg.Gurmukhi }, _key$1 = "Han", _map$1[_key$1] = { k: _key$1, v: $pkg.Han }, _key$1 = "Hangul", _map$1[_key$1] = { k: _key$1, v: $pkg.Hangul }, _key$1 = "Hanunoo", _map$1[_key$1] = { k: _key$1, v: $pkg.Hanunoo }, _key$1 = "Hebrew", _map$1[_key$1] = { k: _key$1, v: $pkg.Hebrew }, _key$1 = "Hiragana", _map$1[_key$1] = { k: _key$1, v: $pkg.Hiragana }, _key$1 = "Imperial_Aramaic", _map$1[_key$1] = { k: _key$1, v: $pkg.Imperial_Aramaic }, _key$1 = "Inherited", _map$1[_key$1] = { k: _key$1, v: $pkg.Inherited }, _key$1 = "Inscriptional_Pahlavi", _map$1[_key$1] = { k: _key$1, v: $pkg.Inscriptional_Pahlavi }, _key$1 = "Inscriptional_Parthian", _map$1[_key$1] = { k: _key$1, v: $pkg.Inscriptional_Parthian }, _key$1 = "Javanese", _map$1[_key$1] = { k: _key$1, v: $pkg.Javanese }, _key$1 = "Kaithi", _map$1[_key$1] = { k: _key$1, v: $pkg.Kaithi }, _key$1 = "Kannada", _map$1[_key$1] = { k: _key$1, v: $pkg.Kannada }, _key$1 = "Katakana", _map$1[_key$1] = { k: _key$1, v: $pkg.Katakana }, _key$1 = "Kayah_Li", _map$1[_key$1] = { k: _key$1, v: $pkg.Kayah_Li }, _key$1 = "Kharoshthi", _map$1[_key$1] = { k: _key$1, v: $pkg.Kharoshthi }, _key$1 = "Khmer", _map$1[_key$1] = { k: _key$1, v: $pkg.Khmer }, _key$1 = "Khojki", _map$1[_key$1] = { k: _key$1, v: $pkg.Khojki }, _key$1 = "Khudawadi", _map$1[_key$1] = { k: _key$1, v: $pkg.Khudawadi }, _key$1 = "Lao", _map$1[_key$1] = { k: _key$1, v: $pkg.Lao }, _key$1 = "Latin", _map$1[_key$1] = { k: _key$1, v: $pkg.Latin }, _key$1 = "Lepcha", _map$1[_key$1] = { k: _key$1, v: $pkg.Lepcha }, _key$1 = "Limbu", _map$1[_key$1] = { k: _key$1, v: $pkg.Limbu }, _key$1 = "Linear_A", _map$1[_key$1] = { k: _key$1, v: $pkg.Linear_A }, _key$1 = "Linear_B", _map$1[_key$1] = { k: _key$1, v: $pkg.Linear_B }, _key$1 = "Lisu", _map$1[_key$1] = { k: _key$1, v: $pkg.Lisu }, _key$1 = "Lycian", _map$1[_key$1] = { k: _key$1, v: $pkg.Lycian }, _key$1 = "Lydian", _map$1[_key$1] = { k: _key$1, v: $pkg.Lydian }, _key$1 = "Mahajani", _map$1[_key$1] = { k: _key$1, v: $pkg.Mahajani }, _key$1 = "Malayalam", _map$1[_key$1] = { k: _key$1, v: $pkg.Malayalam }, _key$1 = "Mandaic", _map$1[_key$1] = { k: _key$1, v: $pkg.Mandaic }, _key$1 = "Manichaean", _map$1[_key$1] = { k: _key$1, v: $pkg.Manichaean }, _key$1 = "Meetei_Mayek", _map$1[_key$1] = { k: _key$1, v: $pkg.Meetei_Mayek }, _key$1 = "Mende_Kikakui", _map$1[_key$1] = { k: _key$1, v: $pkg.Mende_Kikakui }, _key$1 = "Meroitic_Cursive", _map$1[_key$1] = { k: _key$1, v: $pkg.Meroitic_Cursive }, _key$1 = "Meroitic_Hieroglyphs", _map$1[_key$1] = { k: _key$1, v: $pkg.Meroitic_Hieroglyphs }, _key$1 = "Miao", _map$1[_key$1] = { k: _key$1, v: $pkg.Miao }, _key$1 = "Modi", _map$1[_key$1] = { k: _key$1, v: $pkg.Modi }, _key$1 = "Mongolian", _map$1[_key$1] = { k: _key$1, v: $pkg.Mongolian }, _key$1 = "Mro", _map$1[_key$1] = { k: _key$1, v: $pkg.Mro }, _key$1 = "Myanmar", _map$1[_key$1] = { k: _key$1, v: $pkg.Myanmar }, _key$1 = "Nabataean", _map$1[_key$1] = { k: _key$1, v: $pkg.Nabataean }, _key$1 = "New_Tai_Lue", _map$1[_key$1] = { k: _key$1, v: $pkg.New_Tai_Lue }, _key$1 = "Nko", _map$1[_key$1] = { k: _key$1, v: $pkg.Nko }, _key$1 = "Ogham", _map$1[_key$1] = { k: _key$1, v: $pkg.Ogham }, _key$1 = "Ol_Chiki", _map$1[_key$1] = { k: _key$1, v: $pkg.Ol_Chiki }, _key$1 = "Old_Italic", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_Italic }, _key$1 = "Old_North_Arabian", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_North_Arabian }, _key$1 = "Old_Permic", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_Permic }, _key$1 = "Old_Persian", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_Persian }, _key$1 = "Old_South_Arabian", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_South_Arabian }, _key$1 = "Old_Turkic", _map$1[_key$1] = { k: _key$1, v: $pkg.Old_Turkic }, _key$1 = "Oriya", _map$1[_key$1] = { k: _key$1, v: $pkg.Oriya }, _key$1 = "Osmanya", _map$1[_key$1] = { k: _key$1, v: $pkg.Osmanya }, _key$1 = "Pahawh_Hmong", _map$1[_key$1] = { k: _key$1, v: $pkg.Pahawh_Hmong }, _key$1 = "Palmyrene", _map$1[_key$1] = { k: _key$1, v: $pkg.Palmyrene }, _key$1 = "Pau_Cin_Hau", _map$1[_key$1] = { k: _key$1, v: $pkg.Pau_Cin_Hau }, _key$1 = "Phags_Pa", _map$1[_key$1] = { k: _key$1, v: $pkg.Phags_Pa }, _key$1 = "Phoenician", _map$1[_key$1] = { k: _key$1, v: $pkg.Phoenician }, _key$1 = "Psalter_Pahlavi", _map$1[_key$1] = { k: _key$1, v: $pkg.Psalter_Pahlavi }, _key$1 = "Rejang", _map$1[_key$1] = { k: _key$1, v: $pkg.Rejang }, _key$1 = "Runic", _map$1[_key$1] = { k: _key$1, v: $pkg.Runic }, _key$1 = "Samaritan", _map$1[_key$1] = { k: _key$1, v: $pkg.Samaritan }, _key$1 = "Saurashtra", _map$1[_key$1] = { k: _key$1, v: $pkg.Saurashtra }, _key$1 = "Sharada", _map$1[_key$1] = { k: _key$1, v: $pkg.Sharada }, _key$1 = "Shavian", _map$1[_key$1] = { k: _key$1, v: $pkg.Shavian }, _key$1 = "Siddham", _map$1[_key$1] = { k: _key$1, v: $pkg.Siddham }, _key$1 = "Sinhala", _map$1[_key$1] = { k: _key$1, v: $pkg.Sinhala }, _key$1 = "Sora_Sompeng", _map$1[_key$1] = { k: _key$1, v: $pkg.Sora_Sompeng }, _key$1 = "Sundanese", _map$1[_key$1] = { k: _key$1, v: $pkg.Sundanese }, _key$1 = "Syloti_Nagri", _map$1[_key$1] = { k: _key$1, v: $pkg.Syloti_Nagri }, _key$1 = "Syriac", _map$1[_key$1] = { k: _key$1, v: $pkg.Syriac }, _key$1 = "Tagalog", _map$1[_key$1] = { k: _key$1, v: $pkg.Tagalog }, _key$1 = "Tagbanwa", _map$1[_key$1] = { k: _key$1, v: $pkg.Tagbanwa }, _key$1 = "Tai_Le", _map$1[_key$1] = { k: _key$1, v: $pkg.Tai_Le }, _key$1 = "Tai_Tham", _map$1[_key$1] = { k: _key$1, v: $pkg.Tai_Tham }, _key$1 = "Tai_Viet", _map$1[_key$1] = { k: _key$1, v: $pkg.Tai_Viet }, _key$1 = "Takri", _map$1[_key$1] = { k: _key$1, v: $pkg.Takri }, _key$1 = "Tamil", _map$1[_key$1] = { k: _key$1, v: $pkg.Tamil }, _key$1 = "Telugu", _map$1[_key$1] = { k: _key$1, v: $pkg.Telugu }, _key$1 = "Thaana", _map$1[_key$1] = { k: _key$1, v: $pkg.Thaana }, _key$1 = "Thai", _map$1[_key$1] = { k: _key$1, v: $pkg.Thai }, _key$1 = "Tibetan", _map$1[_key$1] = { k: _key$1, v: $pkg.Tibetan }, _key$1 = "Tifinagh", _map$1[_key$1] = { k: _key$1, v: $pkg.Tifinagh }, _key$1 = "Tirhuta", _map$1[_key$1] = { k: _key$1, v: $pkg.Tirhuta }, _key$1 = "Ugaritic", _map$1[_key$1] = { k: _key$1, v: $pkg.Ugaritic }, _key$1 = "Vai", _map$1[_key$1] = { k: _key$1, v: $pkg.Vai }, _key$1 = "Warang_Citi", _map$1[_key$1] = { k: _key$1, v: $pkg.Warang_Citi }, _key$1 = "Yi", _map$1[_key$1] = { k: _key$1, v: $pkg.Yi }, _map$1);
		_CaseRanges = new sliceType$3([new CaseRange.ptr(65, 90, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(97, 122, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(181, 181, $toNativeArray($kindInt32, [743, 0, 743])), new CaseRange.ptr(192, 214, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(216, 222, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(224, 246, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(248, 254, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(255, 255, $toNativeArray($kindInt32, [121, 0, 121])), new CaseRange.ptr(256, 303, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(304, 304, $toNativeArray($kindInt32, [0, -199, 0])), new CaseRange.ptr(305, 305, $toNativeArray($kindInt32, [-232, 0, -232])), new CaseRange.ptr(306, 311, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(313, 328, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(330, 375, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(376, 376, $toNativeArray($kindInt32, [0, -121, 0])), new CaseRange.ptr(377, 382, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(383, 383, $toNativeArray($kindInt32, [-300, 0, -300])), new CaseRange.ptr(384, 384, $toNativeArray($kindInt32, [195, 0, 195])), new CaseRange.ptr(385, 385, $toNativeArray($kindInt32, [0, 210, 0])), new CaseRange.ptr(386, 389, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(390, 390, $toNativeArray($kindInt32, [0, 206, 0])), new CaseRange.ptr(391, 392, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(393, 394, $toNativeArray($kindInt32, [0, 205, 0])), new CaseRange.ptr(395, 396, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(398, 398, $toNativeArray($kindInt32, [0, 79, 0])), new CaseRange.ptr(399, 399, $toNativeArray($kindInt32, [0, 202, 0])), new CaseRange.ptr(400, 400, $toNativeArray($kindInt32, [0, 203, 0])), new CaseRange.ptr(401, 402, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(403, 403, $toNativeArray($kindInt32, [0, 205, 0])), new CaseRange.ptr(404, 404, $toNativeArray($kindInt32, [0, 207, 0])), new CaseRange.ptr(405, 405, $toNativeArray($kindInt32, [97, 0, 97])), new CaseRange.ptr(406, 406, $toNativeArray($kindInt32, [0, 211, 0])), new CaseRange.ptr(407, 407, $toNativeArray($kindInt32, [0, 209, 0])), new CaseRange.ptr(408, 409, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(410, 410, $toNativeArray($kindInt32, [163, 0, 163])), new CaseRange.ptr(412, 412, $toNativeArray($kindInt32, [0, 211, 0])), new CaseRange.ptr(413, 413, $toNativeArray($kindInt32, [0, 213, 0])), new CaseRange.ptr(414, 414, $toNativeArray($kindInt32, [130, 0, 130])), new CaseRange.ptr(415, 415, $toNativeArray($kindInt32, [0, 214, 0])), new CaseRange.ptr(416, 421, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(422, 422, $toNativeArray($kindInt32, [0, 218, 0])), new CaseRange.ptr(423, 424, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(425, 425, $toNativeArray($kindInt32, [0, 218, 0])), new CaseRange.ptr(428, 429, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(430, 430, $toNativeArray($kindInt32, [0, 218, 0])), new CaseRange.ptr(431, 432, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(433, 434, $toNativeArray($kindInt32, [0, 217, 0])), new CaseRange.ptr(435, 438, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(439, 439, $toNativeArray($kindInt32, [0, 219, 0])), new CaseRange.ptr(440, 441, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(444, 445, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(447, 447, $toNativeArray($kindInt32, [56, 0, 56])), new CaseRange.ptr(452, 452, $toNativeArray($kindInt32, [0, 2, 1])), new CaseRange.ptr(453, 453, $toNativeArray($kindInt32, [-1, 1, 0])), new CaseRange.ptr(454, 454, $toNativeArray($kindInt32, [-2, 0, -1])), new CaseRange.ptr(455, 455, $toNativeArray($kindInt32, [0, 2, 1])), new CaseRange.ptr(456, 456, $toNativeArray($kindInt32, [-1, 1, 0])), new CaseRange.ptr(457, 457, $toNativeArray($kindInt32, [-2, 0, -1])), new CaseRange.ptr(458, 458, $toNativeArray($kindInt32, [0, 2, 1])), new CaseRange.ptr(459, 459, $toNativeArray($kindInt32, [-1, 1, 0])), new CaseRange.ptr(460, 460, $toNativeArray($kindInt32, [-2, 0, -1])), new CaseRange.ptr(461, 476, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(477, 477, $toNativeArray($kindInt32, [-79, 0, -79])), new CaseRange.ptr(478, 495, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(497, 497, $toNativeArray($kindInt32, [0, 2, 1])), new CaseRange.ptr(498, 498, $toNativeArray($kindInt32, [-1, 1, 0])), new CaseRange.ptr(499, 499, $toNativeArray($kindInt32, [-2, 0, -1])), new CaseRange.ptr(500, 501, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(502, 502, $toNativeArray($kindInt32, [0, -97, 0])), new CaseRange.ptr(503, 503, $toNativeArray($kindInt32, [0, -56, 0])), new CaseRange.ptr(504, 543, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(544, 544, $toNativeArray($kindInt32, [0, -130, 0])), new CaseRange.ptr(546, 563, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(570, 570, $toNativeArray($kindInt32, [0, 10795, 0])), new CaseRange.ptr(571, 572, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(573, 573, $toNativeArray($kindInt32, [0, -163, 0])), new CaseRange.ptr(574, 574, $toNativeArray($kindInt32, [0, 10792, 0])), new CaseRange.ptr(575, 576, $toNativeArray($kindInt32, [10815, 0, 10815])), new CaseRange.ptr(577, 578, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(579, 579, $toNativeArray($kindInt32, [0, -195, 0])), new CaseRange.ptr(580, 580, $toNativeArray($kindInt32, [0, 69, 0])), new CaseRange.ptr(581, 581, $toNativeArray($kindInt32, [0, 71, 0])), new CaseRange.ptr(582, 591, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(592, 592, $toNativeArray($kindInt32, [10783, 0, 10783])), new CaseRange.ptr(593, 593, $toNativeArray($kindInt32, [10780, 0, 10780])), new CaseRange.ptr(594, 594, $toNativeArray($kindInt32, [10782, 0, 10782])), new CaseRange.ptr(595, 595, $toNativeArray($kindInt32, [-210, 0, -210])), new CaseRange.ptr(596, 596, $toNativeArray($kindInt32, [-206, 0, -206])), new CaseRange.ptr(598, 599, $toNativeArray($kindInt32, [-205, 0, -205])), new CaseRange.ptr(601, 601, $toNativeArray($kindInt32, [-202, 0, -202])), new CaseRange.ptr(603, 603, $toNativeArray($kindInt32, [-203, 0, -203])), new CaseRange.ptr(604, 604, $toNativeArray($kindInt32, [42319, 0, 42319])), new CaseRange.ptr(608, 608, $toNativeArray($kindInt32, [-205, 0, -205])), new CaseRange.ptr(609, 609, $toNativeArray($kindInt32, [42315, 0, 42315])), new CaseRange.ptr(611, 611, $toNativeArray($kindInt32, [-207, 0, -207])), new CaseRange.ptr(613, 613, $toNativeArray($kindInt32, [42280, 0, 42280])), new CaseRange.ptr(614, 614, $toNativeArray($kindInt32, [42308, 0, 42308])), new CaseRange.ptr(616, 616, $toNativeArray($kindInt32, [-209, 0, -209])), new CaseRange.ptr(617, 617, $toNativeArray($kindInt32, [-211, 0, -211])), new CaseRange.ptr(619, 619, $toNativeArray($kindInt32, [10743, 0, 10743])), new CaseRange.ptr(620, 620, $toNativeArray($kindInt32, [42305, 0, 42305])), new CaseRange.ptr(623, 623, $toNativeArray($kindInt32, [-211, 0, -211])), new CaseRange.ptr(625, 625, $toNativeArray($kindInt32, [10749, 0, 10749])), new CaseRange.ptr(626, 626, $toNativeArray($kindInt32, [-213, 0, -213])), new CaseRange.ptr(629, 629, $toNativeArray($kindInt32, [-214, 0, -214])), new CaseRange.ptr(637, 637, $toNativeArray($kindInt32, [10727, 0, 10727])), new CaseRange.ptr(640, 640, $toNativeArray($kindInt32, [-218, 0, -218])), new CaseRange.ptr(643, 643, $toNativeArray($kindInt32, [-218, 0, -218])), new CaseRange.ptr(647, 647, $toNativeArray($kindInt32, [42282, 0, 42282])), new CaseRange.ptr(648, 648, $toNativeArray($kindInt32, [-218, 0, -218])), new CaseRange.ptr(649, 649, $toNativeArray($kindInt32, [-69, 0, -69])), new CaseRange.ptr(650, 651, $toNativeArray($kindInt32, [-217, 0, -217])), new CaseRange.ptr(652, 652, $toNativeArray($kindInt32, [-71, 0, -71])), new CaseRange.ptr(658, 658, $toNativeArray($kindInt32, [-219, 0, -219])), new CaseRange.ptr(670, 670, $toNativeArray($kindInt32, [42258, 0, 42258])), new CaseRange.ptr(837, 837, $toNativeArray($kindInt32, [84, 0, 84])), new CaseRange.ptr(880, 883, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(886, 887, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(891, 893, $toNativeArray($kindInt32, [130, 0, 130])), new CaseRange.ptr(895, 895, $toNativeArray($kindInt32, [0, 116, 0])), new CaseRange.ptr(902, 902, $toNativeArray($kindInt32, [0, 38, 0])), new CaseRange.ptr(904, 906, $toNativeArray($kindInt32, [0, 37, 0])), new CaseRange.ptr(908, 908, $toNativeArray($kindInt32, [0, 64, 0])), new CaseRange.ptr(910, 911, $toNativeArray($kindInt32, [0, 63, 0])), new CaseRange.ptr(913, 929, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(931, 939, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(940, 940, $toNativeArray($kindInt32, [-38, 0, -38])), new CaseRange.ptr(941, 943, $toNativeArray($kindInt32, [-37, 0, -37])), new CaseRange.ptr(945, 961, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(962, 962, $toNativeArray($kindInt32, [-31, 0, -31])), new CaseRange.ptr(963, 971, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(972, 972, $toNativeArray($kindInt32, [-64, 0, -64])), new CaseRange.ptr(973, 974, $toNativeArray($kindInt32, [-63, 0, -63])), new CaseRange.ptr(975, 975, $toNativeArray($kindInt32, [0, 8, 0])), new CaseRange.ptr(976, 976, $toNativeArray($kindInt32, [-62, 0, -62])), new CaseRange.ptr(977, 977, $toNativeArray($kindInt32, [-57, 0, -57])), new CaseRange.ptr(981, 981, $toNativeArray($kindInt32, [-47, 0, -47])), new CaseRange.ptr(982, 982, $toNativeArray($kindInt32, [-54, 0, -54])), new CaseRange.ptr(983, 983, $toNativeArray($kindInt32, [-8, 0, -8])), new CaseRange.ptr(984, 1007, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1008, 1008, $toNativeArray($kindInt32, [-86, 0, -86])), new CaseRange.ptr(1009, 1009, $toNativeArray($kindInt32, [-80, 0, -80])), new CaseRange.ptr(1010, 1010, $toNativeArray($kindInt32, [7, 0, 7])), new CaseRange.ptr(1011, 1011, $toNativeArray($kindInt32, [-116, 0, -116])), new CaseRange.ptr(1012, 1012, $toNativeArray($kindInt32, [0, -60, 0])), new CaseRange.ptr(1013, 1013, $toNativeArray($kindInt32, [-96, 0, -96])), new CaseRange.ptr(1015, 1016, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1017, 1017, $toNativeArray($kindInt32, [0, -7, 0])), new CaseRange.ptr(1018, 1019, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1021, 1023, $toNativeArray($kindInt32, [0, -130, 0])), new CaseRange.ptr(1024, 1039, $toNativeArray($kindInt32, [0, 80, 0])), new CaseRange.ptr(1040, 1071, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(1072, 1103, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(1104, 1119, $toNativeArray($kindInt32, [-80, 0, -80])), new CaseRange.ptr(1120, 1153, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1162, 1215, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1216, 1216, $toNativeArray($kindInt32, [0, 15, 0])), new CaseRange.ptr(1217, 1230, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1231, 1231, $toNativeArray($kindInt32, [-15, 0, -15])), new CaseRange.ptr(1232, 1327, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(1329, 1366, $toNativeArray($kindInt32, [0, 48, 0])), new CaseRange.ptr(1377, 1414, $toNativeArray($kindInt32, [-48, 0, -48])), new CaseRange.ptr(4256, 4293, $toNativeArray($kindInt32, [0, 7264, 0])), new CaseRange.ptr(4295, 4295, $toNativeArray($kindInt32, [0, 7264, 0])), new CaseRange.ptr(4301, 4301, $toNativeArray($kindInt32, [0, 7264, 0])), new CaseRange.ptr(7545, 7545, $toNativeArray($kindInt32, [35332, 0, 35332])), new CaseRange.ptr(7549, 7549, $toNativeArray($kindInt32, [3814, 0, 3814])), new CaseRange.ptr(7680, 7829, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(7835, 7835, $toNativeArray($kindInt32, [-59, 0, -59])), new CaseRange.ptr(7838, 7838, $toNativeArray($kindInt32, [0, -7615, 0])), new CaseRange.ptr(7840, 7935, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(7936, 7943, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(7944, 7951, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(7952, 7957, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(7960, 7965, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(7968, 7975, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(7976, 7983, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(7984, 7991, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(7992, 7999, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8000, 8005, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8008, 8013, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8017, 8017, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8019, 8019, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8021, 8021, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8023, 8023, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8025, 8025, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8027, 8027, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8029, 8029, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8031, 8031, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8032, 8039, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8040, 8047, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8048, 8049, $toNativeArray($kindInt32, [74, 0, 74])), new CaseRange.ptr(8050, 8053, $toNativeArray($kindInt32, [86, 0, 86])), new CaseRange.ptr(8054, 8055, $toNativeArray($kindInt32, [100, 0, 100])), new CaseRange.ptr(8056, 8057, $toNativeArray($kindInt32, [128, 0, 128])), new CaseRange.ptr(8058, 8059, $toNativeArray($kindInt32, [112, 0, 112])), new CaseRange.ptr(8060, 8061, $toNativeArray($kindInt32, [126, 0, 126])), new CaseRange.ptr(8064, 8071, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8072, 8079, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8080, 8087, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8088, 8095, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8096, 8103, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8104, 8111, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8112, 8113, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8115, 8115, $toNativeArray($kindInt32, [9, 0, 9])), new CaseRange.ptr(8120, 8121, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8122, 8123, $toNativeArray($kindInt32, [0, -74, 0])), new CaseRange.ptr(8124, 8124, $toNativeArray($kindInt32, [0, -9, 0])), new CaseRange.ptr(8126, 8126, $toNativeArray($kindInt32, [-7205, 0, -7205])), new CaseRange.ptr(8131, 8131, $toNativeArray($kindInt32, [9, 0, 9])), new CaseRange.ptr(8136, 8139, $toNativeArray($kindInt32, [0, -86, 0])), new CaseRange.ptr(8140, 8140, $toNativeArray($kindInt32, [0, -9, 0])), new CaseRange.ptr(8144, 8145, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8152, 8153, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8154, 8155, $toNativeArray($kindInt32, [0, -100, 0])), new CaseRange.ptr(8160, 8161, $toNativeArray($kindInt32, [8, 0, 8])), new CaseRange.ptr(8165, 8165, $toNativeArray($kindInt32, [7, 0, 7])), new CaseRange.ptr(8168, 8169, $toNativeArray($kindInt32, [0, -8, 0])), new CaseRange.ptr(8170, 8171, $toNativeArray($kindInt32, [0, -112, 0])), new CaseRange.ptr(8172, 8172, $toNativeArray($kindInt32, [0, -7, 0])), new CaseRange.ptr(8179, 8179, $toNativeArray($kindInt32, [9, 0, 9])), new CaseRange.ptr(8184, 8185, $toNativeArray($kindInt32, [0, -128, 0])), new CaseRange.ptr(8186, 8187, $toNativeArray($kindInt32, [0, -126, 0])), new CaseRange.ptr(8188, 8188, $toNativeArray($kindInt32, [0, -9, 0])), new CaseRange.ptr(8486, 8486, $toNativeArray($kindInt32, [0, -7517, 0])), new CaseRange.ptr(8490, 8490, $toNativeArray($kindInt32, [0, -8383, 0])), new CaseRange.ptr(8491, 8491, $toNativeArray($kindInt32, [0, -8262, 0])), new CaseRange.ptr(8498, 8498, $toNativeArray($kindInt32, [0, 28, 0])), new CaseRange.ptr(8526, 8526, $toNativeArray($kindInt32, [-28, 0, -28])), new CaseRange.ptr(8544, 8559, $toNativeArray($kindInt32, [0, 16, 0])), new CaseRange.ptr(8560, 8575, $toNativeArray($kindInt32, [-16, 0, -16])), new CaseRange.ptr(8579, 8580, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(9398, 9423, $toNativeArray($kindInt32, [0, 26, 0])), new CaseRange.ptr(9424, 9449, $toNativeArray($kindInt32, [-26, 0, -26])), new CaseRange.ptr(11264, 11310, $toNativeArray($kindInt32, [0, 48, 0])), new CaseRange.ptr(11312, 11358, $toNativeArray($kindInt32, [-48, 0, -48])), new CaseRange.ptr(11360, 11361, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11362, 11362, $toNativeArray($kindInt32, [0, -10743, 0])), new CaseRange.ptr(11363, 11363, $toNativeArray($kindInt32, [0, -3814, 0])), new CaseRange.ptr(11364, 11364, $toNativeArray($kindInt32, [0, -10727, 0])), new CaseRange.ptr(11365, 11365, $toNativeArray($kindInt32, [-10795, 0, -10795])), new CaseRange.ptr(11366, 11366, $toNativeArray($kindInt32, [-10792, 0, -10792])), new CaseRange.ptr(11367, 11372, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11373, 11373, $toNativeArray($kindInt32, [0, -10780, 0])), new CaseRange.ptr(11374, 11374, $toNativeArray($kindInt32, [0, -10749, 0])), new CaseRange.ptr(11375, 11375, $toNativeArray($kindInt32, [0, -10783, 0])), new CaseRange.ptr(11376, 11376, $toNativeArray($kindInt32, [0, -10782, 0])), new CaseRange.ptr(11378, 11379, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11381, 11382, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11390, 11391, $toNativeArray($kindInt32, [0, -10815, 0])), new CaseRange.ptr(11392, 11491, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11499, 11502, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11506, 11507, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(11520, 11557, $toNativeArray($kindInt32, [-7264, 0, -7264])), new CaseRange.ptr(11559, 11559, $toNativeArray($kindInt32, [-7264, 0, -7264])), new CaseRange.ptr(11565, 11565, $toNativeArray($kindInt32, [-7264, 0, -7264])), new CaseRange.ptr(42560, 42605, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42624, 42651, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42786, 42799, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42802, 42863, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42873, 42876, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42877, 42877, $toNativeArray($kindInt32, [0, -35332, 0])), new CaseRange.ptr(42878, 42887, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42891, 42892, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42893, 42893, $toNativeArray($kindInt32, [0, -42280, 0])), new CaseRange.ptr(42896, 42899, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42902, 42921, $toNativeArray($kindInt32, [1114112, 1114112, 1114112])), new CaseRange.ptr(42922, 42922, $toNativeArray($kindInt32, [0, -42308, 0])), new CaseRange.ptr(42923, 42923, $toNativeArray($kindInt32, [0, -42319, 0])), new CaseRange.ptr(42924, 42924, $toNativeArray($kindInt32, [0, -42315, 0])), new CaseRange.ptr(42925, 42925, $toNativeArray($kindInt32, [0, -42305, 0])), new CaseRange.ptr(42928, 42928, $toNativeArray($kindInt32, [0, -42258, 0])), new CaseRange.ptr(42929, 42929, $toNativeArray($kindInt32, [0, -42282, 0])), new CaseRange.ptr(65313, 65338, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(65345, 65370, $toNativeArray($kindInt32, [-32, 0, -32])), new CaseRange.ptr(66560, 66599, $toNativeArray($kindInt32, [0, 40, 0])), new CaseRange.ptr(66600, 66639, $toNativeArray($kindInt32, [-40, 0, -40])), new CaseRange.ptr(71840, 71871, $toNativeArray($kindInt32, [0, 32, 0])), new CaseRange.ptr(71872, 71903, $toNativeArray($kindInt32, [-32, 0, -32]))]);
		$pkg.CaseRanges = _CaseRanges;
		properties = $toNativeArray($kindUint8, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 144, 130, 130, 130, 136, 130, 130, 130, 130, 130, 130, 136, 130, 130, 130, 130, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 130, 130, 136, 136, 136, 130, 130, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 130, 130, 130, 136, 130, 136, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 130, 136, 130, 136, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16, 130, 136, 136, 136, 136, 136, 130, 136, 136, 224, 130, 136, 0, 136, 136, 136, 136, 132, 132, 136, 192, 130, 130, 136, 132, 224, 130, 132, 132, 132, 130, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 136, 160, 160, 160, 160, 160, 160, 160, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 136, 192, 192, 192, 192, 192, 192, 192, 192]);
		caseOrbit = new sliceType$4([new foldPair.ptr(75, 107), new foldPair.ptr(83, 115), new foldPair.ptr(107, 8490), new foldPair.ptr(115, 383), new foldPair.ptr(181, 924), new foldPair.ptr(197, 229), new foldPair.ptr(223, 7838), new foldPair.ptr(229, 8491), new foldPair.ptr(304, 304), new foldPair.ptr(305, 305), new foldPair.ptr(383, 83), new foldPair.ptr(452, 453), new foldPair.ptr(453, 454), new foldPair.ptr(454, 452), new foldPair.ptr(455, 456), new foldPair.ptr(456, 457), new foldPair.ptr(457, 455), new foldPair.ptr(458, 459), new foldPair.ptr(459, 460), new foldPair.ptr(460, 458), new foldPair.ptr(497, 498), new foldPair.ptr(498, 499), new foldPair.ptr(499, 497), new foldPair.ptr(837, 921), new foldPair.ptr(914, 946), new foldPair.ptr(917, 949), new foldPair.ptr(920, 952), new foldPair.ptr(921, 953), new foldPair.ptr(922, 954), new foldPair.ptr(924, 956), new foldPair.ptr(928, 960), new foldPair.ptr(929, 961), new foldPair.ptr(931, 962), new foldPair.ptr(934, 966), new foldPair.ptr(937, 969), new foldPair.ptr(946, 976), new foldPair.ptr(949, 1013), new foldPair.ptr(952, 977), new foldPair.ptr(953, 8126), new foldPair.ptr(954, 1008), new foldPair.ptr(956, 181), new foldPair.ptr(960, 982), new foldPair.ptr(961, 1009), new foldPair.ptr(962, 963), new foldPair.ptr(963, 931), new foldPair.ptr(966, 981), new foldPair.ptr(969, 8486), new foldPair.ptr(976, 914), new foldPair.ptr(977, 1012), new foldPair.ptr(981, 934), new foldPair.ptr(982, 928), new foldPair.ptr(1008, 922), new foldPair.ptr(1009, 929), new foldPair.ptr(1012, 920), new foldPair.ptr(1013, 917), new foldPair.ptr(7776, 7777), new foldPair.ptr(7777, 7835), new foldPair.ptr(7835, 7776), new foldPair.ptr(7838, 223), new foldPair.ptr(8126, 837), new foldPair.ptr(8486, 937), new foldPair.ptr(8490, 75), new foldPair.ptr(8491, 197)]);
		foldCommon = new RangeTable.ptr(new sliceType([new Range16.ptr(924, 956, 32)]), sliceType$1.nil, 0);
		foldGreek = new RangeTable.ptr(new sliceType([new Range16.ptr(181, 837, 656)]), sliceType$1.nil, 0);
		foldInherited = new RangeTable.ptr(new sliceType([new Range16.ptr(921, 953, 32), new Range16.ptr(8126, 8126, 1)]), sliceType$1.nil, 0);
		foldL = new RangeTable.ptr(new sliceType([new Range16.ptr(837, 837, 1)]), sliceType$1.nil, 0);
		foldLl = new RangeTable.ptr(new sliceType([new Range16.ptr(65, 90, 1), new Range16.ptr(192, 214, 1), new Range16.ptr(216, 222, 1), new Range16.ptr(256, 302, 2), new Range16.ptr(306, 310, 2), new Range16.ptr(313, 327, 2), new Range16.ptr(330, 376, 2), new Range16.ptr(377, 381, 2), new Range16.ptr(385, 386, 1), new Range16.ptr(388, 390, 2), new Range16.ptr(391, 393, 2), new Range16.ptr(394, 395, 1), new Range16.ptr(398, 401, 1), new Range16.ptr(403, 404, 1), new Range16.ptr(406, 408, 1), new Range16.ptr(412, 413, 1), new Range16.ptr(415, 416, 1), new Range16.ptr(418, 422, 2), new Range16.ptr(423, 425, 2), new Range16.ptr(428, 430, 2), new Range16.ptr(431, 433, 2), new Range16.ptr(434, 435, 1), new Range16.ptr(437, 439, 2), new Range16.ptr(440, 444, 4), new Range16.ptr(452, 453, 1), new Range16.ptr(455, 456, 1), new Range16.ptr(458, 459, 1), new Range16.ptr(461, 475, 2), new Range16.ptr(478, 494, 2), new Range16.ptr(497, 498, 1), new Range16.ptr(500, 502, 2), new Range16.ptr(503, 504, 1), new Range16.ptr(506, 562, 2), new Range16.ptr(570, 571, 1), new Range16.ptr(573, 574, 1), new Range16.ptr(577, 579, 2), new Range16.ptr(580, 582, 1), new Range16.ptr(584, 590, 2), new Range16.ptr(837, 880, 43), new Range16.ptr(882, 886, 4), new Range16.ptr(895, 902, 7), new Range16.ptr(904, 906, 1), new Range16.ptr(908, 910, 2), new Range16.ptr(911, 913, 2), new Range16.ptr(914, 929, 1), new Range16.ptr(931, 939, 1), new Range16.ptr(975, 984, 9), new Range16.ptr(986, 1006, 2), new Range16.ptr(1012, 1015, 3), new Range16.ptr(1017, 1018, 1), new Range16.ptr(1021, 1071, 1), new Range16.ptr(1120, 1152, 2), new Range16.ptr(1162, 1216, 2), new Range16.ptr(1217, 1229, 2), new Range16.ptr(1232, 1326, 2), new Range16.ptr(1329, 1366, 1), new Range16.ptr(4256, 4293, 1), new Range16.ptr(4295, 4301, 6), new Range16.ptr(7680, 7828, 2), new Range16.ptr(7838, 7934, 2), new Range16.ptr(7944, 7951, 1), new Range16.ptr(7960, 7965, 1), new Range16.ptr(7976, 7983, 1), new Range16.ptr(7992, 7999, 1), new Range16.ptr(8008, 8013, 1), new Range16.ptr(8025, 8031, 2), new Range16.ptr(8040, 8047, 1), new Range16.ptr(8072, 8079, 1), new Range16.ptr(8088, 8095, 1), new Range16.ptr(8104, 8111, 1), new Range16.ptr(8120, 8124, 1), new Range16.ptr(8136, 8140, 1), new Range16.ptr(8152, 8155, 1), new Range16.ptr(8168, 8172, 1), new Range16.ptr(8184, 8188, 1), new Range16.ptr(8486, 8490, 4), new Range16.ptr(8491, 8498, 7), new Range16.ptr(8579, 11264, 2685), new Range16.ptr(11265, 11310, 1), new Range16.ptr(11360, 11362, 2), new Range16.ptr(11363, 11364, 1), new Range16.ptr(11367, 11373, 2), new Range16.ptr(11374, 11376, 1), new Range16.ptr(11378, 11381, 3), new Range16.ptr(11390, 11392, 1), new Range16.ptr(11394, 11490, 2), new Range16.ptr(11499, 11501, 2), new Range16.ptr(11506, 42560, 31054), new Range16.ptr(42562, 42604, 2), new Range16.ptr(42624, 42650, 2), new Range16.ptr(42786, 42798, 2), new Range16.ptr(42802, 42862, 2), new Range16.ptr(42873, 42877, 2), new Range16.ptr(42878, 42886, 2), new Range16.ptr(42891, 42893, 2), new Range16.ptr(42896, 42898, 2), new Range16.ptr(42902, 42922, 2), new Range16.ptr(42923, 42925, 1), new Range16.ptr(42928, 42929, 1), new Range16.ptr(65313, 65338, 1)]), new sliceType$1([new Range32.ptr(66560, 66599, 1), new Range32.ptr(71840, 71871, 1)]), 3);
		foldLt = new RangeTable.ptr(new sliceType([new Range16.ptr(452, 454, 2), new Range16.ptr(455, 457, 2), new Range16.ptr(458, 460, 2), new Range16.ptr(497, 499, 2), new Range16.ptr(8064, 8071, 1), new Range16.ptr(8080, 8087, 1), new Range16.ptr(8096, 8103, 1), new Range16.ptr(8115, 8131, 16), new Range16.ptr(8179, 8179, 1)]), sliceType$1.nil, 0);
		foldLu = new RangeTable.ptr(new sliceType([new Range16.ptr(97, 122, 1), new Range16.ptr(181, 223, 42), new Range16.ptr(224, 246, 1), new Range16.ptr(248, 255, 1), new Range16.ptr(257, 303, 2), new Range16.ptr(307, 311, 2), new Range16.ptr(314, 328, 2), new Range16.ptr(331, 375, 2), new Range16.ptr(378, 382, 2), new Range16.ptr(383, 384, 1), new Range16.ptr(387, 389, 2), new Range16.ptr(392, 396, 4), new Range16.ptr(402, 405, 3), new Range16.ptr(409, 410, 1), new Range16.ptr(414, 417, 3), new Range16.ptr(419, 421, 2), new Range16.ptr(424, 429, 5), new Range16.ptr(432, 436, 4), new Range16.ptr(438, 441, 3), new Range16.ptr(445, 447, 2), new Range16.ptr(453, 454, 1), new Range16.ptr(456, 457, 1), new Range16.ptr(459, 460, 1), new Range16.ptr(462, 476, 2), new Range16.ptr(477, 495, 2), new Range16.ptr(498, 499, 1), new Range16.ptr(501, 505, 4), new Range16.ptr(507, 543, 2), new Range16.ptr(547, 563, 2), new Range16.ptr(572, 575, 3), new Range16.ptr(576, 578, 2), new Range16.ptr(583, 591, 2), new Range16.ptr(592, 596, 1), new Range16.ptr(598, 599, 1), new Range16.ptr(601, 603, 2), new Range16.ptr(604, 608, 4), new Range16.ptr(609, 613, 2), new Range16.ptr(614, 616, 2), new Range16.ptr(617, 619, 2), new Range16.ptr(620, 623, 3), new Range16.ptr(625, 626, 1), new Range16.ptr(629, 637, 8), new Range16.ptr(640, 643, 3), new Range16.ptr(647, 652, 1), new Range16.ptr(658, 670, 12), new Range16.ptr(837, 881, 44), new Range16.ptr(883, 891, 4), new Range16.ptr(892, 893, 1), new Range16.ptr(940, 943, 1), new Range16.ptr(945, 974, 1), new Range16.ptr(976, 977, 1), new Range16.ptr(981, 983, 1), new Range16.ptr(985, 1007, 2), new Range16.ptr(1008, 1011, 1), new Range16.ptr(1013, 1019, 3), new Range16.ptr(1072, 1119, 1), new Range16.ptr(1121, 1153, 2), new Range16.ptr(1163, 1215, 2), new Range16.ptr(1218, 1230, 2), new Range16.ptr(1231, 1327, 2), new Range16.ptr(1377, 1414, 1), new Range16.ptr(7545, 7549, 4), new Range16.ptr(7681, 7829, 2), new Range16.ptr(7835, 7841, 6), new Range16.ptr(7843, 7935, 2), new Range16.ptr(7936, 7943, 1), new Range16.ptr(7952, 7957, 1), new Range16.ptr(7968, 7975, 1), new Range16.ptr(7984, 7991, 1), new Range16.ptr(8000, 8005, 1), new Range16.ptr(8017, 8023, 2), new Range16.ptr(8032, 8039, 1), new Range16.ptr(8048, 8061, 1), new Range16.ptr(8112, 8113, 1), new Range16.ptr(8126, 8144, 18), new Range16.ptr(8145, 8160, 15), new Range16.ptr(8161, 8165, 4), new Range16.ptr(8526, 8580, 54), new Range16.ptr(11312, 11358, 1), new Range16.ptr(11361, 11365, 4), new Range16.ptr(11366, 11372, 2), new Range16.ptr(11379, 11382, 3), new Range16.ptr(11393, 11491, 2), new Range16.ptr(11500, 11502, 2), new Range16.ptr(11507, 11520, 13), new Range16.ptr(11521, 11557, 1), new Range16.ptr(11559, 11565, 6), new Range16.ptr(42561, 42605, 2), new Range16.ptr(42625, 42651, 2), new Range16.ptr(42787, 42799, 2), new Range16.ptr(42803, 42863, 2), new Range16.ptr(42874, 42876, 2), new Range16.ptr(42879, 42887, 2), new Range16.ptr(42892, 42897, 5), new Range16.ptr(42899, 42903, 4), new Range16.ptr(42905, 42921, 2), new Range16.ptr(65345, 65370, 1)]), new sliceType$1([new Range32.ptr(66600, 66639, 1), new Range32.ptr(71872, 71903, 1)]), 4);
		foldM = new RangeTable.ptr(new sliceType([new Range16.ptr(921, 953, 32), new Range16.ptr(8126, 8126, 1)]), sliceType$1.nil, 0);
		foldMn = new RangeTable.ptr(new sliceType([new Range16.ptr(921, 953, 32), new Range16.ptr(8126, 8126, 1)]), sliceType$1.nil, 0);
		$pkg.FoldCategory = (_map$3 = new $Map(), _key$3 = "Common", _map$3[_key$3] = { k: _key$3, v: foldCommon }, _key$3 = "Greek", _map$3[_key$3] = { k: _key$3, v: foldGreek }, _key$3 = "Inherited", _map$3[_key$3] = { k: _key$3, v: foldInherited }, _key$3 = "L", _map$3[_key$3] = { k: _key$3, v: foldL }, _key$3 = "Ll", _map$3[_key$3] = { k: _key$3, v: foldLl }, _key$3 = "Lt", _map$3[_key$3] = { k: _key$3, v: foldLt }, _key$3 = "Lu", _map$3[_key$3] = { k: _key$3, v: foldLu }, _key$3 = "M", _map$3[_key$3] = { k: _key$3, v: foldM }, _key$3 = "Mn", _map$3[_key$3] = { k: _key$3, v: foldMn }, _map$3);
		$pkg.FoldScript = (_map$4 = new $Map(), _map$4);
		/* */ } return; } }; $init_unicode.$blocking = true; return $init_unicode;
	};
	return $pkg;
})();
$packages["unicode/utf8"] = (function() {
	var $pkg = {}, decodeRuneInternal, decodeRuneInStringInternal, DecodeRune, DecodeRuneInString, DecodeLastRune, DecodeLastRuneInString, RuneLen, EncodeRune, RuneCount, RuneCountInString, RuneStart;
	decodeRuneInternal = function(p) {
		var _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$22, _tmp$23, _tmp$24, _tmp$25, _tmp$26, _tmp$27, _tmp$28, _tmp$29, _tmp$3, _tmp$30, _tmp$31, _tmp$32, _tmp$33, _tmp$34, _tmp$35, _tmp$36, _tmp$37, _tmp$38, _tmp$39, _tmp$4, _tmp$40, _tmp$41, _tmp$42, _tmp$43, _tmp$44, _tmp$45, _tmp$46, _tmp$47, _tmp$48, _tmp$49, _tmp$5, _tmp$50, _tmp$6, _tmp$7, _tmp$8, _tmp$9, c0, c1, c2, c3, n, r = 0, short$1 = false, size = 0;
		n = p.$length;
		if (n < 1) {
			_tmp = 65533; _tmp$1 = 0; _tmp$2 = true; r = _tmp; size = _tmp$1; short$1 = _tmp$2;
			return [r, size, short$1];
		}
		c0 = ((0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0]);
		if (c0 < 128) {
			_tmp$3 = (c0 >> 0); _tmp$4 = 1; _tmp$5 = false; r = _tmp$3; size = _tmp$4; short$1 = _tmp$5;
			return [r, size, short$1];
		}
		if (c0 < 192) {
			_tmp$6 = 65533; _tmp$7 = 1; _tmp$8 = false; r = _tmp$6; size = _tmp$7; short$1 = _tmp$8;
			return [r, size, short$1];
		}
		if (n < 2) {
			_tmp$9 = 65533; _tmp$10 = 1; _tmp$11 = true; r = _tmp$9; size = _tmp$10; short$1 = _tmp$11;
			return [r, size, short$1];
		}
		c1 = ((1 < 0 || 1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 1]);
		if (c1 < 128 || 192 <= c1) {
			_tmp$12 = 65533; _tmp$13 = 1; _tmp$14 = false; r = _tmp$12; size = _tmp$13; short$1 = _tmp$14;
			return [r, size, short$1];
		}
		if (c0 < 224) {
			r = ((((c0 & 31) >>> 0) >> 0) << 6 >> 0) | (((c1 & 63) >>> 0) >> 0);
			if (r <= 127) {
				_tmp$15 = 65533; _tmp$16 = 1; _tmp$17 = false; r = _tmp$15; size = _tmp$16; short$1 = _tmp$17;
				return [r, size, short$1];
			}
			_tmp$18 = r; _tmp$19 = 2; _tmp$20 = false; r = _tmp$18; size = _tmp$19; short$1 = _tmp$20;
			return [r, size, short$1];
		}
		if (n < 3) {
			_tmp$21 = 65533; _tmp$22 = 1; _tmp$23 = true; r = _tmp$21; size = _tmp$22; short$1 = _tmp$23;
			return [r, size, short$1];
		}
		c2 = ((2 < 0 || 2 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 2]);
		if (c2 < 128 || 192 <= c2) {
			_tmp$24 = 65533; _tmp$25 = 1; _tmp$26 = false; r = _tmp$24; size = _tmp$25; short$1 = _tmp$26;
			return [r, size, short$1];
		}
		if (c0 < 240) {
			r = (((((c0 & 15) >>> 0) >> 0) << 12 >> 0) | ((((c1 & 63) >>> 0) >> 0) << 6 >> 0)) | (((c2 & 63) >>> 0) >> 0);
			if (r <= 2047) {
				_tmp$27 = 65533; _tmp$28 = 1; _tmp$29 = false; r = _tmp$27; size = _tmp$28; short$1 = _tmp$29;
				return [r, size, short$1];
			}
			if (55296 <= r && r <= 57343) {
				_tmp$30 = 65533; _tmp$31 = 1; _tmp$32 = false; r = _tmp$30; size = _tmp$31; short$1 = _tmp$32;
				return [r, size, short$1];
			}
			_tmp$33 = r; _tmp$34 = 3; _tmp$35 = false; r = _tmp$33; size = _tmp$34; short$1 = _tmp$35;
			return [r, size, short$1];
		}
		if (n < 4) {
			_tmp$36 = 65533; _tmp$37 = 1; _tmp$38 = true; r = _tmp$36; size = _tmp$37; short$1 = _tmp$38;
			return [r, size, short$1];
		}
		c3 = ((3 < 0 || 3 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 3]);
		if (c3 < 128 || 192 <= c3) {
			_tmp$39 = 65533; _tmp$40 = 1; _tmp$41 = false; r = _tmp$39; size = _tmp$40; short$1 = _tmp$41;
			return [r, size, short$1];
		}
		if (c0 < 248) {
			r = ((((((c0 & 7) >>> 0) >> 0) << 18 >> 0) | ((((c1 & 63) >>> 0) >> 0) << 12 >> 0)) | ((((c2 & 63) >>> 0) >> 0) << 6 >> 0)) | (((c3 & 63) >>> 0) >> 0);
			if (r <= 65535 || 1114111 < r) {
				_tmp$42 = 65533; _tmp$43 = 1; _tmp$44 = false; r = _tmp$42; size = _tmp$43; short$1 = _tmp$44;
				return [r, size, short$1];
			}
			_tmp$45 = r; _tmp$46 = 4; _tmp$47 = false; r = _tmp$45; size = _tmp$46; short$1 = _tmp$47;
			return [r, size, short$1];
		}
		_tmp$48 = 65533; _tmp$49 = 1; _tmp$50 = false; r = _tmp$48; size = _tmp$49; short$1 = _tmp$50;
		return [r, size, short$1];
	};
	decodeRuneInStringInternal = function(s) {
		var _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$22, _tmp$23, _tmp$24, _tmp$25, _tmp$26, _tmp$27, _tmp$28, _tmp$29, _tmp$3, _tmp$30, _tmp$31, _tmp$32, _tmp$33, _tmp$34, _tmp$35, _tmp$36, _tmp$37, _tmp$38, _tmp$39, _tmp$4, _tmp$40, _tmp$41, _tmp$42, _tmp$43, _tmp$44, _tmp$45, _tmp$46, _tmp$47, _tmp$48, _tmp$49, _tmp$5, _tmp$50, _tmp$6, _tmp$7, _tmp$8, _tmp$9, c0, c1, c2, c3, n, r = 0, short$1 = false, size = 0;
		n = s.length;
		if (n < 1) {
			_tmp = 65533; _tmp$1 = 0; _tmp$2 = true; r = _tmp; size = _tmp$1; short$1 = _tmp$2;
			return [r, size, short$1];
		}
		c0 = s.charCodeAt(0);
		if (c0 < 128) {
			_tmp$3 = (c0 >> 0); _tmp$4 = 1; _tmp$5 = false; r = _tmp$3; size = _tmp$4; short$1 = _tmp$5;
			return [r, size, short$1];
		}
		if (c0 < 192) {
			_tmp$6 = 65533; _tmp$7 = 1; _tmp$8 = false; r = _tmp$6; size = _tmp$7; short$1 = _tmp$8;
			return [r, size, short$1];
		}
		if (n < 2) {
			_tmp$9 = 65533; _tmp$10 = 1; _tmp$11 = true; r = _tmp$9; size = _tmp$10; short$1 = _tmp$11;
			return [r, size, short$1];
		}
		c1 = s.charCodeAt(1);
		if (c1 < 128 || 192 <= c1) {
			_tmp$12 = 65533; _tmp$13 = 1; _tmp$14 = false; r = _tmp$12; size = _tmp$13; short$1 = _tmp$14;
			return [r, size, short$1];
		}
		if (c0 < 224) {
			r = ((((c0 & 31) >>> 0) >> 0) << 6 >> 0) | (((c1 & 63) >>> 0) >> 0);
			if (r <= 127) {
				_tmp$15 = 65533; _tmp$16 = 1; _tmp$17 = false; r = _tmp$15; size = _tmp$16; short$1 = _tmp$17;
				return [r, size, short$1];
			}
			_tmp$18 = r; _tmp$19 = 2; _tmp$20 = false; r = _tmp$18; size = _tmp$19; short$1 = _tmp$20;
			return [r, size, short$1];
		}
		if (n < 3) {
			_tmp$21 = 65533; _tmp$22 = 1; _tmp$23 = true; r = _tmp$21; size = _tmp$22; short$1 = _tmp$23;
			return [r, size, short$1];
		}
		c2 = s.charCodeAt(2);
		if (c2 < 128 || 192 <= c2) {
			_tmp$24 = 65533; _tmp$25 = 1; _tmp$26 = false; r = _tmp$24; size = _tmp$25; short$1 = _tmp$26;
			return [r, size, short$1];
		}
		if (c0 < 240) {
			r = (((((c0 & 15) >>> 0) >> 0) << 12 >> 0) | ((((c1 & 63) >>> 0) >> 0) << 6 >> 0)) | (((c2 & 63) >>> 0) >> 0);
			if (r <= 2047) {
				_tmp$27 = 65533; _tmp$28 = 1; _tmp$29 = false; r = _tmp$27; size = _tmp$28; short$1 = _tmp$29;
				return [r, size, short$1];
			}
			if (55296 <= r && r <= 57343) {
				_tmp$30 = 65533; _tmp$31 = 1; _tmp$32 = false; r = _tmp$30; size = _tmp$31; short$1 = _tmp$32;
				return [r, size, short$1];
			}
			_tmp$33 = r; _tmp$34 = 3; _tmp$35 = false; r = _tmp$33; size = _tmp$34; short$1 = _tmp$35;
			return [r, size, short$1];
		}
		if (n < 4) {
			_tmp$36 = 65533; _tmp$37 = 1; _tmp$38 = true; r = _tmp$36; size = _tmp$37; short$1 = _tmp$38;
			return [r, size, short$1];
		}
		c3 = s.charCodeAt(3);
		if (c3 < 128 || 192 <= c3) {
			_tmp$39 = 65533; _tmp$40 = 1; _tmp$41 = false; r = _tmp$39; size = _tmp$40; short$1 = _tmp$41;
			return [r, size, short$1];
		}
		if (c0 < 248) {
			r = ((((((c0 & 7) >>> 0) >> 0) << 18 >> 0) | ((((c1 & 63) >>> 0) >> 0) << 12 >> 0)) | ((((c2 & 63) >>> 0) >> 0) << 6 >> 0)) | (((c3 & 63) >>> 0) >> 0);
			if (r <= 65535 || 1114111 < r) {
				_tmp$42 = 65533; _tmp$43 = 1; _tmp$44 = false; r = _tmp$42; size = _tmp$43; short$1 = _tmp$44;
				return [r, size, short$1];
			}
			_tmp$45 = r; _tmp$46 = 4; _tmp$47 = false; r = _tmp$45; size = _tmp$46; short$1 = _tmp$47;
			return [r, size, short$1];
		}
		_tmp$48 = 65533; _tmp$49 = 1; _tmp$50 = false; r = _tmp$48; size = _tmp$49; short$1 = _tmp$50;
		return [r, size, short$1];
	};
	DecodeRune = $pkg.DecodeRune = function(p) {
		var _tuple, r = 0, size = 0;
		_tuple = decodeRuneInternal(p); r = _tuple[0]; size = _tuple[1];
		return [r, size];
	};
	DecodeRuneInString = $pkg.DecodeRuneInString = function(s) {
		var _tuple, r = 0, size = 0;
		_tuple = decodeRuneInStringInternal(s); r = _tuple[0]; size = _tuple[1];
		return [r, size];
	};
	DecodeLastRune = $pkg.DecodeLastRune = function(p) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tuple, end, lim, r = 0, size = 0, start;
		end = p.$length;
		if (end === 0) {
			_tmp = 65533; _tmp$1 = 0; r = _tmp; size = _tmp$1;
			return [r, size];
		}
		start = end - 1 >> 0;
		r = (((start < 0 || start >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + start]) >> 0);
		if (r < 128) {
			_tmp$2 = r; _tmp$3 = 1; r = _tmp$2; size = _tmp$3;
			return [r, size];
		}
		lim = end - 4 >> 0;
		if (lim < 0) {
			lim = 0;
		}
		start = start - (1) >> 0;
		while (start >= lim) {
			if (RuneStart(((start < 0 || start >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + start]))) {
				break;
			}
			start = start - (1) >> 0;
		}
		if (start < 0) {
			start = 0;
		}
		_tuple = DecodeRune($subslice(p, start, end)); r = _tuple[0]; size = _tuple[1];
		if (!(((start + size >> 0) === end))) {
			_tmp$4 = 65533; _tmp$5 = 1; r = _tmp$4; size = _tmp$5;
			return [r, size];
		}
		_tmp$6 = r; _tmp$7 = size; r = _tmp$6; size = _tmp$7;
		return [r, size];
	};
	DecodeLastRuneInString = $pkg.DecodeLastRuneInString = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tuple, end, lim, r = 0, size = 0, start;
		end = s.length;
		if (end === 0) {
			_tmp = 65533; _tmp$1 = 0; r = _tmp; size = _tmp$1;
			return [r, size];
		}
		start = end - 1 >> 0;
		r = (s.charCodeAt(start) >> 0);
		if (r < 128) {
			_tmp$2 = r; _tmp$3 = 1; r = _tmp$2; size = _tmp$3;
			return [r, size];
		}
		lim = end - 4 >> 0;
		if (lim < 0) {
			lim = 0;
		}
		start = start - (1) >> 0;
		while (start >= lim) {
			if (RuneStart(s.charCodeAt(start))) {
				break;
			}
			start = start - (1) >> 0;
		}
		if (start < 0) {
			start = 0;
		}
		_tuple = DecodeRuneInString(s.substring(start, end)); r = _tuple[0]; size = _tuple[1];
		if (!(((start + size >> 0) === end))) {
			_tmp$4 = 65533; _tmp$5 = 1; r = _tmp$4; size = _tmp$5;
			return [r, size];
		}
		_tmp$6 = r; _tmp$7 = size; r = _tmp$6; size = _tmp$7;
		return [r, size];
	};
	RuneLen = $pkg.RuneLen = function(r) {
		if (r < 0) {
			return -1;
		} else if (r <= 127) {
			return 1;
		} else if (r <= 2047) {
			return 2;
		} else if (55296 <= r && r <= 57343) {
			return -1;
		} else if (r <= 65535) {
			return 3;
		} else if (r <= 1114111) {
			return 4;
		}
		return -1;
	};
	EncodeRune = $pkg.EncodeRune = function(p, r) {
		var i;
		i = (r >>> 0);
		if (i <= 127) {
			(0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0] = (r << 24 >>> 24);
			return 1;
		} else if (i <= 2047) {
			(0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0] = (192 | ((r >> 6 >> 0) << 24 >>> 24)) >>> 0;
			(1 < 0 || 1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 1] = (128 | (((r << 24 >>> 24) & 63) >>> 0)) >>> 0;
			return 2;
		} else if (i > 1114111 || 55296 <= i && i <= 57343) {
			r = 65533;
			(0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0] = (224 | ((r >> 12 >> 0) << 24 >>> 24)) >>> 0;
			(1 < 0 || 1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 1] = (128 | ((((r >> 6 >> 0) << 24 >>> 24) & 63) >>> 0)) >>> 0;
			(2 < 0 || 2 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 2] = (128 | (((r << 24 >>> 24) & 63) >>> 0)) >>> 0;
			return 3;
		} else if (i <= 65535) {
			(0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0] = (224 | ((r >> 12 >> 0) << 24 >>> 24)) >>> 0;
			(1 < 0 || 1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 1] = (128 | ((((r >> 6 >> 0) << 24 >>> 24) & 63) >>> 0)) >>> 0;
			(2 < 0 || 2 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 2] = (128 | (((r << 24 >>> 24) & 63) >>> 0)) >>> 0;
			return 3;
		} else {
			(0 < 0 || 0 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 0] = (240 | ((r >> 18 >> 0) << 24 >>> 24)) >>> 0;
			(1 < 0 || 1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 1] = (128 | ((((r >> 12 >> 0) << 24 >>> 24) & 63) >>> 0)) >>> 0;
			(2 < 0 || 2 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 2] = (128 | ((((r >> 6 >> 0) << 24 >>> 24) & 63) >>> 0)) >>> 0;
			(3 < 0 || 3 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + 3] = (128 | (((r << 24 >>> 24) & 63) >>> 0)) >>> 0;
			return 4;
		}
	};
	RuneCount = $pkg.RuneCount = function(p) {
		var _tuple, i, n, size;
		i = 0;
		n = 0;
		n = 0;
		while (i < p.$length) {
			if (((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]) < 128) {
				i = i + (1) >> 0;
			} else {
				_tuple = DecodeRune($subslice(p, i)); size = _tuple[1];
				i = i + (size) >> 0;
			}
			n = n + (1) >> 0;
		}
		return n;
	};
	RuneCountInString = $pkg.RuneCountInString = function(s) {
		var _i, _ref, _rune, n = 0;
		_ref = s;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			n = n + (1) >> 0;
			_i += _rune[1];
		}
		return n;
	};
	RuneStart = $pkg.RuneStart = function(b) {
		return !((((b & 192) >>> 0) === 128));
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_utf8 = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_utf8.$blocking = true; return $init_utf8;
	};
	return $pkg;
})();
$packages["bytes"] = (function() {
	var $pkg = {}, errors, io, unicode, utf8, Buffer, readOp, ptrType, sliceType, arrayType, arrayType$1, IndexByte, Equal, makeSlice, Index, HasPrefix, Map, EqualFold;
	errors = $packages["errors"];
	io = $packages["io"];
	unicode = $packages["unicode"];
	utf8 = $packages["unicode/utf8"];
	Buffer = $pkg.Buffer = $newType(0, $kindStruct, "bytes.Buffer", "Buffer", "bytes", function(buf_, off_, runeBytes_, bootstrap_, lastRead_) {
		this.$val = this;
		this.buf = buf_ !== undefined ? buf_ : sliceType.nil;
		this.off = off_ !== undefined ? off_ : 0;
		this.runeBytes = runeBytes_ !== undefined ? runeBytes_ : arrayType.zero();
		this.bootstrap = bootstrap_ !== undefined ? bootstrap_ : arrayType$1.zero();
		this.lastRead = lastRead_ !== undefined ? lastRead_ : 0;
	});
	readOp = $pkg.readOp = $newType(4, $kindInt, "bytes.readOp", "readOp", "bytes", null);
		ptrType = $ptrType(Buffer);
		sliceType = $sliceType($Uint8);
		arrayType = $arrayType($Uint8, 4);
		arrayType$1 = $arrayType($Uint8, 64);
	IndexByte = $pkg.IndexByte = function(s, c) {
		var _i, _ref, b, i;
		_ref = s;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			b = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (b === c) {
				return i;
			}
			_i++;
		}
		return -1;
	};
	Equal = $pkg.Equal = function(a, b) {
		var _i, _ref, c, i;
		if (!((a.$length === b.$length))) {
			return false;
		}
		_ref = a;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			c = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (!((c === ((i < 0 || i >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + i])))) {
				return false;
			}
			_i++;
		}
		return true;
	};
	Buffer.ptr.prototype.Bytes = function() {
		var b;
		b = this;
		return $subslice(b.buf, b.off);
	};
	Buffer.prototype.Bytes = function() { return this.$val.Bytes(); };
	Buffer.ptr.prototype.String = function() {
		var b;
		b = this;
		if (b === ptrType.nil) {
			return "<nil>";
		}
		return $bytesToString($subslice(b.buf, b.off));
	};
	Buffer.prototype.String = function() { return this.$val.String(); };
	Buffer.ptr.prototype.Len = function() {
		var b;
		b = this;
		return b.buf.$length - b.off >> 0;
	};
	Buffer.prototype.Len = function() { return this.$val.Len(); };
	Buffer.ptr.prototype.Truncate = function(n) {
		var b;
		b = this;
		b.lastRead = 0;
		if (n < 0 || n > b.Len()) {
			$panic(new $String("bytes.Buffer: truncation out of range"));
		} else if (n === 0) {
			b.off = 0;
		}
		b.buf = $subslice(b.buf, 0, (b.off + n >> 0));
	};
	Buffer.prototype.Truncate = function(n) { return this.$val.Truncate(n); };
	Buffer.ptr.prototype.Reset = function() {
		var b;
		b = this;
		b.Truncate(0);
	};
	Buffer.prototype.Reset = function() { return this.$val.Reset(); };
	Buffer.ptr.prototype.grow = function(n) {
		var _q, b, buf, m;
		b = this;
		m = b.Len();
		if ((m === 0) && !((b.off === 0))) {
			b.Truncate(0);
		}
		if ((b.buf.$length + n >> 0) > b.buf.$capacity) {
			buf = sliceType.nil;
			if (b.buf === sliceType.nil && n <= 64) {
				buf = $subslice(new sliceType(b.bootstrap), 0);
			} else if ((m + n >> 0) <= (_q = b.buf.$capacity / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"))) {
				$copySlice(b.buf, $subslice(b.buf, b.off));
				buf = $subslice(b.buf, 0, m);
			} else {
				buf = makeSlice((2 * b.buf.$capacity >> 0) + n >> 0);
				$copySlice(buf, $subslice(b.buf, b.off));
			}
			b.buf = buf;
			b.off = 0;
		}
		b.buf = $subslice(b.buf, 0, ((b.off + m >> 0) + n >> 0));
		return b.off + m >> 0;
	};
	Buffer.prototype.grow = function(n) { return this.$val.grow(n); };
	Buffer.ptr.prototype.Grow = function(n) {
		var b, m;
		b = this;
		if (n < 0) {
			$panic(new $String("bytes.Buffer.Grow: negative count"));
		}
		m = b.grow(n);
		b.buf = $subslice(b.buf, 0, m);
	};
	Buffer.prototype.Grow = function(n) { return this.$val.Grow(n); };
	Buffer.ptr.prototype.Write = function(p) {
		var _tmp, _tmp$1, b, err = $ifaceNil, m, n = 0;
		b = this;
		b.lastRead = 0;
		m = b.grow(p.$length);
		_tmp = $copySlice($subslice(b.buf, m), p); _tmp$1 = $ifaceNil; n = _tmp; err = _tmp$1;
		return [n, err];
	};
	Buffer.prototype.Write = function(p) { return this.$val.Write(p); };
	Buffer.ptr.prototype.WriteString = function(s) {
		var _tmp, _tmp$1, b, err = $ifaceNil, m, n = 0;
		b = this;
		b.lastRead = 0;
		m = b.grow(s.length);
		_tmp = $copyString($subslice(b.buf, m), s); _tmp$1 = $ifaceNil; n = _tmp; err = _tmp$1;
		return [n, err];
	};
	Buffer.prototype.WriteString = function(s) { return this.$val.WriteString(s); };
	Buffer.ptr.prototype.ReadFrom = function(r) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, b, e, err = $ifaceNil, free, m, n = new $Int64(0, 0), newBuf, x;
		b = this;
		b.lastRead = 0;
		if (b.off >= b.buf.$length) {
			b.Truncate(0);
		}
		while (true) {
			free = b.buf.$capacity - b.buf.$length >> 0;
			if (free < 512) {
				newBuf = b.buf;
				if ((b.off + free >> 0) < 512) {
					newBuf = makeSlice((2 * b.buf.$capacity >> 0) + 512 >> 0);
				}
				$copySlice(newBuf, $subslice(b.buf, b.off));
				b.buf = $subslice(newBuf, 0, (b.buf.$length - b.off >> 0));
				b.off = 0;
			}
			_tuple = r.Read($subslice(b.buf, b.buf.$length, b.buf.$capacity)); m = _tuple[0]; e = _tuple[1];
			b.buf = $subslice(b.buf, 0, (b.buf.$length + m >> 0));
			n = (x = new $Int64(0, m), new $Int64(n.$high + x.$high, n.$low + x.$low));
			if ($interfaceIsEqual(e, io.EOF)) {
				break;
			}
			if (!($interfaceIsEqual(e, $ifaceNil))) {
				_tmp = n; _tmp$1 = e; n = _tmp; err = _tmp$1;
				return [n, err];
			}
		}
		_tmp$2 = n; _tmp$3 = $ifaceNil; n = _tmp$2; err = _tmp$3;
		return [n, err];
	};
	Buffer.prototype.ReadFrom = function(r) { return this.$val.ReadFrom(r); };
	makeSlice = function(n) {
		var $deferred = [], $err = null;
		/* */ try { $deferFrames.push($deferred);
		$deferred.push([(function() {
			if (!($interfaceIsEqual($recover(), $ifaceNil))) {
				$panic($pkg.ErrTooLarge);
			}
		}), []]);
		return $makeSlice(sliceType, n);
		/* */ } catch(err) { $err = err; return sliceType.nil; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	Buffer.ptr.prototype.WriteTo = function(w) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, b, e, err = $ifaceNil, m, n = new $Int64(0, 0), nBytes;
		b = this;
		b.lastRead = 0;
		if (b.off < b.buf.$length) {
			nBytes = b.Len();
			_tuple = w.Write($subslice(b.buf, b.off)); m = _tuple[0]; e = _tuple[1];
			if (m > nBytes) {
				$panic(new $String("bytes.Buffer.WriteTo: invalid Write count"));
			}
			b.off = b.off + (m) >> 0;
			n = new $Int64(0, m);
			if (!($interfaceIsEqual(e, $ifaceNil))) {
				_tmp = n; _tmp$1 = e; n = _tmp; err = _tmp$1;
				return [n, err];
			}
			if (!((m === nBytes))) {
				_tmp$2 = n; _tmp$3 = io.ErrShortWrite; n = _tmp$2; err = _tmp$3;
				return [n, err];
			}
		}
		b.Truncate(0);
		return [n, err];
	};
	Buffer.prototype.WriteTo = function(w) { return this.$val.WriteTo(w); };
	Buffer.ptr.prototype.WriteByte = function(c) {
		var b, m, x;
		b = this;
		b.lastRead = 0;
		m = b.grow(1);
		(x = b.buf, (m < 0 || m >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + m] = c);
		return $ifaceNil;
	};
	Buffer.prototype.WriteByte = function(c) { return this.$val.WriteByte(c); };
	Buffer.ptr.prototype.WriteRune = function(r) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, b, err = $ifaceNil, n = 0;
		b = this;
		if (r < 128) {
			b.WriteByte((r << 24 >>> 24));
			_tmp = 1; _tmp$1 = $ifaceNil; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		n = utf8.EncodeRune($subslice(new sliceType(b.runeBytes), 0), r);
		b.Write($subslice(new sliceType(b.runeBytes), 0, n));
		_tmp$2 = n; _tmp$3 = $ifaceNil; n = _tmp$2; err = _tmp$3;
		return [n, err];
	};
	Buffer.prototype.WriteRune = function(r) { return this.$val.WriteRune(r); };
	Buffer.ptr.prototype.Read = function(p) {
		var _tmp, _tmp$1, b, err = $ifaceNil, n = 0;
		b = this;
		b.lastRead = 0;
		if (b.off >= b.buf.$length) {
			b.Truncate(0);
			if (p.$length === 0) {
				return [n, err];
			}
			_tmp = 0; _tmp$1 = io.EOF; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		n = $copySlice(p, $subslice(b.buf, b.off));
		b.off = b.off + (n) >> 0;
		if (n > 0) {
			b.lastRead = 2;
		}
		return [n, err];
	};
	Buffer.prototype.Read = function(p) { return this.$val.Read(p); };
	Buffer.ptr.prototype.Next = function(n) {
		var b, data, m;
		b = this;
		b.lastRead = 0;
		m = b.Len();
		if (n > m) {
			n = m;
		}
		data = $subslice(b.buf, b.off, (b.off + n >> 0));
		b.off = b.off + (n) >> 0;
		if (n > 0) {
			b.lastRead = 2;
		}
		return data;
	};
	Buffer.prototype.Next = function(n) { return this.$val.Next(n); };
	Buffer.ptr.prototype.ReadByte = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, b, c = 0, err = $ifaceNil, x, x$1;
		b = this;
		b.lastRead = 0;
		if (b.off >= b.buf.$length) {
			b.Truncate(0);
			_tmp = 0; _tmp$1 = io.EOF; c = _tmp; err = _tmp$1;
			return [c, err];
		}
		c = (x = b.buf, x$1 = b.off, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		b.off = b.off + (1) >> 0;
		b.lastRead = 2;
		_tmp$2 = c; _tmp$3 = $ifaceNil; c = _tmp$2; err = _tmp$3;
		return [c, err];
	};
	Buffer.prototype.ReadByte = function() { return this.$val.ReadByte(); };
	Buffer.ptr.prototype.ReadRune = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tuple, b, c, err = $ifaceNil, n, r = 0, size = 0, x, x$1;
		b = this;
		b.lastRead = 0;
		if (b.off >= b.buf.$length) {
			b.Truncate(0);
			_tmp = 0; _tmp$1 = 0; _tmp$2 = io.EOF; r = _tmp; size = _tmp$1; err = _tmp$2;
			return [r, size, err];
		}
		b.lastRead = 1;
		c = (x = b.buf, x$1 = b.off, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (c < 128) {
			b.off = b.off + (1) >> 0;
			_tmp$3 = (c >> 0); _tmp$4 = 1; _tmp$5 = $ifaceNil; r = _tmp$3; size = _tmp$4; err = _tmp$5;
			return [r, size, err];
		}
		_tuple = utf8.DecodeRune($subslice(b.buf, b.off)); r = _tuple[0]; n = _tuple[1];
		b.off = b.off + (n) >> 0;
		_tmp$6 = r; _tmp$7 = n; _tmp$8 = $ifaceNil; r = _tmp$6; size = _tmp$7; err = _tmp$8;
		return [r, size, err];
	};
	Buffer.prototype.ReadRune = function() { return this.$val.ReadRune(); };
	Buffer.ptr.prototype.UnreadRune = function() {
		var _tuple, b, n;
		b = this;
		if (!((b.lastRead === 1))) {
			return errors.New("bytes.Buffer: UnreadRune: previous operation was not ReadRune");
		}
		b.lastRead = 0;
		if (b.off > 0) {
			_tuple = utf8.DecodeLastRune($subslice(b.buf, 0, b.off)); n = _tuple[1];
			b.off = b.off - (n) >> 0;
		}
		return $ifaceNil;
	};
	Buffer.prototype.UnreadRune = function() { return this.$val.UnreadRune(); };
	Buffer.ptr.prototype.UnreadByte = function() {
		var b;
		b = this;
		if (!((b.lastRead === 1)) && !((b.lastRead === 2))) {
			return errors.New("bytes.Buffer: UnreadByte: previous operation was not a read");
		}
		b.lastRead = 0;
		if (b.off > 0) {
			b.off = b.off - (1) >> 0;
		}
		return $ifaceNil;
	};
	Buffer.prototype.UnreadByte = function() { return this.$val.UnreadByte(); };
	Buffer.ptr.prototype.ReadBytes = function(delim) {
		var _tuple, b, err = $ifaceNil, line = sliceType.nil, slice;
		b = this;
		_tuple = b.readSlice(delim); slice = _tuple[0]; err = _tuple[1];
		line = $appendSlice(line, slice);
		return [line, err];
	};
	Buffer.prototype.ReadBytes = function(delim) { return this.$val.ReadBytes(delim); };
	Buffer.ptr.prototype.readSlice = function(delim) {
		var _tmp, _tmp$1, b, end, err = $ifaceNil, i, line = sliceType.nil;
		b = this;
		i = IndexByte($subslice(b.buf, b.off), delim);
		end = (b.off + i >> 0) + 1 >> 0;
		if (i < 0) {
			end = b.buf.$length;
			err = io.EOF;
		}
		line = $subslice(b.buf, b.off, end);
		b.off = end;
		b.lastRead = 2;
		_tmp = line; _tmp$1 = err; line = _tmp; err = _tmp$1;
		return [line, err];
	};
	Buffer.prototype.readSlice = function(delim) { return this.$val.readSlice(delim); };
	Buffer.ptr.prototype.ReadString = function(delim) {
		var _tmp, _tmp$1, _tuple, b, err = $ifaceNil, line = "", slice;
		b = this;
		_tuple = b.readSlice(delim); slice = _tuple[0]; err = _tuple[1];
		_tmp = $bytesToString(slice); _tmp$1 = err; line = _tmp; err = _tmp$1;
		return [line, err];
	};
	Buffer.prototype.ReadString = function(delim) { return this.$val.ReadString(delim); };
	Index = $pkg.Index = function(s, sep) {
		var c, i, n, o, t;
		n = sep.$length;
		if (n === 0) {
			return 0;
		}
		if (n > s.$length) {
			return -1;
		}
		c = ((0 < 0 || 0 >= sep.$length) ? $throwRuntimeError("index out of range") : sep.$array[sep.$offset + 0]);
		if (n === 1) {
			return IndexByte(s, c);
		}
		i = 0;
		t = $subslice(s, 0, ((s.$length - n >> 0) + 1 >> 0));
		while (i < t.$length) {
			if (!((((i < 0 || i >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + i]) === c))) {
				o = IndexByte($subslice(t, i), c);
				if (o < 0) {
					break;
				}
				i = i + (o) >> 0;
			}
			if (Equal($subslice(s, i, (i + n >> 0)), sep)) {
				return i;
			}
			i = i + (1) >> 0;
		}
		return -1;
	};
	HasPrefix = $pkg.HasPrefix = function(s, prefix) {
		return s.$length >= prefix.$length && Equal($subslice(s, 0, prefix.$length), prefix);
	};
	Map = $pkg.Map = function(mapping, s) {
		var _tuple, b, i, maxbytes, nb, nbytes, r, rl, wid;
		maxbytes = s.$length;
		nbytes = 0;
		b = $makeSlice(sliceType, maxbytes);
		i = 0;
		while (i < s.$length) {
			wid = 1;
			r = (((i < 0 || i >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + i]) >> 0);
			if (r >= 128) {
				_tuple = utf8.DecodeRune($subslice(s, i)); r = _tuple[0]; wid = _tuple[1];
			}
			r = mapping(r);
			if (r >= 0) {
				rl = utf8.RuneLen(r);
				if (rl < 0) {
					rl = 3;
				}
				if ((nbytes + rl >> 0) > maxbytes) {
					maxbytes = (maxbytes * 2 >> 0) + 4 >> 0;
					nb = $makeSlice(sliceType, maxbytes);
					$copySlice(nb, $subslice(b, 0, nbytes));
					b = nb;
				}
				nbytes = nbytes + (utf8.EncodeRune($subslice(b, nbytes, maxbytes), r)) >> 0;
			}
			i = i + (wid) >> 0;
		}
		return $subslice(b, 0, nbytes);
	};
	EqualFold = $pkg.EqualFold = function(s, t) {
		var _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, r, r$1, r$2, size, size$1, sr, tr;
		while (!((s.$length === 0)) && !((t.$length === 0))) {
			_tmp = 0; _tmp$1 = 0; sr = _tmp; tr = _tmp$1;
			if (((0 < 0 || 0 >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + 0]) < 128) {
				_tmp$2 = (((0 < 0 || 0 >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + 0]) >> 0); _tmp$3 = $subslice(s, 1); sr = _tmp$2; s = _tmp$3;
			} else {
				_tuple = utf8.DecodeRune(s); r = _tuple[0]; size = _tuple[1];
				_tmp$4 = r; _tmp$5 = $subslice(s, size); sr = _tmp$4; s = _tmp$5;
			}
			if (((0 < 0 || 0 >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + 0]) < 128) {
				_tmp$6 = (((0 < 0 || 0 >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + 0]) >> 0); _tmp$7 = $subslice(t, 1); tr = _tmp$6; t = _tmp$7;
			} else {
				_tuple$1 = utf8.DecodeRune(t); r$1 = _tuple$1[0]; size$1 = _tuple$1[1];
				_tmp$8 = r$1; _tmp$9 = $subslice(t, size$1); tr = _tmp$8; t = _tmp$9;
			}
			if (tr === sr) {
				continue;
			}
			if (tr < sr) {
				_tmp$10 = sr; _tmp$11 = tr; tr = _tmp$10; sr = _tmp$11;
			}
			if (tr < 128 && 65 <= sr && sr <= 90) {
				if (tr === ((sr + 97 >> 0) - 65 >> 0)) {
					continue;
				}
				return false;
			}
			r$2 = unicode.SimpleFold(sr);
			while (!((r$2 === sr)) && r$2 < tr) {
				r$2 = unicode.SimpleFold(r$2);
			}
			if (r$2 === tr) {
				continue;
			}
			return false;
		}
		return s.$length === t.$length;
	};
	ptrType.methods = [{prop: "Bytes", name: "Bytes", pkg: "", type: $funcType([], [sliceType], false)}, {prop: "Grow", name: "Grow", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Next", name: "Next", pkg: "", type: $funcType([$Int], [sliceType], false)}, {prop: "Read", name: "Read", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}, {prop: "ReadByte", name: "ReadByte", pkg: "", type: $funcType([], [$Uint8, $error], false)}, {prop: "ReadBytes", name: "ReadBytes", pkg: "", type: $funcType([$Uint8], [sliceType, $error], false)}, {prop: "ReadFrom", name: "ReadFrom", pkg: "", type: $funcType([io.Reader], [$Int64, $error], false)}, {prop: "ReadRune", name: "ReadRune", pkg: "", type: $funcType([], [$Int32, $Int, $error], false)}, {prop: "ReadString", name: "ReadString", pkg: "", type: $funcType([$Uint8], [$String, $error], false)}, {prop: "Reset", name: "Reset", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Truncate", name: "Truncate", pkg: "", type: $funcType([$Int], [], false)}, {prop: "UnreadByte", name: "UnreadByte", pkg: "", type: $funcType([], [$error], false)}, {prop: "UnreadRune", name: "UnreadRune", pkg: "", type: $funcType([], [$error], false)}, {prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}, {prop: "WriteByte", name: "WriteByte", pkg: "", type: $funcType([$Uint8], [$error], false)}, {prop: "WriteRune", name: "WriteRune", pkg: "", type: $funcType([$Int32], [$Int, $error], false)}, {prop: "WriteString", name: "WriteString", pkg: "", type: $funcType([$String], [$Int, $error], false)}, {prop: "WriteTo", name: "WriteTo", pkg: "", type: $funcType([io.Writer], [$Int64, $error], false)}, {prop: "grow", name: "grow", pkg: "bytes", type: $funcType([$Int], [$Int], false)}, {prop: "readSlice", name: "readSlice", pkg: "bytes", type: $funcType([$Uint8], [sliceType, $error], false)}];
	Buffer.init([{prop: "buf", name: "buf", pkg: "bytes", type: sliceType, tag: ""}, {prop: "off", name: "off", pkg: "bytes", type: $Int, tag: ""}, {prop: "runeBytes", name: "runeBytes", pkg: "bytes", type: arrayType, tag: ""}, {prop: "bootstrap", name: "bootstrap", pkg: "bytes", type: arrayType$1, tag: ""}, {prop: "lastRead", name: "lastRead", pkg: "bytes", type: readOp, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_bytes = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = unicode.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.ErrTooLarge = errors.New("bytes.Buffer: too large");
		/* */ } return; } }; $init_bytes.$blocking = true; return $init_bytes;
	};
	return $pkg;
})();
$packages["encoding"] = (function() {
	var $pkg = {}, TextMarshaler, TextUnmarshaler, sliceType;
	TextMarshaler = $pkg.TextMarshaler = $newType(8, $kindInterface, "encoding.TextMarshaler", "TextMarshaler", "encoding", null);
	TextUnmarshaler = $pkg.TextUnmarshaler = $newType(8, $kindInterface, "encoding.TextUnmarshaler", "TextUnmarshaler", "encoding", null);
		sliceType = $sliceType($Uint8);
	TextMarshaler.init([{prop: "MarshalText", name: "MarshalText", pkg: "", type: $funcType([], [sliceType, $error], false)}]);
	TextUnmarshaler.init([{prop: "UnmarshalText", name: "UnmarshalText", pkg: "", type: $funcType([sliceType], [$error], false)}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_encoding = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_encoding.$blocking = true; return $init_encoding;
	};
	return $pkg;
})();
$packages["math"] = (function() {
	var $pkg = {}, js, arrayType, math, zero, posInf, negInf, nan, pow10tab, init, Exp, Inf, IsInf, Ldexp, Log, NaN, Float32bits, Float32frombits, Float64bits, Float64frombits, init$1;
	js = $packages["github.com/gopherjs/gopherjs/js"];
		arrayType = $arrayType($Float64, 70);
	init = function() {
		Float32bits(0);
		Float32frombits(0);
	};
	Exp = $pkg.Exp = function(x) {
		return $parseFloat(math.exp(x));
	};
	Inf = $pkg.Inf = function(sign) {
		if (sign >= 0) {
			return posInf;
		} else {
			return negInf;
		}
	};
	IsInf = $pkg.IsInf = function(f, sign) {
		if (f === posInf) {
			return sign >= 0;
		}
		if (f === negInf) {
			return sign <= 0;
		}
		return false;
	};
	Ldexp = $pkg.Ldexp = function(frac, exp$1) {
		if (frac === 0) {
			return frac;
		}
		if (exp$1 >= 1024) {
			return frac * $parseFloat(math.pow(2, 1023)) * $parseFloat(math.pow(2, exp$1 - 1023 >> 0));
		}
		if (exp$1 <= -1024) {
			return frac * $parseFloat(math.pow(2, -1023)) * $parseFloat(math.pow(2, exp$1 + 1023 >> 0));
		}
		return frac * $parseFloat(math.pow(2, exp$1));
	};
	Log = $pkg.Log = function(x) {
		if (!((x === x))) {
			return nan;
		}
		return $parseFloat(math.log(x));
	};
	NaN = $pkg.NaN = function() {
		return nan;
	};
	Float32bits = $pkg.Float32bits = function(f) {
		var e, r, s;
		if (f === 0) {
			if (1 / f === negInf) {
				return 2147483648;
			}
			return 0;
		}
		if (!(f === f)) {
			return 2143289344;
		}
		s = 0;
		if (f < 0) {
			s = 2147483648;
			f = -f;
		}
		e = 150;
		while (f >= 1.6777216e+07) {
			f = f / (2);
			e = e + (1) >>> 0;
			if (e === 255) {
				if (f >= 8.388608e+06) {
					f = posInf;
				}
				break;
			}
		}
		while (f < 8.388608e+06) {
			e = e - (1) >>> 0;
			if (e === 0) {
				break;
			}
			f = f * (2);
		}
		r = $parseFloat($mod(f, 2));
		if ((r > 0.5 && r < 1) || r >= 1.5) {
			f = f + (1);
		}
		return (((s | (e << 23 >>> 0)) >>> 0) | (((f >> 0) & ~8388608))) >>> 0;
	};
	Float32frombits = $pkg.Float32frombits = function(b) {
		var e, m, s;
		s = 1;
		if (!((((b & 2147483648) >>> 0) === 0))) {
			s = -1;
		}
		e = (((b >>> 23 >>> 0)) & 255) >>> 0;
		m = (b & 8388607) >>> 0;
		if (e === 255) {
			if (m === 0) {
				return s / 0;
			}
			return nan;
		}
		if (!((e === 0))) {
			m = m + (8388608) >>> 0;
		}
		if (e === 0) {
			e = 1;
		}
		return Ldexp(m, ((e >> 0) - 127 >> 0) - 23 >> 0) * s;
	};
	Float64bits = $pkg.Float64bits = function(f) {
		var e, s, x, x$1, x$2, x$3;
		if (f === 0) {
			if (1 / f === negInf) {
				return new $Uint64(2147483648, 0);
			}
			return new $Uint64(0, 0);
		}
		if (!((f === f))) {
			return new $Uint64(2146959360, 1);
		}
		s = new $Uint64(0, 0);
		if (f < 0) {
			s = new $Uint64(2147483648, 0);
			f = -f;
		}
		e = 1075;
		while (f >= 9.007199254740992e+15) {
			f = f / (2);
			e = e + (1) >>> 0;
			if (e === 2047) {
				break;
			}
		}
		while (f < 4.503599627370496e+15) {
			e = e - (1) >>> 0;
			if (e === 0) {
				break;
			}
			f = f * (2);
		}
		return (x = (x$1 = $shiftLeft64(new $Uint64(0, e), 52), new $Uint64(s.$high | x$1.$high, (s.$low | x$1.$low) >>> 0)), x$2 = (x$3 = new $Uint64(0, f), new $Uint64(x$3.$high &~ 1048576, (x$3.$low &~ 0) >>> 0)), new $Uint64(x.$high | x$2.$high, (x.$low | x$2.$low) >>> 0));
	};
	Float64frombits = $pkg.Float64frombits = function(b) {
		var e, m, s, x, x$1, x$2;
		s = 1;
		if (!((x = new $Uint64(b.$high & 2147483648, (b.$low & 0) >>> 0), (x.$high === 0 && x.$low === 0)))) {
			s = -1;
		}
		e = (x$1 = $shiftRightUint64(b, 52), new $Uint64(x$1.$high & 0, (x$1.$low & 2047) >>> 0));
		m = new $Uint64(b.$high & 1048575, (b.$low & 4294967295) >>> 0);
		if ((e.$high === 0 && e.$low === 2047)) {
			if ((m.$high === 0 && m.$low === 0)) {
				return s / 0;
			}
			return nan;
		}
		if (!((e.$high === 0 && e.$low === 0))) {
			m = (x$2 = new $Uint64(1048576, 0), new $Uint64(m.$high + x$2.$high, m.$low + x$2.$low));
		}
		if ((e.$high === 0 && e.$low === 0)) {
			e = new $Uint64(0, 1);
		}
		return Ldexp($flatten64(m), ((e.$low >> 0) - 1023 >> 0) - 52 >> 0) * s;
	};
	init$1 = function() {
		var _q, i, m, x;
		pow10tab[0] = 1;
		pow10tab[1] = 10;
		i = 2;
		while (i < 70) {
			m = (_q = i / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
			(i < 0 || i >= pow10tab.length) ? $throwRuntimeError("index out of range") : pow10tab[i] = ((m < 0 || m >= pow10tab.length) ? $throwRuntimeError("index out of range") : pow10tab[m]) * (x = i - m >> 0, ((x < 0 || x >= pow10tab.length) ? $throwRuntimeError("index out of range") : pow10tab[x]));
			i = i + (1) >> 0;
		}
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_math = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		pow10tab = arrayType.zero();
		math = $global.Math;
		zero = 0;
		posInf = 1 / zero;
		negInf = -1 / zero;
		nan = 0 / zero;
		init();
		init$1();
		/* */ } return; } }; $init_math.$blocking = true; return $init_math;
	};
	return $pkg;
})();
$packages["strconv"] = (function() {
	var $pkg = {}, errors, math, utf8, NumError, decimal, leftCheat, extFloat, floatInfo, decimalSlice, sliceType, sliceType$1, sliceType$2, sliceType$3, sliceType$4, sliceType$5, sliceType$6, ptrType, arrayType, arrayType$1, ptrType$1, arrayType$2, arrayType$3, arrayType$4, arrayType$5, arrayType$6, ptrType$2, ptrType$3, ptrType$4, optimize, powtab, float64pow10, float32pow10, leftcheats, smallPowersOfTen, powersOfTen, uint64pow10, float32info, float64info, isPrint16, isNotPrint16, isPrint32, isNotPrint32, shifts, ParseBool, equalIgnoreCase, special, readFloat, atof64exact, atof32exact, atof32, atof64, ParseFloat, syntaxError, rangeError, cutoff64, ParseUint, ParseInt, digitZero, trim, rightShift, prefixIsLessThan, leftShift, shouldRoundUp, frexp10Many, adjustLastDigitFixed, adjustLastDigit, AppendFloat, genericFtoa, bigFtoa, formatDigits, roundShortest, fmtE, fmtF, fmtB, max, FormatUint, FormatInt, Itoa, formatBits, quoteWith, Quote, QuoteToASCII, QuoteRune, AppendQuoteRune, QuoteRuneToASCII, AppendQuoteRuneToASCII, CanBackquote, unhex, UnquoteChar, Unquote, contains, bsearch16, bsearch32, IsPrint;
	errors = $packages["errors"];
	math = $packages["math"];
	utf8 = $packages["unicode/utf8"];
	NumError = $pkg.NumError = $newType(0, $kindStruct, "strconv.NumError", "NumError", "strconv", function(Func_, Num_, Err_) {
		this.$val = this;
		this.Func = Func_ !== undefined ? Func_ : "";
		this.Num = Num_ !== undefined ? Num_ : "";
		this.Err = Err_ !== undefined ? Err_ : $ifaceNil;
	});
	decimal = $pkg.decimal = $newType(0, $kindStruct, "strconv.decimal", "decimal", "strconv", function(d_, nd_, dp_, neg_, trunc_) {
		this.$val = this;
		this.d = d_ !== undefined ? d_ : arrayType$6.zero();
		this.nd = nd_ !== undefined ? nd_ : 0;
		this.dp = dp_ !== undefined ? dp_ : 0;
		this.neg = neg_ !== undefined ? neg_ : false;
		this.trunc = trunc_ !== undefined ? trunc_ : false;
	});
	leftCheat = $pkg.leftCheat = $newType(0, $kindStruct, "strconv.leftCheat", "leftCheat", "strconv", function(delta_, cutoff_) {
		this.$val = this;
		this.delta = delta_ !== undefined ? delta_ : 0;
		this.cutoff = cutoff_ !== undefined ? cutoff_ : "";
	});
	extFloat = $pkg.extFloat = $newType(0, $kindStruct, "strconv.extFloat", "extFloat", "strconv", function(mant_, exp_, neg_) {
		this.$val = this;
		this.mant = mant_ !== undefined ? mant_ : new $Uint64(0, 0);
		this.exp = exp_ !== undefined ? exp_ : 0;
		this.neg = neg_ !== undefined ? neg_ : false;
	});
	floatInfo = $pkg.floatInfo = $newType(0, $kindStruct, "strconv.floatInfo", "floatInfo", "strconv", function(mantbits_, expbits_, bias_) {
		this.$val = this;
		this.mantbits = mantbits_ !== undefined ? mantbits_ : 0;
		this.expbits = expbits_ !== undefined ? expbits_ : 0;
		this.bias = bias_ !== undefined ? bias_ : 0;
	});
	decimalSlice = $pkg.decimalSlice = $newType(0, $kindStruct, "strconv.decimalSlice", "decimalSlice", "strconv", function(d_, nd_, dp_, neg_) {
		this.$val = this;
		this.d = d_ !== undefined ? d_ : sliceType$6.nil;
		this.nd = nd_ !== undefined ? nd_ : 0;
		this.dp = dp_ !== undefined ? dp_ : 0;
		this.neg = neg_ !== undefined ? neg_ : false;
	});
		sliceType = $sliceType($Int);
		sliceType$1 = $sliceType($Float64);
		sliceType$2 = $sliceType($Float32);
		sliceType$3 = $sliceType(leftCheat);
		sliceType$4 = $sliceType($Uint16);
		sliceType$5 = $sliceType($Uint32);
		sliceType$6 = $sliceType($Uint8);
		ptrType = $ptrType(NumError);
		arrayType = $arrayType($Uint8, 24);
		arrayType$1 = $arrayType($Uint8, 32);
		ptrType$1 = $ptrType(floatInfo);
		arrayType$2 = $arrayType($Uint8, 3);
		arrayType$3 = $arrayType($Uint8, 50);
		arrayType$4 = $arrayType($Uint8, 65);
		arrayType$5 = $arrayType($Uint8, 4);
		arrayType$6 = $arrayType($Uint8, 800);
		ptrType$2 = $ptrType(decimal);
		ptrType$3 = $ptrType(decimalSlice);
		ptrType$4 = $ptrType(extFloat);
	ParseBool = $pkg.ParseBool = function(str) {
		var _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, err = $ifaceNil, value = false;
		_ref = str;
		if (_ref === "1" || _ref === "t" || _ref === "T" || _ref === "true" || _ref === "TRUE" || _ref === "True") {
			_tmp = true; _tmp$1 = $ifaceNil; value = _tmp; err = _tmp$1;
			return [value, err];
		} else if (_ref === "0" || _ref === "f" || _ref === "F" || _ref === "false" || _ref === "FALSE" || _ref === "False") {
			_tmp$2 = false; _tmp$3 = $ifaceNil; value = _tmp$2; err = _tmp$3;
			return [value, err];
		}
		_tmp$4 = false; _tmp$5 = syntaxError("ParseBool", str); value = _tmp$4; err = _tmp$5;
		return [value, err];
	};
	equalIgnoreCase = function(s1, s2) {
		var c1, c2, i;
		if (!((s1.length === s2.length))) {
			return false;
		}
		i = 0;
		while (i < s1.length) {
			c1 = s1.charCodeAt(i);
			if (65 <= c1 && c1 <= 90) {
				c1 = c1 + (32) << 24 >>> 24;
			}
			c2 = s2.charCodeAt(i);
			if (65 <= c2 && c2 <= 90) {
				c2 = c2 + (32) << 24 >>> 24;
			}
			if (!((c1 === c2))) {
				return false;
			}
			i = i + (1) >> 0;
		}
		return true;
	};
	special = function(s) {
		var _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, f = 0, ok = false;
		if (s.length === 0) {
			return [f, ok];
		}
		_ref = s.charCodeAt(0);
		if (_ref === 43) {
			if (equalIgnoreCase(s, "+inf") || equalIgnoreCase(s, "+infinity")) {
				_tmp = math.Inf(1); _tmp$1 = true; f = _tmp; ok = _tmp$1;
				return [f, ok];
			}
		} else if (_ref === 45) {
			if (equalIgnoreCase(s, "-inf") || equalIgnoreCase(s, "-infinity")) {
				_tmp$2 = math.Inf(-1); _tmp$3 = true; f = _tmp$2; ok = _tmp$3;
				return [f, ok];
			}
		} else if (_ref === 110 || _ref === 78) {
			if (equalIgnoreCase(s, "nan")) {
				_tmp$4 = math.NaN(); _tmp$5 = true; f = _tmp$4; ok = _tmp$5;
				return [f, ok];
			}
		} else if (_ref === 105 || _ref === 73) {
			if (equalIgnoreCase(s, "inf") || equalIgnoreCase(s, "infinity")) {
				_tmp$6 = math.Inf(1); _tmp$7 = true; f = _tmp$6; ok = _tmp$7;
				return [f, ok];
			}
		} else {
			return [f, ok];
		}
		return [f, ok];
	};
	decimal.ptr.prototype.set = function(s) {
		var b, e, esign, i, ok = false, sawdigits, sawdot, x, x$1;
		b = this;
		i = 0;
		b.neg = false;
		b.trunc = false;
		if (i >= s.length) {
			return ok;
		}
		if (s.charCodeAt(i) === 43) {
			i = i + (1) >> 0;
		} else if (s.charCodeAt(i) === 45) {
			b.neg = true;
			i = i + (1) >> 0;
		}
		sawdot = false;
		sawdigits = false;
		while (i < s.length) {
			if (s.charCodeAt(i) === 46) {
				if (sawdot) {
					return ok;
				}
				sawdot = true;
				b.dp = b.nd;
				i = i + (1) >> 0;
				continue;
			} else if (48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {
				sawdigits = true;
				if ((s.charCodeAt(i) === 48) && (b.nd === 0)) {
					b.dp = b.dp - (1) >> 0;
					i = i + (1) >> 0;
					continue;
				}
				if (b.nd < 800) {
					(x = b.d, x$1 = b.nd, (x$1 < 0 || x$1 >= x.length) ? $throwRuntimeError("index out of range") : x[x$1] = s.charCodeAt(i));
					b.nd = b.nd + (1) >> 0;
				} else if (!((s.charCodeAt(i) === 48))) {
					b.trunc = true;
				}
				i = i + (1) >> 0;
				continue;
			}
			break;
		}
		if (!sawdigits) {
			return ok;
		}
		if (!sawdot) {
			b.dp = b.nd;
		}
		if (i < s.length && ((s.charCodeAt(i) === 101) || (s.charCodeAt(i) === 69))) {
			i = i + (1) >> 0;
			if (i >= s.length) {
				return ok;
			}
			esign = 1;
			if (s.charCodeAt(i) === 43) {
				i = i + (1) >> 0;
			} else if (s.charCodeAt(i) === 45) {
				i = i + (1) >> 0;
				esign = -1;
			}
			if (i >= s.length || s.charCodeAt(i) < 48 || s.charCodeAt(i) > 57) {
				return ok;
			}
			e = 0;
			while (i < s.length && 48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {
				if (e < 10000) {
					e = ((e * 10 >> 0) + (s.charCodeAt(i) >> 0) >> 0) - 48 >> 0;
				}
				i = i + (1) >> 0;
			}
			b.dp = b.dp + ((e * esign >> 0)) >> 0;
		}
		if (!((i === s.length))) {
			return ok;
		}
		ok = true;
		return ok;
	};
	decimal.prototype.set = function(s) { return this.$val.set(s); };
	readFloat = function(s) {
		var _ref, c, dp, e, esign, exp = 0, i, mantissa = new $Uint64(0, 0), nd, ndMant, neg = false, ok = false, sawdigits, sawdot, trunc = false, x;
		i = 0;
		if (i >= s.length) {
			return [mantissa, exp, neg, trunc, ok];
		}
		if (s.charCodeAt(i) === 43) {
			i = i + (1) >> 0;
		} else if (s.charCodeAt(i) === 45) {
			neg = true;
			i = i + (1) >> 0;
		}
		sawdot = false;
		sawdigits = false;
		nd = 0;
		ndMant = 0;
		dp = 0;
		while (i < s.length) {
			c = s.charCodeAt(i);
			_ref = true;
			if (_ref === (c === 46)) {
				if (sawdot) {
					return [mantissa, exp, neg, trunc, ok];
				}
				sawdot = true;
				dp = nd;
				i = i + (1) >> 0;
				continue;
			} else if (_ref === 48 <= c && c <= 57) {
				sawdigits = true;
				if ((c === 48) && (nd === 0)) {
					dp = dp - (1) >> 0;
					i = i + (1) >> 0;
					continue;
				}
				nd = nd + (1) >> 0;
				if (ndMant < 19) {
					mantissa = $mul64(mantissa, (new $Uint64(0, 10)));
					mantissa = (x = new $Uint64(0, (c - 48 << 24 >>> 24)), new $Uint64(mantissa.$high + x.$high, mantissa.$low + x.$low));
					ndMant = ndMant + (1) >> 0;
				} else if (!((s.charCodeAt(i) === 48))) {
					trunc = true;
				}
				i = i + (1) >> 0;
				continue;
			}
			break;
		}
		if (!sawdigits) {
			return [mantissa, exp, neg, trunc, ok];
		}
		if (!sawdot) {
			dp = nd;
		}
		if (i < s.length && ((s.charCodeAt(i) === 101) || (s.charCodeAt(i) === 69))) {
			i = i + (1) >> 0;
			if (i >= s.length) {
				return [mantissa, exp, neg, trunc, ok];
			}
			esign = 1;
			if (s.charCodeAt(i) === 43) {
				i = i + (1) >> 0;
			} else if (s.charCodeAt(i) === 45) {
				i = i + (1) >> 0;
				esign = -1;
			}
			if (i >= s.length || s.charCodeAt(i) < 48 || s.charCodeAt(i) > 57) {
				return [mantissa, exp, neg, trunc, ok];
			}
			e = 0;
			while (i < s.length && 48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {
				if (e < 10000) {
					e = ((e * 10 >> 0) + (s.charCodeAt(i) >> 0) >> 0) - 48 >> 0;
				}
				i = i + (1) >> 0;
			}
			dp = dp + ((e * esign >> 0)) >> 0;
		}
		if (!((i === s.length))) {
			return [mantissa, exp, neg, trunc, ok];
		}
		exp = dp - ndMant >> 0;
		ok = true;
		return [mantissa, exp, neg, trunc, ok];
	};
	decimal.ptr.prototype.floatBits = function(flt) {
		var $args = arguments, $s = 0, $this = this, _tmp, _tmp$1, b = new $Uint64(0, 0), bits, d, exp, mant, n, n$1, n$2, overflow = false, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8, y, y$1, y$2, y$3;
		/* */ s: while (true) { switch ($s) { case 0:
		d = $this;
		exp = 0;
		mant = new $Uint64(0, 0);
		/* if (d.nd === 0) { */ if (d.nd === 0) {} else { $s = 3; continue; }
			mant = new $Uint64(0, 0);
			exp = flt.bias;
			/* goto out */ $s = 1; continue;
		/* } */ case 3:
		/* if (d.dp > 310) { */ if (d.dp > 310) {} else { $s = 4; continue; }
			/* goto overflow */ $s = 2; continue;
		/* } */ case 4:
		/* if (d.dp < -330) { */ if (d.dp < -330) {} else { $s = 5; continue; }
			mant = new $Uint64(0, 0);
			exp = flt.bias;
			/* goto out */ $s = 1; continue;
		/* } */ case 5:
		exp = 0;
		while (d.dp > 0) {
			n = 0;
			if (d.dp >= powtab.$length) {
				n = 27;
			} else {
				n = (x = d.dp, ((x < 0 || x >= powtab.$length) ? $throwRuntimeError("index out of range") : powtab.$array[powtab.$offset + x]));
			}
			d.Shift(-n);
			exp = exp + (n) >> 0;
		}
		while (d.dp < 0 || (d.dp === 0) && d.d[0] < 53) {
			n$1 = 0;
			if (-d.dp >= powtab.$length) {
				n$1 = 27;
			} else {
				n$1 = (x$1 = -d.dp, ((x$1 < 0 || x$1 >= powtab.$length) ? $throwRuntimeError("index out of range") : powtab.$array[powtab.$offset + x$1]));
			}
			d.Shift(n$1);
			exp = exp - (n$1) >> 0;
		}
		exp = exp - (1) >> 0;
		if (exp < (flt.bias + 1 >> 0)) {
			n$2 = (flt.bias + 1 >> 0) - exp >> 0;
			d.Shift(-n$2);
			exp = exp + (n$2) >> 0;
		}
		/* if ((exp - flt.bias >> 0) >= (((y = flt.expbits, y < 32 ? (1 << y) : 0) >> 0) - 1 >> 0)) { */ if ((exp - flt.bias >> 0) >= (((y = flt.expbits, y < 32 ? (1 << y) : 0) >> 0) - 1 >> 0)) {} else { $s = 6; continue; }
			/* goto overflow */ $s = 2; continue;
		/* } */ case 6:
		d.Shift(((1 + flt.mantbits >>> 0) >> 0));
		mant = d.RoundedInteger();
		/* if ((x$2 = $shiftLeft64(new $Uint64(0, 2), flt.mantbits), (mant.$high === x$2.$high && mant.$low === x$2.$low))) { */ if ((x$2 = $shiftLeft64(new $Uint64(0, 2), flt.mantbits), (mant.$high === x$2.$high && mant.$low === x$2.$low))) {} else { $s = 7; continue; }
			mant = $shiftRightUint64(mant, (1));
			exp = exp + (1) >> 0;
			/* if ((exp - flt.bias >> 0) >= (((y$1 = flt.expbits, y$1 < 32 ? (1 << y$1) : 0) >> 0) - 1 >> 0)) { */ if ((exp - flt.bias >> 0) >= (((y$1 = flt.expbits, y$1 < 32 ? (1 << y$1) : 0) >> 0) - 1 >> 0)) {} else { $s = 8; continue; }
				/* goto overflow */ $s = 2; continue;
			/* } */ case 8:
		/* } */ case 7:
		if ((x$3 = (x$4 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(mant.$high & x$4.$high, (mant.$low & x$4.$low) >>> 0)), (x$3.$high === 0 && x$3.$low === 0))) {
			exp = flt.bias;
		}
		/* goto out */ $s = 1; continue;
		/* overflow: */ case 2:
		mant = new $Uint64(0, 0);
		exp = (((y$2 = flt.expbits, y$2 < 32 ? (1 << y$2) : 0) >> 0) - 1 >> 0) + flt.bias >> 0;
		overflow = true;
		/* out: */ case 1:
		bits = (x$5 = (x$6 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(x$6.$high - 0, x$6.$low - 1)), new $Uint64(mant.$high & x$5.$high, (mant.$low & x$5.$low) >>> 0));
		bits = (x$7 = $shiftLeft64(new $Uint64(0, (((exp - flt.bias >> 0)) & ((((y$3 = flt.expbits, y$3 < 32 ? (1 << y$3) : 0) >> 0) - 1 >> 0)))), flt.mantbits), new $Uint64(bits.$high | x$7.$high, (bits.$low | x$7.$low) >>> 0));
		if (d.neg) {
			bits = (x$8 = $shiftLeft64($shiftLeft64(new $Uint64(0, 1), flt.mantbits), flt.expbits), new $Uint64(bits.$high | x$8.$high, (bits.$low | x$8.$low) >>> 0));
		}
		_tmp = bits; _tmp$1 = overflow; b = _tmp; overflow = _tmp$1;
		return [b, overflow];
		/* */ case -1: } return; }
	};
	decimal.prototype.floatBits = function(flt) { return this.$val.floatBits(flt); };
	atof64exact = function(mantissa, exp, neg) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, f = 0, ok = false, x, x$1, x$2;
		if (!((x = $shiftRightUint64(mantissa, float64info.mantbits), (x.$high === 0 && x.$low === 0)))) {
			return [f, ok];
		}
		f = $flatten64(mantissa);
		if (neg) {
			f = -f;
		}
		if (exp === 0) {
			_tmp = f; _tmp$1 = true; f = _tmp; ok = _tmp$1;
			return [f, ok];
		} else if (exp > 0 && exp <= 37) {
			if (exp > 22) {
				f = f * ((x$1 = exp - 22 >> 0, ((x$1 < 0 || x$1 >= float64pow10.$length) ? $throwRuntimeError("index out of range") : float64pow10.$array[float64pow10.$offset + x$1])));
				exp = 22;
			}
			if (f > 1e+15 || f < -1e+15) {
				return [f, ok];
			}
			_tmp$2 = f * ((exp < 0 || exp >= float64pow10.$length) ? $throwRuntimeError("index out of range") : float64pow10.$array[float64pow10.$offset + exp]); _tmp$3 = true; f = _tmp$2; ok = _tmp$3;
			return [f, ok];
		} else if (exp < 0 && exp >= -22) {
			_tmp$4 = f / (x$2 = -exp, ((x$2 < 0 || x$2 >= float64pow10.$length) ? $throwRuntimeError("index out of range") : float64pow10.$array[float64pow10.$offset + x$2])); _tmp$5 = true; f = _tmp$4; ok = _tmp$5;
			return [f, ok];
		}
		return [f, ok];
	};
	atof32exact = function(mantissa, exp, neg) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, f = 0, ok = false, x, x$1, x$2;
		if (!((x = $shiftRightUint64(mantissa, float32info.mantbits), (x.$high === 0 && x.$low === 0)))) {
			return [f, ok];
		}
		f = $flatten64(mantissa);
		if (neg) {
			f = -f;
		}
		if (exp === 0) {
			_tmp = f; _tmp$1 = true; f = _tmp; ok = _tmp$1;
			return [f, ok];
		} else if (exp > 0 && exp <= 17) {
			if (exp > 10) {
				f = f * ((x$1 = exp - 10 >> 0, ((x$1 < 0 || x$1 >= float32pow10.$length) ? $throwRuntimeError("index out of range") : float32pow10.$array[float32pow10.$offset + x$1])));
				exp = 10;
			}
			if (f > 1e+07 || f < -1e+07) {
				return [f, ok];
			}
			_tmp$2 = f * ((exp < 0 || exp >= float32pow10.$length) ? $throwRuntimeError("index out of range") : float32pow10.$array[float32pow10.$offset + exp]); _tmp$3 = true; f = _tmp$2; ok = _tmp$3;
			return [f, ok];
		} else if (exp < 0 && exp >= -10) {
			_tmp$4 = f / (x$2 = -exp, ((x$2 < 0 || x$2 >= float32pow10.$length) ? $throwRuntimeError("index out of range") : float32pow10.$array[float32pow10.$offset + x$2])); _tmp$5 = true; f = _tmp$4; ok = _tmp$5;
			return [f, ok];
		}
		return [f, ok];
	};
	atof32 = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, b, b$1, d, err = $ifaceNil, exp, ext, f = 0, f$1, mantissa, neg, ok, ok$1, ok$2, ok$3, ovf, ovf$1, trunc, val;
		_tuple = special(s); val = _tuple[0]; ok = _tuple[1];
		if (ok) {
			_tmp = val; _tmp$1 = $ifaceNil; f = _tmp; err = _tmp$1;
			return [f, err];
		}
		if (optimize) {
			_tuple$1 = readFloat(s); mantissa = _tuple$1[0]; exp = _tuple$1[1]; neg = _tuple$1[2]; trunc = _tuple$1[3]; ok$1 = _tuple$1[4];
			if (ok$1) {
				if (!trunc) {
					_tuple$2 = atof32exact(mantissa, exp, neg); f$1 = _tuple$2[0]; ok$2 = _tuple$2[1];
					if (ok$2) {
						_tmp$2 = f$1; _tmp$3 = $ifaceNil; f = _tmp$2; err = _tmp$3;
						return [f, err];
					}
				}
				ext = new extFloat.ptr();
				ok$3 = ext.AssignDecimal(mantissa, exp, neg, trunc, float32info);
				if (ok$3) {
					_tuple$3 = ext.floatBits(float32info); b = _tuple$3[0]; ovf = _tuple$3[1];
					f = math.Float32frombits((b.$low >>> 0));
					if (ovf) {
						err = rangeError("ParseFloat", s);
					}
					_tmp$4 = f; _tmp$5 = err; f = _tmp$4; err = _tmp$5;
					return [f, err];
				}
			}
		}
		d = $clone(new decimal.ptr(), decimal);
		if (!d.set(s)) {
			_tmp$6 = 0; _tmp$7 = syntaxError("ParseFloat", s); f = _tmp$6; err = _tmp$7;
			return [f, err];
		}
		_tuple$4 = d.floatBits(float32info); b$1 = _tuple$4[0]; ovf$1 = _tuple$4[1];
		f = math.Float32frombits((b$1.$low >>> 0));
		if (ovf$1) {
			err = rangeError("ParseFloat", s);
		}
		_tmp$8 = f; _tmp$9 = err; f = _tmp$8; err = _tmp$9;
		return [f, err];
	};
	atof64 = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, b, b$1, d, err = $ifaceNil, exp, ext, f = 0, f$1, mantissa, neg, ok, ok$1, ok$2, ok$3, ovf, ovf$1, trunc, val;
		_tuple = special(s); val = _tuple[0]; ok = _tuple[1];
		if (ok) {
			_tmp = val; _tmp$1 = $ifaceNil; f = _tmp; err = _tmp$1;
			return [f, err];
		}
		if (optimize) {
			_tuple$1 = readFloat(s); mantissa = _tuple$1[0]; exp = _tuple$1[1]; neg = _tuple$1[2]; trunc = _tuple$1[3]; ok$1 = _tuple$1[4];
			if (ok$1) {
				if (!trunc) {
					_tuple$2 = atof64exact(mantissa, exp, neg); f$1 = _tuple$2[0]; ok$2 = _tuple$2[1];
					if (ok$2) {
						_tmp$2 = f$1; _tmp$3 = $ifaceNil; f = _tmp$2; err = _tmp$3;
						return [f, err];
					}
				}
				ext = new extFloat.ptr();
				ok$3 = ext.AssignDecimal(mantissa, exp, neg, trunc, float64info);
				if (ok$3) {
					_tuple$3 = ext.floatBits(float64info); b = _tuple$3[0]; ovf = _tuple$3[1];
					f = math.Float64frombits(b);
					if (ovf) {
						err = rangeError("ParseFloat", s);
					}
					_tmp$4 = f; _tmp$5 = err; f = _tmp$4; err = _tmp$5;
					return [f, err];
				}
			}
		}
		d = $clone(new decimal.ptr(), decimal);
		if (!d.set(s)) {
			_tmp$6 = 0; _tmp$7 = syntaxError("ParseFloat", s); f = _tmp$6; err = _tmp$7;
			return [f, err];
		}
		_tuple$4 = d.floatBits(float64info); b$1 = _tuple$4[0]; ovf$1 = _tuple$4[1];
		f = math.Float64frombits(b$1);
		if (ovf$1) {
			err = rangeError("ParseFloat", s);
		}
		_tmp$8 = f; _tmp$9 = err; f = _tmp$8; err = _tmp$9;
		return [f, err];
	};
	ParseFloat = $pkg.ParseFloat = function(s, bitSize) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, _tuple$1, err = $ifaceNil, err1, err1$1, f = 0, f1, f1$1;
		if (bitSize === 32) {
			_tuple = atof32(s); f1 = _tuple[0]; err1 = _tuple[1];
			_tmp = $coerceFloat32(f1); _tmp$1 = err1; f = _tmp; err = _tmp$1;
			return [f, err];
		}
		_tuple$1 = atof64(s); f1$1 = _tuple$1[0]; err1$1 = _tuple$1[1];
		_tmp$2 = f1$1; _tmp$3 = err1$1; f = _tmp$2; err = _tmp$3;
		return [f, err];
	};
	NumError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return "strconv." + e.Func + ": " + "parsing " + Quote(e.Num) + ": " + e.Err.Error();
	};
	NumError.prototype.Error = function() { return this.$val.Error(); };
	syntaxError = function(fn, str) {
		return new NumError.ptr(fn, str, $pkg.ErrSyntax);
	};
	rangeError = function(fn, str) {
		return new NumError.ptr(fn, str, $pkg.ErrRange);
	};
	cutoff64 = function(base) {
		var x;
		if (base < 2) {
			return new $Uint64(0, 0);
		}
		return (x = $div64(new $Uint64(4294967295, 4294967295), new $Uint64(0, base), false), new $Uint64(x.$high + 0, x.$low + 1));
	};
	ParseUint = $pkg.ParseUint = function(s, base, bitSize) {
		var $args = arguments, $s = 0, $this = this, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, cutoff, d, err = $ifaceNil, i, maxVal, n = new $Uint64(0, 0), n1, s0, v, x, x$1;
		/* */ s: while (true) { switch ($s) { case 0:
		_tmp = new $Uint64(0, 0); _tmp$1 = new $Uint64(0, 0); cutoff = _tmp; maxVal = _tmp$1;
		if (bitSize === 0) {
			bitSize = 32;
		}
		s0 = s;
		/* if (s.length < 1) { */ if (s.length < 1) {} else if (2 <= base && base <= 36) { $s = 2; continue; } else if (base === 0) { $s = 3; continue; } else { $s = 4; continue; }
			err = $pkg.ErrSyntax;
			/* goto Error */ $s = 1; continue;
		/* } else if (2 <= base && base <= 36) { */ $s = 5; continue; case 2: 
		/* } else if (base === 0) { */ $s = 5; continue; case 3: 
			/* if ((s.charCodeAt(0) === 48) && s.length > 1 && ((s.charCodeAt(1) === 120) || (s.charCodeAt(1) === 88))) { */ if ((s.charCodeAt(0) === 48) && s.length > 1 && ((s.charCodeAt(1) === 120) || (s.charCodeAt(1) === 88))) {} else if (s.charCodeAt(0) === 48) { $s = 6; continue; } else { $s = 7; continue; }
				base = 16;
				s = s.substring(2);
				/* if (s.length < 1) { */ if (s.length < 1) {} else { $s = 9; continue; }
					err = $pkg.ErrSyntax;
					/* goto Error */ $s = 1; continue;
				/* } */ case 9:
			/* } else if (s.charCodeAt(0) === 48) { */ $s = 8; continue; case 6: 
				base = 8;
			/* } else { */ $s = 8; continue; case 7: 
				base = 10;
			/* } */ case 8:
		/* } else { */ $s = 5; continue; case 4: 
			err = errors.New("invalid base " + Itoa(base));
			/* goto Error */ $s = 1; continue;
		/* } */ case 5:
		n = new $Uint64(0, 0);
		cutoff = cutoff64(base);
		maxVal = (x = $shiftLeft64(new $Uint64(0, 1), (bitSize >>> 0)), new $Uint64(x.$high - 0, x.$low - 1));
		i = 0;
		/* while (i < s.length) { */ case 10: if(!(i < s.length)) { $s = 11; continue; }
			v = 0;
			d = s.charCodeAt(i);
			/* if (48 <= d && d <= 57) { */ if (48 <= d && d <= 57) {} else if (97 <= d && d <= 122) { $s = 12; continue; } else if (65 <= d && d <= 90) { $s = 13; continue; } else { $s = 14; continue; }
				v = d - 48 << 24 >>> 24;
			/* } else if (97 <= d && d <= 122) { */ $s = 15; continue; case 12: 
				v = (d - 97 << 24 >>> 24) + 10 << 24 >>> 24;
			/* } else if (65 <= d && d <= 90) { */ $s = 15; continue; case 13: 
				v = (d - 65 << 24 >>> 24) + 10 << 24 >>> 24;
			/* } else { */ $s = 15; continue; case 14: 
				n = new $Uint64(0, 0);
				err = $pkg.ErrSyntax;
				/* goto Error */ $s = 1; continue;
			/* } */ case 15:
			/* if ((v >> 0) >= base) { */ if ((v >> 0) >= base) {} else { $s = 16; continue; }
				n = new $Uint64(0, 0);
				err = $pkg.ErrSyntax;
				/* goto Error */ $s = 1; continue;
			/* } */ case 16:
			/* if ((n.$high > cutoff.$high || (n.$high === cutoff.$high && n.$low >= cutoff.$low))) { */ if ((n.$high > cutoff.$high || (n.$high === cutoff.$high && n.$low >= cutoff.$low))) {} else { $s = 17; continue; }
				n = new $Uint64(4294967295, 4294967295);
				err = $pkg.ErrRange;
				/* goto Error */ $s = 1; continue;
			/* } */ case 17:
			n = $mul64(n, (new $Uint64(0, base)));
			n1 = (x$1 = new $Uint64(0, v), new $Uint64(n.$high + x$1.$high, n.$low + x$1.$low));
			/* if ((n1.$high < n.$high || (n1.$high === n.$high && n1.$low < n.$low)) || (n1.$high > maxVal.$high || (n1.$high === maxVal.$high && n1.$low > maxVal.$low))) { */ if ((n1.$high < n.$high || (n1.$high === n.$high && n1.$low < n.$low)) || (n1.$high > maxVal.$high || (n1.$high === maxVal.$high && n1.$low > maxVal.$low))) {} else { $s = 18; continue; }
				n = new $Uint64(4294967295, 4294967295);
				err = $pkg.ErrRange;
				/* goto Error */ $s = 1; continue;
			/* } */ case 18:
			n = n1;
			i = i + (1) >> 0;
		/* } */ $s = 10; continue; case 11:
		_tmp$2 = n; _tmp$3 = $ifaceNil; n = _tmp$2; err = _tmp$3;
		return [n, err];
		/* Error: */ case 1:
		_tmp$4 = n; _tmp$5 = new NumError.ptr("ParseUint", s0, err); n = _tmp$4; err = _tmp$5;
		return [n, err];
		/* */ case -1: } return; }
	};
	ParseInt = $pkg.ParseInt = function(s, base, bitSize) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, cutoff, err = $ifaceNil, i = new $Int64(0, 0), n, neg, s0, un, x, x$1;
		if (bitSize === 0) {
			bitSize = 32;
		}
		if (s.length === 0) {
			_tmp = new $Int64(0, 0); _tmp$1 = syntaxError("ParseInt", s); i = _tmp; err = _tmp$1;
			return [i, err];
		}
		s0 = s;
		neg = false;
		if (s.charCodeAt(0) === 43) {
			s = s.substring(1);
		} else if (s.charCodeAt(0) === 45) {
			neg = true;
			s = s.substring(1);
		}
		un = new $Uint64(0, 0);
		_tuple = ParseUint(s, base, bitSize); un = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil)) && !($interfaceIsEqual($assertType(err, ptrType).Err, $pkg.ErrRange))) {
			$assertType(err, ptrType).Func = "ParseInt";
			$assertType(err, ptrType).Num = s0;
			_tmp$2 = new $Int64(0, 0); _tmp$3 = err; i = _tmp$2; err = _tmp$3;
			return [i, err];
		}
		cutoff = $shiftLeft64(new $Uint64(0, 1), ((bitSize - 1 >> 0) >>> 0));
		if (!neg && (un.$high > cutoff.$high || (un.$high === cutoff.$high && un.$low >= cutoff.$low))) {
			_tmp$4 = (x = new $Uint64(cutoff.$high - 0, cutoff.$low - 1), new $Int64(x.$high, x.$low)); _tmp$5 = rangeError("ParseInt", s0); i = _tmp$4; err = _tmp$5;
			return [i, err];
		}
		if (neg && (un.$high > cutoff.$high || (un.$high === cutoff.$high && un.$low > cutoff.$low))) {
			_tmp$6 = (x$1 = new $Int64(cutoff.$high, cutoff.$low), new $Int64(-x$1.$high, -x$1.$low)); _tmp$7 = rangeError("ParseInt", s0); i = _tmp$6; err = _tmp$7;
			return [i, err];
		}
		n = new $Int64(un.$high, un.$low);
		if (neg) {
			n = new $Int64(-n.$high, -n.$low);
		}
		_tmp$8 = n; _tmp$9 = $ifaceNil; i = _tmp$8; err = _tmp$9;
		return [i, err];
	};
	decimal.ptr.prototype.String = function() {
		var a, buf, n, w;
		a = this;
		n = 10 + a.nd >> 0;
		if (a.dp > 0) {
			n = n + (a.dp) >> 0;
		}
		if (a.dp < 0) {
			n = n + (-a.dp) >> 0;
		}
		buf = $makeSlice(sliceType$6, n);
		w = 0;
		if (a.nd === 0) {
			return "0";
		} else if (a.dp <= 0) {
			(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = 48;
			w = w + (1) >> 0;
			(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = 46;
			w = w + (1) >> 0;
			w = w + (digitZero($subslice(buf, w, (w + -a.dp >> 0)))) >> 0;
			w = w + ($copySlice($subslice(buf, w), $subslice(new sliceType$6(a.d), 0, a.nd))) >> 0;
		} else if (a.dp < a.nd) {
			w = w + ($copySlice($subslice(buf, w), $subslice(new sliceType$6(a.d), 0, a.dp))) >> 0;
			(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = 46;
			w = w + (1) >> 0;
			w = w + ($copySlice($subslice(buf, w), $subslice(new sliceType$6(a.d), a.dp, a.nd))) >> 0;
		} else {
			w = w + ($copySlice($subslice(buf, w), $subslice(new sliceType$6(a.d), 0, a.nd))) >> 0;
			w = w + (digitZero($subslice(buf, w, ((w + a.dp >> 0) - a.nd >> 0)))) >> 0;
		}
		return $bytesToString($subslice(buf, 0, w));
	};
	decimal.prototype.String = function() { return this.$val.String(); };
	digitZero = function(dst) {
		var _i, _ref, i;
		_ref = dst;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			(i < 0 || i >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + i] = 48;
			_i++;
		}
		return dst.$length;
	};
	trim = function(a) {
		var x, x$1;
		while (a.nd > 0 && ((x = a.d, x$1 = a.nd - 1 >> 0, ((x$1 < 0 || x$1 >= x.length) ? $throwRuntimeError("index out of range") : x[x$1])) === 48)) {
			a.nd = a.nd - (1) >> 0;
		}
		if (a.nd === 0) {
			a.dp = 0;
		}
	};
	decimal.ptr.prototype.Assign = function(v) {
		var a, buf, n, v1, x, x$1, x$2;
		a = this;
		buf = $clone(arrayType.zero(), arrayType);
		n = 0;
		while ((v.$high > 0 || (v.$high === 0 && v.$low > 0))) {
			v1 = $div64(v, new $Uint64(0, 10), false);
			v = (x = $mul64(new $Uint64(0, 10), v1), new $Uint64(v.$high - x.$high, v.$low - x.$low));
			(n < 0 || n >= buf.length) ? $throwRuntimeError("index out of range") : buf[n] = (new $Uint64(v.$high + 0, v.$low + 48).$low << 24 >>> 24);
			n = n + (1) >> 0;
			v = v1;
		}
		a.nd = 0;
		n = n - (1) >> 0;
		while (n >= 0) {
			(x$1 = a.d, x$2 = a.nd, (x$2 < 0 || x$2 >= x$1.length) ? $throwRuntimeError("index out of range") : x$1[x$2] = ((n < 0 || n >= buf.length) ? $throwRuntimeError("index out of range") : buf[n]));
			a.nd = a.nd + (1) >> 0;
			n = n - (1) >> 0;
		}
		a.dp = a.nd;
		trim(a);
	};
	decimal.prototype.Assign = function(v) { return this.$val.Assign(v); };
	rightShift = function(a, k) {
		var c, c$1, dig, dig$1, n, r, w, x, x$1, x$2, x$3, y, y$1;
		r = 0;
		w = 0;
		n = 0;
		while (((n >> $min(k, 31)) >> 0) === 0) {
			if (r >= a.nd) {
				if (n === 0) {
					a.nd = 0;
					return;
				}
				while (((n >> $min(k, 31)) >> 0) === 0) {
					n = n * 10 >> 0;
					r = r + (1) >> 0;
				}
				break;
			}
			c = ((x = a.d, ((r < 0 || r >= x.length) ? $throwRuntimeError("index out of range") : x[r])) >> 0);
			n = ((n * 10 >> 0) + c >> 0) - 48 >> 0;
			r = r + (1) >> 0;
		}
		a.dp = a.dp - ((r - 1 >> 0)) >> 0;
		while (r < a.nd) {
			c$1 = ((x$1 = a.d, ((r < 0 || r >= x$1.length) ? $throwRuntimeError("index out of range") : x$1[r])) >> 0);
			dig = (n >> $min(k, 31)) >> 0;
			n = n - (((y = k, y < 32 ? (dig << y) : 0) >> 0)) >> 0;
			(x$2 = a.d, (w < 0 || w >= x$2.length) ? $throwRuntimeError("index out of range") : x$2[w] = ((dig + 48 >> 0) << 24 >>> 24));
			w = w + (1) >> 0;
			n = ((n * 10 >> 0) + c$1 >> 0) - 48 >> 0;
			r = r + (1) >> 0;
		}
		while (n > 0) {
			dig$1 = (n >> $min(k, 31)) >> 0;
			n = n - (((y$1 = k, y$1 < 32 ? (dig$1 << y$1) : 0) >> 0)) >> 0;
			if (w < 800) {
				(x$3 = a.d, (w < 0 || w >= x$3.length) ? $throwRuntimeError("index out of range") : x$3[w] = ((dig$1 + 48 >> 0) << 24 >>> 24));
				w = w + (1) >> 0;
			} else if (dig$1 > 0) {
				a.trunc = true;
			}
			n = n * 10 >> 0;
		}
		a.nd = w;
		trim(a);
	};
	prefixIsLessThan = function(b, s) {
		var i;
		i = 0;
		while (i < s.length) {
			if (i >= b.$length) {
				return true;
			}
			if (!((((i < 0 || i >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + i]) === s.charCodeAt(i)))) {
				return ((i < 0 || i >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + i]) < s.charCodeAt(i);
			}
			i = i + (1) >> 0;
		}
		return false;
	};
	leftShift = function(a, k) {
		var _q, _q$1, delta, n, quo, quo$1, r, rem, rem$1, w, x, x$1, x$2, y;
		delta = ((k < 0 || k >= leftcheats.$length) ? $throwRuntimeError("index out of range") : leftcheats.$array[leftcheats.$offset + k]).delta;
		if (prefixIsLessThan($subslice(new sliceType$6(a.d), 0, a.nd), ((k < 0 || k >= leftcheats.$length) ? $throwRuntimeError("index out of range") : leftcheats.$array[leftcheats.$offset + k]).cutoff)) {
			delta = delta - (1) >> 0;
		}
		r = a.nd;
		w = a.nd + delta >> 0;
		n = 0;
		r = r - (1) >> 0;
		while (r >= 0) {
			n = n + (((y = k, y < 32 ? (((((x = a.d, ((r < 0 || r >= x.length) ? $throwRuntimeError("index out of range") : x[r])) >> 0) - 48 >> 0)) << y) : 0) >> 0)) >> 0;
			quo = (_q = n / 10, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
			rem = n - (10 * quo >> 0) >> 0;
			w = w - (1) >> 0;
			if (w < 800) {
				(x$1 = a.d, (w < 0 || w >= x$1.length) ? $throwRuntimeError("index out of range") : x$1[w] = ((rem + 48 >> 0) << 24 >>> 24));
			} else if (!((rem === 0))) {
				a.trunc = true;
			}
			n = quo;
			r = r - (1) >> 0;
		}
		while (n > 0) {
			quo$1 = (_q$1 = n / 10, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
			rem$1 = n - (10 * quo$1 >> 0) >> 0;
			w = w - (1) >> 0;
			if (w < 800) {
				(x$2 = a.d, (w < 0 || w >= x$2.length) ? $throwRuntimeError("index out of range") : x$2[w] = ((rem$1 + 48 >> 0) << 24 >>> 24));
			} else if (!((rem$1 === 0))) {
				a.trunc = true;
			}
			n = quo$1;
		}
		a.nd = a.nd + (delta) >> 0;
		if (a.nd >= 800) {
			a.nd = 800;
		}
		a.dp = a.dp + (delta) >> 0;
		trim(a);
	};
	decimal.ptr.prototype.Shift = function(k) {
		var a;
		a = this;
		if (a.nd === 0) {
		} else if (k > 0) {
			while (k > 27) {
				leftShift(a, 27);
				k = k - (27) >> 0;
			}
			leftShift(a, (k >>> 0));
		} else if (k < 0) {
			while (k < -27) {
				rightShift(a, 27);
				k = k + (27) >> 0;
			}
			rightShift(a, (-k >>> 0));
		}
	};
	decimal.prototype.Shift = function(k) { return this.$val.Shift(k); };
	shouldRoundUp = function(a, nd) {
		var _r, x, x$1, x$2, x$3;
		if (nd < 0 || nd >= a.nd) {
			return false;
		}
		if (((x = a.d, ((nd < 0 || nd >= x.length) ? $throwRuntimeError("index out of range") : x[nd])) === 53) && ((nd + 1 >> 0) === a.nd)) {
			if (a.trunc) {
				return true;
			}
			return nd > 0 && !(((_r = (((x$1 = a.d, x$2 = nd - 1 >> 0, ((x$2 < 0 || x$2 >= x$1.length) ? $throwRuntimeError("index out of range") : x$1[x$2])) - 48 << 24 >>> 24)) % 2, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0));
		}
		return (x$3 = a.d, ((nd < 0 || nd >= x$3.length) ? $throwRuntimeError("index out of range") : x$3[nd])) >= 53;
	};
	decimal.ptr.prototype.Round = function(nd) {
		var a;
		a = this;
		if (nd < 0 || nd >= a.nd) {
			return;
		}
		if (shouldRoundUp(a, nd)) {
			a.RoundUp(nd);
		} else {
			a.RoundDown(nd);
		}
	};
	decimal.prototype.Round = function(nd) { return this.$val.Round(nd); };
	decimal.ptr.prototype.RoundDown = function(nd) {
		var a;
		a = this;
		if (nd < 0 || nd >= a.nd) {
			return;
		}
		a.nd = nd;
		trim(a);
	};
	decimal.prototype.RoundDown = function(nd) { return this.$val.RoundDown(nd); };
	decimal.ptr.prototype.RoundUp = function(nd) {
		var _index, _lhs, a, c, i, x;
		a = this;
		if (nd < 0 || nd >= a.nd) {
			return;
		}
		i = nd - 1 >> 0;
		while (i >= 0) {
			c = (x = a.d, ((i < 0 || i >= x.length) ? $throwRuntimeError("index out of range") : x[i]));
			if (c < 57) {
				_lhs = a.d; _index = i; (_index < 0 || _index >= _lhs.length) ? $throwRuntimeError("index out of range") : _lhs[_index] = ((_index < 0 || _index >= _lhs.length) ? $throwRuntimeError("index out of range") : _lhs[_index]) + (1) << 24 >>> 24;
				a.nd = i + 1 >> 0;
				return;
			}
			i = i - (1) >> 0;
		}
		a.d[0] = 49;
		a.nd = 1;
		a.dp = a.dp + (1) >> 0;
	};
	decimal.prototype.RoundUp = function(nd) { return this.$val.RoundUp(nd); };
	decimal.ptr.prototype.RoundedInteger = function() {
		var a, i, n, x, x$1, x$2, x$3;
		a = this;
		if (a.dp > 20) {
			return new $Uint64(4294967295, 4294967295);
		}
		i = 0;
		n = new $Uint64(0, 0);
		i = 0;
		while (i < a.dp && i < a.nd) {
			n = (x = $mul64(n, new $Uint64(0, 10)), x$1 = new $Uint64(0, ((x$2 = a.d, ((i < 0 || i >= x$2.length) ? $throwRuntimeError("index out of range") : x$2[i])) - 48 << 24 >>> 24)), new $Uint64(x.$high + x$1.$high, x.$low + x$1.$low));
			i = i + (1) >> 0;
		}
		while (i < a.dp) {
			n = $mul64(n, (new $Uint64(0, 10)));
			i = i + (1) >> 0;
		}
		if (shouldRoundUp(a, a.dp)) {
			n = (x$3 = new $Uint64(0, 1), new $Uint64(n.$high + x$3.$high, n.$low + x$3.$low));
		}
		return n;
	};
	decimal.prototype.RoundedInteger = function() { return this.$val.RoundedInteger(); };
	extFloat.ptr.prototype.floatBits = function(flt) {
		var bits = new $Uint64(0, 0), exp, f, mant, n, overflow = false, x, x$1, x$10, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9, y, y$1, y$2;
		f = this;
		f.Normalize();
		exp = f.exp + 63 >> 0;
		if (exp < (flt.bias + 1 >> 0)) {
			n = (flt.bias + 1 >> 0) - exp >> 0;
			f.mant = $shiftRightUint64(f.mant, ((n >>> 0)));
			exp = exp + (n) >> 0;
		}
		mant = $shiftRightUint64(f.mant, ((63 - flt.mantbits >>> 0)));
		if (!((x = (x$1 = f.mant, x$2 = $shiftLeft64(new $Uint64(0, 1), ((62 - flt.mantbits >>> 0))), new $Uint64(x$1.$high & x$2.$high, (x$1.$low & x$2.$low) >>> 0)), (x.$high === 0 && x.$low === 0)))) {
			mant = (x$3 = new $Uint64(0, 1), new $Uint64(mant.$high + x$3.$high, mant.$low + x$3.$low));
		}
		if ((x$4 = $shiftLeft64(new $Uint64(0, 2), flt.mantbits), (mant.$high === x$4.$high && mant.$low === x$4.$low))) {
			mant = $shiftRightUint64(mant, (1));
			exp = exp + (1) >> 0;
		}
		if ((exp - flt.bias >> 0) >= (((y = flt.expbits, y < 32 ? (1 << y) : 0) >> 0) - 1 >> 0)) {
			mant = new $Uint64(0, 0);
			exp = (((y$1 = flt.expbits, y$1 < 32 ? (1 << y$1) : 0) >> 0) - 1 >> 0) + flt.bias >> 0;
			overflow = true;
		} else if ((x$5 = (x$6 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(mant.$high & x$6.$high, (mant.$low & x$6.$low) >>> 0)), (x$5.$high === 0 && x$5.$low === 0))) {
			exp = flt.bias;
		}
		bits = (x$7 = (x$8 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(x$8.$high - 0, x$8.$low - 1)), new $Uint64(mant.$high & x$7.$high, (mant.$low & x$7.$low) >>> 0));
		bits = (x$9 = $shiftLeft64(new $Uint64(0, (((exp - flt.bias >> 0)) & ((((y$2 = flt.expbits, y$2 < 32 ? (1 << y$2) : 0) >> 0) - 1 >> 0)))), flt.mantbits), new $Uint64(bits.$high | x$9.$high, (bits.$low | x$9.$low) >>> 0));
		if (f.neg) {
			bits = (x$10 = $shiftLeft64(new $Uint64(0, 1), ((flt.mantbits + flt.expbits >>> 0))), new $Uint64(bits.$high | x$10.$high, (bits.$low | x$10.$low) >>> 0));
		}
		return [bits, overflow];
	};
	extFloat.prototype.floatBits = function(flt) { return this.$val.floatBits(flt); };
	extFloat.ptr.prototype.AssignComputeBounds = function(mant, exp, neg, flt) {
		var _tmp, _tmp$1, expBiased, f, lower = new extFloat.ptr(), upper = new extFloat.ptr(), x, x$1, x$2, x$3, x$4;
		f = this;
		f.mant = mant;
		f.exp = exp - (flt.mantbits >> 0) >> 0;
		f.neg = neg;
		if (f.exp <= 0 && (x = $shiftLeft64(($shiftRightUint64(mant, (-f.exp >>> 0))), (-f.exp >>> 0)), (mant.$high === x.$high && mant.$low === x.$low))) {
			f.mant = $shiftRightUint64(f.mant, ((-f.exp >>> 0)));
			f.exp = 0;
			_tmp = $clone(f, extFloat); _tmp$1 = $clone(f, extFloat); $copy(lower, _tmp, extFloat); $copy(upper, _tmp$1, extFloat);
			return [lower, upper];
		}
		expBiased = exp - flt.bias >> 0;
		$copy(upper, new extFloat.ptr((x$1 = $mul64(new $Uint64(0, 2), f.mant), new $Uint64(x$1.$high + 0, x$1.$low + 1)), f.exp - 1 >> 0, f.neg), extFloat);
		if (!((x$2 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), (mant.$high === x$2.$high && mant.$low === x$2.$low))) || (expBiased === 1)) {
			$copy(lower, new extFloat.ptr((x$3 = $mul64(new $Uint64(0, 2), f.mant), new $Uint64(x$3.$high - 0, x$3.$low - 1)), f.exp - 1 >> 0, f.neg), extFloat);
		} else {
			$copy(lower, new extFloat.ptr((x$4 = $mul64(new $Uint64(0, 4), f.mant), new $Uint64(x$4.$high - 0, x$4.$low - 1)), f.exp - 2 >> 0, f.neg), extFloat);
		}
		return [lower, upper];
	};
	extFloat.prototype.AssignComputeBounds = function(mant, exp, neg, flt) { return this.$val.AssignComputeBounds(mant, exp, neg, flt); };
	extFloat.ptr.prototype.Normalize = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, exp, f, mant, shift = 0, x, x$1, x$2, x$3, x$4, x$5;
		f = this;
		_tmp = f.mant; _tmp$1 = f.exp; mant = _tmp; exp = _tmp$1;
		if ((mant.$high === 0 && mant.$low === 0)) {
			shift = 0;
			return shift;
		}
		if ((x = $shiftRightUint64(mant, 32), (x.$high === 0 && x.$low === 0))) {
			mant = $shiftLeft64(mant, (32));
			exp = exp - (32) >> 0;
		}
		if ((x$1 = $shiftRightUint64(mant, 48), (x$1.$high === 0 && x$1.$low === 0))) {
			mant = $shiftLeft64(mant, (16));
			exp = exp - (16) >> 0;
		}
		if ((x$2 = $shiftRightUint64(mant, 56), (x$2.$high === 0 && x$2.$low === 0))) {
			mant = $shiftLeft64(mant, (8));
			exp = exp - (8) >> 0;
		}
		if ((x$3 = $shiftRightUint64(mant, 60), (x$3.$high === 0 && x$3.$low === 0))) {
			mant = $shiftLeft64(mant, (4));
			exp = exp - (4) >> 0;
		}
		if ((x$4 = $shiftRightUint64(mant, 62), (x$4.$high === 0 && x$4.$low === 0))) {
			mant = $shiftLeft64(mant, (2));
			exp = exp - (2) >> 0;
		}
		if ((x$5 = $shiftRightUint64(mant, 63), (x$5.$high === 0 && x$5.$low === 0))) {
			mant = $shiftLeft64(mant, (1));
			exp = exp - (1) >> 0;
		}
		shift = ((f.exp - exp >> 0) >>> 0);
		_tmp$2 = mant; _tmp$3 = exp; f.mant = _tmp$2; f.exp = _tmp$3;
		return shift;
	};
	extFloat.prototype.Normalize = function() { return this.$val.Normalize(); };
	extFloat.ptr.prototype.Multiply = function(g) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, cross1, cross2, f, fhi, flo, ghi, glo, rem, x, x$1, x$10, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		f = this;
		g = $clone(g, extFloat);
		_tmp = $shiftRightUint64(f.mant, 32); _tmp$1 = new $Uint64(0, (f.mant.$low >>> 0)); fhi = _tmp; flo = _tmp$1;
		_tmp$2 = $shiftRightUint64(g.mant, 32); _tmp$3 = new $Uint64(0, (g.mant.$low >>> 0)); ghi = _tmp$2; glo = _tmp$3;
		cross1 = $mul64(fhi, glo);
		cross2 = $mul64(flo, ghi);
		f.mant = (x = (x$1 = $mul64(fhi, ghi), x$2 = $shiftRightUint64(cross1, 32), new $Uint64(x$1.$high + x$2.$high, x$1.$low + x$2.$low)), x$3 = $shiftRightUint64(cross2, 32), new $Uint64(x.$high + x$3.$high, x.$low + x$3.$low));
		rem = (x$4 = (x$5 = new $Uint64(0, (cross1.$low >>> 0)), x$6 = new $Uint64(0, (cross2.$low >>> 0)), new $Uint64(x$5.$high + x$6.$high, x$5.$low + x$6.$low)), x$7 = $shiftRightUint64(($mul64(flo, glo)), 32), new $Uint64(x$4.$high + x$7.$high, x$4.$low + x$7.$low));
		rem = (x$8 = new $Uint64(0, 2147483648), new $Uint64(rem.$high + x$8.$high, rem.$low + x$8.$low));
		f.mant = (x$9 = f.mant, x$10 = ($shiftRightUint64(rem, 32)), new $Uint64(x$9.$high + x$10.$high, x$9.$low + x$10.$low));
		f.exp = (f.exp + g.exp >> 0) + 64 >> 0;
	};
	extFloat.prototype.Multiply = function(g) { return this.$val.Multiply(g); };
	extFloat.ptr.prototype.AssignDecimal = function(mantissa, exp10, neg, trunc, flt) {
		var _q, _r, adjExp, denormalExp, errors$1, extrabits, f, halfway, i, mant_extra, ok = false, shift, x, x$1, x$10, x$11, x$12, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9, y;
		f = this;
		errors$1 = 0;
		if (trunc) {
			errors$1 = errors$1 + (4) >> 0;
		}
		f.mant = mantissa;
		f.exp = 0;
		f.neg = neg;
		i = (_q = ((exp10 - -348 >> 0)) / 8, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		if (exp10 < -348 || i >= 87) {
			ok = false;
			return ok;
		}
		adjExp = (_r = ((exp10 - -348 >> 0)) % 8, _r === _r ? _r : $throwRuntimeError("integer divide by zero"));
		if (adjExp < 19 && (x = (x$1 = 19 - adjExp >> 0, ((x$1 < 0 || x$1 >= uint64pow10.length) ? $throwRuntimeError("index out of range") : uint64pow10[x$1])), (mantissa.$high < x.$high || (mantissa.$high === x.$high && mantissa.$low < x.$low)))) {
			f.mant = $mul64(f.mant, (((adjExp < 0 || adjExp >= uint64pow10.length) ? $throwRuntimeError("index out of range") : uint64pow10[adjExp])));
			f.Normalize();
		} else {
			f.Normalize();
			f.Multiply(((adjExp < 0 || adjExp >= smallPowersOfTen.length) ? $throwRuntimeError("index out of range") : smallPowersOfTen[adjExp]));
			errors$1 = errors$1 + (4) >> 0;
		}
		f.Multiply(((i < 0 || i >= powersOfTen.length) ? $throwRuntimeError("index out of range") : powersOfTen[i]));
		if (errors$1 > 0) {
			errors$1 = errors$1 + (1) >> 0;
		}
		errors$1 = errors$1 + (4) >> 0;
		shift = f.Normalize();
		errors$1 = (y = (shift), y < 32 ? (errors$1 << y) : 0) >> 0;
		denormalExp = flt.bias - 63 >> 0;
		extrabits = 0;
		if (f.exp <= denormalExp) {
			extrabits = (((63 - flt.mantbits >>> 0) + 1 >>> 0) + ((denormalExp - f.exp >> 0) >>> 0) >>> 0);
		} else {
			extrabits = (63 - flt.mantbits >>> 0);
		}
		halfway = $shiftLeft64(new $Uint64(0, 1), ((extrabits - 1 >>> 0)));
		mant_extra = (x$2 = f.mant, x$3 = (x$4 = $shiftLeft64(new $Uint64(0, 1), extrabits), new $Uint64(x$4.$high - 0, x$4.$low - 1)), new $Uint64(x$2.$high & x$3.$high, (x$2.$low & x$3.$low) >>> 0));
		if ((x$5 = (x$6 = new $Int64(halfway.$high, halfway.$low), x$7 = new $Int64(0, errors$1), new $Int64(x$6.$high - x$7.$high, x$6.$low - x$7.$low)), x$8 = new $Int64(mant_extra.$high, mant_extra.$low), (x$5.$high < x$8.$high || (x$5.$high === x$8.$high && x$5.$low < x$8.$low))) && (x$9 = new $Int64(mant_extra.$high, mant_extra.$low), x$10 = (x$11 = new $Int64(halfway.$high, halfway.$low), x$12 = new $Int64(0, errors$1), new $Int64(x$11.$high + x$12.$high, x$11.$low + x$12.$low)), (x$9.$high < x$10.$high || (x$9.$high === x$10.$high && x$9.$low < x$10.$low)))) {
			ok = false;
			return ok;
		}
		ok = true;
		return ok;
	};
	extFloat.prototype.AssignDecimal = function(mantissa, exp10, neg, trunc, flt) { return this.$val.AssignDecimal(mantissa, exp10, neg, trunc, flt); };
	extFloat.ptr.prototype.frexp10 = function() {
		var _q, _q$1, _tmp, _tmp$1, approxExp10, exp, exp10 = 0, f, i, index = 0;
		f = this;
		approxExp10 = (_q = (((-46 - f.exp >> 0)) * 28 >> 0) / 93, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		i = (_q$1 = ((approxExp10 - -348 >> 0)) / 8, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
		Loop:
		while (true) {
			exp = (f.exp + ((i < 0 || i >= powersOfTen.length) ? $throwRuntimeError("index out of range") : powersOfTen[i]).exp >> 0) + 64 >> 0;
			if (exp < -60) {
				i = i + (1) >> 0;
			} else if (exp > -32) {
				i = i - (1) >> 0;
			} else {
				break Loop;
			}
		}
		f.Multiply(((i < 0 || i >= powersOfTen.length) ? $throwRuntimeError("index out of range") : powersOfTen[i]));
		_tmp = -((-348 + (i * 8 >> 0) >> 0)); _tmp$1 = i; exp10 = _tmp; index = _tmp$1;
		return [exp10, index];
	};
	extFloat.prototype.frexp10 = function() { return this.$val.frexp10(); };
	frexp10Many = function(a, b, c) {
		var _tuple, exp10 = 0, i;
		_tuple = c.frexp10(); exp10 = _tuple[0]; i = _tuple[1];
		a.Multiply(((i < 0 || i >= powersOfTen.length) ? $throwRuntimeError("index out of range") : powersOfTen[i]));
		b.Multiply(((i < 0 || i >= powersOfTen.length) ? $throwRuntimeError("index out of range") : powersOfTen[i]));
		return exp10;
	};
	extFloat.ptr.prototype.FixedDecimal = function(d, n) {
		var _q, _q$1, _tmp, _tmp$1, _tuple, buf, digit, exp10, f, fraction, i, i$1, i$2, integer, integerDigits, nd, needed, nonAsciiName, ok, pos, pow, pow10, rest, shift, v, v1, x, x$1, x$10, x$11, x$12, x$13, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		f = this;
		if ((x = f.mant, (x.$high === 0 && x.$low === 0))) {
			d.nd = 0;
			d.dp = 0;
			d.neg = f.neg;
			return true;
		}
		if (n === 0) {
			$panic(new $String("strconv: internal error: extFloat.FixedDecimal called with n == 0"));
		}
		f.Normalize();
		_tuple = f.frexp10(); exp10 = _tuple[0];
		shift = (-f.exp >>> 0);
		integer = ($shiftRightUint64(f.mant, shift).$low >>> 0);
		fraction = (x$1 = f.mant, x$2 = $shiftLeft64(new $Uint64(0, integer), shift), new $Uint64(x$1.$high - x$2.$high, x$1.$low - x$2.$low));
		nonAsciiName = new $Uint64(0, 1);
		needed = n;
		integerDigits = 0;
		pow10 = new $Uint64(0, 1);
		_tmp = 0; _tmp$1 = new $Uint64(0, 1); i = _tmp; pow = _tmp$1;
		while (i < 20) {
			if ((x$3 = new $Uint64(0, integer), (pow.$high > x$3.$high || (pow.$high === x$3.$high && pow.$low > x$3.$low)))) {
				integerDigits = i;
				break;
			}
			pow = $mul64(pow, (new $Uint64(0, 10)));
			i = i + (1) >> 0;
		}
		rest = integer;
		if (integerDigits > needed) {
			pow10 = (x$4 = integerDigits - needed >> 0, ((x$4 < 0 || x$4 >= uint64pow10.length) ? $throwRuntimeError("index out of range") : uint64pow10[x$4]));
			integer = (_q = integer / ((pow10.$low >>> 0)), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero"));
			rest = rest - ((x$5 = (pow10.$low >>> 0), (((integer >>> 16 << 16) * x$5 >>> 0) + (integer << 16 >>> 16) * x$5) >>> 0)) >>> 0;
		} else {
			rest = 0;
		}
		buf = $clone(arrayType$1.zero(), arrayType$1);
		pos = 32;
		v = integer;
		while (v > 0) {
			v1 = (_q$1 = v / 10, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >>> 0 : $throwRuntimeError("integer divide by zero"));
			v = v - (((((10 >>> 16 << 16) * v1 >>> 0) + (10 << 16 >>> 16) * v1) >>> 0)) >>> 0;
			pos = pos - (1) >> 0;
			(pos < 0 || pos >= buf.length) ? $throwRuntimeError("index out of range") : buf[pos] = ((v + 48 >>> 0) << 24 >>> 24);
			v = v1;
		}
		i$1 = pos;
		while (i$1 < 32) {
			(x$6 = d.d, x$7 = i$1 - pos >> 0, (x$7 < 0 || x$7 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + x$7] = ((i$1 < 0 || i$1 >= buf.length) ? $throwRuntimeError("index out of range") : buf[i$1]));
			i$1 = i$1 + (1) >> 0;
		}
		nd = 32 - pos >> 0;
		d.nd = nd;
		d.dp = integerDigits + exp10 >> 0;
		needed = needed - (nd) >> 0;
		if (needed > 0) {
			if (!((rest === 0)) || !((pow10.$high === 0 && pow10.$low === 1))) {
				$panic(new $String("strconv: internal error, rest != 0 but needed > 0"));
			}
			while (needed > 0) {
				fraction = $mul64(fraction, (new $Uint64(0, 10)));
				nonAsciiName = $mul64(nonAsciiName, (new $Uint64(0, 10)));
				if ((x$8 = $mul64(new $Uint64(0, 2), nonAsciiName), x$9 = $shiftLeft64(new $Uint64(0, 1), shift), (x$8.$high > x$9.$high || (x$8.$high === x$9.$high && x$8.$low > x$9.$low)))) {
					return false;
				}
				digit = $shiftRightUint64(fraction, shift);
				(x$10 = d.d, (nd < 0 || nd >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + nd] = (new $Uint64(digit.$high + 0, digit.$low + 48).$low << 24 >>> 24));
				fraction = (x$11 = $shiftLeft64(digit, shift), new $Uint64(fraction.$high - x$11.$high, fraction.$low - x$11.$low));
				nd = nd + (1) >> 0;
				needed = needed - (1) >> 0;
			}
			d.nd = nd;
		}
		ok = adjustLastDigitFixed(d, (x$12 = $shiftLeft64(new $Uint64(0, rest), shift), new $Uint64(x$12.$high | fraction.$high, (x$12.$low | fraction.$low) >>> 0)), pow10, shift, nonAsciiName);
		if (!ok) {
			return false;
		}
		i$2 = d.nd - 1 >> 0;
		while (i$2 >= 0) {
			if (!(((x$13 = d.d, ((i$2 < 0 || i$2 >= x$13.$length) ? $throwRuntimeError("index out of range") : x$13.$array[x$13.$offset + i$2])) === 48))) {
				d.nd = i$2 + 1 >> 0;
				break;
			}
			i$2 = i$2 - (1) >> 0;
		}
		return true;
	};
	extFloat.prototype.FixedDecimal = function(d, n) { return this.$val.FixedDecimal(d, n); };
	adjustLastDigitFixed = function(d, num, den, shift, nonAsciiName) {
		var _index, _lhs, i, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8;
		if ((x = $shiftLeft64(den, shift), (num.$high > x.$high || (num.$high === x.$high && num.$low > x.$low)))) {
			$panic(new $String("strconv: num > den<<shift in adjustLastDigitFixed"));
		}
		if ((x$1 = $mul64(new $Uint64(0, 2), nonAsciiName), x$2 = $shiftLeft64(den, shift), (x$1.$high > x$2.$high || (x$1.$high === x$2.$high && x$1.$low > x$2.$low)))) {
			$panic(new $String("strconv: \xCE\xB5 > (den<<shift)/2"));
		}
		if ((x$3 = $mul64(new $Uint64(0, 2), (new $Uint64(num.$high + nonAsciiName.$high, num.$low + nonAsciiName.$low))), x$4 = $shiftLeft64(den, shift), (x$3.$high < x$4.$high || (x$3.$high === x$4.$high && x$3.$low < x$4.$low)))) {
			return true;
		}
		if ((x$5 = $mul64(new $Uint64(0, 2), (new $Uint64(num.$high - nonAsciiName.$high, num.$low - nonAsciiName.$low))), x$6 = $shiftLeft64(den, shift), (x$5.$high > x$6.$high || (x$5.$high === x$6.$high && x$5.$low > x$6.$low)))) {
			i = d.nd - 1 >> 0;
			while (i >= 0) {
				if ((x$7 = d.d, ((i < 0 || i >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + i])) === 57) {
					d.nd = d.nd - (1) >> 0;
				} else {
					break;
				}
				i = i - (1) >> 0;
			}
			if (i < 0) {
				(x$8 = d.d, (0 < 0 || 0 >= x$8.$length) ? $throwRuntimeError("index out of range") : x$8.$array[x$8.$offset + 0] = 49);
				d.nd = 1;
				d.dp = d.dp + (1) >> 0;
			} else {
				_lhs = d.d; _index = i; (_index < 0 || _index >= _lhs.$length) ? $throwRuntimeError("index out of range") : _lhs.$array[_lhs.$offset + _index] = ((_index < 0 || _index >= _lhs.$length) ? $throwRuntimeError("index out of range") : _lhs.$array[_lhs.$offset + _index]) + (1) << 24 >>> 24;
			}
			return true;
		}
		return false;
	};
	extFloat.ptr.prototype.ShortestDecimal = function(d, lower, upper) {
		var _q, _tmp, _tmp$1, _tmp$2, _tmp$3, allowance, buf, currentDiff, digit, digit$1, exp10, f, fraction, i, i$1, i$2, integer, integerDigits, multiplier, n, nd, pow, pow$1, shift, targetDiff, v, v1, x, x$1, x$10, x$11, x$12, x$13, x$14, x$15, x$16, x$17, x$18, x$19, x$2, x$20, x$21, x$22, x$23, x$24, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		f = this;
		if ((x = f.mant, (x.$high === 0 && x.$low === 0))) {
			d.nd = 0;
			d.dp = 0;
			d.neg = f.neg;
			return true;
		}
		if ((f.exp === 0) && $equal(lower, f, extFloat) && $equal(lower, upper, extFloat)) {
			buf = $clone(arrayType.zero(), arrayType);
			n = 23;
			v = f.mant;
			while ((v.$high > 0 || (v.$high === 0 && v.$low > 0))) {
				v1 = $div64(v, new $Uint64(0, 10), false);
				v = (x$1 = $mul64(new $Uint64(0, 10), v1), new $Uint64(v.$high - x$1.$high, v.$low - x$1.$low));
				(n < 0 || n >= buf.length) ? $throwRuntimeError("index out of range") : buf[n] = (new $Uint64(v.$high + 0, v.$low + 48).$low << 24 >>> 24);
				n = n - (1) >> 0;
				v = v1;
			}
			nd = (24 - n >> 0) - 1 >> 0;
			i = 0;
			while (i < nd) {
				(x$3 = d.d, (i < 0 || i >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + i] = (x$2 = (n + 1 >> 0) + i >> 0, ((x$2 < 0 || x$2 >= buf.length) ? $throwRuntimeError("index out of range") : buf[x$2])));
				i = i + (1) >> 0;
			}
			_tmp = nd; _tmp$1 = nd; d.nd = _tmp; d.dp = _tmp$1;
			while (d.nd > 0 && ((x$4 = d.d, x$5 = d.nd - 1 >> 0, ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5])) === 48)) {
				d.nd = d.nd - (1) >> 0;
			}
			if (d.nd === 0) {
				d.dp = 0;
			}
			d.neg = f.neg;
			return true;
		}
		upper.Normalize();
		if (f.exp > upper.exp) {
			f.mant = $shiftLeft64(f.mant, (((f.exp - upper.exp >> 0) >>> 0)));
			f.exp = upper.exp;
		}
		if (lower.exp > upper.exp) {
			lower.mant = $shiftLeft64(lower.mant, (((lower.exp - upper.exp >> 0) >>> 0)));
			lower.exp = upper.exp;
		}
		exp10 = frexp10Many(lower, f, upper);
		upper.mant = (x$6 = upper.mant, x$7 = new $Uint64(0, 1), new $Uint64(x$6.$high + x$7.$high, x$6.$low + x$7.$low));
		lower.mant = (x$8 = lower.mant, x$9 = new $Uint64(0, 1), new $Uint64(x$8.$high - x$9.$high, x$8.$low - x$9.$low));
		shift = (-upper.exp >>> 0);
		integer = ($shiftRightUint64(upper.mant, shift).$low >>> 0);
		fraction = (x$10 = upper.mant, x$11 = $shiftLeft64(new $Uint64(0, integer), shift), new $Uint64(x$10.$high - x$11.$high, x$10.$low - x$11.$low));
		allowance = (x$12 = upper.mant, x$13 = lower.mant, new $Uint64(x$12.$high - x$13.$high, x$12.$low - x$13.$low));
		targetDiff = (x$14 = upper.mant, x$15 = f.mant, new $Uint64(x$14.$high - x$15.$high, x$14.$low - x$15.$low));
		integerDigits = 0;
		_tmp$2 = 0; _tmp$3 = new $Uint64(0, 1); i$1 = _tmp$2; pow = _tmp$3;
		while (i$1 < 20) {
			if ((x$16 = new $Uint64(0, integer), (pow.$high > x$16.$high || (pow.$high === x$16.$high && pow.$low > x$16.$low)))) {
				integerDigits = i$1;
				break;
			}
			pow = $mul64(pow, (new $Uint64(0, 10)));
			i$1 = i$1 + (1) >> 0;
		}
		i$2 = 0;
		while (i$2 < integerDigits) {
			pow$1 = (x$17 = (integerDigits - i$2 >> 0) - 1 >> 0, ((x$17 < 0 || x$17 >= uint64pow10.length) ? $throwRuntimeError("index out of range") : uint64pow10[x$17]));
			digit = (_q = integer / (pow$1.$low >>> 0), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero"));
			(x$18 = d.d, (i$2 < 0 || i$2 >= x$18.$length) ? $throwRuntimeError("index out of range") : x$18.$array[x$18.$offset + i$2] = ((digit + 48 >>> 0) << 24 >>> 24));
			integer = integer - ((x$19 = (pow$1.$low >>> 0), (((digit >>> 16 << 16) * x$19 >>> 0) + (digit << 16 >>> 16) * x$19) >>> 0)) >>> 0;
			currentDiff = (x$20 = $shiftLeft64(new $Uint64(0, integer), shift), new $Uint64(x$20.$high + fraction.$high, x$20.$low + fraction.$low));
			if ((currentDiff.$high < allowance.$high || (currentDiff.$high === allowance.$high && currentDiff.$low < allowance.$low))) {
				d.nd = i$2 + 1 >> 0;
				d.dp = integerDigits + exp10 >> 0;
				d.neg = f.neg;
				return adjustLastDigit(d, currentDiff, targetDiff, allowance, $shiftLeft64(pow$1, shift), new $Uint64(0, 2));
			}
			i$2 = i$2 + (1) >> 0;
		}
		d.nd = integerDigits;
		d.dp = d.nd + exp10 >> 0;
		d.neg = f.neg;
		digit$1 = 0;
		multiplier = new $Uint64(0, 1);
		while (true) {
			fraction = $mul64(fraction, (new $Uint64(0, 10)));
			multiplier = $mul64(multiplier, (new $Uint64(0, 10)));
			digit$1 = ($shiftRightUint64(fraction, shift).$low >> 0);
			(x$21 = d.d, x$22 = d.nd, (x$22 < 0 || x$22 >= x$21.$length) ? $throwRuntimeError("index out of range") : x$21.$array[x$21.$offset + x$22] = ((digit$1 + 48 >> 0) << 24 >>> 24));
			d.nd = d.nd + (1) >> 0;
			fraction = (x$23 = $shiftLeft64(new $Uint64(0, digit$1), shift), new $Uint64(fraction.$high - x$23.$high, fraction.$low - x$23.$low));
			if ((x$24 = $mul64(allowance, multiplier), (fraction.$high < x$24.$high || (fraction.$high === x$24.$high && fraction.$low < x$24.$low)))) {
				return adjustLastDigit(d, fraction, $mul64(targetDiff, multiplier), $mul64(allowance, multiplier), $shiftLeft64(new $Uint64(0, 1), shift), $mul64(multiplier, new $Uint64(0, 2)));
			}
		}
	};
	extFloat.prototype.ShortestDecimal = function(d, lower, upper) { return this.$val.ShortestDecimal(d, lower, upper); };
	adjustLastDigit = function(d, currentDiff, targetDiff, maxDiff, ulpDecimal, ulpBinary) {
		var _index, _lhs, x, x$1, x$10, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		if ((x = $mul64(new $Uint64(0, 2), ulpBinary), (ulpDecimal.$high < x.$high || (ulpDecimal.$high === x.$high && ulpDecimal.$low < x.$low)))) {
			return false;
		}
		while ((x$1 = (x$2 = (x$3 = $div64(ulpDecimal, new $Uint64(0, 2), false), new $Uint64(currentDiff.$high + x$3.$high, currentDiff.$low + x$3.$low)), new $Uint64(x$2.$high + ulpBinary.$high, x$2.$low + ulpBinary.$low)), (x$1.$high < targetDiff.$high || (x$1.$high === targetDiff.$high && x$1.$low < targetDiff.$low)))) {
			_lhs = d.d; _index = d.nd - 1 >> 0; (_index < 0 || _index >= _lhs.$length) ? $throwRuntimeError("index out of range") : _lhs.$array[_lhs.$offset + _index] = ((_index < 0 || _index >= _lhs.$length) ? $throwRuntimeError("index out of range") : _lhs.$array[_lhs.$offset + _index]) - (1) << 24 >>> 24;
			currentDiff = (x$4 = ulpDecimal, new $Uint64(currentDiff.$high + x$4.$high, currentDiff.$low + x$4.$low));
		}
		if ((x$5 = new $Uint64(currentDiff.$high + ulpDecimal.$high, currentDiff.$low + ulpDecimal.$low), x$6 = (x$7 = (x$8 = $div64(ulpDecimal, new $Uint64(0, 2), false), new $Uint64(targetDiff.$high + x$8.$high, targetDiff.$low + x$8.$low)), new $Uint64(x$7.$high + ulpBinary.$high, x$7.$low + ulpBinary.$low)), (x$5.$high < x$6.$high || (x$5.$high === x$6.$high && x$5.$low <= x$6.$low)))) {
			return false;
		}
		if ((currentDiff.$high < ulpBinary.$high || (currentDiff.$high === ulpBinary.$high && currentDiff.$low < ulpBinary.$low)) || (x$9 = new $Uint64(maxDiff.$high - ulpBinary.$high, maxDiff.$low - ulpBinary.$low), (currentDiff.$high > x$9.$high || (currentDiff.$high === x$9.$high && currentDiff.$low > x$9.$low)))) {
			return false;
		}
		if ((d.nd === 1) && ((x$10 = d.d, ((0 < 0 || 0 >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + 0])) === 48)) {
			d.nd = 0;
			d.dp = 0;
		}
		return true;
	};
	AppendFloat = $pkg.AppendFloat = function(dst, f, fmt, prec, bitSize) {
		return genericFtoa(dst, f, fmt, prec, bitSize);
	};
	genericFtoa = function(dst, val, fmt, prec, bitSize) {
		var _ref, _ref$1, _ref$2, _ref$3, _tuple, bits, buf, buf$1, digits, digs, exp, f, f$1, flt, lower, mant, neg, ok, s, shortest, upper, x, x$1, x$2, x$3, y, y$1;
		bits = new $Uint64(0, 0);
		flt = ptrType$1.nil;
		_ref = bitSize;
		if (_ref === 32) {
			bits = new $Uint64(0, math.Float32bits(val));
			flt = float32info;
		} else if (_ref === 64) {
			bits = math.Float64bits(val);
			flt = float64info;
		} else {
			$panic(new $String("strconv: illegal AppendFloat/FormatFloat bitSize"));
		}
		neg = !((x = $shiftRightUint64(bits, ((flt.expbits + flt.mantbits >>> 0))), (x.$high === 0 && x.$low === 0)));
		exp = ($shiftRightUint64(bits, flt.mantbits).$low >> 0) & ((((y = flt.expbits, y < 32 ? (1 << y) : 0) >> 0) - 1 >> 0));
		mant = (x$1 = (x$2 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(x$2.$high - 0, x$2.$low - 1)), new $Uint64(bits.$high & x$1.$high, (bits.$low & x$1.$low) >>> 0));
		_ref$1 = exp;
		if (_ref$1 === (((y$1 = flt.expbits, y$1 < 32 ? (1 << y$1) : 0) >> 0) - 1 >> 0)) {
			s = "";
			if (!((mant.$high === 0 && mant.$low === 0))) {
				s = "NaN";
			} else if (neg) {
				s = "-Inf";
			} else {
				s = "+Inf";
			}
			return $appendSlice(dst, new sliceType$6($stringToBytes(s)));
		} else if (_ref$1 === 0) {
			exp = exp + (1) >> 0;
		} else {
			mant = (x$3 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), new $Uint64(mant.$high | x$3.$high, (mant.$low | x$3.$low) >>> 0));
		}
		exp = exp + (flt.bias) >> 0;
		if (fmt === 98) {
			return fmtB(dst, neg, mant, exp, flt);
		}
		if (!optimize) {
			return bigFtoa(dst, prec, fmt, neg, mant, exp, flt);
		}
		digs = $clone(new decimalSlice.ptr(), decimalSlice);
		ok = false;
		shortest = prec < 0;
		if (shortest) {
			f = new extFloat.ptr();
			_tuple = f.AssignComputeBounds(mant, exp, neg, flt); lower = $clone(_tuple[0], extFloat); upper = $clone(_tuple[1], extFloat);
			buf = $clone(arrayType$1.zero(), arrayType$1);
			digs.d = new sliceType$6(buf);
			ok = f.ShortestDecimal(digs, lower, upper);
			if (!ok) {
				return bigFtoa(dst, prec, fmt, neg, mant, exp, flt);
			}
			_ref$2 = fmt;
			if (_ref$2 === 101 || _ref$2 === 69) {
				prec = digs.nd - 1 >> 0;
			} else if (_ref$2 === 102) {
				prec = max(digs.nd - digs.dp >> 0, 0);
			} else if (_ref$2 === 103 || _ref$2 === 71) {
				prec = digs.nd;
			}
		} else if (!((fmt === 102))) {
			digits = prec;
			_ref$3 = fmt;
			if (_ref$3 === 101 || _ref$3 === 69) {
				digits = digits + (1) >> 0;
			} else if (_ref$3 === 103 || _ref$3 === 71) {
				if (prec === 0) {
					prec = 1;
				}
				digits = prec;
			}
			if (digits <= 15) {
				buf$1 = $clone(arrayType.zero(), arrayType);
				digs.d = new sliceType$6(buf$1);
				f$1 = new extFloat.ptr(mant, exp - (flt.mantbits >> 0) >> 0, neg);
				ok = f$1.FixedDecimal(digs, digits);
			}
		}
		if (!ok) {
			return bigFtoa(dst, prec, fmt, neg, mant, exp, flt);
		}
		return formatDigits(dst, shortest, neg, digs, prec, fmt);
	};
	bigFtoa = function(dst, prec, fmt, neg, mant, exp, flt) {
		var _ref, _ref$1, d, digs, shortest;
		d = new decimal.ptr();
		d.Assign(mant);
		d.Shift(exp - (flt.mantbits >> 0) >> 0);
		digs = $clone(new decimalSlice.ptr(), decimalSlice);
		shortest = prec < 0;
		if (shortest) {
			roundShortest(d, mant, exp, flt);
			$copy(digs, new decimalSlice.ptr(new sliceType$6(d.d), d.nd, d.dp, false), decimalSlice);
			_ref = fmt;
			if (_ref === 101 || _ref === 69) {
				prec = digs.nd - 1 >> 0;
			} else if (_ref === 102) {
				prec = max(digs.nd - digs.dp >> 0, 0);
			} else if (_ref === 103 || _ref === 71) {
				prec = digs.nd;
			}
		} else {
			_ref$1 = fmt;
			if (_ref$1 === 101 || _ref$1 === 69) {
				d.Round(prec + 1 >> 0);
			} else if (_ref$1 === 102) {
				d.Round(d.dp + prec >> 0);
			} else if (_ref$1 === 103 || _ref$1 === 71) {
				if (prec === 0) {
					prec = 1;
				}
				d.Round(prec);
			}
			$copy(digs, new decimalSlice.ptr(new sliceType$6(d.d), d.nd, d.dp, false), decimalSlice);
		}
		return formatDigits(dst, shortest, neg, digs, prec, fmt);
	};
	formatDigits = function(dst, shortest, neg, digs, prec, fmt) {
		var _ref, eprec, exp;
		digs = $clone(digs, decimalSlice);
		_ref = fmt;
		if (_ref === 101 || _ref === 69) {
			return fmtE(dst, neg, digs, prec, fmt);
		} else if (_ref === 102) {
			return fmtF(dst, neg, digs, prec);
		} else if (_ref === 103 || _ref === 71) {
			eprec = prec;
			if (eprec > digs.nd && digs.nd >= digs.dp) {
				eprec = digs.nd;
			}
			if (shortest) {
				eprec = 6;
			}
			exp = digs.dp - 1 >> 0;
			if (exp < -4 || exp >= eprec) {
				if (prec > digs.nd) {
					prec = digs.nd;
				}
				return fmtE(dst, neg, digs, prec - 1 >> 0, (fmt + 101 << 24 >>> 24) - 103 << 24 >>> 24);
			}
			if (prec > digs.dp) {
				prec = digs.nd;
			}
			return fmtF(dst, neg, digs, max(prec - digs.dp >> 0, 0));
		}
		return $append(dst, 37, fmt);
	};
	roundShortest = function(d, mant, exp, flt) {
		var _tmp, _tmp$1, _tmp$2, explo, i, inclusive, l, lower, m, mantlo, minexp, okdown, okup, u, upper, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7;
		if ((mant.$high === 0 && mant.$low === 0)) {
			d.nd = 0;
			return;
		}
		minexp = flt.bias + 1 >> 0;
		if (exp > minexp && (332 * ((d.dp - d.nd >> 0)) >> 0) >= (100 * ((exp - (flt.mantbits >> 0) >> 0)) >> 0)) {
			return;
		}
		upper = new decimal.ptr();
		upper.Assign((x = $mul64(mant, new $Uint64(0, 2)), new $Uint64(x.$high + 0, x.$low + 1)));
		upper.Shift((exp - (flt.mantbits >> 0) >> 0) - 1 >> 0);
		mantlo = new $Uint64(0, 0);
		explo = 0;
		if ((x$1 = $shiftLeft64(new $Uint64(0, 1), flt.mantbits), (mant.$high > x$1.$high || (mant.$high === x$1.$high && mant.$low > x$1.$low))) || (exp === minexp)) {
			mantlo = new $Uint64(mant.$high - 0, mant.$low - 1);
			explo = exp;
		} else {
			mantlo = (x$2 = $mul64(mant, new $Uint64(0, 2)), new $Uint64(x$2.$high - 0, x$2.$low - 1));
			explo = exp - 1 >> 0;
		}
		lower = new decimal.ptr();
		lower.Assign((x$3 = $mul64(mantlo, new $Uint64(0, 2)), new $Uint64(x$3.$high + 0, x$3.$low + 1)));
		lower.Shift((explo - (flt.mantbits >> 0) >> 0) - 1 >> 0);
		inclusive = (x$4 = $div64(mant, new $Uint64(0, 2), true), (x$4.$high === 0 && x$4.$low === 0));
		i = 0;
		while (i < d.nd) {
			_tmp = 0; _tmp$1 = 0; _tmp$2 = 0; l = _tmp; m = _tmp$1; u = _tmp$2;
			if (i < lower.nd) {
				l = (x$5 = lower.d, ((i < 0 || i >= x$5.length) ? $throwRuntimeError("index out of range") : x$5[i]));
			} else {
				l = 48;
			}
			m = (x$6 = d.d, ((i < 0 || i >= x$6.length) ? $throwRuntimeError("index out of range") : x$6[i]));
			if (i < upper.nd) {
				u = (x$7 = upper.d, ((i < 0 || i >= x$7.length) ? $throwRuntimeError("index out of range") : x$7[i]));
			} else {
				u = 48;
			}
			okdown = !((l === m)) || (inclusive && (l === m) && ((i + 1 >> 0) === lower.nd));
			okup = !((m === u)) && (inclusive || (m + 1 << 24 >>> 24) < u || (i + 1 >> 0) < upper.nd);
			if (okdown && okup) {
				d.Round(i + 1 >> 0);
				return;
			} else if (okdown) {
				d.RoundDown(i + 1 >> 0);
				return;
			} else if (okup) {
				d.RoundUp(i + 1 >> 0);
				return;
			}
			i = i + (1) >> 0;
		}
	};
	fmtE = function(dst, neg, d, prec, fmt) {
		var _q, _r, _ref, buf, ch, exp, i, i$1, m, x, x$1;
		d = $clone(d, decimalSlice);
		if (neg) {
			dst = $append(dst, 45);
		}
		ch = 48;
		if (!((d.nd === 0))) {
			ch = (x = d.d, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
		}
		dst = $append(dst, ch);
		if (prec > 0) {
			dst = $append(dst, 46);
			i = 1;
			m = ((d.nd + prec >> 0) + 1 >> 0) - max(d.nd, prec + 1 >> 0) >> 0;
			while (i < m) {
				dst = $append(dst, (x$1 = d.d, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i])));
				i = i + (1) >> 0;
			}
			while (i <= prec) {
				dst = $append(dst, 48);
				i = i + (1) >> 0;
			}
		}
		dst = $append(dst, fmt);
		exp = d.dp - 1 >> 0;
		if (d.nd === 0) {
			exp = 0;
		}
		if (exp < 0) {
			ch = 45;
			exp = -exp;
		} else {
			ch = 43;
		}
		dst = $append(dst, ch);
		buf = $clone(arrayType$2.zero(), arrayType$2);
		i$1 = 3;
		while (exp >= 10) {
			i$1 = i$1 - (1) >> 0;
			(i$1 < 0 || i$1 >= buf.length) ? $throwRuntimeError("index out of range") : buf[i$1] = (((_r = exp % 10, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) + 48 >> 0) << 24 >>> 24);
			exp = (_q = exp / (10), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		}
		i$1 = i$1 - (1) >> 0;
		(i$1 < 0 || i$1 >= buf.length) ? $throwRuntimeError("index out of range") : buf[i$1] = ((exp + 48 >> 0) << 24 >>> 24);
		_ref = i$1;
		if (_ref === 0) {
			dst = $append(dst, buf[0], buf[1], buf[2]);
		} else if (_ref === 1) {
			dst = $append(dst, buf[1], buf[2]);
		} else if (_ref === 2) {
			dst = $append(dst, 48, buf[2]);
		}
		return dst;
	};
	fmtF = function(dst, neg, d, prec) {
		var ch, i, i$1, j, x, x$1;
		d = $clone(d, decimalSlice);
		if (neg) {
			dst = $append(dst, 45);
		}
		if (d.dp > 0) {
			i = 0;
			i = 0;
			while (i < d.dp && i < d.nd) {
				dst = $append(dst, (x = d.d, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i])));
				i = i + (1) >> 0;
			}
			while (i < d.dp) {
				dst = $append(dst, 48);
				i = i + (1) >> 0;
			}
		} else {
			dst = $append(dst, 48);
		}
		if (prec > 0) {
			dst = $append(dst, 46);
			i$1 = 0;
			while (i$1 < prec) {
				ch = 48;
				j = d.dp + i$1 >> 0;
				if (0 <= j && j < d.nd) {
					ch = (x$1 = d.d, ((j < 0 || j >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + j]));
				}
				dst = $append(dst, ch);
				i$1 = i$1 + (1) >> 0;
			}
		}
		return dst;
	};
	fmtB = function(dst, neg, mant, exp, flt) {
		var _q, _r, buf, esign, n, w, x;
		buf = $clone(arrayType$3.zero(), arrayType$3);
		w = 50;
		exp = exp - ((flt.mantbits >> 0)) >> 0;
		esign = 43;
		if (exp < 0) {
			esign = 45;
			exp = -exp;
		}
		n = 0;
		while (exp > 0 || n < 1) {
			n = n + (1) >> 0;
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = (((_r = exp % 10, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) + 48 >> 0) << 24 >>> 24);
			exp = (_q = exp / (10), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		}
		w = w - (1) >> 0;
		(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = esign;
		w = w - (1) >> 0;
		(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 112;
		n = 0;
		while ((mant.$high > 0 || (mant.$high === 0 && mant.$low > 0)) || n < 1) {
			n = n + (1) >> 0;
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = ((x = $div64(mant, new $Uint64(0, 10), true), new $Uint64(x.$high + 0, x.$low + 48)).$low << 24 >>> 24);
			mant = $div64(mant, (new $Uint64(0, 10)), false);
		}
		if (neg) {
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 45;
		}
		return $appendSlice(dst, $subslice(new sliceType$6(buf), w));
	};
	max = function(a, b) {
		if (a > b) {
			return a;
		}
		return b;
	};
	FormatUint = $pkg.FormatUint = function(i, base) {
		var _tuple, s;
		_tuple = formatBits(sliceType$6.nil, i, base, false, false); s = _tuple[1];
		return s;
	};
	FormatInt = $pkg.FormatInt = function(i, base) {
		var _tuple, s;
		_tuple = formatBits(sliceType$6.nil, new $Uint64(i.$high, i.$low), base, (i.$high < 0 || (i.$high === 0 && i.$low < 0)), false); s = _tuple[1];
		return s;
	};
	Itoa = $pkg.Itoa = function(i) {
		return FormatInt(new $Int64(0, i), 10);
	};
	formatBits = function(dst, u, base, neg, append_) {
		var a, b, b$1, d = sliceType$6.nil, i, j, m, q, q$1, s = "", s$1, x, x$1, x$2, x$3;
		if (base < 2 || base > 36) {
			$panic(new $String("strconv: illegal AppendInt/FormatInt base"));
		}
		a = $clone(arrayType$4.zero(), arrayType$4);
		i = 65;
		if (neg) {
			u = new $Uint64(-u.$high, -u.$low);
		}
		if (base === 10) {
			while ((u.$high > 0 || (u.$high === 0 && u.$low >= 100))) {
				i = i - (2) >> 0;
				q = $div64(u, new $Uint64(0, 100), false);
				j = ((x = $mul64(q, new $Uint64(0, 100)), new $Uint64(u.$high - x.$high, u.$low - x.$low)).$low >>> 0);
				(x$1 = i + 1 >> 0, (x$1 < 0 || x$1 >= a.length) ? $throwRuntimeError("index out of range") : a[x$1] = "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789".charCodeAt(j));
				(x$2 = i + 0 >> 0, (x$2 < 0 || x$2 >= a.length) ? $throwRuntimeError("index out of range") : a[x$2] = "0000000000111111111122222222223333333333444444444455555555556666666666777777777788888888889999999999".charCodeAt(j));
				u = q;
			}
			if ((u.$high > 0 || (u.$high === 0 && u.$low >= 10))) {
				i = i - (1) >> 0;
				q$1 = $div64(u, new $Uint64(0, 10), false);
				(i < 0 || i >= a.length) ? $throwRuntimeError("index out of range") : a[i] = "0123456789abcdefghijklmnopqrstuvwxyz".charCodeAt(((x$3 = $mul64(q$1, new $Uint64(0, 10)), new $Uint64(u.$high - x$3.$high, u.$low - x$3.$low)).$low >>> 0));
				u = q$1;
			}
		} else {
			s$1 = ((base < 0 || base >= shifts.length) ? $throwRuntimeError("index out of range") : shifts[base]);
			if (s$1 > 0) {
				b = new $Uint64(0, base);
				m = (b.$low >>> 0) - 1 >>> 0;
				while ((u.$high > b.$high || (u.$high === b.$high && u.$low >= b.$low))) {
					i = i - (1) >> 0;
					(i < 0 || i >= a.length) ? $throwRuntimeError("index out of range") : a[i] = "0123456789abcdefghijklmnopqrstuvwxyz".charCodeAt((((u.$low >>> 0) & m) >>> 0));
					u = $shiftRightUint64(u, (s$1));
				}
			} else {
				b$1 = new $Uint64(0, base);
				while ((u.$high > b$1.$high || (u.$high === b$1.$high && u.$low >= b$1.$low))) {
					i = i - (1) >> 0;
					(i < 0 || i >= a.length) ? $throwRuntimeError("index out of range") : a[i] = "0123456789abcdefghijklmnopqrstuvwxyz".charCodeAt(($div64(u, b$1, true).$low >>> 0));
					u = $div64(u, (b$1), false);
				}
			}
		}
		i = i - (1) >> 0;
		(i < 0 || i >= a.length) ? $throwRuntimeError("index out of range") : a[i] = "0123456789abcdefghijklmnopqrstuvwxyz".charCodeAt((u.$low >>> 0));
		if (neg) {
			i = i - (1) >> 0;
			(i < 0 || i >= a.length) ? $throwRuntimeError("index out of range") : a[i] = 45;
		}
		if (append_) {
			d = $appendSlice(dst, $subslice(new sliceType$6(a), i));
			return [d, s];
		}
		s = $bytesToString($subslice(new sliceType$6(a), i));
		return [d, s];
	};
	quoteWith = function(s, quote, ASCIIonly) {
		var _q, _ref, _tuple, buf, n, r, runeTmp, s$1, s$2, width;
		runeTmp = $clone(arrayType$5.zero(), arrayType$5);
		buf = $makeSlice(sliceType$6, 0, (_q = (3 * s.length >> 0) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")));
		buf = $append(buf, quote);
		width = 0;
		while (s.length > 0) {
			r = (s.charCodeAt(0) >> 0);
			width = 1;
			if (r >= 128) {
				_tuple = utf8.DecodeRuneInString(s); r = _tuple[0]; width = _tuple[1];
			}
			if ((width === 1) && (r === 65533)) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\x")));
				buf = $append(buf, "0123456789abcdef".charCodeAt((s.charCodeAt(0) >>> 4 << 24 >>> 24)));
				buf = $append(buf, "0123456789abcdef".charCodeAt(((s.charCodeAt(0) & 15) >>> 0)));
				s = s.substring(width);
				continue;
			}
			if ((r === (quote >> 0)) || (r === 92)) {
				buf = $append(buf, 92);
				buf = $append(buf, (r << 24 >>> 24));
				s = s.substring(width);
				continue;
			}
			if (ASCIIonly) {
				if (r < 128 && IsPrint(r)) {
					buf = $append(buf, (r << 24 >>> 24));
					s = s.substring(width);
					continue;
				}
			} else if (IsPrint(r)) {
				n = utf8.EncodeRune(new sliceType$6(runeTmp), r);
				buf = $appendSlice(buf, $subslice(new sliceType$6(runeTmp), 0, n));
				s = s.substring(width);
				continue;
			}
			_ref = r;
			if (_ref === 7) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\a")));
			} else if (_ref === 8) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\b")));
			} else if (_ref === 12) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\f")));
			} else if (_ref === 10) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\n")));
			} else if (_ref === 13) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\r")));
			} else if (_ref === 9) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\t")));
			} else if (_ref === 11) {
				buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\v")));
			} else {
				if (r < 32) {
					buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\x")));
					buf = $append(buf, "0123456789abcdef".charCodeAt((s.charCodeAt(0) >>> 4 << 24 >>> 24)));
					buf = $append(buf, "0123456789abcdef".charCodeAt(((s.charCodeAt(0) & 15) >>> 0)));
				} else if (r > 1114111) {
					r = 65533;
					buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\u")));
					s$1 = 12;
					while (s$1 >= 0) {
						buf = $append(buf, "0123456789abcdef".charCodeAt((((r >> $min((s$1 >>> 0), 31)) >> 0) & 15)));
						s$1 = s$1 - (4) >> 0;
					}
				} else if (r < 65536) {
					buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\u")));
					s$1 = 12;
					while (s$1 >= 0) {
						buf = $append(buf, "0123456789abcdef".charCodeAt((((r >> $min((s$1 >>> 0), 31)) >> 0) & 15)));
						s$1 = s$1 - (4) >> 0;
					}
				} else {
					buf = $appendSlice(buf, new sliceType$6($stringToBytes("\\U")));
					s$2 = 28;
					while (s$2 >= 0) {
						buf = $append(buf, "0123456789abcdef".charCodeAt((((r >> $min((s$2 >>> 0), 31)) >> 0) & 15)));
						s$2 = s$2 - (4) >> 0;
					}
				}
			}
			s = s.substring(width);
		}
		buf = $append(buf, quote);
		return $bytesToString(buf);
	};
	Quote = $pkg.Quote = function(s) {
		return quoteWith(s, 34, false);
	};
	QuoteToASCII = $pkg.QuoteToASCII = function(s) {
		return quoteWith(s, 34, true);
	};
	QuoteRune = $pkg.QuoteRune = function(r) {
		return quoteWith($encodeRune(r), 39, false);
	};
	AppendQuoteRune = $pkg.AppendQuoteRune = function(dst, r) {
		return $appendSlice(dst, new sliceType$6($stringToBytes(QuoteRune(r))));
	};
	QuoteRuneToASCII = $pkg.QuoteRuneToASCII = function(r) {
		return quoteWith($encodeRune(r), 39, true);
	};
	AppendQuoteRuneToASCII = $pkg.AppendQuoteRuneToASCII = function(dst, r) {
		return $appendSlice(dst, new sliceType$6($stringToBytes(QuoteRuneToASCII(r))));
	};
	CanBackquote = $pkg.CanBackquote = function(s) {
		var _tuple, r, wid;
		while (s.length > 0) {
			_tuple = utf8.DecodeRuneInString(s); r = _tuple[0]; wid = _tuple[1];
			s = s.substring(wid);
			if (wid > 1) {
				if (r === 65279) {
					return false;
				}
				continue;
			}
			if (r === 65533) {
				return false;
			}
			if ((r < 32 && !((r === 9))) || (r === 96) || (r === 127)) {
				return false;
			}
		}
		return true;
	};
	unhex = function(b) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, c, ok = false, v = 0;
		c = (b >> 0);
		if (48 <= c && c <= 57) {
			_tmp = c - 48 >> 0; _tmp$1 = true; v = _tmp; ok = _tmp$1;
			return [v, ok];
		} else if (97 <= c && c <= 102) {
			_tmp$2 = (c - 97 >> 0) + 10 >> 0; _tmp$3 = true; v = _tmp$2; ok = _tmp$3;
			return [v, ok];
		} else if (65 <= c && c <= 70) {
			_tmp$4 = (c - 65 >> 0) + 10 >> 0; _tmp$5 = true; v = _tmp$4; ok = _tmp$5;
			return [v, ok];
		}
		return [v, ok];
	};
	UnquoteChar = $pkg.UnquoteChar = function(s, quote) {
		var _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tuple, _tuple$1, c, c$1, err = $ifaceNil, j, j$1, multibyte = false, n, ok, r, size, tail = "", v, v$1, value = 0, x, x$1;
		c = s.charCodeAt(0);
		if ((c === quote) && ((quote === 39) || (quote === 34))) {
			err = $pkg.ErrSyntax;
			return [value, multibyte, tail, err];
		} else if (c >= 128) {
			_tuple = utf8.DecodeRuneInString(s); r = _tuple[0]; size = _tuple[1];
			_tmp = r; _tmp$1 = true; _tmp$2 = s.substring(size); _tmp$3 = $ifaceNil; value = _tmp; multibyte = _tmp$1; tail = _tmp$2; err = _tmp$3;
			return [value, multibyte, tail, err];
		} else if (!((c === 92))) {
			_tmp$4 = (s.charCodeAt(0) >> 0); _tmp$5 = false; _tmp$6 = s.substring(1); _tmp$7 = $ifaceNil; value = _tmp$4; multibyte = _tmp$5; tail = _tmp$6; err = _tmp$7;
			return [value, multibyte, tail, err];
		}
		if (s.length <= 1) {
			err = $pkg.ErrSyntax;
			return [value, multibyte, tail, err];
		}
		c$1 = s.charCodeAt(1);
		s = s.substring(2);
		_ref = c$1;
		switch (0) { default: if (_ref === 97) {
			value = 7;
		} else if (_ref === 98) {
			value = 8;
		} else if (_ref === 102) {
			value = 12;
		} else if (_ref === 110) {
			value = 10;
		} else if (_ref === 114) {
			value = 13;
		} else if (_ref === 116) {
			value = 9;
		} else if (_ref === 118) {
			value = 11;
		} else if (_ref === 120 || _ref === 117 || _ref === 85) {
			n = 0;
			_ref$1 = c$1;
			if (_ref$1 === 120) {
				n = 2;
			} else if (_ref$1 === 117) {
				n = 4;
			} else if (_ref$1 === 85) {
				n = 8;
			}
			v = 0;
			if (s.length < n) {
				err = $pkg.ErrSyntax;
				return [value, multibyte, tail, err];
			}
			j = 0;
			while (j < n) {
				_tuple$1 = unhex(s.charCodeAt(j)); x = _tuple$1[0]; ok = _tuple$1[1];
				if (!ok) {
					err = $pkg.ErrSyntax;
					return [value, multibyte, tail, err];
				}
				v = (v << 4 >> 0) | x;
				j = j + (1) >> 0;
			}
			s = s.substring(n);
			if (c$1 === 120) {
				value = v;
				break;
			}
			if (v > 1114111) {
				err = $pkg.ErrSyntax;
				return [value, multibyte, tail, err];
			}
			value = v;
			multibyte = true;
		} else if (_ref === 48 || _ref === 49 || _ref === 50 || _ref === 51 || _ref === 52 || _ref === 53 || _ref === 54 || _ref === 55) {
			v$1 = (c$1 >> 0) - 48 >> 0;
			if (s.length < 2) {
				err = $pkg.ErrSyntax;
				return [value, multibyte, tail, err];
			}
			j$1 = 0;
			while (j$1 < 2) {
				x$1 = (s.charCodeAt(j$1) >> 0) - 48 >> 0;
				if (x$1 < 0 || x$1 > 7) {
					err = $pkg.ErrSyntax;
					return [value, multibyte, tail, err];
				}
				v$1 = ((v$1 << 3 >> 0)) | x$1;
				j$1 = j$1 + (1) >> 0;
			}
			s = s.substring(2);
			if (v$1 > 255) {
				err = $pkg.ErrSyntax;
				return [value, multibyte, tail, err];
			}
			value = v$1;
		} else if (_ref === 92) {
			value = 92;
		} else if (_ref === 39 || _ref === 34) {
			if (!((c$1 === quote))) {
				err = $pkg.ErrSyntax;
				return [value, multibyte, tail, err];
			}
			value = (c$1 >> 0);
		} else {
			err = $pkg.ErrSyntax;
			return [value, multibyte, tail, err];
		} }
		tail = s;
		return [value, multibyte, tail, err];
	};
	Unquote = $pkg.Unquote = function(s) {
		var _q, _ref, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, buf, c, err = $ifaceNil, err$1, multibyte, n, n$1, quote, r, runeTmp, size, ss, t = "";
		n = s.length;
		if (n < 2) {
			_tmp = ""; _tmp$1 = $pkg.ErrSyntax; t = _tmp; err = _tmp$1;
			return [t, err];
		}
		quote = s.charCodeAt(0);
		if (!((quote === s.charCodeAt((n - 1 >> 0))))) {
			_tmp$2 = ""; _tmp$3 = $pkg.ErrSyntax; t = _tmp$2; err = _tmp$3;
			return [t, err];
		}
		s = s.substring(1, (n - 1 >> 0));
		if (quote === 96) {
			if (contains(s, 96)) {
				_tmp$4 = ""; _tmp$5 = $pkg.ErrSyntax; t = _tmp$4; err = _tmp$5;
				return [t, err];
			}
			_tmp$6 = s; _tmp$7 = $ifaceNil; t = _tmp$6; err = _tmp$7;
			return [t, err];
		}
		if (!((quote === 34)) && !((quote === 39))) {
			_tmp$8 = ""; _tmp$9 = $pkg.ErrSyntax; t = _tmp$8; err = _tmp$9;
			return [t, err];
		}
		if (contains(s, 10)) {
			_tmp$10 = ""; _tmp$11 = $pkg.ErrSyntax; t = _tmp$10; err = _tmp$11;
			return [t, err];
		}
		if (!contains(s, 92) && !contains(s, quote)) {
			_ref = quote;
			if (_ref === 34) {
				_tmp$12 = s; _tmp$13 = $ifaceNil; t = _tmp$12; err = _tmp$13;
				return [t, err];
			} else if (_ref === 39) {
				_tuple = utf8.DecodeRuneInString(s); r = _tuple[0]; size = _tuple[1];
				if ((size === s.length) && (!((r === 65533)) || !((size === 1)))) {
					_tmp$14 = s; _tmp$15 = $ifaceNil; t = _tmp$14; err = _tmp$15;
					return [t, err];
				}
			}
		}
		runeTmp = $clone(arrayType$5.zero(), arrayType$5);
		buf = $makeSlice(sliceType$6, 0, (_q = (3 * s.length >> 0) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")));
		while (s.length > 0) {
			_tuple$1 = UnquoteChar(s, quote); c = _tuple$1[0]; multibyte = _tuple$1[1]; ss = _tuple$1[2]; err$1 = _tuple$1[3];
			if (!($interfaceIsEqual(err$1, $ifaceNil))) {
				_tmp$16 = ""; _tmp$17 = err$1; t = _tmp$16; err = _tmp$17;
				return [t, err];
			}
			s = ss;
			if (c < 128 || !multibyte) {
				buf = $append(buf, (c << 24 >>> 24));
			} else {
				n$1 = utf8.EncodeRune(new sliceType$6(runeTmp), c);
				buf = $appendSlice(buf, $subslice(new sliceType$6(runeTmp), 0, n$1));
			}
			if ((quote === 39) && !((s.length === 0))) {
				_tmp$18 = ""; _tmp$19 = $pkg.ErrSyntax; t = _tmp$18; err = _tmp$19;
				return [t, err];
			}
		}
		_tmp$20 = $bytesToString(buf); _tmp$21 = $ifaceNil; t = _tmp$20; err = _tmp$21;
		return [t, err];
	};
	contains = function(s, c) {
		var i;
		i = 0;
		while (i < s.length) {
			if (s.charCodeAt(i) === c) {
				return true;
			}
			i = i + (1) >> 0;
		}
		return false;
	};
	bsearch16 = function(a, x) {
		var _q, _tmp, _tmp$1, h, i, j;
		_tmp = 0; _tmp$1 = a.$length; i = _tmp; j = _tmp$1;
		while (i < j) {
			h = i + (_q = ((j - i >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			if (((h < 0 || h >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + h]) < x) {
				i = h + 1 >> 0;
			} else {
				j = h;
			}
		}
		return i;
	};
	bsearch32 = function(a, x) {
		var _q, _tmp, _tmp$1, h, i, j;
		_tmp = 0; _tmp$1 = a.$length; i = _tmp; j = _tmp$1;
		while (i < j) {
			h = i + (_q = ((j - i >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			if (((h < 0 || h >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + h]) < x) {
				i = h + 1 >> 0;
			} else {
				j = h;
			}
		}
		return i;
	};
	IsPrint = $pkg.IsPrint = function(r) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, i, i$1, isNotPrint, isNotPrint$1, isPrint, isPrint$1, j, j$1, rr, rr$1, x, x$1, x$2, x$3;
		if (r <= 255) {
			if (32 <= r && r <= 126) {
				return true;
			}
			if (161 <= r && r <= 255) {
				return !((r === 173));
			}
			return false;
		}
		if (0 <= r && r < 65536) {
			_tmp = (r << 16 >>> 16); _tmp$1 = isPrint16; _tmp$2 = isNotPrint16; rr = _tmp; isPrint = _tmp$1; isNotPrint = _tmp$2;
			i = bsearch16(isPrint, rr);
			if (i >= isPrint.$length || rr < (x = i & ~1, ((x < 0 || x >= isPrint.$length) ? $throwRuntimeError("index out of range") : isPrint.$array[isPrint.$offset + x])) || (x$1 = i | 1, ((x$1 < 0 || x$1 >= isPrint.$length) ? $throwRuntimeError("index out of range") : isPrint.$array[isPrint.$offset + x$1])) < rr) {
				return false;
			}
			j = bsearch16(isNotPrint, rr);
			return j >= isNotPrint.$length || !((((j < 0 || j >= isNotPrint.$length) ? $throwRuntimeError("index out of range") : isNotPrint.$array[isNotPrint.$offset + j]) === rr));
		}
		_tmp$3 = (r >>> 0); _tmp$4 = isPrint32; _tmp$5 = isNotPrint32; rr$1 = _tmp$3; isPrint$1 = _tmp$4; isNotPrint$1 = _tmp$5;
		i$1 = bsearch32(isPrint$1, rr$1);
		if (i$1 >= isPrint$1.$length || rr$1 < (x$2 = i$1 & ~1, ((x$2 < 0 || x$2 >= isPrint$1.$length) ? $throwRuntimeError("index out of range") : isPrint$1.$array[isPrint$1.$offset + x$2])) || (x$3 = i$1 | 1, ((x$3 < 0 || x$3 >= isPrint$1.$length) ? $throwRuntimeError("index out of range") : isPrint$1.$array[isPrint$1.$offset + x$3])) < rr$1) {
			return false;
		}
		if (r >= 131072) {
			return true;
		}
		r = r - (65536) >> 0;
		j$1 = bsearch16(isNotPrint$1, (r << 16 >>> 16));
		return j$1 >= isNotPrint$1.$length || !((((j$1 < 0 || j$1 >= isNotPrint$1.$length) ? $throwRuntimeError("index out of range") : isNotPrint$1.$array[isNotPrint$1.$offset + j$1]) === (r << 16 >>> 16)));
	};
	ptrType.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$2.methods = [{prop: "Assign", name: "Assign", pkg: "", type: $funcType([$Uint64], [], false)}, {prop: "Round", name: "Round", pkg: "", type: $funcType([$Int], [], false)}, {prop: "RoundDown", name: "RoundDown", pkg: "", type: $funcType([$Int], [], false)}, {prop: "RoundUp", name: "RoundUp", pkg: "", type: $funcType([$Int], [], false)}, {prop: "RoundedInteger", name: "RoundedInteger", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Shift", name: "Shift", pkg: "", type: $funcType([$Int], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "floatBits", name: "floatBits", pkg: "strconv", type: $funcType([ptrType$1], [$Uint64, $Bool], false)}, {prop: "set", name: "set", pkg: "strconv", type: $funcType([$String], [$Bool], false)}];
	ptrType$4.methods = [{prop: "AssignComputeBounds", name: "AssignComputeBounds", pkg: "", type: $funcType([$Uint64, $Int, $Bool, ptrType$1], [extFloat, extFloat], false)}, {prop: "AssignDecimal", name: "AssignDecimal", pkg: "", type: $funcType([$Uint64, $Int, $Bool, $Bool, ptrType$1], [$Bool], false)}, {prop: "FixedDecimal", name: "FixedDecimal", pkg: "", type: $funcType([ptrType$3, $Int], [$Bool], false)}, {prop: "Multiply", name: "Multiply", pkg: "", type: $funcType([extFloat], [], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [$Uint], false)}, {prop: "ShortestDecimal", name: "ShortestDecimal", pkg: "", type: $funcType([ptrType$3, ptrType$4, ptrType$4], [$Bool], false)}, {prop: "floatBits", name: "floatBits", pkg: "strconv", type: $funcType([ptrType$1], [$Uint64, $Bool], false)}, {prop: "frexp10", name: "frexp10", pkg: "strconv", type: $funcType([], [$Int, $Int], false)}];
	NumError.init([{prop: "Func", name: "Func", pkg: "", type: $String, tag: ""}, {prop: "Num", name: "Num", pkg: "", type: $String, tag: ""}, {prop: "Err", name: "Err", pkg: "", type: $error, tag: ""}]);
	decimal.init([{prop: "d", name: "d", pkg: "strconv", type: arrayType$6, tag: ""}, {prop: "nd", name: "nd", pkg: "strconv", type: $Int, tag: ""}, {prop: "dp", name: "dp", pkg: "strconv", type: $Int, tag: ""}, {prop: "neg", name: "neg", pkg: "strconv", type: $Bool, tag: ""}, {prop: "trunc", name: "trunc", pkg: "strconv", type: $Bool, tag: ""}]);
	leftCheat.init([{prop: "delta", name: "delta", pkg: "strconv", type: $Int, tag: ""}, {prop: "cutoff", name: "cutoff", pkg: "strconv", type: $String, tag: ""}]);
	extFloat.init([{prop: "mant", name: "mant", pkg: "strconv", type: $Uint64, tag: ""}, {prop: "exp", name: "exp", pkg: "strconv", type: $Int, tag: ""}, {prop: "neg", name: "neg", pkg: "strconv", type: $Bool, tag: ""}]);
	floatInfo.init([{prop: "mantbits", name: "mantbits", pkg: "strconv", type: $Uint, tag: ""}, {prop: "expbits", name: "expbits", pkg: "strconv", type: $Uint, tag: ""}, {prop: "bias", name: "bias", pkg: "strconv", type: $Int, tag: ""}]);
	decimalSlice.init([{prop: "d", name: "d", pkg: "strconv", type: sliceType$6, tag: ""}, {prop: "nd", name: "nd", pkg: "strconv", type: $Int, tag: ""}, {prop: "dp", name: "dp", pkg: "strconv", type: $Int, tag: ""}, {prop: "neg", name: "neg", pkg: "strconv", type: $Bool, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_strconv = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = math.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		optimize = true;
		powtab = new sliceType([1, 3, 6, 9, 13, 16, 19, 23, 26]);
		float64pow10 = new sliceType$1([1, 10, 100, 1000, 10000, 100000, 1e+06, 1e+07, 1e+08, 1e+09, 1e+10, 1e+11, 1e+12, 1e+13, 1e+14, 1e+15, 1e+16, 1e+17, 1e+18, 1e+19, 1e+20, 1e+21, 1e+22]);
		float32pow10 = new sliceType$2([1, 10, 100, 1000, 10000, 100000, 1e+06, 1e+07, 1e+08, 1e+09, 1e+10]);
		$pkg.ErrRange = errors.New("value out of range");
		$pkg.ErrSyntax = errors.New("invalid syntax");
		leftcheats = new sliceType$3([new leftCheat.ptr(0, ""), new leftCheat.ptr(1, "5"), new leftCheat.ptr(1, "25"), new leftCheat.ptr(1, "125"), new leftCheat.ptr(2, "625"), new leftCheat.ptr(2, "3125"), new leftCheat.ptr(2, "15625"), new leftCheat.ptr(3, "78125"), new leftCheat.ptr(3, "390625"), new leftCheat.ptr(3, "1953125"), new leftCheat.ptr(4, "9765625"), new leftCheat.ptr(4, "48828125"), new leftCheat.ptr(4, "244140625"), new leftCheat.ptr(4, "1220703125"), new leftCheat.ptr(5, "6103515625"), new leftCheat.ptr(5, "30517578125"), new leftCheat.ptr(5, "152587890625"), new leftCheat.ptr(6, "762939453125"), new leftCheat.ptr(6, "3814697265625"), new leftCheat.ptr(6, "19073486328125"), new leftCheat.ptr(7, "95367431640625"), new leftCheat.ptr(7, "476837158203125"), new leftCheat.ptr(7, "2384185791015625"), new leftCheat.ptr(7, "11920928955078125"), new leftCheat.ptr(8, "59604644775390625"), new leftCheat.ptr(8, "298023223876953125"), new leftCheat.ptr(8, "1490116119384765625"), new leftCheat.ptr(9, "7450580596923828125")]);
		smallPowersOfTen = $toNativeArray($kindStruct, [new extFloat.ptr(new $Uint64(2147483648, 0), -63, false), new extFloat.ptr(new $Uint64(2684354560, 0), -60, false), new extFloat.ptr(new $Uint64(3355443200, 0), -57, false), new extFloat.ptr(new $Uint64(4194304000, 0), -54, false), new extFloat.ptr(new $Uint64(2621440000, 0), -50, false), new extFloat.ptr(new $Uint64(3276800000, 0), -47, false), new extFloat.ptr(new $Uint64(4096000000, 0), -44, false), new extFloat.ptr(new $Uint64(2560000000, 0), -40, false)]);
		powersOfTen = $toNativeArray($kindStruct, [new extFloat.ptr(new $Uint64(4203730336, 136053384), -1220, false), new extFloat.ptr(new $Uint64(3132023167, 2722021238), -1193, false), new extFloat.ptr(new $Uint64(2333539104, 810921078), -1166, false), new extFloat.ptr(new $Uint64(3477244234, 1573795306), -1140, false), new extFloat.ptr(new $Uint64(2590748842, 1432697645), -1113, false), new extFloat.ptr(new $Uint64(3860516611, 1025131999), -1087, false), new extFloat.ptr(new $Uint64(2876309015, 3348809418), -1060, false), new extFloat.ptr(new $Uint64(4286034428, 3200048207), -1034, false), new extFloat.ptr(new $Uint64(3193344495, 1097586188), -1007, false), new extFloat.ptr(new $Uint64(2379227053, 2424306748), -980, false), new extFloat.ptr(new $Uint64(3545324584, 827693699), -954, false), new extFloat.ptr(new $Uint64(2641472655, 2913388981), -927, false), new extFloat.ptr(new $Uint64(3936100983, 602835915), -901, false), new extFloat.ptr(new $Uint64(2932623761, 1081627501), -874, false), new extFloat.ptr(new $Uint64(2184974969, 1572261463), -847, false), new extFloat.ptr(new $Uint64(3255866422, 1308317239), -821, false), new extFloat.ptr(new $Uint64(2425809519, 944281679), -794, false), new extFloat.ptr(new $Uint64(3614737867, 629291719), -768, false), new extFloat.ptr(new $Uint64(2693189581, 2545915892), -741, false), new extFloat.ptr(new $Uint64(4013165208, 388672741), -715, false), new extFloat.ptr(new $Uint64(2990041083, 708162190), -688, false), new extFloat.ptr(new $Uint64(2227754207, 3536207675), -661, false), new extFloat.ptr(new $Uint64(3319612455, 450088378), -635, false), new extFloat.ptr(new $Uint64(2473304014, 3139815830), -608, false), new extFloat.ptr(new $Uint64(3685510180, 2103616900), -582, false), new extFloat.ptr(new $Uint64(2745919064, 224385782), -555, false), new extFloat.ptr(new $Uint64(4091738259, 3737383206), -529, false), new extFloat.ptr(new $Uint64(3048582568, 2868871352), -502, false), new extFloat.ptr(new $Uint64(2271371013, 1820084875), -475, false), new extFloat.ptr(new $Uint64(3384606560, 885076051), -449, false), new extFloat.ptr(new $Uint64(2521728396, 2444895829), -422, false), new extFloat.ptr(new $Uint64(3757668132, 1881767613), -396, false), new extFloat.ptr(new $Uint64(2799680927, 3102062735), -369, false), new extFloat.ptr(new $Uint64(4171849679, 2289335700), -343, false), new extFloat.ptr(new $Uint64(3108270227, 2410191823), -316, false), new extFloat.ptr(new $Uint64(2315841784, 3205436779), -289, false), new extFloat.ptr(new $Uint64(3450873173, 1697722806), -263, false), new extFloat.ptr(new $Uint64(2571100870, 3497754540), -236, false), new extFloat.ptr(new $Uint64(3831238852, 707476230), -210, false), new extFloat.ptr(new $Uint64(2854495385, 1769181907), -183, false), new extFloat.ptr(new $Uint64(4253529586, 2197867022), -157, false), new extFloat.ptr(new $Uint64(3169126500, 2450594539), -130, false), new extFloat.ptr(new $Uint64(2361183241, 1867548876), -103, false), new extFloat.ptr(new $Uint64(3518437208, 3793315116), -77, false), new extFloat.ptr(new $Uint64(2621440000, 0), -50, false), new extFloat.ptr(new $Uint64(3906250000, 0), -24, false), new extFloat.ptr(new $Uint64(2910383045, 2892103680), 3, false), new extFloat.ptr(new $Uint64(2168404344, 4170451332), 30, false), new extFloat.ptr(new $Uint64(3231174267, 3372684723), 56, false), new extFloat.ptr(new $Uint64(2407412430, 2078956656), 83, false), new extFloat.ptr(new $Uint64(3587324068, 2884206696), 109, false), new extFloat.ptr(new $Uint64(2672764710, 395977285), 136, false), new extFloat.ptr(new $Uint64(3982729777, 3569679143), 162, false), new extFloat.ptr(new $Uint64(2967364920, 2361961896), 189, false), new extFloat.ptr(new $Uint64(2210859150, 447440347), 216, false), new extFloat.ptr(new $Uint64(3294436857, 1114709402), 242, false), new extFloat.ptr(new $Uint64(2454546732, 2786846552), 269, false), new extFloat.ptr(new $Uint64(3657559652, 443583978), 295, false), new extFloat.ptr(new $Uint64(2725094297, 2599384906), 322, false), new extFloat.ptr(new $Uint64(4060706939, 3028118405), 348, false), new extFloat.ptr(new $Uint64(3025462433, 2044532855), 375, false), new extFloat.ptr(new $Uint64(2254145170, 1536935362), 402, false), new extFloat.ptr(new $Uint64(3358938053, 3365297469), 428, false), new extFloat.ptr(new $Uint64(2502603868, 4204241075), 455, false), new extFloat.ptr(new $Uint64(3729170365, 2577424355), 481, false), new extFloat.ptr(new $Uint64(2778448436, 3677981733), 508, false), new extFloat.ptr(new $Uint64(4140210802, 2744688476), 534, false), new extFloat.ptr(new $Uint64(3084697427, 1424604878), 561, false), new extFloat.ptr(new $Uint64(2298278679, 4062331362), 588, false), new extFloat.ptr(new $Uint64(3424702107, 3546052773), 614, false), new extFloat.ptr(new $Uint64(2551601907, 2065781727), 641, false), new extFloat.ptr(new $Uint64(3802183132, 2535403578), 667, false), new extFloat.ptr(new $Uint64(2832847187, 1558426518), 694, false), new extFloat.ptr(new $Uint64(4221271257, 2762425404), 720, false), new extFloat.ptr(new $Uint64(3145092172, 2812560400), 747, false), new extFloat.ptr(new $Uint64(2343276271, 3057687578), 774, false), new extFloat.ptr(new $Uint64(3491753744, 2790753324), 800, false), new extFloat.ptr(new $Uint64(2601559269, 3918606633), 827, false), new extFloat.ptr(new $Uint64(3876625403, 2711358621), 853, false), new extFloat.ptr(new $Uint64(2888311001, 1648096297), 880, false), new extFloat.ptr(new $Uint64(2151959390, 2057817989), 907, false), new extFloat.ptr(new $Uint64(3206669376, 61660461), 933, false), new extFloat.ptr(new $Uint64(2389154863, 1581580175), 960, false), new extFloat.ptr(new $Uint64(3560118173, 2626467905), 986, false), new extFloat.ptr(new $Uint64(2652494738, 3034782633), 1013, false), new extFloat.ptr(new $Uint64(3952525166, 3135207385), 1039, false), new extFloat.ptr(new $Uint64(2944860731, 2616258155), 1066, false)]);
		uint64pow10 = $toNativeArray($kindUint64, [new $Uint64(0, 1), new $Uint64(0, 10), new $Uint64(0, 100), new $Uint64(0, 1000), new $Uint64(0, 10000), new $Uint64(0, 100000), new $Uint64(0, 1000000), new $Uint64(0, 10000000), new $Uint64(0, 100000000), new $Uint64(0, 1000000000), new $Uint64(2, 1410065408), new $Uint64(23, 1215752192), new $Uint64(232, 3567587328), new $Uint64(2328, 1316134912), new $Uint64(23283, 276447232), new $Uint64(232830, 2764472320), new $Uint64(2328306, 1874919424), new $Uint64(23283064, 1569325056), new $Uint64(232830643, 2808348672), new $Uint64(2328306436, 2313682944)]);
		float32info = new floatInfo.ptr(23, 8, -127);
		float64info = new floatInfo.ptr(52, 11, -1023);
		isPrint16 = new sliceType$4([32, 126, 161, 887, 890, 895, 900, 1366, 1369, 1418, 1421, 1479, 1488, 1514, 1520, 1524, 1542, 1563, 1566, 1805, 1808, 1866, 1869, 1969, 1984, 2042, 2048, 2093, 2096, 2139, 2142, 2142, 2208, 2226, 2276, 2444, 2447, 2448, 2451, 2482, 2486, 2489, 2492, 2500, 2503, 2504, 2507, 2510, 2519, 2519, 2524, 2531, 2534, 2555, 2561, 2570, 2575, 2576, 2579, 2617, 2620, 2626, 2631, 2632, 2635, 2637, 2641, 2641, 2649, 2654, 2662, 2677, 2689, 2745, 2748, 2765, 2768, 2768, 2784, 2787, 2790, 2801, 2817, 2828, 2831, 2832, 2835, 2873, 2876, 2884, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2915, 2918, 2935, 2946, 2954, 2958, 2965, 2969, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3006, 3010, 3014, 3021, 3024, 3024, 3031, 3031, 3046, 3066, 3072, 3129, 3133, 3149, 3157, 3161, 3168, 3171, 3174, 3183, 3192, 3257, 3260, 3277, 3285, 3286, 3294, 3299, 3302, 3314, 3329, 3386, 3389, 3406, 3415, 3415, 3424, 3427, 3430, 3445, 3449, 3455, 3458, 3478, 3482, 3517, 3520, 3526, 3530, 3530, 3535, 3551, 3558, 3567, 3570, 3572, 3585, 3642, 3647, 3675, 3713, 3716, 3719, 3722, 3725, 3725, 3732, 3751, 3754, 3773, 3776, 3789, 3792, 3801, 3804, 3807, 3840, 3948, 3953, 4058, 4096, 4295, 4301, 4301, 4304, 4685, 4688, 4701, 4704, 4749, 4752, 4789, 4792, 4805, 4808, 4885, 4888, 4954, 4957, 4988, 4992, 5017, 5024, 5108, 5120, 5788, 5792, 5880, 5888, 5908, 5920, 5942, 5952, 5971, 5984, 6003, 6016, 6109, 6112, 6121, 6128, 6137, 6144, 6157, 6160, 6169, 6176, 6263, 6272, 6314, 6320, 6389, 6400, 6443, 6448, 6459, 6464, 6464, 6468, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6608, 6618, 6622, 6683, 6686, 6780, 6783, 6793, 6800, 6809, 6816, 6829, 6832, 6846, 6912, 6987, 6992, 7036, 7040, 7155, 7164, 7223, 7227, 7241, 7245, 7295, 7360, 7367, 7376, 7417, 7424, 7669, 7676, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8061, 8064, 8147, 8150, 8175, 8178, 8190, 8208, 8231, 8240, 8286, 8304, 8305, 8308, 8348, 8352, 8381, 8400, 8432, 8448, 8585, 8592, 9210, 9216, 9254, 9280, 9290, 9312, 11123, 11126, 11157, 11160, 11193, 11197, 11217, 11264, 11507, 11513, 11559, 11565, 11565, 11568, 11623, 11631, 11632, 11647, 11670, 11680, 11842, 11904, 12019, 12032, 12245, 12272, 12283, 12289, 12438, 12441, 12543, 12549, 12589, 12593, 12730, 12736, 12771, 12784, 19893, 19904, 40908, 40960, 42124, 42128, 42182, 42192, 42539, 42560, 42743, 42752, 42925, 42928, 42929, 42999, 43051, 43056, 43065, 43072, 43127, 43136, 43204, 43214, 43225, 43232, 43259, 43264, 43347, 43359, 43388, 43392, 43481, 43486, 43574, 43584, 43597, 43600, 43609, 43612, 43714, 43739, 43766, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43871, 43876, 43877, 43968, 44013, 44016, 44025, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64449, 64467, 64831, 64848, 64911, 64914, 64967, 65008, 65021, 65024, 65049, 65056, 65069, 65072, 65131, 65136, 65276, 65281, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 65504, 65518, 65532, 65533]);
		isNotPrint16 = new sliceType$4([173, 907, 909, 930, 1328, 1376, 1416, 1424, 1757, 2111, 2436, 2473, 2481, 2526, 2564, 2601, 2609, 2612, 2615, 2621, 2653, 2692, 2702, 2706, 2729, 2737, 2740, 2758, 2762, 2820, 2857, 2865, 2868, 2910, 2948, 2961, 2971, 2973, 3017, 3076, 3085, 3089, 3113, 3141, 3145, 3159, 3200, 3204, 3213, 3217, 3241, 3252, 3269, 3273, 3295, 3312, 3332, 3341, 3345, 3397, 3401, 3460, 3506, 3516, 3541, 3543, 3715, 3721, 3736, 3744, 3748, 3750, 3756, 3770, 3781, 3783, 3912, 3992, 4029, 4045, 4294, 4681, 4695, 4697, 4745, 4785, 4799, 4801, 4823, 4881, 5760, 5901, 5997, 6001, 6431, 6751, 7415, 8024, 8026, 8028, 8030, 8117, 8133, 8156, 8181, 8335, 11209, 11311, 11359, 11558, 11687, 11695, 11703, 11711, 11719, 11727, 11735, 11743, 11930, 12352, 12687, 12831, 13055, 42654, 42895, 43470, 43519, 43815, 43823, 64311, 64317, 64319, 64322, 64325, 65107, 65127, 65141, 65511]);
		isPrint32 = new sliceType$5([65536, 65613, 65616, 65629, 65664, 65786, 65792, 65794, 65799, 65843, 65847, 65932, 65936, 65947, 65952, 65952, 66000, 66045, 66176, 66204, 66208, 66256, 66272, 66299, 66304, 66339, 66352, 66378, 66384, 66426, 66432, 66499, 66504, 66517, 66560, 66717, 66720, 66729, 66816, 66855, 66864, 66915, 66927, 66927, 67072, 67382, 67392, 67413, 67424, 67431, 67584, 67589, 67592, 67640, 67644, 67644, 67647, 67742, 67751, 67759, 67840, 67867, 67871, 67897, 67903, 67903, 67968, 68023, 68030, 68031, 68096, 68102, 68108, 68147, 68152, 68154, 68159, 68167, 68176, 68184, 68192, 68255, 68288, 68326, 68331, 68342, 68352, 68405, 68409, 68437, 68440, 68466, 68472, 68497, 68505, 68508, 68521, 68527, 68608, 68680, 69216, 69246, 69632, 69709, 69714, 69743, 69759, 69825, 69840, 69864, 69872, 69881, 69888, 69955, 69968, 70006, 70016, 70088, 70093, 70093, 70096, 70106, 70113, 70132, 70144, 70205, 70320, 70378, 70384, 70393, 70401, 70412, 70415, 70416, 70419, 70457, 70460, 70468, 70471, 70472, 70475, 70477, 70487, 70487, 70493, 70499, 70502, 70508, 70512, 70516, 70784, 70855, 70864, 70873, 71040, 71093, 71096, 71113, 71168, 71236, 71248, 71257, 71296, 71351, 71360, 71369, 71840, 71922, 71935, 71935, 72384, 72440, 73728, 74648, 74752, 74868, 77824, 78894, 92160, 92728, 92736, 92777, 92782, 92783, 92880, 92909, 92912, 92917, 92928, 92997, 93008, 93047, 93053, 93071, 93952, 94020, 94032, 94078, 94095, 94111, 110592, 110593, 113664, 113770, 113776, 113788, 113792, 113800, 113808, 113817, 113820, 113823, 118784, 119029, 119040, 119078, 119081, 119154, 119163, 119261, 119296, 119365, 119552, 119638, 119648, 119665, 119808, 119967, 119970, 119970, 119973, 119974, 119977, 120074, 120077, 120134, 120138, 120485, 120488, 120779, 120782, 120831, 124928, 125124, 125127, 125142, 126464, 126500, 126503, 126523, 126530, 126530, 126535, 126548, 126551, 126564, 126567, 126619, 126625, 126651, 126704, 126705, 126976, 127019, 127024, 127123, 127136, 127150, 127153, 127221, 127232, 127244, 127248, 127339, 127344, 127386, 127462, 127490, 127504, 127546, 127552, 127560, 127568, 127569, 127744, 127788, 127792, 127869, 127872, 127950, 127956, 127991, 128000, 128330, 128336, 128578, 128581, 128719, 128736, 128748, 128752, 128755, 128768, 128883, 128896, 128980, 129024, 129035, 129040, 129095, 129104, 129113, 129120, 129159, 129168, 129197, 131072, 173782, 173824, 177972, 177984, 178205, 194560, 195101, 917760, 917999]);
		isNotPrint32 = new sliceType$4([12, 39, 59, 62, 926, 2057, 2102, 2134, 2564, 2580, 2584, 4285, 4405, 4626, 4868, 4905, 4913, 4916, 9327, 27231, 27482, 27490, 54357, 54429, 54445, 54458, 54460, 54468, 54534, 54549, 54557, 54586, 54591, 54597, 54609, 60932, 60960, 60963, 60968, 60979, 60984, 60986, 61000, 61002, 61004, 61008, 61011, 61016, 61018, 61020, 61022, 61024, 61027, 61035, 61043, 61048, 61053, 61055, 61066, 61092, 61098, 61632, 61648, 61743, 62719, 62842, 62884]);
		shifts = $toNativeArray($kindUint, [0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0]);
		/* */ } return; } }; $init_strconv.$blocking = true; return $init_strconv;
	};
	return $pkg;
})();
$packages["strings"] = (function() {
	var $pkg = {}, errors, js, io, unicode, utf8, sliceType, sliceType$3, IndexByte, explode, hashStr, Count, ContainsRune, Index, IndexRune, genSplit, SplitN, Split, Join, HasPrefix, Map;
	errors = $packages["errors"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	io = $packages["io"];
	unicode = $packages["unicode"];
	utf8 = $packages["unicode/utf8"];
		sliceType = $sliceType($Uint8);
		sliceType$3 = $sliceType($String);
	IndexByte = $pkg.IndexByte = function(s, c) {
		return $parseInt(s.indexOf($global.String.fromCharCode(c))) >> 0;
	};
	explode = function(s, n) {
		var _tmp, _tmp$1, _tuple, a, ch, cur, i, l, size;
		if (n === 0) {
			return sliceType$3.nil;
		}
		l = utf8.RuneCountInString(s);
		if (n <= 0 || n > l) {
			n = l;
		}
		a = $makeSlice(sliceType$3, n);
		size = 0;
		ch = 0;
		_tmp = 0; _tmp$1 = 0; i = _tmp; cur = _tmp$1;
		while ((i + 1 >> 0) < n) {
			_tuple = utf8.DecodeRuneInString(s.substring(cur)); ch = _tuple[0]; size = _tuple[1];
			if (ch === 65533) {
				(i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i] = "\xEF\xBF\xBD";
			} else {
				(i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i] = s.substring(cur, (cur + size >> 0));
			}
			cur = cur + (size) >> 0;
			i = i + (1) >> 0;
		}
		if (cur < s.length) {
			(i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i] = s.substring(cur);
		}
		return a;
	};
	hashStr = function(sep) {
		var _tmp, _tmp$1, hash, i, i$1, pow, sq, x, x$1;
		hash = 0;
		i = 0;
		while (i < sep.length) {
			hash = ((((hash >>> 16 << 16) * 16777619 >>> 0) + (hash << 16 >>> 16) * 16777619) >>> 0) + (sep.charCodeAt(i) >>> 0) >>> 0;
			i = i + (1) >> 0;
		}
		_tmp = 1; _tmp$1 = 16777619; pow = _tmp; sq = _tmp$1;
		i$1 = sep.length;
		while (i$1 > 0) {
			if (!(((i$1 & 1) === 0))) {
				pow = (x = sq, (((pow >>> 16 << 16) * x >>> 0) + (pow << 16 >>> 16) * x) >>> 0);
			}
			sq = (x$1 = sq, (((sq >>> 16 << 16) * x$1 >>> 0) + (sq << 16 >>> 16) * x$1) >>> 0);
			i$1 = (i$1 >> $min((1), 31)) >> 0;
		}
		return [hash, pow];
	};
	Count = $pkg.Count = function(s, sep) {
		var _tuple, c, h, hashsep, i, i$1, i$2, lastmatch, n, pow, x, x$1;
		n = 0;
		if (sep.length === 0) {
			return utf8.RuneCountInString(s) + 1 >> 0;
		} else if (sep.length === 1) {
			c = sep.charCodeAt(0);
			i = 0;
			while (i < s.length) {
				if (s.charCodeAt(i) === c) {
					n = n + (1) >> 0;
				}
				i = i + (1) >> 0;
			}
			return n;
		} else if (sep.length > s.length) {
			return 0;
		} else if (sep.length === s.length) {
			if (sep === s) {
				return 1;
			}
			return 0;
		}
		_tuple = hashStr(sep); hashsep = _tuple[0]; pow = _tuple[1];
		h = 0;
		i$1 = 0;
		while (i$1 < sep.length) {
			h = ((((h >>> 16 << 16) * 16777619 >>> 0) + (h << 16 >>> 16) * 16777619) >>> 0) + (s.charCodeAt(i$1) >>> 0) >>> 0;
			i$1 = i$1 + (1) >> 0;
		}
		lastmatch = 0;
		if ((h === hashsep) && s.substring(0, sep.length) === sep) {
			n = n + (1) >> 0;
			lastmatch = sep.length;
		}
		i$2 = sep.length;
		while (i$2 < s.length) {
			h = (x = 16777619, (((h >>> 16 << 16) * x >>> 0) + (h << 16 >>> 16) * x) >>> 0);
			h = h + ((s.charCodeAt(i$2) >>> 0)) >>> 0;
			h = h - ((x$1 = (s.charCodeAt((i$2 - sep.length >> 0)) >>> 0), (((pow >>> 16 << 16) * x$1 >>> 0) + (pow << 16 >>> 16) * x$1) >>> 0)) >>> 0;
			i$2 = i$2 + (1) >> 0;
			if ((h === hashsep) && lastmatch <= (i$2 - sep.length >> 0) && s.substring((i$2 - sep.length >> 0), i$2) === sep) {
				n = n + (1) >> 0;
				lastmatch = i$2;
			}
		}
		return n;
	};
	ContainsRune = $pkg.ContainsRune = function(s, r) {
		return IndexRune(s, r) >= 0;
	};
	Index = $pkg.Index = function(s, sep) {
		var _tuple, h, hashsep, i, i$1, n, pow, x, x$1;
		n = sep.length;
		if (n === 0) {
			return 0;
		} else if (n === 1) {
			return IndexByte(s, sep.charCodeAt(0));
		} else if (n === s.length) {
			if (sep === s) {
				return 0;
			}
			return -1;
		} else if (n > s.length) {
			return -1;
		}
		_tuple = hashStr(sep); hashsep = _tuple[0]; pow = _tuple[1];
		h = 0;
		i = 0;
		while (i < n) {
			h = ((((h >>> 16 << 16) * 16777619 >>> 0) + (h << 16 >>> 16) * 16777619) >>> 0) + (s.charCodeAt(i) >>> 0) >>> 0;
			i = i + (1) >> 0;
		}
		if ((h === hashsep) && s.substring(0, n) === sep) {
			return 0;
		}
		i$1 = n;
		while (i$1 < s.length) {
			h = (x = 16777619, (((h >>> 16 << 16) * x >>> 0) + (h << 16 >>> 16) * x) >>> 0);
			h = h + ((s.charCodeAt(i$1) >>> 0)) >>> 0;
			h = h - ((x$1 = (s.charCodeAt((i$1 - n >> 0)) >>> 0), (((pow >>> 16 << 16) * x$1 >>> 0) + (pow << 16 >>> 16) * x$1) >>> 0)) >>> 0;
			i$1 = i$1 + (1) >> 0;
			if ((h === hashsep) && s.substring((i$1 - n >> 0), i$1) === sep) {
				return i$1 - n >> 0;
			}
		}
		return -1;
	};
	IndexRune = $pkg.IndexRune = function(s, r) {
		var _i, _ref, _rune, c, i;
		if (r < 128) {
			return IndexByte(s, (r << 24 >>> 24));
		} else {
			_ref = s;
			_i = 0;
			while (_i < _ref.length) {
				_rune = $decodeRune(_ref, _i);
				i = _i;
				c = _rune[0];
				if (c === r) {
					return i;
				}
				_i += _rune[1];
			}
		}
		return -1;
	};
	genSplit = function(s, sep, sepSave, n) {
		var a, c, i, na, start;
		if (n === 0) {
			return sliceType$3.nil;
		}
		if (sep === "") {
			return explode(s, n);
		}
		if (n < 0) {
			n = Count(s, sep) + 1 >> 0;
		}
		c = sep.charCodeAt(0);
		start = 0;
		a = $makeSlice(sliceType$3, n);
		na = 0;
		i = 0;
		while ((i + sep.length >> 0) <= s.length && (na + 1 >> 0) < n) {
			if ((s.charCodeAt(i) === c) && ((sep.length === 1) || s.substring(i, (i + sep.length >> 0)) === sep)) {
				(na < 0 || na >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + na] = s.substring(start, (i + sepSave >> 0));
				na = na + (1) >> 0;
				start = i + sep.length >> 0;
				i = i + ((sep.length - 1 >> 0)) >> 0;
			}
			i = i + (1) >> 0;
		}
		(na < 0 || na >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + na] = s.substring(start);
		return $subslice(a, 0, (na + 1 >> 0));
	};
	SplitN = $pkg.SplitN = function(s, sep, n) {
		return genSplit(s, sep, 0, n);
	};
	Split = $pkg.Split = function(s, sep) {
		return genSplit(s, sep, 0, -1);
	};
	Join = $pkg.Join = function(a, sep) {
		var _i, _ref, b, bp, i, n, s;
		if (a.$length === 0) {
			return "";
		}
		if (a.$length === 1) {
			return ((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0]);
		}
		n = sep.length * ((a.$length - 1 >> 0)) >> 0;
		i = 0;
		while (i < a.$length) {
			n = n + (((i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i]).length) >> 0;
			i = i + (1) >> 0;
		}
		b = $makeSlice(sliceType, n);
		bp = $copyString(b, ((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0]));
		_ref = $subslice(a, 1);
		_i = 0;
		while (_i < _ref.$length) {
			s = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			bp = bp + ($copyString($subslice(b, bp), sep)) >> 0;
			bp = bp + ($copyString($subslice(b, bp), s)) >> 0;
			_i++;
		}
		return $bytesToString(b);
	};
	HasPrefix = $pkg.HasPrefix = function(s, prefix) {
		return s.length >= prefix.length && s.substring(0, prefix.length) === prefix;
	};
	Map = $pkg.Map = function(mapping, s) {
		var _i, _ref, _rune, b, c, i, maxbytes, nb, nbytes, r, wid;
		maxbytes = s.length;
		nbytes = 0;
		b = sliceType.nil;
		_ref = s;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			i = _i;
			c = _rune[0];
			r = mapping(c);
			if (b === sliceType.nil) {
				if (r === c) {
					_i += _rune[1];
					continue;
				}
				b = $makeSlice(sliceType, maxbytes);
				nbytes = $copyString(b, s.substring(0, i));
			}
			if (r >= 0) {
				wid = 1;
				if (r >= 128) {
					wid = utf8.RuneLen(r);
				}
				if ((nbytes + wid >> 0) > maxbytes) {
					maxbytes = (maxbytes * 2 >> 0) + 4 >> 0;
					nb = $makeSlice(sliceType, maxbytes);
					$copySlice(nb, $subslice(b, 0, nbytes));
					b = nb;
				}
				nbytes = nbytes + (utf8.EncodeRune($subslice(b, nbytes, maxbytes), r)) >> 0;
			}
			_i += _rune[1];
		}
		if (b === sliceType.nil) {
			return s;
		}
		return $bytesToString($subslice(b, 0, nbytes));
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_strings = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = unicode.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_strings.$blocking = true; return $init_strings;
	};
	return $pkg;
})();
$packages["syscall"] = (function() {
	var $pkg = {}, bytes, errors, js, runtime, sync, mmapper, Errno, _C_int, Timespec, Stat_t, Dirent, sliceType, sliceType$1, ptrType, ptrType$5, sliceType$4, ptrType$10, arrayType$2, sliceType$9, arrayType$3, arrayType$4, structType, ptrType$24, mapType, funcType, funcType$1, ptrType$29, arrayType$8, arrayType$10, arrayType$12, warningPrinted, lineBuffer, syscallModule, alreadyTriedToLoad, minusOne, envOnce, envLock, env, envs, mapper, errors$1, init, printWarning, printToConsole, use, runtime_envs, syscall, Syscall, Syscall6, BytePtrFromString, copyenv, Getenv, itoa, uitoa, ByteSliceFromString, ReadDirent, Sysctl, nametomib, ParseDirent, Read, Write, sysctl, Close, Exit, Fchdir, Fchmod, Fchown, Fstat, Fsync, Ftruncate, Getdirentries, Lstat, Pread, Pwrite, read, Seek, write, mmap, munmap;
	bytes = $packages["bytes"];
	errors = $packages["errors"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	runtime = $packages["runtime"];
	sync = $packages["sync"];
	mmapper = $pkg.mmapper = $newType(0, $kindStruct, "syscall.mmapper", "mmapper", "syscall", function(Mutex_, active_, mmap_, munmap_) {
		this.$val = this;
		this.Mutex = Mutex_ !== undefined ? Mutex_ : new sync.Mutex.ptr();
		this.active = active_ !== undefined ? active_ : false;
		this.mmap = mmap_ !== undefined ? mmap_ : $throwNilPointerError;
		this.munmap = munmap_ !== undefined ? munmap_ : $throwNilPointerError;
	});
	Errno = $pkg.Errno = $newType(4, $kindUintptr, "syscall.Errno", "Errno", "syscall", null);
	_C_int = $pkg._C_int = $newType(4, $kindInt32, "syscall._C_int", "_C_int", "syscall", null);
	Timespec = $pkg.Timespec = $newType(0, $kindStruct, "syscall.Timespec", "Timespec", "syscall", function(Sec_, Nsec_) {
		this.$val = this;
		this.Sec = Sec_ !== undefined ? Sec_ : new $Int64(0, 0);
		this.Nsec = Nsec_ !== undefined ? Nsec_ : new $Int64(0, 0);
	});
	Stat_t = $pkg.Stat_t = $newType(0, $kindStruct, "syscall.Stat_t", "Stat_t", "syscall", function(Dev_, Mode_, Nlink_, Ino_, Uid_, Gid_, Rdev_, Pad_cgo_0_, Atimespec_, Mtimespec_, Ctimespec_, Birthtimespec_, Size_, Blocks_, Blksize_, Flags_, Gen_, Lspare_, Qspare_) {
		this.$val = this;
		this.Dev = Dev_ !== undefined ? Dev_ : 0;
		this.Mode = Mode_ !== undefined ? Mode_ : 0;
		this.Nlink = Nlink_ !== undefined ? Nlink_ : 0;
		this.Ino = Ino_ !== undefined ? Ino_ : new $Uint64(0, 0);
		this.Uid = Uid_ !== undefined ? Uid_ : 0;
		this.Gid = Gid_ !== undefined ? Gid_ : 0;
		this.Rdev = Rdev_ !== undefined ? Rdev_ : 0;
		this.Pad_cgo_0 = Pad_cgo_0_ !== undefined ? Pad_cgo_0_ : arrayType$3.zero();
		this.Atimespec = Atimespec_ !== undefined ? Atimespec_ : new Timespec.ptr();
		this.Mtimespec = Mtimespec_ !== undefined ? Mtimespec_ : new Timespec.ptr();
		this.Ctimespec = Ctimespec_ !== undefined ? Ctimespec_ : new Timespec.ptr();
		this.Birthtimespec = Birthtimespec_ !== undefined ? Birthtimespec_ : new Timespec.ptr();
		this.Size = Size_ !== undefined ? Size_ : new $Int64(0, 0);
		this.Blocks = Blocks_ !== undefined ? Blocks_ : new $Int64(0, 0);
		this.Blksize = Blksize_ !== undefined ? Blksize_ : 0;
		this.Flags = Flags_ !== undefined ? Flags_ : 0;
		this.Gen = Gen_ !== undefined ? Gen_ : 0;
		this.Lspare = Lspare_ !== undefined ? Lspare_ : 0;
		this.Qspare = Qspare_ !== undefined ? Qspare_ : arrayType$8.zero();
	});
	Dirent = $pkg.Dirent = $newType(0, $kindStruct, "syscall.Dirent", "Dirent", "syscall", function(Ino_, Seekoff_, Reclen_, Namlen_, Type_, Name_, Pad_cgo_0_) {
		this.$val = this;
		this.Ino = Ino_ !== undefined ? Ino_ : new $Uint64(0, 0);
		this.Seekoff = Seekoff_ !== undefined ? Seekoff_ : new $Uint64(0, 0);
		this.Reclen = Reclen_ !== undefined ? Reclen_ : 0;
		this.Namlen = Namlen_ !== undefined ? Namlen_ : 0;
		this.Type = Type_ !== undefined ? Type_ : 0;
		this.Name = Name_ !== undefined ? Name_ : arrayType$10.zero();
		this.Pad_cgo_0 = Pad_cgo_0_ !== undefined ? Pad_cgo_0_ : arrayType$12.zero();
	});
		sliceType = $sliceType($Uint8);
		sliceType$1 = $sliceType($String);
		ptrType = $ptrType($Uint8);
		ptrType$5 = $ptrType(Errno);
		sliceType$4 = $sliceType(_C_int);
		ptrType$10 = $ptrType($Uintptr);
		arrayType$2 = $arrayType($Uint8, 32);
		sliceType$9 = $sliceType($Uint8);
		arrayType$3 = $arrayType($Uint8, 4);
		arrayType$4 = $arrayType(_C_int, 14);
		structType = $structType([{prop: "addr", name: "addr", pkg: "syscall", type: $Uintptr, tag: ""}, {prop: "len", name: "len", pkg: "syscall", type: $Int, tag: ""}, {prop: "cap", name: "cap", pkg: "syscall", type: $Int, tag: ""}]);
		ptrType$24 = $ptrType(mmapper);
		mapType = $mapType(ptrType, sliceType);
		funcType = $funcType([$Uintptr, $Uintptr, $Int, $Int, $Int, $Int64], [$Uintptr, $error], false);
		funcType$1 = $funcType([$Uintptr, $Uintptr], [$error], false);
		ptrType$29 = $ptrType(Timespec);
		arrayType$8 = $arrayType($Int64, 2);
		arrayType$10 = $arrayType($Int8, 1024);
		arrayType$12 = $arrayType($Uint8, 3);
	init = function() {
		$flushConsole = (function() {
			if (!((lineBuffer.$length === 0))) {
				$global.console.log($externalize($bytesToString(lineBuffer), $String));
				lineBuffer = sliceType.nil;
			}
		});
	};
	printWarning = function() {
		if (!warningPrinted) {
			console.log("warning: system calls not available, see https://github.com/gopherjs/gopherjs/blob/master/doc/syscalls.md");
		}
		warningPrinted = true;
	};
	printToConsole = function(b) {
		var goPrintToConsole, i;
		goPrintToConsole = $global.goPrintToConsole;
		if (!(goPrintToConsole === undefined)) {
			goPrintToConsole(b);
			return;
		}
		lineBuffer = $appendSlice(lineBuffer, b);
		while (true) {
			i = bytes.IndexByte(lineBuffer, 10);
			if (i === -1) {
				break;
			}
			$global.console.log($externalize($bytesToString($subslice(lineBuffer, 0, i)), $String));
			lineBuffer = $subslice(lineBuffer, (i + 1 >> 0));
		}
	};
	use = function(p) {
	};
	runtime_envs = function() {
		var envkeys, envs$1, i, jsEnv, key, process;
		process = $global.process;
		if (process === undefined) {
			return sliceType$1.nil;
		}
		jsEnv = process.env;
		envkeys = $global.Object.keys(jsEnv);
		envs$1 = $makeSlice(sliceType$1, $parseInt(envkeys.length));
		i = 0;
		while (i < $parseInt(envkeys.length)) {
			key = $internalize(envkeys[i], $String);
			(i < 0 || i >= envs$1.$length) ? $throwRuntimeError("index out of range") : envs$1.$array[envs$1.$offset + i] = key + "=" + $internalize(jsEnv[$externalize(key, $String)], $String);
			i = i + (1) >> 0;
		}
		return envs$1;
	};
	syscall = function(name) {
		var $deferred = [], $err = null, require;
		/* */ try { $deferFrames.push($deferred);
		$deferred.push([(function() {
			$recover();
		}), []]);
		if (syscallModule === null) {
			if (alreadyTriedToLoad) {
				return null;
			}
			alreadyTriedToLoad = true;
			require = $global.require;
			if (require === undefined) {
				$panic(new $String(""));
			}
			syscallModule = require($externalize("syscall", $String));
		}
		return syscallModule[$externalize(name, $String)];
		/* */ } catch(err) { $err = err; return null; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	Syscall = $pkg.Syscall = function(trap, a1, a2, a3) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, array, err = 0, f, r, r1 = 0, r2 = 0, slice;
		f = syscall("Syscall");
		if (!(f === null)) {
			r = f(trap, a1, a2, a3);
			_tmp = (($parseInt(r[0]) >> 0) >>> 0); _tmp$1 = (($parseInt(r[1]) >> 0) >>> 0); _tmp$2 = (($parseInt(r[2]) >> 0) >>> 0); r1 = _tmp; r2 = _tmp$1; err = _tmp$2;
			return [r1, r2, err];
		}
		if ((trap === 4) && ((a1 === 1) || (a1 === 2))) {
			array = a2;
			slice = $makeSlice(sliceType, $parseInt(array.length));
			slice.$array = array;
			printToConsole(slice);
			_tmp$3 = ($parseInt(array.length) >>> 0); _tmp$4 = 0; _tmp$5 = 0; r1 = _tmp$3; r2 = _tmp$4; err = _tmp$5;
			return [r1, r2, err];
		}
		printWarning();
		_tmp$6 = (minusOne >>> 0); _tmp$7 = 0; _tmp$8 = 13; r1 = _tmp$6; r2 = _tmp$7; err = _tmp$8;
		return [r1, r2, err];
	};
	Syscall6 = $pkg.Syscall6 = function(trap, a1, a2, a3, a4, a5, a6) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, err = 0, f, r, r1 = 0, r2 = 0;
		f = syscall("Syscall6");
		if (!(f === null)) {
			r = f(trap, a1, a2, a3, a4, a5, a6);
			_tmp = (($parseInt(r[0]) >> 0) >>> 0); _tmp$1 = (($parseInt(r[1]) >> 0) >>> 0); _tmp$2 = (($parseInt(r[2]) >> 0) >>> 0); r1 = _tmp; r2 = _tmp$1; err = _tmp$2;
			return [r1, r2, err];
		}
		if (!((trap === 202))) {
			printWarning();
		}
		_tmp$3 = (minusOne >>> 0); _tmp$4 = 0; _tmp$5 = 13; r1 = _tmp$3; r2 = _tmp$4; err = _tmp$5;
		return [r1, r2, err];
	};
	BytePtrFromString = $pkg.BytePtrFromString = function(s) {
		var _i, _ref, array, b, i;
		array = new ($global.Uint8Array)(s.length + 1 >> 0);
		_ref = new sliceType($stringToBytes(s));
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			b = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (b === 0) {
				return [ptrType.nil, new Errno(22)];
			}
			array[i] = b;
			_i++;
		}
		array[s.length] = 0;
		return [array, $ifaceNil];
	};
	copyenv = function() {
		var _entry, _i, _key, _ref, _tuple, i, j, key, ok, s;
		env = new $Map();
		_ref = envs;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			s = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			j = 0;
			while (j < s.length) {
				if (s.charCodeAt(j) === 61) {
					key = s.substring(0, j);
					_tuple = (_entry = env[key], _entry !== undefined ? [_entry.v, true] : [0, false]); ok = _tuple[1];
					if (!ok) {
						_key = key; (env || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: i };
					} else {
						(i < 0 || i >= envs.$length) ? $throwRuntimeError("index out of range") : envs.$array[envs.$offset + i] = "";
					}
					break;
				}
				j = j + (1) >> 0;
			}
			_i++;
		}
	};
	Getenv = $pkg.Getenv = function(key) {
		var $deferred = [], $err = null, _entry, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tuple, found = false, i, i$1, ok, s, value = "";
		/* */ try { $deferFrames.push($deferred);
		envOnce.Do(copyenv);
		if (key.length === 0) {
			_tmp = ""; _tmp$1 = false; value = _tmp; found = _tmp$1;
			return [value, found];
		}
		envLock.RLock();
		$deferred.push([$methodVal(envLock, "RUnlock"), []]);
		_tuple = (_entry = env[key], _entry !== undefined ? [_entry.v, true] : [0, false]); i = _tuple[0]; ok = _tuple[1];
		if (!ok) {
			_tmp$2 = ""; _tmp$3 = false; value = _tmp$2; found = _tmp$3;
			return [value, found];
		}
		s = ((i < 0 || i >= envs.$length) ? $throwRuntimeError("index out of range") : envs.$array[envs.$offset + i]);
		i$1 = 0;
		while (i$1 < s.length) {
			if (s.charCodeAt(i$1) === 61) {
				_tmp$4 = s.substring((i$1 + 1 >> 0)); _tmp$5 = true; value = _tmp$4; found = _tmp$5;
				return [value, found];
			}
			i$1 = i$1 + (1) >> 0;
		}
		_tmp$6 = ""; _tmp$7 = false; value = _tmp$6; found = _tmp$7;
		return [value, found];
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return [value, found]; }
	};
	itoa = function(val) {
		if (val < 0) {
			return "-" + uitoa((-val >>> 0));
		}
		return uitoa((val >>> 0));
	};
	uitoa = function(val) {
		var _q, _r, buf, i;
		buf = $clone(arrayType$2.zero(), arrayType$2);
		i = 31;
		while (val >= 10) {
			(i < 0 || i >= buf.length) ? $throwRuntimeError("index out of range") : buf[i] = (((_r = val % 10, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) + 48 >>> 0) << 24 >>> 24);
			i = i - (1) >> 0;
			val = (_q = val / (10), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero"));
		}
		(i < 0 || i >= buf.length) ? $throwRuntimeError("index out of range") : buf[i] = ((val + 48 >>> 0) << 24 >>> 24);
		return $bytesToString($subslice(new sliceType(buf), i));
	};
	ByteSliceFromString = $pkg.ByteSliceFromString = function(s) {
		var a, i;
		i = 0;
		while (i < s.length) {
			if (s.charCodeAt(i) === 0) {
				return [sliceType.nil, new Errno(22)];
			}
			i = i + (1) >> 0;
		}
		a = $makeSlice(sliceType, (s.length + 1 >> 0));
		$copyString(a, s);
		return [a, $ifaceNil];
	};
	Timespec.ptr.prototype.Unix = function() {
		var _tmp, _tmp$1, nsec = new $Int64(0, 0), sec = new $Int64(0, 0), ts;
		ts = this;
		_tmp = ts.Sec; _tmp$1 = ts.Nsec; sec = _tmp; nsec = _tmp$1;
		return [sec, nsec];
	};
	Timespec.prototype.Unix = function() { return this.$val.Unix(); };
	Timespec.ptr.prototype.Nano = function() {
		var ts, x, x$1;
		ts = this;
		return (x = $mul64(ts.Sec, new $Int64(0, 1000000000)), x$1 = ts.Nsec, new $Int64(x.$high + x$1.$high, x.$low + x$1.$low));
	};
	Timespec.prototype.Nano = function() { return this.$val.Nano(); };
	ReadDirent = $pkg.ReadDirent = function(fd, buf) {
		var _tuple, base, err = $ifaceNil, n = 0;
		base = new Uint8Array(8);
		_tuple = Getdirentries(fd, buf, base); n = _tuple[0]; err = _tuple[1];
		if (true && ($interfaceIsEqual(err, new Errno(22)) || $interfaceIsEqual(err, new Errno(2)))) {
			err = $ifaceNil;
		}
		return [n, err];
	};
	Sysctl = $pkg.Sysctl = function(name) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, buf, err = $ifaceNil, mib, n, value = "", x;
		_tuple = nametomib(name); mib = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp = ""; _tmp$1 = err; value = _tmp; err = _tmp$1;
			return [value, err];
		}
		n = 0;
		err = sysctl(mib, ptrType.nil, new ptrType$10(function() { return n; }, function($v) { n = $v; }), ptrType.nil, 0);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp$2 = ""; _tmp$3 = err; value = _tmp$2; err = _tmp$3;
			return [value, err];
		}
		if (n === 0) {
			_tmp$4 = ""; _tmp$5 = $ifaceNil; value = _tmp$4; err = _tmp$5;
			return [value, err];
		}
		buf = $makeSlice(sliceType, n);
		err = sysctl(mib, new ptrType(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, buf), new ptrType$10(function() { return n; }, function($v) { n = $v; }), ptrType.nil, 0);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp$6 = ""; _tmp$7 = err; value = _tmp$6; err = _tmp$7;
			return [value, err];
		}
		if (n > 0 && ((x = n - 1 >>> 0, ((x < 0 || x >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + x])) === 0)) {
			n = n - (1) >>> 0;
		}
		_tmp$8 = $bytesToString($subslice(buf, 0, n)); _tmp$9 = $ifaceNil; value = _tmp$8; err = _tmp$9;
		return [value, err];
	};
	nametomib = function(name) {
		var _q, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, buf, bytes$1, err = $ifaceNil, mib = sliceType$4.nil, n, p;
		buf = $clone(arrayType$4.zero(), arrayType$4);
		n = 48;
		p = $sliceToArray(new sliceType$9(buf));
		_tuple = ByteSliceFromString(name); bytes$1 = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp = sliceType$4.nil; _tmp$1 = err; mib = _tmp; err = _tmp$1;
			return [mib, err];
		}
		err = sysctl(new sliceType$4([0, 3]), p, new ptrType$10(function() { return n; }, function($v) { n = $v; }), new ptrType(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, bytes$1), (name.length >>> 0));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp$2 = sliceType$4.nil; _tmp$3 = err; mib = _tmp$2; err = _tmp$3;
			return [mib, err];
		}
		_tmp$4 = $subslice(new sliceType$4(buf), 0, (_q = n / 4, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero"))); _tmp$5 = $ifaceNil; mib = _tmp$4; err = _tmp$5;
		return [mib, err];
	};
	ParseDirent = $pkg.ParseDirent = function(buf, max, names) {
		var _array, _struct, _tmp, _tmp$1, _tmp$2, _view, bytes$1, consumed = 0, count = 0, dirent, name, newnames = sliceType$1.nil, origlen, x;
		origlen = buf.$length;
		while (!((max === 0)) && buf.$length > 0) {
			dirent = [undefined];
			dirent[0] = (_array = $sliceToArray(buf), _struct = new Dirent.ptr(), _view = new DataView(_array.buffer, _array.byteOffset), _struct.Ino = new $Uint64(_view.getUint32(4, true), _view.getUint32(0, true)), _struct.Seekoff = new $Uint64(_view.getUint32(12, true), _view.getUint32(8, true)), _struct.Reclen = _view.getUint16(16, true), _struct.Namlen = _view.getUint16(18, true), _struct.Type = _view.getUint8(20, true), _struct.Name = new ($nativeArray($kindInt8))(_array.buffer, $min(_array.byteOffset + 21, _array.buffer.byteLength)), _struct.Pad_cgo_0 = new ($nativeArray($kindUint8))(_array.buffer, $min(_array.byteOffset + 1045, _array.buffer.byteLength)), _struct);
			if (dirent[0].Reclen === 0) {
				buf = sliceType.nil;
				break;
			}
			buf = $subslice(buf, dirent[0].Reclen);
			if ((x = dirent[0].Ino, (x.$high === 0 && x.$low === 0))) {
				continue;
			}
			bytes$1 = $sliceToArray(new sliceType$9(dirent[0].Name));
			name = $bytesToString($subslice(new sliceType(bytes$1), 0, dirent[0].Namlen));
			if (name === "." || name === "..") {
				continue;
			}
			max = max - (1) >> 0;
			count = count + (1) >> 0;
			names = $append(names, name);
		}
		_tmp = origlen - buf.$length >> 0; _tmp$1 = count; _tmp$2 = names; consumed = _tmp; count = _tmp$1; newnames = _tmp$2;
		return [consumed, count, newnames];
	};
	mmapper.ptr.prototype.Mmap = function(fd, offset, length, prot, flags) {
		var $deferred = [], $err = null, _key, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, addr, b, data = sliceType.nil, err = $ifaceNil, errno, m, p, sl, x, x$1;
		/* */ try { $deferFrames.push($deferred);
		m = this;
		if (length <= 0) {
			_tmp = sliceType.nil; _tmp$1 = new Errno(22); data = _tmp; err = _tmp$1;
			return [data, err];
		}
		_tuple = m.mmap(0, (length >>> 0), prot, flags, fd, offset); addr = _tuple[0]; errno = _tuple[1];
		if (!($interfaceIsEqual(errno, $ifaceNil))) {
			_tmp$2 = sliceType.nil; _tmp$3 = errno; data = _tmp$2; err = _tmp$3;
			return [data, err];
		}
		sl = new structType.ptr(addr, length, length);
		b = sl;
		p = new ptrType(function() { return (x$1 = b.$capacity - 1 >> 0, ((x$1 < 0 || x$1 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$1])); }, function($v) { (x = b.$capacity - 1 >> 0, (x < 0 || x >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x] = $v); }, b);
		m.Mutex.Lock();
		$deferred.push([$methodVal(m.Mutex, "Unlock"), []]);
		_key = p; (m.active || $throwRuntimeError("assignment to entry in nil map"))[_key.$key()] = { k: _key, v: b };
		_tmp$4 = b; _tmp$5 = $ifaceNil; data = _tmp$4; err = _tmp$5;
		return [data, err];
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return [data, err]; }
	};
	mmapper.prototype.Mmap = function(fd, offset, length, prot, flags) { return this.$val.Mmap(fd, offset, length, prot, flags); };
	mmapper.ptr.prototype.Munmap = function(data) {
		var $deferred = [], $err = null, _entry, b, err = $ifaceNil, errno, m, p, x, x$1;
		/* */ try { $deferFrames.push($deferred);
		m = this;
		if ((data.$length === 0) || !((data.$length === data.$capacity))) {
			err = new Errno(22);
			return err;
		}
		p = new ptrType(function() { return (x$1 = data.$capacity - 1 >> 0, ((x$1 < 0 || x$1 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$1])); }, function($v) { (x = data.$capacity - 1 >> 0, (x < 0 || x >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x] = $v); }, data);
		m.Mutex.Lock();
		$deferred.push([$methodVal(m.Mutex, "Unlock"), []]);
		b = (_entry = m.active[p.$key()], _entry !== undefined ? _entry.v : sliceType.nil);
		if (b === sliceType.nil || !($pointerIsEqual(new ptrType(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, b), new ptrType(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, data)))) {
			err = new Errno(22);
			return err;
		}
		errno = m.munmap($sliceToArray(b), (b.$length >>> 0));
		if (!($interfaceIsEqual(errno, $ifaceNil))) {
			err = errno;
			return err;
		}
		delete m.active[p.$key()];
		err = $ifaceNil;
		return err;
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return err; }
	};
	mmapper.prototype.Munmap = function(data) { return this.$val.Munmap(data); };
	Errno.prototype.Error = function() {
		var e, s;
		e = this.$val;
		if (0 <= (e >> 0) && (e >> 0) < 106) {
			s = ((e < 0 || e >= errors$1.length) ? $throwRuntimeError("index out of range") : errors$1[e]);
			if (!(s === "")) {
				return s;
			}
		}
		return "errno " + itoa((e >> 0));
	};
	$ptrType(Errno).prototype.Error = function() { return new Errno(this.$get()).Error(); };
	Errno.prototype.Temporary = function() {
		var e;
		e = this.$val;
		return (e === 4) || (e === 24) || (e === 54) || (e === 53) || new Errno(e).Timeout();
	};
	$ptrType(Errno).prototype.Temporary = function() { return new Errno(this.$get()).Temporary(); };
	Errno.prototype.Timeout = function() {
		var e;
		e = this.$val;
		return (e === 35) || (e === 35) || (e === 60);
	};
	$ptrType(Errno).prototype.Timeout = function() { return new Errno(this.$get()).Timeout(); };
	Read = $pkg.Read = function(fd, p) {
		var _tuple, err = $ifaceNil, n = 0;
		_tuple = read(fd, p); n = _tuple[0]; err = _tuple[1];
		return [n, err];
	};
	Write = $pkg.Write = function(fd, p) {
		var _tuple, err = $ifaceNil, n = 0;
		_tuple = write(fd, p); n = _tuple[0]; err = _tuple[1];
		return [n, err];
	};
	sysctl = function(mib, old, oldlen, new$1, newlen) {
		var _p0, _tuple, e1, err = $ifaceNil;
		_p0 = 0;
		if (mib.$length > 0) {
			_p0 = $sliceToArray(mib);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall6(202, _p0, (mib.$length >>> 0), old, oldlen, new$1, newlen); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Close = $pkg.Close = function(fd) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(6, (fd >>> 0), 0, 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Exit = $pkg.Exit = function(code) {
		Syscall(1, (code >>> 0), 0, 0);
		return;
	};
	Fchdir = $pkg.Fchdir = function(fd) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(13, (fd >>> 0), 0, 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Fchmod = $pkg.Fchmod = function(fd, mode) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(124, (fd >>> 0), (mode >>> 0), 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Fchown = $pkg.Fchown = function(fd, uid, gid) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(123, (fd >>> 0), (uid >>> 0), (gid >>> 0)); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Fstat = $pkg.Fstat = function(fd, stat) {
		var _array, _struct, _tuple, _view, e1, err = $ifaceNil;
		_array = new Uint8Array(144);
		_tuple = Syscall(339, (fd >>> 0), _array, 0); e1 = _tuple[2];
		_struct = stat, _view = new DataView(_array.buffer, _array.byteOffset), _struct.Dev = _view.getInt32(0, true), _struct.Mode = _view.getUint16(4, true), _struct.Nlink = _view.getUint16(6, true), _struct.Ino = new $Uint64(_view.getUint32(12, true), _view.getUint32(8, true)), _struct.Uid = _view.getUint32(16, true), _struct.Gid = _view.getUint32(20, true), _struct.Rdev = _view.getInt32(24, true), _struct.Pad_cgo_0 = new ($nativeArray($kindUint8))(_array.buffer, $min(_array.byteOffset + 28, _array.buffer.byteLength)), _struct.Atimespec.Sec = new $Int64(_view.getUint32(36, true), _view.getUint32(32, true)), _struct.Atimespec.Nsec = new $Int64(_view.getUint32(44, true), _view.getUint32(40, true)), _struct.Mtimespec.Sec = new $Int64(_view.getUint32(52, true), _view.getUint32(48, true)), _struct.Mtimespec.Nsec = new $Int64(_view.getUint32(60, true), _view.getUint32(56, true)), _struct.Ctimespec.Sec = new $Int64(_view.getUint32(68, true), _view.getUint32(64, true)), _struct.Ctimespec.Nsec = new $Int64(_view.getUint32(76, true), _view.getUint32(72, true)), _struct.Birthtimespec.Sec = new $Int64(_view.getUint32(84, true), _view.getUint32(80, true)), _struct.Birthtimespec.Nsec = new $Int64(_view.getUint32(92, true), _view.getUint32(88, true)), _struct.Size = new $Int64(_view.getUint32(100, true), _view.getUint32(96, true)), _struct.Blocks = new $Int64(_view.getUint32(108, true), _view.getUint32(104, true)), _struct.Blksize = _view.getInt32(112, true), _struct.Flags = _view.getUint32(116, true), _struct.Gen = _view.getUint32(120, true), _struct.Lspare = _view.getInt32(124, true), _struct.Qspare = new ($nativeArray($kindInt64))(_array.buffer, $min(_array.byteOffset + 128, _array.buffer.byteLength));
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Fsync = $pkg.Fsync = function(fd) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(95, (fd >>> 0), 0, 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Ftruncate = $pkg.Ftruncate = function(fd, length) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(201, (fd >>> 0), (length.$low >>> 0), 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Getdirentries = $pkg.Getdirentries = function(fd, buf, basep) {
		var _p0, _tuple, e1, err = $ifaceNil, n = 0, r0;
		_p0 = 0;
		if (buf.$length > 0) {
			_p0 = $sliceToArray(buf);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall6(344, (fd >>> 0), _p0, (buf.$length >>> 0), basep, 0, 0); r0 = _tuple[0]; e1 = _tuple[2];
		n = (r0 >> 0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [n, err];
	};
	Lstat = $pkg.Lstat = function(path, stat) {
		var _array, _p0, _struct, _tuple, _tuple$1, _view, e1, err = $ifaceNil;
		_p0 = ptrType.nil;
		_tuple = BytePtrFromString(path); _p0 = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		_array = new Uint8Array(144);
		_tuple$1 = Syscall(340, _p0, _array, 0); e1 = _tuple$1[2];
		_struct = stat, _view = new DataView(_array.buffer, _array.byteOffset), _struct.Dev = _view.getInt32(0, true), _struct.Mode = _view.getUint16(4, true), _struct.Nlink = _view.getUint16(6, true), _struct.Ino = new $Uint64(_view.getUint32(12, true), _view.getUint32(8, true)), _struct.Uid = _view.getUint32(16, true), _struct.Gid = _view.getUint32(20, true), _struct.Rdev = _view.getInt32(24, true), _struct.Pad_cgo_0 = new ($nativeArray($kindUint8))(_array.buffer, $min(_array.byteOffset + 28, _array.buffer.byteLength)), _struct.Atimespec.Sec = new $Int64(_view.getUint32(36, true), _view.getUint32(32, true)), _struct.Atimespec.Nsec = new $Int64(_view.getUint32(44, true), _view.getUint32(40, true)), _struct.Mtimespec.Sec = new $Int64(_view.getUint32(52, true), _view.getUint32(48, true)), _struct.Mtimespec.Nsec = new $Int64(_view.getUint32(60, true), _view.getUint32(56, true)), _struct.Ctimespec.Sec = new $Int64(_view.getUint32(68, true), _view.getUint32(64, true)), _struct.Ctimespec.Nsec = new $Int64(_view.getUint32(76, true), _view.getUint32(72, true)), _struct.Birthtimespec.Sec = new $Int64(_view.getUint32(84, true), _view.getUint32(80, true)), _struct.Birthtimespec.Nsec = new $Int64(_view.getUint32(92, true), _view.getUint32(88, true)), _struct.Size = new $Int64(_view.getUint32(100, true), _view.getUint32(96, true)), _struct.Blocks = new $Int64(_view.getUint32(108, true), _view.getUint32(104, true)), _struct.Blksize = _view.getInt32(112, true), _struct.Flags = _view.getUint32(116, true), _struct.Gen = _view.getUint32(120, true), _struct.Lspare = _view.getInt32(124, true), _struct.Qspare = new ($nativeArray($kindInt64))(_array.buffer, $min(_array.byteOffset + 128, _array.buffer.byteLength));
		use(_p0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	Pread = $pkg.Pread = function(fd, p, offset) {
		var _p0, _tuple, e1, err = $ifaceNil, n = 0, r0;
		_p0 = 0;
		if (p.$length > 0) {
			_p0 = $sliceToArray(p);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall6(153, (fd >>> 0), _p0, (p.$length >>> 0), (offset.$low >>> 0), 0, 0); r0 = _tuple[0]; e1 = _tuple[2];
		n = (r0 >> 0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [n, err];
	};
	Pwrite = $pkg.Pwrite = function(fd, p, offset) {
		var _p0, _tuple, e1, err = $ifaceNil, n = 0, r0;
		_p0 = 0;
		if (p.$length > 0) {
			_p0 = $sliceToArray(p);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall6(154, (fd >>> 0), _p0, (p.$length >>> 0), (offset.$low >>> 0), 0, 0); r0 = _tuple[0]; e1 = _tuple[2];
		n = (r0 >> 0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [n, err];
	};
	read = function(fd, p) {
		var _p0, _tuple, e1, err = $ifaceNil, n = 0, r0;
		_p0 = 0;
		if (p.$length > 0) {
			_p0 = $sliceToArray(p);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall(3, (fd >>> 0), _p0, (p.$length >>> 0)); r0 = _tuple[0]; e1 = _tuple[2];
		n = (r0 >> 0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [n, err];
	};
	Seek = $pkg.Seek = function(fd, offset, whence) {
		var _tuple, e1, err = $ifaceNil, newoffset = new $Int64(0, 0), r0;
		_tuple = Syscall(199, (fd >>> 0), (offset.$low >>> 0), (whence >>> 0)); r0 = _tuple[0]; e1 = _tuple[2];
		newoffset = new $Int64(0, r0.constructor === Number ? r0 : 1);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [newoffset, err];
	};
	write = function(fd, p) {
		var _p0, _tuple, e1, err = $ifaceNil, n = 0, r0;
		_p0 = 0;
		if (p.$length > 0) {
			_p0 = $sliceToArray(p);
		} else {
			_p0 = new Uint8Array(0);
		}
		_tuple = Syscall(4, (fd >>> 0), _p0, (p.$length >>> 0)); r0 = _tuple[0]; e1 = _tuple[2];
		n = (r0 >> 0);
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [n, err];
	};
	mmap = function(addr, length, prot, flag, fd, pos) {
		var _tuple, e1, err = $ifaceNil, r0, ret = 0;
		_tuple = Syscall6(197, addr, length, (prot >>> 0), (flag >>> 0), (fd >>> 0), (pos.$low >>> 0)); r0 = _tuple[0]; e1 = _tuple[2];
		ret = r0;
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return [ret, err];
	};
	munmap = function(addr, length) {
		var _tuple, e1, err = $ifaceNil;
		_tuple = Syscall(73, addr, length, 0); e1 = _tuple[2];
		if (!((e1 === 0))) {
			err = new Errno(e1);
		}
		return err;
	};
	ptrType$24.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Mmap", name: "Mmap", pkg: "", type: $funcType([$Int, $Int64, $Int, $Int, $Int], [sliceType, $error], false)}, {prop: "Munmap", name: "Munmap", pkg: "", type: $funcType([sliceType], [$error], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	Errno.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "Temporary", name: "Temporary", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Timeout", name: "Timeout", pkg: "", type: $funcType([], [$Bool], false)}];
	ptrType$5.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "Temporary", name: "Temporary", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Timeout", name: "Timeout", pkg: "", type: $funcType([], [$Bool], false)}];
	ptrType$29.methods = [{prop: "Nano", name: "Nano", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Unix", name: "Unix", pkg: "", type: $funcType([], [$Int64, $Int64], false)}];
	mmapper.init([{prop: "Mutex", name: "", pkg: "", type: sync.Mutex, tag: ""}, {prop: "active", name: "active", pkg: "syscall", type: mapType, tag: ""}, {prop: "mmap", name: "mmap", pkg: "syscall", type: funcType, tag: ""}, {prop: "munmap", name: "munmap", pkg: "syscall", type: funcType$1, tag: ""}]);
	Timespec.init([{prop: "Sec", name: "Sec", pkg: "", type: $Int64, tag: ""}, {prop: "Nsec", name: "Nsec", pkg: "", type: $Int64, tag: ""}]);
	Stat_t.init([{prop: "Dev", name: "Dev", pkg: "", type: $Int32, tag: ""}, {prop: "Mode", name: "Mode", pkg: "", type: $Uint16, tag: ""}, {prop: "Nlink", name: "Nlink", pkg: "", type: $Uint16, tag: ""}, {prop: "Ino", name: "Ino", pkg: "", type: $Uint64, tag: ""}, {prop: "Uid", name: "Uid", pkg: "", type: $Uint32, tag: ""}, {prop: "Gid", name: "Gid", pkg: "", type: $Uint32, tag: ""}, {prop: "Rdev", name: "Rdev", pkg: "", type: $Int32, tag: ""}, {prop: "Pad_cgo_0", name: "Pad_cgo_0", pkg: "", type: arrayType$3, tag: ""}, {prop: "Atimespec", name: "Atimespec", pkg: "", type: Timespec, tag: ""}, {prop: "Mtimespec", name: "Mtimespec", pkg: "", type: Timespec, tag: ""}, {prop: "Ctimespec", name: "Ctimespec", pkg: "", type: Timespec, tag: ""}, {prop: "Birthtimespec", name: "Birthtimespec", pkg: "", type: Timespec, tag: ""}, {prop: "Size", name: "Size", pkg: "", type: $Int64, tag: ""}, {prop: "Blocks", name: "Blocks", pkg: "", type: $Int64, tag: ""}, {prop: "Blksize", name: "Blksize", pkg: "", type: $Int32, tag: ""}, {prop: "Flags", name: "Flags", pkg: "", type: $Uint32, tag: ""}, {prop: "Gen", name: "Gen", pkg: "", type: $Uint32, tag: ""}, {prop: "Lspare", name: "Lspare", pkg: "", type: $Int32, tag: ""}, {prop: "Qspare", name: "Qspare", pkg: "", type: arrayType$8, tag: ""}]);
	Dirent.init([{prop: "Ino", name: "Ino", pkg: "", type: $Uint64, tag: ""}, {prop: "Seekoff", name: "Seekoff", pkg: "", type: $Uint64, tag: ""}, {prop: "Reclen", name: "Reclen", pkg: "", type: $Uint16, tag: ""}, {prop: "Namlen", name: "Namlen", pkg: "", type: $Uint16, tag: ""}, {prop: "Type", name: "Type", pkg: "", type: $Uint8, tag: ""}, {prop: "Name", name: "Name", pkg: "", type: arrayType$10, tag: ""}, {prop: "Pad_cgo_0", name: "Pad_cgo_0", pkg: "", type: arrayType$12, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_syscall = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = errors.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		lineBuffer = sliceType.nil;
		syscallModule = null;
		envOnce = new sync.Once.ptr();
		envLock = new sync.RWMutex.ptr();
		env = false;
		warningPrinted = false;
		alreadyTriedToLoad = false;
		minusOne = -1;
		envs = runtime_envs();
		$pkg.Stdin = 0;
		$pkg.Stdout = 1;
		$pkg.Stderr = 2;
		errors$1 = $toNativeArray($kindString, ["", "operation not permitted", "no such file or directory", "no such process", "interrupted system call", "input/output error", "device not configured", "argument list too long", "exec format error", "bad file descriptor", "no child processes", "resource deadlock avoided", "cannot allocate memory", "permission denied", "bad address", "block device required", "resource busy", "file exists", "cross-device link", "operation not supported by device", "not a directory", "is a directory", "invalid argument", "too many open files in system", "too many open files", "inappropriate ioctl for device", "text file busy", "file too large", "no space left on device", "illegal seek", "read-only file system", "too many links", "broken pipe", "numerical argument out of domain", "result too large", "resource temporarily unavailable", "operation now in progress", "operation already in progress", "socket operation on non-socket", "destination address required", "message too long", "protocol wrong type for socket", "protocol not available", "protocol not supported", "socket type not supported", "operation not supported", "protocol family not supported", "address family not supported by protocol family", "address already in use", "can't assign requested address", "network is down", "network is unreachable", "network dropped connection on reset", "software caused connection abort", "connection reset by peer", "no buffer space available", "socket is already connected", "socket is not connected", "can't send after socket shutdown", "too many references: can't splice", "operation timed out", "connection refused", "too many levels of symbolic links", "file name too long", "host is down", "no route to host", "directory not empty", "too many processes", "too many users", "disc quota exceeded", "stale NFS file handle", "too many levels of remote in path", "RPC struct is bad", "RPC version wrong", "RPC prog. not avail", "program version wrong", "bad procedure for program", "no locks available", "function not implemented", "inappropriate file type or format", "authentication error", "need authenticator", "device power is off", "device error", "value too large to be stored in data type", "bad executable (or shared library)", "bad CPU type in executable", "shared library version mismatch", "malformed Mach-o file", "operation canceled", "identifier removed", "no message of desired type", "illegal byte sequence", "attribute not found", "bad message", "EMULTIHOP (Reserved)", "no message available on STREAM", "ENOLINK (Reserved)", "no STREAM resources", "not a STREAM", "protocol error", "STREAM ioctl timeout", "operation not supported on socket", "policy not found", "state not recoverable", "previous owner died"]);
		mapper = new mmapper.ptr(new sync.Mutex.ptr(), new $Map(), mmap, munmap);
		init();
		/* */ } return; } }; $init_syscall.$blocking = true; return $init_syscall;
	};
	return $pkg;
})();
$packages["github.com/gopherjs/gopherjs/nosync"] = (function() {
	var $pkg = {}, Mutex, RWMutex, Once, ptrType, ptrType$1, funcType, ptrType$3;
	Mutex = $pkg.Mutex = $newType(0, $kindStruct, "nosync.Mutex", "Mutex", "github.com/gopherjs/gopherjs/nosync", function(locked_) {
		this.$val = this;
		this.locked = locked_ !== undefined ? locked_ : false;
	});
	RWMutex = $pkg.RWMutex = $newType(0, $kindStruct, "nosync.RWMutex", "RWMutex", "github.com/gopherjs/gopherjs/nosync", function(writeLocked_, readLockCounter_) {
		this.$val = this;
		this.writeLocked = writeLocked_ !== undefined ? writeLocked_ : false;
		this.readLockCounter = readLockCounter_ !== undefined ? readLockCounter_ : 0;
	});
	Once = $pkg.Once = $newType(0, $kindStruct, "nosync.Once", "Once", "github.com/gopherjs/gopherjs/nosync", function(doing_, done_) {
		this.$val = this;
		this.doing = doing_ !== undefined ? doing_ : false;
		this.done = done_ !== undefined ? done_ : false;
	});
		ptrType = $ptrType(Mutex);
		ptrType$1 = $ptrType(RWMutex);
		funcType = $funcType([], [], false);
		ptrType$3 = $ptrType(Once);
	Mutex.ptr.prototype.Lock = function() {
		var m;
		m = this;
		if (m.locked) {
			$panic(new $String("nosync: mutex is already locked"));
		}
		m.locked = true;
	};
	Mutex.prototype.Lock = function() { return this.$val.Lock(); };
	Mutex.ptr.prototype.Unlock = function() {
		var m;
		m = this;
		if (!m.locked) {
			$panic(new $String("nosync: unlock of unlocked mutex"));
		}
		m.locked = false;
	};
	Mutex.prototype.Unlock = function() { return this.$val.Unlock(); };
	RWMutex.ptr.prototype.Lock = function() {
		var rw;
		rw = this;
		if (!((rw.readLockCounter === 0)) || rw.writeLocked) {
			$panic(new $String("nosync: mutex is already locked"));
		}
		rw.writeLocked = true;
	};
	RWMutex.prototype.Lock = function() { return this.$val.Lock(); };
	RWMutex.ptr.prototype.Unlock = function() {
		var rw;
		rw = this;
		if (!rw.writeLocked) {
			$panic(new $String("nosync: unlock of unlocked mutex"));
		}
		rw.writeLocked = false;
	};
	RWMutex.prototype.Unlock = function() { return this.$val.Unlock(); };
	RWMutex.ptr.prototype.RLock = function() {
		var rw;
		rw = this;
		if (rw.writeLocked) {
			$panic(new $String("nosync: mutex is already locked"));
		}
		rw.readLockCounter = rw.readLockCounter + (1) >> 0;
	};
	RWMutex.prototype.RLock = function() { return this.$val.RLock(); };
	RWMutex.ptr.prototype.RUnlock = function() {
		var rw;
		rw = this;
		if (rw.readLockCounter === 0) {
			$panic(new $String("nosync: unlock of unlocked mutex"));
		}
		rw.readLockCounter = rw.readLockCounter - (1) >> 0;
	};
	RWMutex.prototype.RUnlock = function() { return this.$val.RUnlock(); };
	Once.ptr.prototype.Do = function(f) {
		var $deferred = [], $err = null, o;
		/* */ try { $deferFrames.push($deferred);
		o = this;
		if (o.done) {
			return;
		}
		if (o.doing) {
			$panic(new $String("nosync: Do called within f"));
		}
		o.doing = true;
		$deferred.push([(function() {
			o.doing = false;
			o.done = true;
		}), []]);
		f();
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	Once.prototype.Do = function(f) { return this.$val.Do(f); };
	ptrType.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	ptrType$1.methods = [{prop: "Lock", name: "Lock", pkg: "", type: $funcType([], [], false)}, {prop: "RLock", name: "RLock", pkg: "", type: $funcType([], [], false)}, {prop: "RUnlock", name: "RUnlock", pkg: "", type: $funcType([], [], false)}, {prop: "Unlock", name: "Unlock", pkg: "", type: $funcType([], [], false)}];
	ptrType$3.methods = [{prop: "Do", name: "Do", pkg: "", type: $funcType([funcType], [], false)}];
	Mutex.init([{prop: "locked", name: "locked", pkg: "github.com/gopherjs/gopherjs/nosync", type: $Bool, tag: ""}]);
	RWMutex.init([{prop: "writeLocked", name: "writeLocked", pkg: "github.com/gopherjs/gopherjs/nosync", type: $Bool, tag: ""}, {prop: "readLockCounter", name: "readLockCounter", pkg: "github.com/gopherjs/gopherjs/nosync", type: $Int, tag: ""}]);
	Once.init([{prop: "doing", name: "doing", pkg: "github.com/gopherjs/gopherjs/nosync", type: $Bool, tag: ""}, {prop: "done", name: "done", pkg: "github.com/gopherjs/gopherjs/nosync", type: $Bool, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_nosync = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_nosync.$blocking = true; return $init_nosync;
	};
	return $pkg;
})();
$packages["time"] = (function() {
	var $pkg = {}, errors, js, nosync, runtime, strings, syscall, runtimeTimer, ParseError, Ticker, Time, Month, Weekday, Duration, Location, zone, zoneTrans, sliceType, sliceType$1, sliceType$2, ptrType, funcType, arrayType, sliceType$3, arrayType$1, arrayType$2, ptrType$1, chanType$1, chanType$2, funcType$1, ptrType$2, ptrType$4, ptrType$5, ptrType$6, ptrType$7, ptrType$8, std0x, longDayNames, shortDayNames, shortMonthNames, longMonthNames, atoiError, errBad, errLeadingInt, unitMap, months, days, daysBefore, utcLoc, localLoc, localOnce, zoneinfo, badData, zoneDirs, _map, _key, _tuple, initLocal, runtimeNano, now, startTimer, stopTimer, startsWithLowerCase, nextStdChunk, match, lookup, appendUint, atoi, formatNano, quote, isDigit, getnum, cutspace, skip, Parse, parse, parseTimeZone, parseGMT, parseNanoseconds, leadingInt, ParseDuration, when, sendTime, NewTicker, absWeekday, absClock, fmtFrac, fmtInt, absDate, Now, Unix, isLeap, norm, Date, div, FixedZone;
	errors = $packages["errors"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	nosync = $packages["github.com/gopherjs/gopherjs/nosync"];
	runtime = $packages["runtime"];
	strings = $packages["strings"];
	syscall = $packages["syscall"];
	runtimeTimer = $pkg.runtimeTimer = $newType(0, $kindStruct, "time.runtimeTimer", "runtimeTimer", "time", function(i_, when_, period_, f_, arg_, timeout_, active_) {
		this.$val = this;
		this.i = i_ !== undefined ? i_ : 0;
		this.when = when_ !== undefined ? when_ : new $Int64(0, 0);
		this.period = period_ !== undefined ? period_ : new $Int64(0, 0);
		this.f = f_ !== undefined ? f_ : $throwNilPointerError;
		this.arg = arg_ !== undefined ? arg_ : $ifaceNil;
		this.timeout = timeout_ !== undefined ? timeout_ : null;
		this.active = active_ !== undefined ? active_ : false;
	});
	ParseError = $pkg.ParseError = $newType(0, $kindStruct, "time.ParseError", "ParseError", "time", function(Layout_, Value_, LayoutElem_, ValueElem_, Message_) {
		this.$val = this;
		this.Layout = Layout_ !== undefined ? Layout_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.LayoutElem = LayoutElem_ !== undefined ? LayoutElem_ : "";
		this.ValueElem = ValueElem_ !== undefined ? ValueElem_ : "";
		this.Message = Message_ !== undefined ? Message_ : "";
	});
	Ticker = $pkg.Ticker = $newType(0, $kindStruct, "time.Ticker", "Ticker", "time", function(C_, r_) {
		this.$val = this;
		this.C = C_ !== undefined ? C_ : chanType$2.nil;
		this.r = r_ !== undefined ? r_ : new runtimeTimer.ptr();
	});
	Time = $pkg.Time = $newType(0, $kindStruct, "time.Time", "Time", "time", function(sec_, nsec_, loc_) {
		this.$val = this;
		this.sec = sec_ !== undefined ? sec_ : new $Int64(0, 0);
		this.nsec = nsec_ !== undefined ? nsec_ : 0;
		this.loc = loc_ !== undefined ? loc_ : ptrType$1.nil;
	});
	Month = $pkg.Month = $newType(4, $kindInt, "time.Month", "Month", "time", null);
	Weekday = $pkg.Weekday = $newType(4, $kindInt, "time.Weekday", "Weekday", "time", null);
	Duration = $pkg.Duration = $newType(8, $kindInt64, "time.Duration", "Duration", "time", null);
	Location = $pkg.Location = $newType(0, $kindStruct, "time.Location", "Location", "time", function(name_, zone_, tx_, cacheStart_, cacheEnd_, cacheZone_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : "";
		this.zone = zone_ !== undefined ? zone_ : sliceType$1.nil;
		this.tx = tx_ !== undefined ? tx_ : sliceType$2.nil;
		this.cacheStart = cacheStart_ !== undefined ? cacheStart_ : new $Int64(0, 0);
		this.cacheEnd = cacheEnd_ !== undefined ? cacheEnd_ : new $Int64(0, 0);
		this.cacheZone = cacheZone_ !== undefined ? cacheZone_ : ptrType.nil;
	});
	zone = $pkg.zone = $newType(0, $kindStruct, "time.zone", "zone", "time", function(name_, offset_, isDST_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : "";
		this.offset = offset_ !== undefined ? offset_ : 0;
		this.isDST = isDST_ !== undefined ? isDST_ : false;
	});
	zoneTrans = $pkg.zoneTrans = $newType(0, $kindStruct, "time.zoneTrans", "zoneTrans", "time", function(when_, index_, isstd_, isutc_) {
		this.$val = this;
		this.when = when_ !== undefined ? when_ : new $Int64(0, 0);
		this.index = index_ !== undefined ? index_ : 0;
		this.isstd = isstd_ !== undefined ? isstd_ : false;
		this.isutc = isutc_ !== undefined ? isutc_ : false;
	});
		sliceType = $sliceType($String);
		sliceType$1 = $sliceType(zone);
		sliceType$2 = $sliceType(zoneTrans);
		ptrType = $ptrType(zone);
		funcType = $funcType([], [], false);
		arrayType = $arrayType($Uint8, 32);
		sliceType$3 = $sliceType($Uint8);
		arrayType$1 = $arrayType($Uint8, 9);
		arrayType$2 = $arrayType($Uint8, 64);
		ptrType$1 = $ptrType(Location);
		chanType$1 = $chanType(Time, false, false);
		chanType$2 = $chanType(Time, false, true);
		funcType$1 = $funcType([$emptyInterface, $Uintptr], [], false);
		ptrType$2 = $ptrType(ParseError);
		ptrType$4 = $ptrType(Ticker);
		ptrType$5 = $ptrType(Time);
		ptrType$6 = $ptrType(Month);
		ptrType$7 = $ptrType(Weekday);
		ptrType$8 = $ptrType(Duration);
	initLocal = function() {
		var d, i, j, s;
		d = new ($global.Date)();
		s = $internalize(d, $String);
		i = strings.IndexByte(s, 40);
		j = strings.IndexByte(s, 41);
		if ((i === -1) || (j === -1)) {
			localLoc.name = "UTC";
			return;
		}
		localLoc.name = s.substring((i + 1 >> 0), j);
		localLoc.zone = new sliceType$1([new zone.ptr(localLoc.name, ($parseInt(d.getTimezoneOffset()) >> 0) * -60 >> 0, false)]);
	};
	runtimeNano = function() {
		return $mul64($internalize(new ($global.Date)().getTime(), $Int64), new $Int64(0, 1000000));
	};
	now = function() {
		var _tmp, _tmp$1, n, nsec = 0, sec = new $Int64(0, 0), x;
		n = runtimeNano();
		_tmp = $div64(n, new $Int64(0, 1000000000), false); _tmp$1 = ((x = $div64(n, new $Int64(0, 1000000000), true), x.$low + ((x.$high >> 31) * 4294967296)) >> 0); sec = _tmp; nsec = _tmp$1;
		return [sec, nsec];
	};
	startTimer = function(t) {
		var diff, x, x$1;
		t.active = true;
		diff = $div64(((x = t.when, x$1 = runtimeNano(), new $Int64(x.$high - x$1.$high, x.$low - x$1.$low))), new $Int64(0, 1000000), false);
		if ((diff.$high > 0 || (diff.$high === 0 && diff.$low > 2147483647))) {
			return;
		}
		if ((diff.$high < 0 || (diff.$high === 0 && diff.$low < 0))) {
			diff = new $Int64(0, 0);
		}
		t.timeout = $global.setTimeout($externalize((function() {
			var x$2, x$3, x$4;
			t.active = false;
			t.f(t.arg, 0);
			if (!((x$2 = t.period, (x$2.$high === 0 && x$2.$low === 0)))) {
				t.when = (x$3 = t.when, x$4 = t.period, new $Int64(x$3.$high + x$4.$high, x$3.$low + x$4.$low));
				startTimer(t);
			}
		}), funcType), $externalize(new $Int64(diff.$high + 0, diff.$low + 1), $Int64));
	};
	stopTimer = function(t) {
		var wasActive;
		$global.clearTimeout(t.timeout);
		wasActive = t.active;
		t.active = false;
		return wasActive;
	};
	startsWithLowerCase = function(str) {
		var c;
		if (str.length === 0) {
			return false;
		}
		c = str.charCodeAt(0);
		return 97 <= c && c <= 122;
	};
	nextStdChunk = function(layout) {
		var _ref, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$22, _tmp$23, _tmp$24, _tmp$25, _tmp$26, _tmp$27, _tmp$28, _tmp$29, _tmp$3, _tmp$30, _tmp$31, _tmp$32, _tmp$33, _tmp$34, _tmp$35, _tmp$36, _tmp$37, _tmp$38, _tmp$39, _tmp$4, _tmp$40, _tmp$41, _tmp$42, _tmp$43, _tmp$44, _tmp$45, _tmp$46, _tmp$47, _tmp$48, _tmp$49, _tmp$5, _tmp$50, _tmp$51, _tmp$52, _tmp$53, _tmp$54, _tmp$55, _tmp$56, _tmp$57, _tmp$58, _tmp$59, _tmp$6, _tmp$60, _tmp$61, _tmp$62, _tmp$63, _tmp$64, _tmp$65, _tmp$66, _tmp$67, _tmp$68, _tmp$69, _tmp$7, _tmp$70, _tmp$71, _tmp$72, _tmp$73, _tmp$74, _tmp$75, _tmp$76, _tmp$77, _tmp$78, _tmp$79, _tmp$8, _tmp$80, _tmp$9, c, ch, i, j, prefix = "", std = 0, std$1, suffix = "", x;
		i = 0;
		while (i < layout.length) {
			c = (layout.charCodeAt(i) >> 0);
			_ref = c;
			if (_ref === 74) {
				if (layout.length >= (i + 3 >> 0) && layout.substring(i, (i + 3 >> 0)) === "Jan") {
					if (layout.length >= (i + 7 >> 0) && layout.substring(i, (i + 7 >> 0)) === "January") {
						_tmp = layout.substring(0, i); _tmp$1 = 257; _tmp$2 = layout.substring((i + 7 >> 0)); prefix = _tmp; std = _tmp$1; suffix = _tmp$2;
						return [prefix, std, suffix];
					}
					if (!startsWithLowerCase(layout.substring((i + 3 >> 0)))) {
						_tmp$3 = layout.substring(0, i); _tmp$4 = 258; _tmp$5 = layout.substring((i + 3 >> 0)); prefix = _tmp$3; std = _tmp$4; suffix = _tmp$5;
						return [prefix, std, suffix];
					}
				}
			} else if (_ref === 77) {
				if (layout.length >= (i + 3 >> 0)) {
					if (layout.substring(i, (i + 3 >> 0)) === "Mon") {
						if (layout.length >= (i + 6 >> 0) && layout.substring(i, (i + 6 >> 0)) === "Monday") {
							_tmp$6 = layout.substring(0, i); _tmp$7 = 261; _tmp$8 = layout.substring((i + 6 >> 0)); prefix = _tmp$6; std = _tmp$7; suffix = _tmp$8;
							return [prefix, std, suffix];
						}
						if (!startsWithLowerCase(layout.substring((i + 3 >> 0)))) {
							_tmp$9 = layout.substring(0, i); _tmp$10 = 262; _tmp$11 = layout.substring((i + 3 >> 0)); prefix = _tmp$9; std = _tmp$10; suffix = _tmp$11;
							return [prefix, std, suffix];
						}
					}
					if (layout.substring(i, (i + 3 >> 0)) === "MST") {
						_tmp$12 = layout.substring(0, i); _tmp$13 = 21; _tmp$14 = layout.substring((i + 3 >> 0)); prefix = _tmp$12; std = _tmp$13; suffix = _tmp$14;
						return [prefix, std, suffix];
					}
				}
			} else if (_ref === 48) {
				if (layout.length >= (i + 2 >> 0) && 49 <= layout.charCodeAt((i + 1 >> 0)) && layout.charCodeAt((i + 1 >> 0)) <= 54) {
					_tmp$15 = layout.substring(0, i); _tmp$16 = (x = layout.charCodeAt((i + 1 >> 0)) - 49 << 24 >>> 24, ((x < 0 || x >= std0x.length) ? $throwRuntimeError("index out of range") : std0x[x])); _tmp$17 = layout.substring((i + 2 >> 0)); prefix = _tmp$15; std = _tmp$16; suffix = _tmp$17;
					return [prefix, std, suffix];
				}
			} else if (_ref === 49) {
				if (layout.length >= (i + 2 >> 0) && (layout.charCodeAt((i + 1 >> 0)) === 53)) {
					_tmp$18 = layout.substring(0, i); _tmp$19 = 522; _tmp$20 = layout.substring((i + 2 >> 0)); prefix = _tmp$18; std = _tmp$19; suffix = _tmp$20;
					return [prefix, std, suffix];
				}
				_tmp$21 = layout.substring(0, i); _tmp$22 = 259; _tmp$23 = layout.substring((i + 1 >> 0)); prefix = _tmp$21; std = _tmp$22; suffix = _tmp$23;
				return [prefix, std, suffix];
			} else if (_ref === 50) {
				if (layout.length >= (i + 4 >> 0) && layout.substring(i, (i + 4 >> 0)) === "2006") {
					_tmp$24 = layout.substring(0, i); _tmp$25 = 273; _tmp$26 = layout.substring((i + 4 >> 0)); prefix = _tmp$24; std = _tmp$25; suffix = _tmp$26;
					return [prefix, std, suffix];
				}
				_tmp$27 = layout.substring(0, i); _tmp$28 = 263; _tmp$29 = layout.substring((i + 1 >> 0)); prefix = _tmp$27; std = _tmp$28; suffix = _tmp$29;
				return [prefix, std, suffix];
			} else if (_ref === 95) {
				if (layout.length >= (i + 2 >> 0) && (layout.charCodeAt((i + 1 >> 0)) === 50)) {
					_tmp$30 = layout.substring(0, i); _tmp$31 = 264; _tmp$32 = layout.substring((i + 2 >> 0)); prefix = _tmp$30; std = _tmp$31; suffix = _tmp$32;
					return [prefix, std, suffix];
				}
			} else if (_ref === 51) {
				_tmp$33 = layout.substring(0, i); _tmp$34 = 523; _tmp$35 = layout.substring((i + 1 >> 0)); prefix = _tmp$33; std = _tmp$34; suffix = _tmp$35;
				return [prefix, std, suffix];
			} else if (_ref === 52) {
				_tmp$36 = layout.substring(0, i); _tmp$37 = 525; _tmp$38 = layout.substring((i + 1 >> 0)); prefix = _tmp$36; std = _tmp$37; suffix = _tmp$38;
				return [prefix, std, suffix];
			} else if (_ref === 53) {
				_tmp$39 = layout.substring(0, i); _tmp$40 = 527; _tmp$41 = layout.substring((i + 1 >> 0)); prefix = _tmp$39; std = _tmp$40; suffix = _tmp$41;
				return [prefix, std, suffix];
			} else if (_ref === 80) {
				if (layout.length >= (i + 2 >> 0) && (layout.charCodeAt((i + 1 >> 0)) === 77)) {
					_tmp$42 = layout.substring(0, i); _tmp$43 = 531; _tmp$44 = layout.substring((i + 2 >> 0)); prefix = _tmp$42; std = _tmp$43; suffix = _tmp$44;
					return [prefix, std, suffix];
				}
			} else if (_ref === 112) {
				if (layout.length >= (i + 2 >> 0) && (layout.charCodeAt((i + 1 >> 0)) === 109)) {
					_tmp$45 = layout.substring(0, i); _tmp$46 = 532; _tmp$47 = layout.substring((i + 2 >> 0)); prefix = _tmp$45; std = _tmp$46; suffix = _tmp$47;
					return [prefix, std, suffix];
				}
			} else if (_ref === 45) {
				if (layout.length >= (i + 7 >> 0) && layout.substring(i, (i + 7 >> 0)) === "-070000") {
					_tmp$48 = layout.substring(0, i); _tmp$49 = 27; _tmp$50 = layout.substring((i + 7 >> 0)); prefix = _tmp$48; std = _tmp$49; suffix = _tmp$50;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 9 >> 0) && layout.substring(i, (i + 9 >> 0)) === "-07:00:00") {
					_tmp$51 = layout.substring(0, i); _tmp$52 = 30; _tmp$53 = layout.substring((i + 9 >> 0)); prefix = _tmp$51; std = _tmp$52; suffix = _tmp$53;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 5 >> 0) && layout.substring(i, (i + 5 >> 0)) === "-0700") {
					_tmp$54 = layout.substring(0, i); _tmp$55 = 26; _tmp$56 = layout.substring((i + 5 >> 0)); prefix = _tmp$54; std = _tmp$55; suffix = _tmp$56;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 6 >> 0) && layout.substring(i, (i + 6 >> 0)) === "-07:00") {
					_tmp$57 = layout.substring(0, i); _tmp$58 = 29; _tmp$59 = layout.substring((i + 6 >> 0)); prefix = _tmp$57; std = _tmp$58; suffix = _tmp$59;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 3 >> 0) && layout.substring(i, (i + 3 >> 0)) === "-07") {
					_tmp$60 = layout.substring(0, i); _tmp$61 = 28; _tmp$62 = layout.substring((i + 3 >> 0)); prefix = _tmp$60; std = _tmp$61; suffix = _tmp$62;
					return [prefix, std, suffix];
				}
			} else if (_ref === 90) {
				if (layout.length >= (i + 7 >> 0) && layout.substring(i, (i + 7 >> 0)) === "Z070000") {
					_tmp$63 = layout.substring(0, i); _tmp$64 = 23; _tmp$65 = layout.substring((i + 7 >> 0)); prefix = _tmp$63; std = _tmp$64; suffix = _tmp$65;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 9 >> 0) && layout.substring(i, (i + 9 >> 0)) === "Z07:00:00") {
					_tmp$66 = layout.substring(0, i); _tmp$67 = 25; _tmp$68 = layout.substring((i + 9 >> 0)); prefix = _tmp$66; std = _tmp$67; suffix = _tmp$68;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 5 >> 0) && layout.substring(i, (i + 5 >> 0)) === "Z0700") {
					_tmp$69 = layout.substring(0, i); _tmp$70 = 22; _tmp$71 = layout.substring((i + 5 >> 0)); prefix = _tmp$69; std = _tmp$70; suffix = _tmp$71;
					return [prefix, std, suffix];
				}
				if (layout.length >= (i + 6 >> 0) && layout.substring(i, (i + 6 >> 0)) === "Z07:00") {
					_tmp$72 = layout.substring(0, i); _tmp$73 = 24; _tmp$74 = layout.substring((i + 6 >> 0)); prefix = _tmp$72; std = _tmp$73; suffix = _tmp$74;
					return [prefix, std, suffix];
				}
			} else if (_ref === 46) {
				if ((i + 1 >> 0) < layout.length && ((layout.charCodeAt((i + 1 >> 0)) === 48) || (layout.charCodeAt((i + 1 >> 0)) === 57))) {
					ch = layout.charCodeAt((i + 1 >> 0));
					j = i + 1 >> 0;
					while (j < layout.length && (layout.charCodeAt(j) === ch)) {
						j = j + (1) >> 0;
					}
					if (!isDigit(layout, j)) {
						std$1 = 31;
						if (layout.charCodeAt((i + 1 >> 0)) === 57) {
							std$1 = 32;
						}
						std$1 = std$1 | ((((j - ((i + 1 >> 0)) >> 0)) << 16 >> 0));
						_tmp$75 = layout.substring(0, i); _tmp$76 = std$1; _tmp$77 = layout.substring(j); prefix = _tmp$75; std = _tmp$76; suffix = _tmp$77;
						return [prefix, std, suffix];
					}
				}
			}
			i = i + (1) >> 0;
		}
		_tmp$78 = layout; _tmp$79 = 0; _tmp$80 = ""; prefix = _tmp$78; std = _tmp$79; suffix = _tmp$80;
		return [prefix, std, suffix];
	};
	match = function(s1, s2) {
		var c1, c2, i;
		i = 0;
		while (i < s1.length) {
			c1 = s1.charCodeAt(i);
			c2 = s2.charCodeAt(i);
			if (!((c1 === c2))) {
				c1 = (c1 | (32)) >>> 0;
				c2 = (c2 | (32)) >>> 0;
				if (!((c1 === c2)) || c1 < 97 || c1 > 122) {
					return false;
				}
			}
			i = i + (1) >> 0;
		}
		return true;
	};
	lookup = function(tab, val) {
		var _i, _ref, i, v;
		_ref = tab;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			v = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (val.length >= v.length && match(val.substring(0, v.length), v)) {
				return [i, val.substring(v.length), $ifaceNil];
			}
			_i++;
		}
		return [-1, val, errBad];
	};
	appendUint = function(b, x, pad) {
		var _q, _q$1, _r, _r$1, buf, n;
		if (x < 10) {
			if (!((pad === 0))) {
				b = $append(b, pad);
			}
			return $append(b, ((48 + x >>> 0) << 24 >>> 24));
		}
		if (x < 100) {
			b = $append(b, ((48 + (_q = x / 10, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero")) >>> 0) << 24 >>> 24));
			b = $append(b, ((48 + (_r = x % 10, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) >>> 0) << 24 >>> 24));
			return b;
		}
		buf = $clone(arrayType.zero(), arrayType);
		n = 32;
		if (x === 0) {
			return $append(b, 48);
		}
		while (x >= 10) {
			n = n - (1) >> 0;
			(n < 0 || n >= buf.length) ? $throwRuntimeError("index out of range") : buf[n] = (((_r$1 = x % 10, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero")) + 48 >>> 0) << 24 >>> 24);
			x = (_q$1 = x / (10), (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >>> 0 : $throwRuntimeError("integer divide by zero"));
		}
		n = n - (1) >> 0;
		(n < 0 || n >= buf.length) ? $throwRuntimeError("index out of range") : buf[n] = ((x + 48 >>> 0) << 24 >>> 24);
		return $appendSlice(b, $subslice(new sliceType$3(buf), n));
	};
	atoi = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple$1, err = $ifaceNil, neg, q, rem, x = 0;
		neg = false;
		if (!(s === "") && ((s.charCodeAt(0) === 45) || (s.charCodeAt(0) === 43))) {
			neg = s.charCodeAt(0) === 45;
			s = s.substring(1);
		}
		_tuple$1 = leadingInt(s); q = _tuple$1[0]; rem = _tuple$1[1]; err = _tuple$1[2];
		x = ((q.$low + ((q.$high >> 31) * 4294967296)) >> 0);
		if (!($interfaceIsEqual(err, $ifaceNil)) || !(rem === "")) {
			_tmp = 0; _tmp$1 = atoiError; x = _tmp; err = _tmp$1;
			return [x, err];
		}
		if (neg) {
			x = -x;
		}
		_tmp$2 = x; _tmp$3 = $ifaceNil; x = _tmp$2; err = _tmp$3;
		return [x, err];
	};
	formatNano = function(b, nanosec, n, trim) {
		var _q, _r, buf, start, u, x;
		u = nanosec;
		buf = $clone(arrayType$1.zero(), arrayType$1);
		start = 9;
		while (start > 0) {
			start = start - (1) >> 0;
			(start < 0 || start >= buf.length) ? $throwRuntimeError("index out of range") : buf[start] = (((_r = u % 10, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) + 48 >>> 0) << 24 >>> 24);
			u = (_q = u / (10), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >>> 0 : $throwRuntimeError("integer divide by zero"));
		}
		if (n > 9) {
			n = 9;
		}
		if (trim) {
			while (n > 0 && ((x = n - 1 >> 0, ((x < 0 || x >= buf.length) ? $throwRuntimeError("index out of range") : buf[x])) === 48)) {
				n = n - (1) >> 0;
			}
			if (n === 0) {
				return b;
			}
		}
		b = $append(b, 46);
		return $appendSlice(b, $subslice(new sliceType$3(buf), 0, n));
	};
	Time.ptr.prototype.String = function() {
		var t;
		t = $clone(this, Time);
		return t.Format("2006-01-02 15:04:05.999999999 -0700 MST");
	};
	Time.prototype.String = function() { return this.$val.String(); };
	Time.ptr.prototype.Format = function(layout) {
		var _q, _q$1, _q$2, _q$3, _r, _r$1, _r$2, _r$3, _r$4, _r$5, _ref, _tuple$1, _tuple$2, _tuple$3, _tuple$4, abs, absoffset, b, buf, day, hour, hr, hr$1, m, max, min, month, name, offset, prefix, s, sec, std, suffix, t, y, y$1, year, zone$1, zone$2;
		t = $clone(this, Time);
		_tuple$1 = t.locabs(); name = _tuple$1[0]; offset = _tuple$1[1]; abs = _tuple$1[2];
		year = -1;
		month = 0;
		day = 0;
		hour = -1;
		min = 0;
		sec = 0;
		b = sliceType$3.nil;
		buf = $clone(arrayType$2.zero(), arrayType$2);
		max = layout.length + 10 >> 0;
		if (max <= 64) {
			b = $subslice(new sliceType$3(buf), 0, 0);
		} else {
			b = $makeSlice(sliceType$3, 0, max);
		}
		while (!(layout === "")) {
			_tuple$2 = nextStdChunk(layout); prefix = _tuple$2[0]; std = _tuple$2[1]; suffix = _tuple$2[2];
			if (!(prefix === "")) {
				b = $appendSlice(b, new sliceType$3($stringToBytes(prefix)));
			}
			if (std === 0) {
				break;
			}
			layout = suffix;
			if (year < 0 && !(((std & 256) === 0))) {
				_tuple$3 = absDate(abs, true); year = _tuple$3[0]; month = _tuple$3[1]; day = _tuple$3[2];
			}
			if (hour < 0 && !(((std & 512) === 0))) {
				_tuple$4 = absClock(abs); hour = _tuple$4[0]; min = _tuple$4[1]; sec = _tuple$4[2];
			}
			_ref = std & 65535;
			switch (0) { default: if (_ref === 274) {
				y = year;
				if (y < 0) {
					y = -y;
				}
				b = appendUint(b, ((_r = y % 100, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
			} else if (_ref === 273) {
				y$1 = year;
				if (year <= -1000) {
					b = $append(b, 45);
					y$1 = -y$1;
				} else if (year <= -100) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("-0")));
					y$1 = -y$1;
				} else if (year <= -10) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("-00")));
					y$1 = -y$1;
				} else if (year < 0) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("-000")));
					y$1 = -y$1;
				} else if (year < 10) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("000")));
				} else if (year < 100) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("00")));
				} else if (year < 1000) {
					b = $append(b, 48);
				}
				b = appendUint(b, (y$1 >>> 0), 0);
			} else if (_ref === 258) {
				b = $appendSlice(b, new sliceType$3($stringToBytes(new Month(month).String().substring(0, 3))));
			} else if (_ref === 257) {
				m = new Month(month).String();
				b = $appendSlice(b, new sliceType$3($stringToBytes(m)));
			} else if (_ref === 259) {
				b = appendUint(b, (month >>> 0), 0);
			} else if (_ref === 260) {
				b = appendUint(b, (month >>> 0), 48);
			} else if (_ref === 262) {
				b = $appendSlice(b, new sliceType$3($stringToBytes(new Weekday(absWeekday(abs)).String().substring(0, 3))));
			} else if (_ref === 261) {
				s = new Weekday(absWeekday(abs)).String();
				b = $appendSlice(b, new sliceType$3($stringToBytes(s)));
			} else if (_ref === 263) {
				b = appendUint(b, (day >>> 0), 0);
			} else if (_ref === 264) {
				b = appendUint(b, (day >>> 0), 32);
			} else if (_ref === 265) {
				b = appendUint(b, (day >>> 0), 48);
			} else if (_ref === 522) {
				b = appendUint(b, (hour >>> 0), 48);
			} else if (_ref === 523) {
				hr = (_r$1 = hour % 12, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero"));
				if (hr === 0) {
					hr = 12;
				}
				b = appendUint(b, (hr >>> 0), 0);
			} else if (_ref === 524) {
				hr$1 = (_r$2 = hour % 12, _r$2 === _r$2 ? _r$2 : $throwRuntimeError("integer divide by zero"));
				if (hr$1 === 0) {
					hr$1 = 12;
				}
				b = appendUint(b, (hr$1 >>> 0), 48);
			} else if (_ref === 525) {
				b = appendUint(b, (min >>> 0), 0);
			} else if (_ref === 526) {
				b = appendUint(b, (min >>> 0), 48);
			} else if (_ref === 527) {
				b = appendUint(b, (sec >>> 0), 0);
			} else if (_ref === 528) {
				b = appendUint(b, (sec >>> 0), 48);
			} else if (_ref === 531) {
				if (hour >= 12) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("PM")));
				} else {
					b = $appendSlice(b, new sliceType$3($stringToBytes("AM")));
				}
			} else if (_ref === 532) {
				if (hour >= 12) {
					b = $appendSlice(b, new sliceType$3($stringToBytes("pm")));
				} else {
					b = $appendSlice(b, new sliceType$3($stringToBytes("am")));
				}
			} else if (_ref === 22 || _ref === 24 || _ref === 23 || _ref === 25 || _ref === 26 || _ref === 29 || _ref === 27 || _ref === 30) {
				if ((offset === 0) && ((std === 22) || (std === 24) || (std === 23) || (std === 25))) {
					b = $append(b, 90);
					break;
				}
				zone$1 = (_q = offset / 60, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
				absoffset = offset;
				if (zone$1 < 0) {
					b = $append(b, 45);
					zone$1 = -zone$1;
					absoffset = -absoffset;
				} else {
					b = $append(b, 43);
				}
				b = appendUint(b, ((_q$1 = zone$1 / 60, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
				if ((std === 24) || (std === 29) || (std === 25) || (std === 30)) {
					b = $append(b, 58);
				}
				b = appendUint(b, ((_r$3 = zone$1 % 60, _r$3 === _r$3 ? _r$3 : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
				if ((std === 23) || (std === 27) || (std === 30) || (std === 25)) {
					if ((std === 30) || (std === 25)) {
						b = $append(b, 58);
					}
					b = appendUint(b, ((_r$4 = absoffset % 60, _r$4 === _r$4 ? _r$4 : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
				}
			} else if (_ref === 21) {
				if (!(name === "")) {
					b = $appendSlice(b, new sliceType$3($stringToBytes(name)));
					break;
				}
				zone$2 = (_q$2 = offset / 60, (_q$2 === _q$2 && _q$2 !== 1/0 && _q$2 !== -1/0) ? _q$2 >> 0 : $throwRuntimeError("integer divide by zero"));
				if (zone$2 < 0) {
					b = $append(b, 45);
					zone$2 = -zone$2;
				} else {
					b = $append(b, 43);
				}
				b = appendUint(b, ((_q$3 = zone$2 / 60, (_q$3 === _q$3 && _q$3 !== 1/0 && _q$3 !== -1/0) ? _q$3 >> 0 : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
				b = appendUint(b, ((_r$5 = zone$2 % 60, _r$5 === _r$5 ? _r$5 : $throwRuntimeError("integer divide by zero")) >>> 0), 48);
			} else if (_ref === 31 || _ref === 32) {
				b = formatNano(b, (t.Nanosecond() >>> 0), std >> 16 >> 0, (std & 65535) === 32);
			} }
		}
		return $bytesToString(b);
	};
	Time.prototype.Format = function(layout) { return this.$val.Format(layout); };
	quote = function(s) {
		return "\"" + s + "\"";
	};
	ParseError.ptr.prototype.Error = function() {
		var e;
		e = this;
		if (e.Message === "") {
			return "parsing time " + quote(e.Value) + " as " + quote(e.Layout) + ": cannot parse " + quote(e.ValueElem) + " as " + quote(e.LayoutElem);
		}
		return "parsing time " + quote(e.Value) + e.Message;
	};
	ParseError.prototype.Error = function() { return this.$val.Error(); };
	isDigit = function(s, i) {
		var c;
		if (s.length <= i) {
			return false;
		}
		c = s.charCodeAt(i);
		return 48 <= c && c <= 57;
	};
	getnum = function(s, fixed) {
		if (!isDigit(s, 0)) {
			return [0, s, errBad];
		}
		if (!isDigit(s, 1)) {
			if (fixed) {
				return [0, s, errBad];
			}
			return [((s.charCodeAt(0) - 48 << 24 >>> 24) >> 0), s.substring(1), $ifaceNil];
		}
		return [(((s.charCodeAt(0) - 48 << 24 >>> 24) >> 0) * 10 >> 0) + ((s.charCodeAt(1) - 48 << 24 >>> 24) >> 0) >> 0, s.substring(2), $ifaceNil];
	};
	cutspace = function(s) {
		while (s.length > 0 && (s.charCodeAt(0) === 32)) {
			s = s.substring(1);
		}
		return s;
	};
	skip = function(value, prefix) {
		while (prefix.length > 0) {
			if (prefix.charCodeAt(0) === 32) {
				if (value.length > 0 && !((value.charCodeAt(0) === 32))) {
					return [value, errBad];
				}
				prefix = cutspace(prefix);
				value = cutspace(value);
				continue;
			}
			if ((value.length === 0) || !((value.charCodeAt(0) === prefix.charCodeAt(0)))) {
				return [value, errBad];
			}
			prefix = prefix.substring(1);
			value = value.substring(1);
		}
		return [value, $ifaceNil];
	};
	Parse = $pkg.Parse = function(layout, value) {
		return parse(layout, value, $pkg.UTC, $pkg.Local);
	};
	parse = function(layout, value, defaultLocation, local) {
		var _ref, _ref$1, _ref$2, _ref$3, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$22, _tmp$23, _tmp$24, _tmp$25, _tmp$26, _tmp$27, _tmp$28, _tmp$29, _tmp$3, _tmp$30, _tmp$31, _tmp$32, _tmp$33, _tmp$34, _tmp$35, _tmp$36, _tmp$37, _tmp$38, _tmp$39, _tmp$4, _tmp$40, _tmp$41, _tmp$42, _tmp$43, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple$1, _tuple$10, _tuple$11, _tuple$12, _tuple$13, _tuple$14, _tuple$15, _tuple$16, _tuple$17, _tuple$18, _tuple$19, _tuple$2, _tuple$20, _tuple$21, _tuple$22, _tuple$23, _tuple$24, _tuple$25, _tuple$3, _tuple$4, _tuple$5, _tuple$6, _tuple$7, _tuple$8, _tuple$9, alayout, amSet, avalue, day, err, hour, hour$1, hr, i, min, min$1, mm, month, n, n$1, name, ndigit, nsec, offset, offset$1, ok, ok$1, p, pmSet, prefix, rangeErrString, sec, seconds, sign, ss, std, stdstr, suffix, t, t$1, x, x$1, x$2, x$3, x$4, x$5, year, z, zoneName, zoneOffset;
		_tmp = layout; _tmp$1 = value; alayout = _tmp; avalue = _tmp$1;
		rangeErrString = "";
		amSet = false;
		pmSet = false;
		year = 0;
		month = 1;
		day = 1;
		hour = 0;
		min = 0;
		sec = 0;
		nsec = 0;
		z = ptrType$1.nil;
		zoneOffset = -1;
		zoneName = "";
		while (true) {
			err = $ifaceNil;
			_tuple$1 = nextStdChunk(layout); prefix = _tuple$1[0]; std = _tuple$1[1]; suffix = _tuple$1[2];
			stdstr = layout.substring(prefix.length, (layout.length - suffix.length >> 0));
			_tuple$2 = skip(value, prefix); value = _tuple$2[0]; err = _tuple$2[1];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return [new Time.ptr(new $Int64(0, 0), 0, ptrType$1.nil), new ParseError.ptr(alayout, avalue, prefix, value, "")];
			}
			if (std === 0) {
				if (!((value.length === 0))) {
					return [new Time.ptr(new $Int64(0, 0), 0, ptrType$1.nil), new ParseError.ptr(alayout, avalue, "", value, ": extra text: " + value)];
				}
				break;
			}
			layout = suffix;
			p = "";
			_ref = std & 65535;
			switch (0) { default: if (_ref === 274) {
				if (value.length < 2) {
					err = errBad;
					break;
				}
				_tmp$2 = value.substring(0, 2); _tmp$3 = value.substring(2); p = _tmp$2; value = _tmp$3;
				_tuple$3 = atoi(p); year = _tuple$3[0]; err = _tuple$3[1];
				if (year >= 69) {
					year = year + (1900) >> 0;
				} else {
					year = year + (2000) >> 0;
				}
			} else if (_ref === 273) {
				if (value.length < 4 || !isDigit(value, 0)) {
					err = errBad;
					break;
				}
				_tmp$4 = value.substring(0, 4); _tmp$5 = value.substring(4); p = _tmp$4; value = _tmp$5;
				_tuple$4 = atoi(p); year = _tuple$4[0]; err = _tuple$4[1];
			} else if (_ref === 258) {
				_tuple$5 = lookup(shortMonthNames, value); month = _tuple$5[0]; value = _tuple$5[1]; err = _tuple$5[2];
			} else if (_ref === 257) {
				_tuple$6 = lookup(longMonthNames, value); month = _tuple$6[0]; value = _tuple$6[1]; err = _tuple$6[2];
			} else if (_ref === 259 || _ref === 260) {
				_tuple$7 = getnum(value, std === 260); month = _tuple$7[0]; value = _tuple$7[1]; err = _tuple$7[2];
				if (month <= 0 || 12 < month) {
					rangeErrString = "month";
				}
			} else if (_ref === 262) {
				_tuple$8 = lookup(shortDayNames, value); value = _tuple$8[1]; err = _tuple$8[2];
			} else if (_ref === 261) {
				_tuple$9 = lookup(longDayNames, value); value = _tuple$9[1]; err = _tuple$9[2];
			} else if (_ref === 263 || _ref === 264 || _ref === 265) {
				if ((std === 264) && value.length > 0 && (value.charCodeAt(0) === 32)) {
					value = value.substring(1);
				}
				_tuple$10 = getnum(value, std === 265); day = _tuple$10[0]; value = _tuple$10[1]; err = _tuple$10[2];
				if (day < 0 || 31 < day) {
					rangeErrString = "day";
				}
			} else if (_ref === 522) {
				_tuple$11 = getnum(value, false); hour = _tuple$11[0]; value = _tuple$11[1]; err = _tuple$11[2];
				if (hour < 0 || 24 <= hour) {
					rangeErrString = "hour";
				}
			} else if (_ref === 523 || _ref === 524) {
				_tuple$12 = getnum(value, std === 524); hour = _tuple$12[0]; value = _tuple$12[1]; err = _tuple$12[2];
				if (hour < 0 || 12 < hour) {
					rangeErrString = "hour";
				}
			} else if (_ref === 525 || _ref === 526) {
				_tuple$13 = getnum(value, std === 526); min = _tuple$13[0]; value = _tuple$13[1]; err = _tuple$13[2];
				if (min < 0 || 60 <= min) {
					rangeErrString = "minute";
				}
			} else if (_ref === 527 || _ref === 528) {
				_tuple$14 = getnum(value, std === 528); sec = _tuple$14[0]; value = _tuple$14[1]; err = _tuple$14[2];
				if (sec < 0 || 60 <= sec) {
					rangeErrString = "second";
				}
				if (value.length >= 2 && (value.charCodeAt(0) === 46) && isDigit(value, 1)) {
					_tuple$15 = nextStdChunk(layout); std = _tuple$15[1];
					std = std & (65535);
					if ((std === 31) || (std === 32)) {
						break;
					}
					n = 2;
					while (n < value.length && isDigit(value, n)) {
						n = n + (1) >> 0;
					}
					_tuple$16 = parseNanoseconds(value, n); nsec = _tuple$16[0]; rangeErrString = _tuple$16[1]; err = _tuple$16[2];
					value = value.substring(n);
				}
			} else if (_ref === 531) {
				if (value.length < 2) {
					err = errBad;
					break;
				}
				_tmp$6 = value.substring(0, 2); _tmp$7 = value.substring(2); p = _tmp$6; value = _tmp$7;
				_ref$1 = p;
				if (_ref$1 === "PM") {
					pmSet = true;
				} else if (_ref$1 === "AM") {
					amSet = true;
				} else {
					err = errBad;
				}
			} else if (_ref === 532) {
				if (value.length < 2) {
					err = errBad;
					break;
				}
				_tmp$8 = value.substring(0, 2); _tmp$9 = value.substring(2); p = _tmp$8; value = _tmp$9;
				_ref$2 = p;
				if (_ref$2 === "pm") {
					pmSet = true;
				} else if (_ref$2 === "am") {
					amSet = true;
				} else {
					err = errBad;
				}
			} else if (_ref === 22 || _ref === 24 || _ref === 23 || _ref === 25 || _ref === 26 || _ref === 28 || _ref === 29 || _ref === 27 || _ref === 30) {
				if (((std === 22) || (std === 24)) && value.length >= 1 && (value.charCodeAt(0) === 90)) {
					value = value.substring(1);
					z = $pkg.UTC;
					break;
				}
				_tmp$10 = ""; _tmp$11 = ""; _tmp$12 = ""; _tmp$13 = ""; sign = _tmp$10; hour$1 = _tmp$11; min$1 = _tmp$12; seconds = _tmp$13;
				if ((std === 24) || (std === 29)) {
					if (value.length < 6) {
						err = errBad;
						break;
					}
					if (!((value.charCodeAt(3) === 58))) {
						err = errBad;
						break;
					}
					_tmp$14 = value.substring(0, 1); _tmp$15 = value.substring(1, 3); _tmp$16 = value.substring(4, 6); _tmp$17 = "00"; _tmp$18 = value.substring(6); sign = _tmp$14; hour$1 = _tmp$15; min$1 = _tmp$16; seconds = _tmp$17; value = _tmp$18;
				} else if (std === 28) {
					if (value.length < 3) {
						err = errBad;
						break;
					}
					_tmp$19 = value.substring(0, 1); _tmp$20 = value.substring(1, 3); _tmp$21 = "00"; _tmp$22 = "00"; _tmp$23 = value.substring(3); sign = _tmp$19; hour$1 = _tmp$20; min$1 = _tmp$21; seconds = _tmp$22; value = _tmp$23;
				} else if ((std === 25) || (std === 30)) {
					if (value.length < 9) {
						err = errBad;
						break;
					}
					if (!((value.charCodeAt(3) === 58)) || !((value.charCodeAt(6) === 58))) {
						err = errBad;
						break;
					}
					_tmp$24 = value.substring(0, 1); _tmp$25 = value.substring(1, 3); _tmp$26 = value.substring(4, 6); _tmp$27 = value.substring(7, 9); _tmp$28 = value.substring(9); sign = _tmp$24; hour$1 = _tmp$25; min$1 = _tmp$26; seconds = _tmp$27; value = _tmp$28;
				} else if ((std === 23) || (std === 27)) {
					if (value.length < 7) {
						err = errBad;
						break;
					}
					_tmp$29 = value.substring(0, 1); _tmp$30 = value.substring(1, 3); _tmp$31 = value.substring(3, 5); _tmp$32 = value.substring(5, 7); _tmp$33 = value.substring(7); sign = _tmp$29; hour$1 = _tmp$30; min$1 = _tmp$31; seconds = _tmp$32; value = _tmp$33;
				} else {
					if (value.length < 5) {
						err = errBad;
						break;
					}
					_tmp$34 = value.substring(0, 1); _tmp$35 = value.substring(1, 3); _tmp$36 = value.substring(3, 5); _tmp$37 = "00"; _tmp$38 = value.substring(5); sign = _tmp$34; hour$1 = _tmp$35; min$1 = _tmp$36; seconds = _tmp$37; value = _tmp$38;
				}
				_tmp$39 = 0; _tmp$40 = 0; _tmp$41 = 0; hr = _tmp$39; mm = _tmp$40; ss = _tmp$41;
				_tuple$17 = atoi(hour$1); hr = _tuple$17[0]; err = _tuple$17[1];
				if ($interfaceIsEqual(err, $ifaceNil)) {
					_tuple$18 = atoi(min$1); mm = _tuple$18[0]; err = _tuple$18[1];
				}
				if ($interfaceIsEqual(err, $ifaceNil)) {
					_tuple$19 = atoi(seconds); ss = _tuple$19[0]; err = _tuple$19[1];
				}
				zoneOffset = ((((hr * 60 >> 0) + mm >> 0)) * 60 >> 0) + ss >> 0;
				_ref$3 = sign.charCodeAt(0);
				if (_ref$3 === 43) {
				} else if (_ref$3 === 45) {
					zoneOffset = -zoneOffset;
				} else {
					err = errBad;
				}
			} else if (_ref === 21) {
				if (value.length >= 3 && value.substring(0, 3) === "UTC") {
					z = $pkg.UTC;
					value = value.substring(3);
					break;
				}
				_tuple$20 = parseTimeZone(value); n$1 = _tuple$20[0]; ok = _tuple$20[1];
				if (!ok) {
					err = errBad;
					break;
				}
				_tmp$42 = value.substring(0, n$1); _tmp$43 = value.substring(n$1); zoneName = _tmp$42; value = _tmp$43;
			} else if (_ref === 31) {
				ndigit = 1 + ((std >> 16 >> 0)) >> 0;
				if (value.length < ndigit) {
					err = errBad;
					break;
				}
				_tuple$21 = parseNanoseconds(value, ndigit); nsec = _tuple$21[0]; rangeErrString = _tuple$21[1]; err = _tuple$21[2];
				value = value.substring(ndigit);
			} else if (_ref === 32) {
				if (value.length < 2 || !((value.charCodeAt(0) === 46)) || value.charCodeAt(1) < 48 || 57 < value.charCodeAt(1)) {
					break;
				}
				i = 0;
				while (i < 9 && (i + 1 >> 0) < value.length && 48 <= value.charCodeAt((i + 1 >> 0)) && value.charCodeAt((i + 1 >> 0)) <= 57) {
					i = i + (1) >> 0;
				}
				_tuple$22 = parseNanoseconds(value, 1 + i >> 0); nsec = _tuple$22[0]; rangeErrString = _tuple$22[1]; err = _tuple$22[2];
				value = value.substring((1 + i >> 0));
			} }
			if (!(rangeErrString === "")) {
				return [new Time.ptr(new $Int64(0, 0), 0, ptrType$1.nil), new ParseError.ptr(alayout, avalue, stdstr, value, ": " + rangeErrString + " out of range")];
			}
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return [new Time.ptr(new $Int64(0, 0), 0, ptrType$1.nil), new ParseError.ptr(alayout, avalue, stdstr, value, "")];
			}
		}
		if (pmSet && hour < 12) {
			hour = hour + (12) >> 0;
		} else if (amSet && (hour === 12)) {
			hour = 0;
		}
		if (!(z === ptrType$1.nil)) {
			return [Date(year, (month >> 0), day, hour, min, sec, nsec, z), $ifaceNil];
		}
		if (!((zoneOffset === -1))) {
			t = $clone(Date(year, (month >> 0), day, hour, min, sec, nsec, $pkg.UTC), Time);
			t.sec = (x = t.sec, x$1 = new $Int64(0, zoneOffset), new $Int64(x.$high - x$1.$high, x.$low - x$1.$low));
			_tuple$23 = local.lookup((x$2 = t.sec, new $Int64(x$2.$high + -15, x$2.$low + 2288912640))); name = _tuple$23[0]; offset = _tuple$23[1];
			if ((offset === zoneOffset) && (zoneName === "" || name === zoneName)) {
				t.loc = local;
				return [t, $ifaceNil];
			}
			t.loc = FixedZone(zoneName, zoneOffset);
			return [t, $ifaceNil];
		}
		if (!(zoneName === "")) {
			t$1 = $clone(Date(year, (month >> 0), day, hour, min, sec, nsec, $pkg.UTC), Time);
			_tuple$24 = local.lookupName(zoneName, (x$3 = t$1.sec, new $Int64(x$3.$high + -15, x$3.$low + 2288912640))); offset$1 = _tuple$24[0]; ok$1 = _tuple$24[2];
			if (ok$1) {
				t$1.sec = (x$4 = t$1.sec, x$5 = new $Int64(0, offset$1), new $Int64(x$4.$high - x$5.$high, x$4.$low - x$5.$low));
				t$1.loc = local;
				return [t$1, $ifaceNil];
			}
			if (zoneName.length > 3 && zoneName.substring(0, 3) === "GMT") {
				_tuple$25 = atoi(zoneName.substring(3)); offset$1 = _tuple$25[0];
				offset$1 = offset$1 * (3600) >> 0;
			}
			t$1.loc = FixedZone(zoneName, offset$1);
			return [t$1, $ifaceNil];
		}
		return [Date(year, (month >> 0), day, hour, min, sec, nsec, defaultLocation), $ifaceNil];
	};
	parseTimeZone = function(value) {
		var _ref, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, c, length = 0, nUpper, ok = false;
		if (value.length < 3) {
			_tmp = 0; _tmp$1 = false; length = _tmp; ok = _tmp$1;
			return [length, ok];
		}
		if (value.length >= 4 && (value.substring(0, 4) === "ChST" || value.substring(0, 4) === "MeST")) {
			_tmp$2 = 4; _tmp$3 = true; length = _tmp$2; ok = _tmp$3;
			return [length, ok];
		}
		if (value.substring(0, 3) === "GMT") {
			length = parseGMT(value);
			_tmp$4 = length; _tmp$5 = true; length = _tmp$4; ok = _tmp$5;
			return [length, ok];
		}
		nUpper = 0;
		nUpper = 0;
		while (nUpper < 6) {
			if (nUpper >= value.length) {
				break;
			}
			c = value.charCodeAt(nUpper);
			if (c < 65 || 90 < c) {
				break;
			}
			nUpper = nUpper + (1) >> 0;
		}
		_ref = nUpper;
		if (_ref === 0 || _ref === 1 || _ref === 2 || _ref === 6) {
			_tmp$6 = 0; _tmp$7 = false; length = _tmp$6; ok = _tmp$7;
			return [length, ok];
		} else if (_ref === 5) {
			if (value.charCodeAt(4) === 84) {
				_tmp$8 = 5; _tmp$9 = true; length = _tmp$8; ok = _tmp$9;
				return [length, ok];
			}
		} else if (_ref === 4) {
			if (value.charCodeAt(3) === 84) {
				_tmp$10 = 4; _tmp$11 = true; length = _tmp$10; ok = _tmp$11;
				return [length, ok];
			}
		} else if (_ref === 3) {
			_tmp$12 = 3; _tmp$13 = true; length = _tmp$12; ok = _tmp$13;
			return [length, ok];
		}
		_tmp$14 = 0; _tmp$15 = false; length = _tmp$14; ok = _tmp$15;
		return [length, ok];
	};
	parseGMT = function(value) {
		var _tuple$1, err, rem, sign, x;
		value = value.substring(3);
		if (value.length === 0) {
			return 3;
		}
		sign = value.charCodeAt(0);
		if (!((sign === 45)) && !((sign === 43))) {
			return 3;
		}
		_tuple$1 = leadingInt(value.substring(1)); x = _tuple$1[0]; rem = _tuple$1[1]; err = _tuple$1[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return 3;
		}
		if (sign === 45) {
			x = new $Int64(-x.$high, -x.$low);
		}
		if ((x.$high === 0 && x.$low === 0) || (x.$high < -1 || (x.$high === -1 && x.$low < 4294967282)) || (0 < x.$high || (0 === x.$high && 12 < x.$low))) {
			return 3;
		}
		return (3 + value.length >> 0) - rem.length >> 0;
	};
	parseNanoseconds = function(value, nbytes) {
		var _tuple$1, err = $ifaceNil, i, ns = 0, rangeErrString = "", scaleDigits;
		if (!((value.charCodeAt(0) === 46))) {
			err = errBad;
			return [ns, rangeErrString, err];
		}
		_tuple$1 = atoi(value.substring(1, nbytes)); ns = _tuple$1[0]; err = _tuple$1[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [ns, rangeErrString, err];
		}
		if (ns < 0 || 1000000000 <= ns) {
			rangeErrString = "fractional second";
			return [ns, rangeErrString, err];
		}
		scaleDigits = 10 - nbytes >> 0;
		i = 0;
		while (i < scaleDigits) {
			ns = ns * (10) >> 0;
			i = i + (1) >> 0;
		}
		return [ns, rangeErrString, err];
	};
	leadingInt = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, c, err = $ifaceNil, i, rem = "", x = new $Int64(0, 0), x$1, x$2, x$3;
		i = 0;
		while (i < s.length) {
			c = s.charCodeAt(i);
			if (c < 48 || c > 57) {
				break;
			}
			if ((x.$high > 214748364 || (x.$high === 214748364 && x.$low >= 3435973835))) {
				_tmp = new $Int64(0, 0); _tmp$1 = ""; _tmp$2 = errLeadingInt; x = _tmp; rem = _tmp$1; err = _tmp$2;
				return [x, rem, err];
			}
			x = (x$1 = (x$2 = $mul64(x, new $Int64(0, 10)), x$3 = new $Int64(0, c), new $Int64(x$2.$high + x$3.$high, x$2.$low + x$3.$low)), new $Int64(x$1.$high - 0, x$1.$low - 48));
			i = i + (1) >> 0;
		}
		_tmp$3 = x; _tmp$4 = s.substring(i); _tmp$5 = $ifaceNil; x = _tmp$3; rem = _tmp$4; err = _tmp$5;
		return [x, rem, err];
	};
	ParseDuration = $pkg.ParseDuration = function(s) {
		var _entry, _tuple$1, _tuple$2, _tuple$3, c, c$1, err, f, g, i, n, neg, ok, orig, pl, pl$1, post, pre, scale, u, unit, x;
		orig = s;
		f = 0;
		neg = false;
		if (!(s === "")) {
			c = s.charCodeAt(0);
			if ((c === 45) || (c === 43)) {
				neg = c === 45;
				s = s.substring(1);
			}
		}
		if (s === "0") {
			return [new Duration(0, 0), $ifaceNil];
		}
		if (s === "") {
			return [new Duration(0, 0), errors.New("time: invalid duration " + orig)];
		}
		while (!(s === "")) {
			g = 0;
			x = new $Int64(0, 0);
			err = $ifaceNil;
			if (!((s.charCodeAt(0) === 46) || (48 <= s.charCodeAt(0) && s.charCodeAt(0) <= 57))) {
				return [new Duration(0, 0), errors.New("time: invalid duration " + orig)];
			}
			pl = s.length;
			_tuple$1 = leadingInt(s); x = _tuple$1[0]; s = _tuple$1[1]; err = _tuple$1[2];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return [new Duration(0, 0), errors.New("time: invalid duration " + orig)];
			}
			g = $flatten64(x);
			pre = !((pl === s.length));
			post = false;
			if (!(s === "") && (s.charCodeAt(0) === 46)) {
				s = s.substring(1);
				pl$1 = s.length;
				_tuple$2 = leadingInt(s); x = _tuple$2[0]; s = _tuple$2[1]; err = _tuple$2[2];
				if (!($interfaceIsEqual(err, $ifaceNil))) {
					return [new Duration(0, 0), errors.New("time: invalid duration " + orig)];
				}
				scale = 1;
				n = pl$1 - s.length >> 0;
				while (n > 0) {
					scale = scale * (10);
					n = n - (1) >> 0;
				}
				g = g + ($flatten64(x) / scale);
				post = !((pl$1 === s.length));
			}
			if (!pre && !post) {
				return [new Duration(0, 0), errors.New("time: invalid duration " + orig)];
			}
			i = 0;
			while (i < s.length) {
				c$1 = s.charCodeAt(i);
				if ((c$1 === 46) || (48 <= c$1 && c$1 <= 57)) {
					break;
				}
				i = i + (1) >> 0;
			}
			if (i === 0) {
				return [new Duration(0, 0), errors.New("time: missing unit in duration " + orig)];
			}
			u = s.substring(0, i);
			s = s.substring(i);
			_tuple$3 = (_entry = unitMap[u], _entry !== undefined ? [_entry.v, true] : [0, false]); unit = _tuple$3[0]; ok = _tuple$3[1];
			if (!ok) {
				return [new Duration(0, 0), errors.New("time: unknown unit " + u + " in duration " + orig)];
			}
			f = f + (g * unit);
		}
		if (neg) {
			f = -f;
		}
		if (f < -9.223372036854776e+18 || f > 9.223372036854776e+18) {
			return [new Duration(0, 0), errors.New("time: overflow parsing duration")];
		}
		return [new Duration(0, f), $ifaceNil];
	};
	when = function(d) {
		var t, x, x$1;
		if ((d.$high < 0 || (d.$high === 0 && d.$low <= 0))) {
			return runtimeNano();
		}
		t = (x = runtimeNano(), x$1 = new $Int64(d.$high, d.$low), new $Int64(x.$high + x$1.$high, x.$low + x$1.$low));
		if ((t.$high < 0 || (t.$high === 0 && t.$low < 0))) {
			t = new $Int64(2147483647, 4294967295);
		}
		return t;
	};
	sendTime = function(c, seq) {
		var _selection;
		_selection = $select([[$assertType(c, chanType$1), Now()], []]);
	};
	NewTicker = $pkg.NewTicker = function(d) {
		var c, t;
		if ((d.$high < 0 || (d.$high === 0 && d.$low <= 0))) {
			$panic(errors.New("non-positive interval for NewTicker"));
		}
		c = new chanType$1(1);
		t = new Ticker.ptr(c, new runtimeTimer.ptr(0, when(d), new $Int64(d.$high, d.$low), sendTime, c, null, false));
		startTimer(t.r);
		return t;
	};
	Ticker.ptr.prototype.Stop = function() {
		var t;
		t = this;
		stopTimer(t.r);
	};
	Ticker.prototype.Stop = function() { return this.$val.Stop(); };
	Time.ptr.prototype.After = function(u) {
		var t, x, x$1, x$2, x$3;
		t = $clone(this, Time);
		u = $clone(u, Time);
		return (x = t.sec, x$1 = u.sec, (x.$high > x$1.$high || (x.$high === x$1.$high && x.$low > x$1.$low))) || (x$2 = t.sec, x$3 = u.sec, (x$2.$high === x$3.$high && x$2.$low === x$3.$low)) && t.nsec > u.nsec;
	};
	Time.prototype.After = function(u) { return this.$val.After(u); };
	Time.ptr.prototype.Before = function(u) {
		var t, x, x$1, x$2, x$3;
		t = $clone(this, Time);
		u = $clone(u, Time);
		return (x = t.sec, x$1 = u.sec, (x.$high < x$1.$high || (x.$high === x$1.$high && x.$low < x$1.$low))) || (x$2 = t.sec, x$3 = u.sec, (x$2.$high === x$3.$high && x$2.$low === x$3.$low)) && t.nsec < u.nsec;
	};
	Time.prototype.Before = function(u) { return this.$val.Before(u); };
	Time.ptr.prototype.Equal = function(u) {
		var t, x, x$1;
		t = $clone(this, Time);
		u = $clone(u, Time);
		return (x = t.sec, x$1 = u.sec, (x.$high === x$1.$high && x.$low === x$1.$low)) && (t.nsec === u.nsec);
	};
	Time.prototype.Equal = function(u) { return this.$val.Equal(u); };
	Month.prototype.String = function() {
		var m, x;
		m = this.$val;
		return (x = m - 1 >> 0, ((x < 0 || x >= months.length) ? $throwRuntimeError("index out of range") : months[x]));
	};
	$ptrType(Month).prototype.String = function() { return new Month(this.$get()).String(); };
	Weekday.prototype.String = function() {
		var d;
		d = this.$val;
		return ((d < 0 || d >= days.length) ? $throwRuntimeError("index out of range") : days[d]);
	};
	$ptrType(Weekday).prototype.String = function() { return new Weekday(this.$get()).String(); };
	Time.ptr.prototype.IsZero = function() {
		var t, x;
		t = $clone(this, Time);
		return (x = t.sec, (x.$high === 0 && x.$low === 0)) && (t.nsec === 0);
	};
	Time.prototype.IsZero = function() { return this.$val.IsZero(); };
	Time.ptr.prototype.abs = function() {
		var _tuple$1, l, offset, sec, t, x, x$1, x$2, x$3, x$4, x$5;
		t = $clone(this, Time);
		l = t.loc;
		if (l === ptrType$1.nil || l === localLoc) {
			l = l.get();
		}
		sec = (x = t.sec, new $Int64(x.$high + -15, x.$low + 2288912640));
		if (!(l === utcLoc)) {
			if (!(l.cacheZone === ptrType.nil) && (x$1 = l.cacheStart, (x$1.$high < sec.$high || (x$1.$high === sec.$high && x$1.$low <= sec.$low))) && (x$2 = l.cacheEnd, (sec.$high < x$2.$high || (sec.$high === x$2.$high && sec.$low < x$2.$low)))) {
				sec = (x$3 = new $Int64(0, l.cacheZone.offset), new $Int64(sec.$high + x$3.$high, sec.$low + x$3.$low));
			} else {
				_tuple$1 = l.lookup(sec); offset = _tuple$1[1];
				sec = (x$4 = new $Int64(0, offset), new $Int64(sec.$high + x$4.$high, sec.$low + x$4.$low));
			}
		}
		return (x$5 = new $Int64(sec.$high + 2147483646, sec.$low + 450480384), new $Uint64(x$5.$high, x$5.$low));
	};
	Time.prototype.abs = function() { return this.$val.abs(); };
	Time.ptr.prototype.locabs = function() {
		var _tuple$1, abs = new $Uint64(0, 0), l, name = "", offset = 0, sec, t, x, x$1, x$2, x$3, x$4;
		t = $clone(this, Time);
		l = t.loc;
		if (l === ptrType$1.nil || l === localLoc) {
			l = l.get();
		}
		sec = (x = t.sec, new $Int64(x.$high + -15, x.$low + 2288912640));
		if (!(l === utcLoc)) {
			if (!(l.cacheZone === ptrType.nil) && (x$1 = l.cacheStart, (x$1.$high < sec.$high || (x$1.$high === sec.$high && x$1.$low <= sec.$low))) && (x$2 = l.cacheEnd, (sec.$high < x$2.$high || (sec.$high === x$2.$high && sec.$low < x$2.$low)))) {
				name = l.cacheZone.name;
				offset = l.cacheZone.offset;
			} else {
				_tuple$1 = l.lookup(sec); name = _tuple$1[0]; offset = _tuple$1[1];
			}
			sec = (x$3 = new $Int64(0, offset), new $Int64(sec.$high + x$3.$high, sec.$low + x$3.$low));
		} else {
			name = "UTC";
		}
		abs = (x$4 = new $Int64(sec.$high + 2147483646, sec.$low + 450480384), new $Uint64(x$4.$high, x$4.$low));
		return [name, offset, abs];
	};
	Time.prototype.locabs = function() { return this.$val.locabs(); };
	Time.ptr.prototype.Date = function() {
		var _tuple$1, day = 0, month = 0, t, year = 0;
		t = $clone(this, Time);
		_tuple$1 = t.date(true); year = _tuple$1[0]; month = _tuple$1[1]; day = _tuple$1[2];
		return [year, month, day];
	};
	Time.prototype.Date = function() { return this.$val.Date(); };
	Time.ptr.prototype.Year = function() {
		var _tuple$1, t, year;
		t = $clone(this, Time);
		_tuple$1 = t.date(false); year = _tuple$1[0];
		return year;
	};
	Time.prototype.Year = function() { return this.$val.Year(); };
	Time.ptr.prototype.Month = function() {
		var _tuple$1, month, t;
		t = $clone(this, Time);
		_tuple$1 = t.date(true); month = _tuple$1[1];
		return month;
	};
	Time.prototype.Month = function() { return this.$val.Month(); };
	Time.ptr.prototype.Day = function() {
		var _tuple$1, day, t;
		t = $clone(this, Time);
		_tuple$1 = t.date(true); day = _tuple$1[2];
		return day;
	};
	Time.prototype.Day = function() { return this.$val.Day(); };
	Time.ptr.prototype.Weekday = function() {
		var t;
		t = $clone(this, Time);
		return absWeekday(t.abs());
	};
	Time.prototype.Weekday = function() { return this.$val.Weekday(); };
	absWeekday = function(abs) {
		var _q, sec;
		sec = $div64((new $Uint64(abs.$high + 0, abs.$low + 86400)), new $Uint64(0, 604800), true);
		return ((_q = (sec.$low >> 0) / 86400, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0);
	};
	Time.ptr.prototype.ISOWeek = function() {
		var _q, _r, _r$1, _r$2, _tuple$1, day, dec31wday, jan1wday, month, t, wday, week = 0, yday, year = 0;
		t = $clone(this, Time);
		_tuple$1 = t.date(true); year = _tuple$1[0]; month = _tuple$1[1]; day = _tuple$1[2]; yday = _tuple$1[3];
		wday = (_r = ((t.Weekday() + 6 >> 0) >> 0) % 7, _r === _r ? _r : $throwRuntimeError("integer divide by zero"));
		week = (_q = (((yday - wday >> 0) + 7 >> 0)) / 7, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		jan1wday = (_r$1 = (((wday - yday >> 0) + 371 >> 0)) % 7, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero"));
		if (1 <= jan1wday && jan1wday <= 3) {
			week = week + (1) >> 0;
		}
		if (week === 0) {
			year = year - (1) >> 0;
			week = 52;
			if ((jan1wday === 4) || ((jan1wday === 5) && isLeap(year))) {
				week = week + (1) >> 0;
			}
		}
		if ((month === 12) && day >= 29 && wday < 3) {
			dec31wday = (_r$2 = (((wday + 31 >> 0) - day >> 0)) % 7, _r$2 === _r$2 ? _r$2 : $throwRuntimeError("integer divide by zero"));
			if (0 <= dec31wday && dec31wday <= 2) {
				year = year + (1) >> 0;
				week = 1;
			}
		}
		return [year, week];
	};
	Time.prototype.ISOWeek = function() { return this.$val.ISOWeek(); };
	Time.ptr.prototype.Clock = function() {
		var _tuple$1, hour = 0, min = 0, sec = 0, t;
		t = $clone(this, Time);
		_tuple$1 = absClock(t.abs()); hour = _tuple$1[0]; min = _tuple$1[1]; sec = _tuple$1[2];
		return [hour, min, sec];
	};
	Time.prototype.Clock = function() { return this.$val.Clock(); };
	absClock = function(abs) {
		var _q, _q$1, hour = 0, min = 0, sec = 0;
		sec = ($div64(abs, new $Uint64(0, 86400), true).$low >> 0);
		hour = (_q = sec / 3600, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		sec = sec - ((hour * 3600 >> 0)) >> 0;
		min = (_q$1 = sec / 60, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
		sec = sec - ((min * 60 >> 0)) >> 0;
		return [hour, min, sec];
	};
	Time.ptr.prototype.Hour = function() {
		var _q, t;
		t = $clone(this, Time);
		return (_q = ($div64(t.abs(), new $Uint64(0, 86400), true).$low >> 0) / 3600, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
	};
	Time.prototype.Hour = function() { return this.$val.Hour(); };
	Time.ptr.prototype.Minute = function() {
		var _q, t;
		t = $clone(this, Time);
		return (_q = ($div64(t.abs(), new $Uint64(0, 3600), true).$low >> 0) / 60, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
	};
	Time.prototype.Minute = function() { return this.$val.Minute(); };
	Time.ptr.prototype.Second = function() {
		var t;
		t = $clone(this, Time);
		return ($div64(t.abs(), new $Uint64(0, 60), true).$low >> 0);
	};
	Time.prototype.Second = function() { return this.$val.Second(); };
	Time.ptr.prototype.Nanosecond = function() {
		var t;
		t = $clone(this, Time);
		return (t.nsec >> 0);
	};
	Time.prototype.Nanosecond = function() { return this.$val.Nanosecond(); };
	Time.ptr.prototype.YearDay = function() {
		var _tuple$1, t, yday;
		t = $clone(this, Time);
		_tuple$1 = t.date(false); yday = _tuple$1[3];
		return yday + 1 >> 0;
	};
	Time.prototype.YearDay = function() { return this.$val.YearDay(); };
	Duration.prototype.String = function() {
		var _tuple$1, _tuple$2, buf, d, neg, prec, u, w;
		d = this;
		buf = $clone(arrayType.zero(), arrayType);
		w = 32;
		u = new $Uint64(d.$high, d.$low);
		neg = (d.$high < 0 || (d.$high === 0 && d.$low < 0));
		if (neg) {
			u = new $Uint64(-u.$high, -u.$low);
		}
		if ((u.$high < 0 || (u.$high === 0 && u.$low < 1000000000))) {
			prec = 0;
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 115;
			w = w - (1) >> 0;
			if ((u.$high === 0 && u.$low === 0)) {
				return "0";
			} else if ((u.$high < 0 || (u.$high === 0 && u.$low < 1000))) {
				prec = 0;
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 110;
			} else if ((u.$high < 0 || (u.$high === 0 && u.$low < 1000000))) {
				prec = 3;
				w = w - (1) >> 0;
				$copyString($subslice(new sliceType$3(buf), w), "\xC2\xB5");
			} else {
				prec = 6;
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 109;
			}
			_tuple$1 = fmtFrac($subslice(new sliceType$3(buf), 0, w), u, prec); w = _tuple$1[0]; u = _tuple$1[1];
			w = fmtInt($subslice(new sliceType$3(buf), 0, w), u);
		} else {
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 115;
			_tuple$2 = fmtFrac($subslice(new sliceType$3(buf), 0, w), u, 9); w = _tuple$2[0]; u = _tuple$2[1];
			w = fmtInt($subslice(new sliceType$3(buf), 0, w), $div64(u, new $Uint64(0, 60), true));
			u = $div64(u, (new $Uint64(0, 60)), false);
			if ((u.$high > 0 || (u.$high === 0 && u.$low > 0))) {
				w = w - (1) >> 0;
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 109;
				w = fmtInt($subslice(new sliceType$3(buf), 0, w), $div64(u, new $Uint64(0, 60), true));
				u = $div64(u, (new $Uint64(0, 60)), false);
				if ((u.$high > 0 || (u.$high === 0 && u.$low > 0))) {
					w = w - (1) >> 0;
					(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 104;
					w = fmtInt($subslice(new sliceType$3(buf), 0, w), u);
				}
			}
		}
		if (neg) {
			w = w - (1) >> 0;
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 45;
		}
		return $bytesToString($subslice(new sliceType$3(buf), w));
	};
	$ptrType(Duration).prototype.String = function() { return this.$get().String(); };
	fmtFrac = function(buf, v, prec) {
		var _tmp, _tmp$1, digit, i, nv = new $Uint64(0, 0), nw = 0, print, w;
		w = buf.$length;
		print = false;
		i = 0;
		while (i < prec) {
			digit = $div64(v, new $Uint64(0, 10), true);
			print = print || !((digit.$high === 0 && digit.$low === 0));
			if (print) {
				w = w - (1) >> 0;
				(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = (digit.$low << 24 >>> 24) + 48 << 24 >>> 24;
			}
			v = $div64(v, (new $Uint64(0, 10)), false);
			i = i + (1) >> 0;
		}
		if (print) {
			w = w - (1) >> 0;
			(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = 46;
		}
		_tmp = w; _tmp$1 = v; nw = _tmp; nv = _tmp$1;
		return [nw, nv];
	};
	fmtInt = function(buf, v) {
		var w;
		w = buf.$length;
		if ((v.$high === 0 && v.$low === 0)) {
			w = w - (1) >> 0;
			(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = 48;
		} else {
			while ((v.$high > 0 || (v.$high === 0 && v.$low > 0))) {
				w = w - (1) >> 0;
				(w < 0 || w >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + w] = ($div64(v, new $Uint64(0, 10), true).$low << 24 >>> 24) + 48 << 24 >>> 24;
				v = $div64(v, (new $Uint64(0, 10)), false);
			}
		}
		return w;
	};
	Duration.prototype.Nanoseconds = function() {
		var d;
		d = this;
		return new $Int64(d.$high, d.$low);
	};
	$ptrType(Duration).prototype.Nanoseconds = function() { return this.$get().Nanoseconds(); };
	Duration.prototype.Seconds = function() {
		var d, nsec, sec;
		d = this;
		sec = $div64(d, new Duration(0, 1000000000), false);
		nsec = $div64(d, new Duration(0, 1000000000), true);
		return $flatten64(sec) + $flatten64(nsec) * 1e-09;
	};
	$ptrType(Duration).prototype.Seconds = function() { return this.$get().Seconds(); };
	Duration.prototype.Minutes = function() {
		var d, min, nsec;
		d = this;
		min = $div64(d, new Duration(13, 4165425152), false);
		nsec = $div64(d, new Duration(13, 4165425152), true);
		return $flatten64(min) + $flatten64(nsec) * 1.6666666666666667e-11;
	};
	$ptrType(Duration).prototype.Minutes = function() { return this.$get().Minutes(); };
	Duration.prototype.Hours = function() {
		var d, hour, nsec;
		d = this;
		hour = $div64(d, new Duration(838, 817405952), false);
		nsec = $div64(d, new Duration(838, 817405952), true);
		return $flatten64(hour) + $flatten64(nsec) * 2.777777777777778e-13;
	};
	$ptrType(Duration).prototype.Hours = function() { return this.$get().Hours(); };
	Time.ptr.prototype.Add = function(d) {
		var nsec, t, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7;
		t = $clone(this, Time);
		t.sec = (x = t.sec, x$1 = (x$2 = $div64(d, new Duration(0, 1000000000), false), new $Int64(x$2.$high, x$2.$low)), new $Int64(x.$high + x$1.$high, x.$low + x$1.$low));
		nsec = t.nsec + ((x$3 = $div64(d, new Duration(0, 1000000000), true), x$3.$low + ((x$3.$high >> 31) * 4294967296)) >> 0) >> 0;
		if (nsec >= 1000000000) {
			t.sec = (x$4 = t.sec, x$5 = new $Int64(0, 1), new $Int64(x$4.$high + x$5.$high, x$4.$low + x$5.$low));
			nsec = nsec - (1000000000) >> 0;
		} else if (nsec < 0) {
			t.sec = (x$6 = t.sec, x$7 = new $Int64(0, 1), new $Int64(x$6.$high - x$7.$high, x$6.$low - x$7.$low));
			nsec = nsec + (1000000000) >> 0;
		}
		t.nsec = nsec;
		return t;
	};
	Time.prototype.Add = function(d) { return this.$val.Add(d); };
	Time.ptr.prototype.Sub = function(u) {
		var d, t, x, x$1, x$2, x$3, x$4;
		t = $clone(this, Time);
		u = $clone(u, Time);
		d = (x = $mul64((x$1 = (x$2 = t.sec, x$3 = u.sec, new $Int64(x$2.$high - x$3.$high, x$2.$low - x$3.$low)), new Duration(x$1.$high, x$1.$low)), new Duration(0, 1000000000)), x$4 = new Duration(0, (t.nsec - u.nsec >> 0)), new Duration(x.$high + x$4.$high, x.$low + x$4.$low));
		if (u.Add(d).Equal(t)) {
			return d;
		} else if (t.Before(u)) {
			return new Duration(-2147483648, 0);
		} else {
			return new Duration(2147483647, 4294967295);
		}
	};
	Time.prototype.Sub = function(u) { return this.$val.Sub(u); };
	Time.ptr.prototype.AddDate = function(years, months$1, days$1) {
		var _tuple$1, _tuple$2, day, hour, min, month, sec, t, year;
		t = $clone(this, Time);
		_tuple$1 = t.Date(); year = _tuple$1[0]; month = _tuple$1[1]; day = _tuple$1[2];
		_tuple$2 = t.Clock(); hour = _tuple$2[0]; min = _tuple$2[1]; sec = _tuple$2[2];
		return Date(year + years >> 0, month + (months$1 >> 0) >> 0, day + days$1 >> 0, hour, min, sec, (t.nsec >> 0), t.loc);
	};
	Time.prototype.AddDate = function(years, months$1, days$1) { return this.$val.AddDate(years, months$1, days$1); };
	Time.ptr.prototype.date = function(full) {
		var _tuple$1, day = 0, month = 0, t, yday = 0, year = 0;
		t = $clone(this, Time);
		_tuple$1 = absDate(t.abs(), full); year = _tuple$1[0]; month = _tuple$1[1]; day = _tuple$1[2]; yday = _tuple$1[3];
		return [year, month, day, yday];
	};
	Time.prototype.date = function(full) { return this.$val.date(full); };
	absDate = function(abs, full) {
		var _q, begin, d, day = 0, end, month = 0, n, x, x$1, x$10, x$11, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9, y, yday = 0, year = 0;
		d = $div64(abs, new $Uint64(0, 86400), false);
		n = $div64(d, new $Uint64(0, 146097), false);
		y = $mul64(new $Uint64(0, 400), n);
		d = (x = $mul64(new $Uint64(0, 146097), n), new $Uint64(d.$high - x.$high, d.$low - x.$low));
		n = $div64(d, new $Uint64(0, 36524), false);
		n = (x$1 = $shiftRightUint64(n, 2), new $Uint64(n.$high - x$1.$high, n.$low - x$1.$low));
		y = (x$2 = $mul64(new $Uint64(0, 100), n), new $Uint64(y.$high + x$2.$high, y.$low + x$2.$low));
		d = (x$3 = $mul64(new $Uint64(0, 36524), n), new $Uint64(d.$high - x$3.$high, d.$low - x$3.$low));
		n = $div64(d, new $Uint64(0, 1461), false);
		y = (x$4 = $mul64(new $Uint64(0, 4), n), new $Uint64(y.$high + x$4.$high, y.$low + x$4.$low));
		d = (x$5 = $mul64(new $Uint64(0, 1461), n), new $Uint64(d.$high - x$5.$high, d.$low - x$5.$low));
		n = $div64(d, new $Uint64(0, 365), false);
		n = (x$6 = $shiftRightUint64(n, 2), new $Uint64(n.$high - x$6.$high, n.$low - x$6.$low));
		y = (x$7 = n, new $Uint64(y.$high + x$7.$high, y.$low + x$7.$low));
		d = (x$8 = $mul64(new $Uint64(0, 365), n), new $Uint64(d.$high - x$8.$high, d.$low - x$8.$low));
		year = ((x$9 = (x$10 = new $Int64(y.$high, y.$low), new $Int64(x$10.$high + -69, x$10.$low + 4075721025)), x$9.$low + ((x$9.$high >> 31) * 4294967296)) >> 0);
		yday = (d.$low >> 0);
		if (!full) {
			return [year, month, day, yday];
		}
		day = yday;
		if (isLeap(year)) {
			if (day > 59) {
				day = day - (1) >> 0;
			} else if (day === 59) {
				month = 2;
				day = 29;
				return [year, month, day, yday];
			}
		}
		month = ((_q = day / 31, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0);
		end = ((x$11 = month + 1 >> 0, ((x$11 < 0 || x$11 >= daysBefore.length) ? $throwRuntimeError("index out of range") : daysBefore[x$11])) >> 0);
		begin = 0;
		if (day >= end) {
			month = month + (1) >> 0;
			begin = end;
		} else {
			begin = (((month < 0 || month >= daysBefore.length) ? $throwRuntimeError("index out of range") : daysBefore[month]) >> 0);
		}
		month = month + (1) >> 0;
		day = (day - begin >> 0) + 1 >> 0;
		return [year, month, day, yday];
	};
	Now = $pkg.Now = function() {
		var _tuple$1, nsec, sec;
		_tuple$1 = now(); sec = _tuple$1[0]; nsec = _tuple$1[1];
		return new Time.ptr(new $Int64(sec.$high + 14, sec.$low + 2006054656), nsec, $pkg.Local);
	};
	Time.ptr.prototype.UTC = function() {
		var t;
		t = $clone(this, Time);
		t.loc = $pkg.UTC;
		return t;
	};
	Time.prototype.UTC = function() { return this.$val.UTC(); };
	Time.ptr.prototype.Local = function() {
		var t;
		t = $clone(this, Time);
		t.loc = $pkg.Local;
		return t;
	};
	Time.prototype.Local = function() { return this.$val.Local(); };
	Time.ptr.prototype.In = function(loc) {
		var t;
		t = $clone(this, Time);
		if (loc === ptrType$1.nil) {
			$panic(new $String("time: missing Location in call to Time.In"));
		}
		t.loc = loc;
		return t;
	};
	Time.prototype.In = function(loc) { return this.$val.In(loc); };
	Time.ptr.prototype.Location = function() {
		var l, t;
		t = $clone(this, Time);
		l = t.loc;
		if (l === ptrType$1.nil) {
			l = $pkg.UTC;
		}
		return l;
	};
	Time.prototype.Location = function() { return this.$val.Location(); };
	Time.ptr.prototype.Zone = function() {
		var _tuple$1, name = "", offset = 0, t, x;
		t = $clone(this, Time);
		_tuple$1 = t.loc.lookup((x = t.sec, new $Int64(x.$high + -15, x.$low + 2288912640))); name = _tuple$1[0]; offset = _tuple$1[1];
		return [name, offset];
	};
	Time.prototype.Zone = function() { return this.$val.Zone(); };
	Time.ptr.prototype.Unix = function() {
		var t, x;
		t = $clone(this, Time);
		return (x = t.sec, new $Int64(x.$high + -15, x.$low + 2288912640));
	};
	Time.prototype.Unix = function() { return this.$val.Unix(); };
	Time.ptr.prototype.UnixNano = function() {
		var t, x, x$1, x$2;
		t = $clone(this, Time);
		return (x = $mul64(((x$1 = t.sec, new $Int64(x$1.$high + -15, x$1.$low + 2288912640))), new $Int64(0, 1000000000)), x$2 = new $Int64(0, t.nsec), new $Int64(x.$high + x$2.$high, x.$low + x$2.$low));
	};
	Time.prototype.UnixNano = function() { return this.$val.UnixNano(); };
	Time.ptr.prototype.MarshalBinary = function() {
		var _q, _r, _tuple$1, enc, offset, offsetMin, t;
		t = $clone(this, Time);
		offsetMin = 0;
		if (t.Location() === utcLoc) {
			offsetMin = -1;
		} else {
			_tuple$1 = t.Zone(); offset = _tuple$1[1];
			if (!(((_r = offset % 60, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0))) {
				return [sliceType$3.nil, errors.New("Time.MarshalBinary: zone offset has fractional minute")];
			}
			offset = (_q = offset / (60), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
			if (offset < -32768 || (offset === -1) || offset > 32767) {
				return [sliceType$3.nil, errors.New("Time.MarshalBinary: unexpected zone offset")];
			}
			offsetMin = (offset << 16 >> 16);
		}
		enc = new sliceType$3([1, ($shiftRightInt64(t.sec, 56).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 48).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 40).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 32).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 24).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 16).$low << 24 >>> 24), ($shiftRightInt64(t.sec, 8).$low << 24 >>> 24), (t.sec.$low << 24 >>> 24), ((t.nsec >> 24 >> 0) << 24 >>> 24), ((t.nsec >> 16 >> 0) << 24 >>> 24), ((t.nsec >> 8 >> 0) << 24 >>> 24), (t.nsec << 24 >>> 24), ((offsetMin >> 8 << 16 >> 16) << 24 >>> 24), (offsetMin << 24 >>> 24)]);
		return [enc, $ifaceNil];
	};
	Time.prototype.MarshalBinary = function() { return this.$val.MarshalBinary(); };
	Time.ptr.prototype.UnmarshalBinary = function(data$1) {
		var _tuple$1, buf, localoff, offset, t, x, x$1, x$10, x$11, x$12, x$13, x$14, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		t = this;
		buf = data$1;
		if (buf.$length === 0) {
			return errors.New("Time.UnmarshalBinary: no data");
		}
		if (!((((0 < 0 || 0 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 0]) === 1))) {
			return errors.New("Time.UnmarshalBinary: unsupported version");
		}
		if (!((buf.$length === 15))) {
			return errors.New("Time.UnmarshalBinary: invalid length");
		}
		buf = $subslice(buf, 1);
		t.sec = (x = (x$1 = (x$2 = (x$3 = (x$4 = (x$5 = (x$6 = new $Int64(0, ((7 < 0 || 7 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 7])), x$7 = $shiftLeft64(new $Int64(0, ((6 < 0 || 6 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 6])), 8), new $Int64(x$6.$high | x$7.$high, (x$6.$low | x$7.$low) >>> 0)), x$8 = $shiftLeft64(new $Int64(0, ((5 < 0 || 5 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 5])), 16), new $Int64(x$5.$high | x$8.$high, (x$5.$low | x$8.$low) >>> 0)), x$9 = $shiftLeft64(new $Int64(0, ((4 < 0 || 4 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 4])), 24), new $Int64(x$4.$high | x$9.$high, (x$4.$low | x$9.$low) >>> 0)), x$10 = $shiftLeft64(new $Int64(0, ((3 < 0 || 3 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 3])), 32), new $Int64(x$3.$high | x$10.$high, (x$3.$low | x$10.$low) >>> 0)), x$11 = $shiftLeft64(new $Int64(0, ((2 < 0 || 2 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 2])), 40), new $Int64(x$2.$high | x$11.$high, (x$2.$low | x$11.$low) >>> 0)), x$12 = $shiftLeft64(new $Int64(0, ((1 < 0 || 1 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 1])), 48), new $Int64(x$1.$high | x$12.$high, (x$1.$low | x$12.$low) >>> 0)), x$13 = $shiftLeft64(new $Int64(0, ((0 < 0 || 0 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 0])), 56), new $Int64(x.$high | x$13.$high, (x.$low | x$13.$low) >>> 0));
		buf = $subslice(buf, 8);
		t.nsec = (((((3 < 0 || 3 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 3]) >> 0) | ((((2 < 0 || 2 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 2]) >> 0) << 8 >> 0)) | ((((1 < 0 || 1 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 1]) >> 0) << 16 >> 0)) | ((((0 < 0 || 0 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 0]) >> 0) << 24 >> 0);
		buf = $subslice(buf, 4);
		offset = (((((1 < 0 || 1 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 1]) << 16 >> 16) | ((((0 < 0 || 0 >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + 0]) << 16 >> 16) << 8 << 16 >> 16)) >> 0) * 60 >> 0;
		if (offset === -60) {
			t.loc = utcLoc;
		} else {
			_tuple$1 = $pkg.Local.lookup((x$14 = t.sec, new $Int64(x$14.$high + -15, x$14.$low + 2288912640))); localoff = _tuple$1[1];
			if (offset === localoff) {
				t.loc = $pkg.Local;
			} else {
				t.loc = FixedZone("", offset);
			}
		}
		return $ifaceNil;
	};
	Time.prototype.UnmarshalBinary = function(data$1) { return this.$val.UnmarshalBinary(data$1); };
	Time.ptr.prototype.GobEncode = function() {
		var t;
		t = $clone(this, Time);
		return t.MarshalBinary();
	};
	Time.prototype.GobEncode = function() { return this.$val.GobEncode(); };
	Time.ptr.prototype.GobDecode = function(data$1) {
		var t;
		t = this;
		return t.UnmarshalBinary(data$1);
	};
	Time.prototype.GobDecode = function(data$1) { return this.$val.GobDecode(data$1); };
	Time.ptr.prototype.MarshalJSON = function() {
		var t, y;
		t = $clone(this, Time);
		y = t.Year();
		if (y < 0 || y >= 10000) {
			return [sliceType$3.nil, errors.New("Time.MarshalJSON: year outside of range [0,9999]")];
		}
		return [new sliceType$3($stringToBytes(t.Format("\"2006-01-02T15:04:05.999999999Z07:00\""))), $ifaceNil];
	};
	Time.prototype.MarshalJSON = function() { return this.$val.MarshalJSON(); };
	Time.ptr.prototype.UnmarshalJSON = function(data$1) {
		var _tuple$1, err = $ifaceNil, t;
		t = this;
		_tuple$1 = Parse("\"2006-01-02T15:04:05Z07:00\"", $bytesToString(data$1)); $copy(t, _tuple$1[0], Time); err = _tuple$1[1];
		return err;
	};
	Time.prototype.UnmarshalJSON = function(data$1) { return this.$val.UnmarshalJSON(data$1); };
	Time.ptr.prototype.MarshalText = function() {
		var t, y;
		t = $clone(this, Time);
		y = t.Year();
		if (y < 0 || y >= 10000) {
			return [sliceType$3.nil, errors.New("Time.MarshalText: year outside of range [0,9999]")];
		}
		return [new sliceType$3($stringToBytes(t.Format("2006-01-02T15:04:05.999999999Z07:00"))), $ifaceNil];
	};
	Time.prototype.MarshalText = function() { return this.$val.MarshalText(); };
	Time.ptr.prototype.UnmarshalText = function(data$1) {
		var _tuple$1, err = $ifaceNil, t;
		t = this;
		_tuple$1 = Parse("2006-01-02T15:04:05Z07:00", $bytesToString(data$1)); $copy(t, _tuple$1[0], Time); err = _tuple$1[1];
		return err;
	};
	Time.prototype.UnmarshalText = function(data$1) { return this.$val.UnmarshalText(data$1); };
	Unix = $pkg.Unix = function(sec, nsec) {
		var n, x, x$1, x$2, x$3;
		if ((nsec.$high < 0 || (nsec.$high === 0 && nsec.$low < 0)) || (nsec.$high > 0 || (nsec.$high === 0 && nsec.$low >= 1000000000))) {
			n = $div64(nsec, new $Int64(0, 1000000000), false);
			sec = (x = n, new $Int64(sec.$high + x.$high, sec.$low + x.$low));
			nsec = (x$1 = $mul64(n, new $Int64(0, 1000000000)), new $Int64(nsec.$high - x$1.$high, nsec.$low - x$1.$low));
			if ((nsec.$high < 0 || (nsec.$high === 0 && nsec.$low < 0))) {
				nsec = (x$2 = new $Int64(0, 1000000000), new $Int64(nsec.$high + x$2.$high, nsec.$low + x$2.$low));
				sec = (x$3 = new $Int64(0, 1), new $Int64(sec.$high - x$3.$high, sec.$low - x$3.$low));
			}
		}
		return new Time.ptr(new $Int64(sec.$high + 14, sec.$low + 2006054656), ((nsec.$low + ((nsec.$high >> 31) * 4294967296)) >> 0), $pkg.Local);
	};
	isLeap = function(year) {
		var _r, _r$1, _r$2;
		return ((_r = year % 4, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0) && (!(((_r$1 = year % 100, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero")) === 0)) || ((_r$2 = year % 400, _r$2 === _r$2 ? _r$2 : $throwRuntimeError("integer divide by zero")) === 0));
	};
	norm = function(hi, lo, base) {
		var _q, _q$1, _tmp, _tmp$1, n, n$1, nhi = 0, nlo = 0;
		if (lo < 0) {
			n = (_q = ((-lo - 1 >> 0)) / base, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) + 1 >> 0;
			hi = hi - (n) >> 0;
			lo = lo + ((n * base >> 0)) >> 0;
		}
		if (lo >= base) {
			n$1 = (_q$1 = lo / base, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
			hi = hi + (n$1) >> 0;
			lo = lo - ((n$1 * base >> 0)) >> 0;
		}
		_tmp = hi; _tmp$1 = lo; nhi = _tmp; nlo = _tmp$1;
		return [nhi, nlo];
	};
	Date = $pkg.Date = function(year, month, day, hour, min, sec, nsec, loc) {
		var _tuple$1, _tuple$2, _tuple$3, _tuple$4, _tuple$5, _tuple$6, _tuple$7, _tuple$8, abs, d, end, m, n, offset, start, unix, utc, x, x$1, x$10, x$11, x$12, x$13, x$14, x$15, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9, y;
		if (loc === ptrType$1.nil) {
			$panic(new $String("time: missing Location in call to Date"));
		}
		m = (month >> 0) - 1 >> 0;
		_tuple$1 = norm(year, m, 12); year = _tuple$1[0]; m = _tuple$1[1];
		month = (m >> 0) + 1 >> 0;
		_tuple$2 = norm(sec, nsec, 1000000000); sec = _tuple$2[0]; nsec = _tuple$2[1];
		_tuple$3 = norm(min, sec, 60); min = _tuple$3[0]; sec = _tuple$3[1];
		_tuple$4 = norm(hour, min, 60); hour = _tuple$4[0]; min = _tuple$4[1];
		_tuple$5 = norm(day, hour, 24); day = _tuple$5[0]; hour = _tuple$5[1];
		y = (x = (x$1 = new $Int64(0, year), new $Int64(x$1.$high - -69, x$1.$low - 4075721025)), new $Uint64(x.$high, x.$low));
		n = $div64(y, new $Uint64(0, 400), false);
		y = (x$2 = $mul64(new $Uint64(0, 400), n), new $Uint64(y.$high - x$2.$high, y.$low - x$2.$low));
		d = $mul64(new $Uint64(0, 146097), n);
		n = $div64(y, new $Uint64(0, 100), false);
		y = (x$3 = $mul64(new $Uint64(0, 100), n), new $Uint64(y.$high - x$3.$high, y.$low - x$3.$low));
		d = (x$4 = $mul64(new $Uint64(0, 36524), n), new $Uint64(d.$high + x$4.$high, d.$low + x$4.$low));
		n = $div64(y, new $Uint64(0, 4), false);
		y = (x$5 = $mul64(new $Uint64(0, 4), n), new $Uint64(y.$high - x$5.$high, y.$low - x$5.$low));
		d = (x$6 = $mul64(new $Uint64(0, 1461), n), new $Uint64(d.$high + x$6.$high, d.$low + x$6.$low));
		n = y;
		d = (x$7 = $mul64(new $Uint64(0, 365), n), new $Uint64(d.$high + x$7.$high, d.$low + x$7.$low));
		d = (x$8 = new $Uint64(0, (x$9 = month - 1 >> 0, ((x$9 < 0 || x$9 >= daysBefore.length) ? $throwRuntimeError("index out of range") : daysBefore[x$9]))), new $Uint64(d.$high + x$8.$high, d.$low + x$8.$low));
		if (isLeap(year) && month >= 3) {
			d = (x$10 = new $Uint64(0, 1), new $Uint64(d.$high + x$10.$high, d.$low + x$10.$low));
		}
		d = (x$11 = new $Uint64(0, (day - 1 >> 0)), new $Uint64(d.$high + x$11.$high, d.$low + x$11.$low));
		abs = $mul64(d, new $Uint64(0, 86400));
		abs = (x$12 = new $Uint64(0, (((hour * 3600 >> 0) + (min * 60 >> 0) >> 0) + sec >> 0)), new $Uint64(abs.$high + x$12.$high, abs.$low + x$12.$low));
		unix = (x$13 = new $Int64(abs.$high, abs.$low), new $Int64(x$13.$high + -2147483647, x$13.$low + 3844486912));
		_tuple$6 = loc.lookup(unix); offset = _tuple$6[1]; start = _tuple$6[3]; end = _tuple$6[4];
		if (!((offset === 0))) {
			utc = (x$14 = new $Int64(0, offset), new $Int64(unix.$high - x$14.$high, unix.$low - x$14.$low));
			if ((utc.$high < start.$high || (utc.$high === start.$high && utc.$low < start.$low))) {
				_tuple$7 = loc.lookup(new $Int64(start.$high - 0, start.$low - 1)); offset = _tuple$7[1];
			} else if ((utc.$high > end.$high || (utc.$high === end.$high && utc.$low >= end.$low))) {
				_tuple$8 = loc.lookup(end); offset = _tuple$8[1];
			}
			unix = (x$15 = new $Int64(0, offset), new $Int64(unix.$high - x$15.$high, unix.$low - x$15.$low));
		}
		return new Time.ptr(new $Int64(unix.$high + 14, unix.$low + 2006054656), (nsec >> 0), loc);
	};
	Time.ptr.prototype.Truncate = function(d) {
		var _tuple$1, r, t;
		t = $clone(this, Time);
		if ((d.$high < 0 || (d.$high === 0 && d.$low <= 0))) {
			return t;
		}
		_tuple$1 = div(t, d); r = _tuple$1[1];
		return t.Add(new Duration(-r.$high, -r.$low));
	};
	Time.prototype.Truncate = function(d) { return this.$val.Truncate(d); };
	Time.ptr.prototype.Round = function(d) {
		var _tuple$1, r, t, x;
		t = $clone(this, Time);
		if ((d.$high < 0 || (d.$high === 0 && d.$low <= 0))) {
			return t;
		}
		_tuple$1 = div(t, d); r = _tuple$1[1];
		if ((x = new Duration(r.$high + r.$high, r.$low + r.$low), (x.$high < d.$high || (x.$high === d.$high && x.$low < d.$low)))) {
			return t.Add(new Duration(-r.$high, -r.$low));
		}
		return t.Add(new Duration(d.$high - r.$high, d.$low - r.$low));
	};
	Time.prototype.Round = function(d) { return this.$val.Round(d); };
	div = function(t, d) {
		var _q, _r, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, d0, d1, d1$1, neg, nsec, qmod2 = 0, r = new Duration(0, 0), sec, tmp, u0, u0x, u1, x, x$1, x$10, x$11, x$12, x$13, x$14, x$15, x$16, x$17, x$18, x$19, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		t = $clone(t, Time);
		neg = false;
		nsec = t.nsec;
		if ((x = t.sec, (x.$high < 0 || (x.$high === 0 && x.$low < 0)))) {
			neg = true;
			t.sec = (x$1 = t.sec, new $Int64(-x$1.$high, -x$1.$low));
			nsec = -nsec;
			if (nsec < 0) {
				nsec = nsec + (1000000000) >> 0;
				t.sec = (x$2 = t.sec, x$3 = new $Int64(0, 1), new $Int64(x$2.$high - x$3.$high, x$2.$low - x$3.$low));
			}
		}
		if ((d.$high < 0 || (d.$high === 0 && d.$low < 1000000000)) && (x$4 = $div64(new Duration(0, 1000000000), (new Duration(d.$high + d.$high, d.$low + d.$low)), true), (x$4.$high === 0 && x$4.$low === 0))) {
			qmod2 = ((_q = nsec / ((d.$low + ((d.$high >> 31) * 4294967296)) >> 0), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0) & 1;
			r = new Duration(0, (_r = nsec % ((d.$low + ((d.$high >> 31) * 4294967296)) >> 0), _r === _r ? _r : $throwRuntimeError("integer divide by zero")));
		} else if ((x$5 = $div64(d, new Duration(0, 1000000000), true), (x$5.$high === 0 && x$5.$low === 0))) {
			d1 = (x$6 = $div64(d, new Duration(0, 1000000000), false), new $Int64(x$6.$high, x$6.$low));
			qmod2 = ((x$7 = $div64(t.sec, d1, false), x$7.$low + ((x$7.$high >> 31) * 4294967296)) >> 0) & 1;
			r = (x$8 = $mul64((x$9 = $div64(t.sec, d1, true), new Duration(x$9.$high, x$9.$low)), new Duration(0, 1000000000)), x$10 = new Duration(0, nsec), new Duration(x$8.$high + x$10.$high, x$8.$low + x$10.$low));
		} else {
			sec = (x$11 = t.sec, new $Uint64(x$11.$high, x$11.$low));
			tmp = $mul64(($shiftRightUint64(sec, 32)), new $Uint64(0, 1000000000));
			u1 = $shiftRightUint64(tmp, 32);
			u0 = $shiftLeft64(tmp, 32);
			tmp = $mul64(new $Uint64(sec.$high & 0, (sec.$low & 4294967295) >>> 0), new $Uint64(0, 1000000000));
			_tmp = u0; _tmp$1 = new $Uint64(u0.$high + tmp.$high, u0.$low + tmp.$low); u0x = _tmp; u0 = _tmp$1;
			if ((u0.$high < u0x.$high || (u0.$high === u0x.$high && u0.$low < u0x.$low))) {
				u1 = (x$12 = new $Uint64(0, 1), new $Uint64(u1.$high + x$12.$high, u1.$low + x$12.$low));
			}
			_tmp$2 = u0; _tmp$3 = (x$13 = new $Uint64(0, nsec), new $Uint64(u0.$high + x$13.$high, u0.$low + x$13.$low)); u0x = _tmp$2; u0 = _tmp$3;
			if ((u0.$high < u0x.$high || (u0.$high === u0x.$high && u0.$low < u0x.$low))) {
				u1 = (x$14 = new $Uint64(0, 1), new $Uint64(u1.$high + x$14.$high, u1.$low + x$14.$low));
			}
			d1$1 = new $Uint64(d.$high, d.$low);
			while (!((x$15 = $shiftRightUint64(d1$1, 63), (x$15.$high === 0 && x$15.$low === 1)))) {
				d1$1 = $shiftLeft64(d1$1, (1));
			}
			d0 = new $Uint64(0, 0);
			while (true) {
				qmod2 = 0;
				if ((u1.$high > d1$1.$high || (u1.$high === d1$1.$high && u1.$low > d1$1.$low)) || (u1.$high === d1$1.$high && u1.$low === d1$1.$low) && (u0.$high > d0.$high || (u0.$high === d0.$high && u0.$low >= d0.$low))) {
					qmod2 = 1;
					_tmp$4 = u0; _tmp$5 = new $Uint64(u0.$high - d0.$high, u0.$low - d0.$low); u0x = _tmp$4; u0 = _tmp$5;
					if ((u0.$high > u0x.$high || (u0.$high === u0x.$high && u0.$low > u0x.$low))) {
						u1 = (x$16 = new $Uint64(0, 1), new $Uint64(u1.$high - x$16.$high, u1.$low - x$16.$low));
					}
					u1 = (x$17 = d1$1, new $Uint64(u1.$high - x$17.$high, u1.$low - x$17.$low));
				}
				if ((d1$1.$high === 0 && d1$1.$low === 0) && (x$18 = new $Uint64(d.$high, d.$low), (d0.$high === x$18.$high && d0.$low === x$18.$low))) {
					break;
				}
				d0 = $shiftRightUint64(d0, (1));
				d0 = (x$19 = $shiftLeft64((new $Uint64(d1$1.$high & 0, (d1$1.$low & 1) >>> 0)), 63), new $Uint64(d0.$high | x$19.$high, (d0.$low | x$19.$low) >>> 0));
				d1$1 = $shiftRightUint64(d1$1, (1));
			}
			r = new Duration(u0.$high, u0.$low);
		}
		if (neg && !((r.$high === 0 && r.$low === 0))) {
			qmod2 = (qmod2 ^ (1)) >> 0;
			r = new Duration(d.$high - r.$high, d.$low - r.$low);
		}
		return [qmod2, r];
	};
	Location.ptr.prototype.get = function() {
		var l;
		l = this;
		if (l === ptrType$1.nil) {
			return utcLoc;
		}
		if (l === localLoc) {
			localOnce.Do(initLocal);
		}
		return l;
	};
	Location.prototype.get = function() { return this.$val.get(); };
	Location.ptr.prototype.String = function() {
		var l;
		l = this;
		return l.get().name;
	};
	Location.prototype.String = function() { return this.$val.String(); };
	FixedZone = $pkg.FixedZone = function(name, offset) {
		var l, x;
		l = new Location.ptr(name, new sliceType$1([new zone.ptr(name, offset, false)]), new sliceType$2([new zoneTrans.ptr(new $Int64(-2147483648, 0), 0, false, false)]), new $Int64(-2147483648, 0), new $Int64(2147483647, 4294967295), ptrType.nil);
		l.cacheZone = (x = l.zone, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
		return l;
	};
	Location.ptr.prototype.lookup = function(sec) {
		var _q, end = new $Int64(0, 0), hi, isDST = false, l, lim, lo, m, name = "", offset = 0, start = new $Int64(0, 0), tx, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8, zone$1, zone$2, zone$3;
		l = this;
		l = l.get();
		if (l.zone.$length === 0) {
			name = "UTC";
			offset = 0;
			isDST = false;
			start = new $Int64(-2147483648, 0);
			end = new $Int64(2147483647, 4294967295);
			return [name, offset, isDST, start, end];
		}
		zone$1 = l.cacheZone;
		if (!(zone$1 === ptrType.nil) && (x = l.cacheStart, (x.$high < sec.$high || (x.$high === sec.$high && x.$low <= sec.$low))) && (x$1 = l.cacheEnd, (sec.$high < x$1.$high || (sec.$high === x$1.$high && sec.$low < x$1.$low)))) {
			name = zone$1.name;
			offset = zone$1.offset;
			isDST = zone$1.isDST;
			start = l.cacheStart;
			end = l.cacheEnd;
			return [name, offset, isDST, start, end];
		}
		if ((l.tx.$length === 0) || (x$2 = (x$3 = l.tx, ((0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0])).when, (sec.$high < x$2.$high || (sec.$high === x$2.$high && sec.$low < x$2.$low)))) {
			zone$2 = (x$4 = l.zone, x$5 = l.lookupFirstZone(), ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5]));
			name = zone$2.name;
			offset = zone$2.offset;
			isDST = zone$2.isDST;
			start = new $Int64(-2147483648, 0);
			if (l.tx.$length > 0) {
				end = (x$6 = l.tx, ((0 < 0 || 0 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + 0])).when;
			} else {
				end = new $Int64(2147483647, 4294967295);
			}
			return [name, offset, isDST, start, end];
		}
		tx = l.tx;
		end = new $Int64(2147483647, 4294967295);
		lo = 0;
		hi = tx.$length;
		while ((hi - lo >> 0) > 1) {
			m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			lim = ((m < 0 || m >= tx.$length) ? $throwRuntimeError("index out of range") : tx.$array[tx.$offset + m]).when;
			if ((sec.$high < lim.$high || (sec.$high === lim.$high && sec.$low < lim.$low))) {
				end = lim;
				hi = m;
			} else {
				lo = m;
			}
		}
		zone$3 = (x$7 = l.zone, x$8 = ((lo < 0 || lo >= tx.$length) ? $throwRuntimeError("index out of range") : tx.$array[tx.$offset + lo]).index, ((x$8 < 0 || x$8 >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + x$8]));
		name = zone$3.name;
		offset = zone$3.offset;
		isDST = zone$3.isDST;
		start = ((lo < 0 || lo >= tx.$length) ? $throwRuntimeError("index out of range") : tx.$array[tx.$offset + lo]).when;
		return [name, offset, isDST, start, end];
	};
	Location.prototype.lookup = function(sec) { return this.$val.lookup(sec); };
	Location.ptr.prototype.lookupFirstZone = function() {
		var _i, _ref, l, x, x$1, x$2, x$3, x$4, x$5, zi, zi$1;
		l = this;
		if (!l.firstZoneUsed()) {
			return 0;
		}
		if (l.tx.$length > 0 && (x = l.zone, x$1 = (x$2 = l.tx, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0])).index, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).isDST) {
			zi = ((x$3 = l.tx, ((0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0])).index >> 0) - 1 >> 0;
			while (zi >= 0) {
				if (!(x$4 = l.zone, ((zi < 0 || zi >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + zi])).isDST) {
					return zi;
				}
				zi = zi - (1) >> 0;
			}
		}
		_ref = l.zone;
		_i = 0;
		while (_i < _ref.$length) {
			zi$1 = _i;
			if (!(x$5 = l.zone, ((zi$1 < 0 || zi$1 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + zi$1])).isDST) {
				return zi$1;
			}
			_i++;
		}
		return 0;
	};
	Location.prototype.lookupFirstZone = function() { return this.$val.lookupFirstZone(); };
	Location.ptr.prototype.firstZoneUsed = function() {
		var _i, _ref, l, tx;
		l = this;
		_ref = l.tx;
		_i = 0;
		while (_i < _ref.$length) {
			tx = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), zoneTrans);
			if (tx.index === 0) {
				return true;
			}
			_i++;
		}
		return false;
	};
	Location.prototype.firstZoneUsed = function() { return this.$val.firstZoneUsed(); };
	Location.ptr.prototype.lookupName = function(name, unix) {
		var _i, _i$1, _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple$1, i, i$1, isDST = false, isDST$1, l, nam, offset = 0, offset$1, ok = false, x, x$1, x$2, zone$1, zone$2;
		l = this;
		l = l.get();
		_ref = l.zone;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			zone$1 = (x = l.zone, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
			if (zone$1.name === name) {
				_tuple$1 = l.lookup((x$1 = new $Int64(0, zone$1.offset), new $Int64(unix.$high - x$1.$high, unix.$low - x$1.$low))); nam = _tuple$1[0]; offset$1 = _tuple$1[1]; isDST$1 = _tuple$1[2];
				if (nam === zone$1.name) {
					_tmp = offset$1; _tmp$1 = isDST$1; _tmp$2 = true; offset = _tmp; isDST = _tmp$1; ok = _tmp$2;
					return [offset, isDST, ok];
				}
			}
			_i++;
		}
		_ref$1 = l.zone;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			i$1 = _i$1;
			zone$2 = (x$2 = l.zone, ((i$1 < 0 || i$1 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + i$1]));
			if (zone$2.name === name) {
				_tmp$3 = zone$2.offset; _tmp$4 = zone$2.isDST; _tmp$5 = true; offset = _tmp$3; isDST = _tmp$4; ok = _tmp$5;
				return [offset, isDST, ok];
			}
			_i$1++;
		}
		return [offset, isDST, ok];
	};
	Location.prototype.lookupName = function(name, unix) { return this.$val.lookupName(name, unix); };
	ptrType$2.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$4.methods = [{prop: "Stop", name: "Stop", pkg: "", type: $funcType([], [], false)}];
	Time.methods = [{prop: "Add", name: "Add", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "AddDate", name: "AddDate", pkg: "", type: $funcType([$Int, $Int, $Int], [Time], false)}, {prop: "After", name: "After", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Before", name: "Before", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Clock", name: "Clock", pkg: "", type: $funcType([], [$Int, $Int, $Int], false)}, {prop: "Date", name: "Date", pkg: "", type: $funcType([], [$Int, Month, $Int], false)}, {prop: "Day", name: "Day", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Equal", name: "Equal", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Format", name: "Format", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GobEncode", name: "GobEncode", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "Hour", name: "Hour", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ISOWeek", name: "ISOWeek", pkg: "", type: $funcType([], [$Int, $Int], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([ptrType$1], [Time], false)}, {prop: "IsZero", name: "IsZero", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Local", name: "Local", pkg: "", type: $funcType([], [Time], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$1], false)}, {prop: "MarshalBinary", name: "MarshalBinary", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "MarshalJSON", name: "MarshalJSON", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "MarshalText", name: "MarshalText", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "Minute", name: "Minute", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Month", name: "Month", pkg: "", type: $funcType([], [Month], false)}, {prop: "Nanosecond", name: "Nanosecond", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Round", name: "Round", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "Second", name: "Second", pkg: "", type: $funcType([], [$Int], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Sub", name: "Sub", pkg: "", type: $funcType([Time], [Duration], false)}, {prop: "Truncate", name: "Truncate", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "UTC", name: "UTC", pkg: "", type: $funcType([], [Time], false)}, {prop: "Unix", name: "Unix", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "UnixNano", name: "UnixNano", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Weekday", name: "Weekday", pkg: "", type: $funcType([], [Weekday], false)}, {prop: "Year", name: "Year", pkg: "", type: $funcType([], [$Int], false)}, {prop: "YearDay", name: "YearDay", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Zone", name: "Zone", pkg: "", type: $funcType([], [$String, $Int], false)}, {prop: "abs", name: "abs", pkg: "time", type: $funcType([], [$Uint64], false)}, {prop: "date", name: "date", pkg: "time", type: $funcType([$Bool], [$Int, Month, $Int, $Int], false)}, {prop: "locabs", name: "locabs", pkg: "time", type: $funcType([], [$String, $Int, $Uint64], false)}];
	ptrType$5.methods = [{prop: "Add", name: "Add", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "AddDate", name: "AddDate", pkg: "", type: $funcType([$Int, $Int, $Int], [Time], false)}, {prop: "After", name: "After", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Before", name: "Before", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Clock", name: "Clock", pkg: "", type: $funcType([], [$Int, $Int, $Int], false)}, {prop: "Date", name: "Date", pkg: "", type: $funcType([], [$Int, Month, $Int], false)}, {prop: "Day", name: "Day", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Equal", name: "Equal", pkg: "", type: $funcType([Time], [$Bool], false)}, {prop: "Format", name: "Format", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GobDecode", name: "GobDecode", pkg: "", type: $funcType([sliceType$3], [$error], false)}, {prop: "GobEncode", name: "GobEncode", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "Hour", name: "Hour", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ISOWeek", name: "ISOWeek", pkg: "", type: $funcType([], [$Int, $Int], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([ptrType$1], [Time], false)}, {prop: "IsZero", name: "IsZero", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Local", name: "Local", pkg: "", type: $funcType([], [Time], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$1], false)}, {prop: "MarshalBinary", name: "MarshalBinary", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "MarshalJSON", name: "MarshalJSON", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "MarshalText", name: "MarshalText", pkg: "", type: $funcType([], [sliceType$3, $error], false)}, {prop: "Minute", name: "Minute", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Month", name: "Month", pkg: "", type: $funcType([], [Month], false)}, {prop: "Nanosecond", name: "Nanosecond", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Round", name: "Round", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "Second", name: "Second", pkg: "", type: $funcType([], [$Int], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Sub", name: "Sub", pkg: "", type: $funcType([Time], [Duration], false)}, {prop: "Truncate", name: "Truncate", pkg: "", type: $funcType([Duration], [Time], false)}, {prop: "UTC", name: "UTC", pkg: "", type: $funcType([], [Time], false)}, {prop: "Unix", name: "Unix", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "UnixNano", name: "UnixNano", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "UnmarshalBinary", name: "UnmarshalBinary", pkg: "", type: $funcType([sliceType$3], [$error], false)}, {prop: "UnmarshalJSON", name: "UnmarshalJSON", pkg: "", type: $funcType([sliceType$3], [$error], false)}, {prop: "UnmarshalText", name: "UnmarshalText", pkg: "", type: $funcType([sliceType$3], [$error], false)}, {prop: "Weekday", name: "Weekday", pkg: "", type: $funcType([], [Weekday], false)}, {prop: "Year", name: "Year", pkg: "", type: $funcType([], [$Int], false)}, {prop: "YearDay", name: "YearDay", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Zone", name: "Zone", pkg: "", type: $funcType([], [$String, $Int], false)}, {prop: "abs", name: "abs", pkg: "time", type: $funcType([], [$Uint64], false)}, {prop: "date", name: "date", pkg: "time", type: $funcType([$Bool], [$Int, Month, $Int, $Int], false)}, {prop: "locabs", name: "locabs", pkg: "time", type: $funcType([], [$String, $Int, $Uint64], false)}];
	Month.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$6.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	Weekday.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$7.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	Duration.methods = [{prop: "Hours", name: "Hours", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Minutes", name: "Minutes", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Nanoseconds", name: "Nanoseconds", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Seconds", name: "Seconds", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$8.methods = [{prop: "Hours", name: "Hours", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Minutes", name: "Minutes", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Nanoseconds", name: "Nanoseconds", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Seconds", name: "Seconds", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$1.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "firstZoneUsed", name: "firstZoneUsed", pkg: "time", type: $funcType([], [$Bool], false)}, {prop: "get", name: "get", pkg: "time", type: $funcType([], [ptrType$1], false)}, {prop: "lookup", name: "lookup", pkg: "time", type: $funcType([$Int64], [$String, $Int, $Bool, $Int64, $Int64], false)}, {prop: "lookupFirstZone", name: "lookupFirstZone", pkg: "time", type: $funcType([], [$Int], false)}, {prop: "lookupName", name: "lookupName", pkg: "time", type: $funcType([$String, $Int64], [$Int, $Bool, $Bool], false)}];
	runtimeTimer.init([{prop: "i", name: "i", pkg: "time", type: $Int32, tag: ""}, {prop: "when", name: "when", pkg: "time", type: $Int64, tag: ""}, {prop: "period", name: "period", pkg: "time", type: $Int64, tag: ""}, {prop: "f", name: "f", pkg: "time", type: funcType$1, tag: ""}, {prop: "arg", name: "arg", pkg: "time", type: $emptyInterface, tag: ""}, {prop: "timeout", name: "timeout", pkg: "time", type: js.Object, tag: ""}, {prop: "active", name: "active", pkg: "time", type: $Bool, tag: ""}]);
	ParseError.init([{prop: "Layout", name: "Layout", pkg: "", type: $String, tag: ""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: ""}, {prop: "LayoutElem", name: "LayoutElem", pkg: "", type: $String, tag: ""}, {prop: "ValueElem", name: "ValueElem", pkg: "", type: $String, tag: ""}, {prop: "Message", name: "Message", pkg: "", type: $String, tag: ""}]);
	Ticker.init([{prop: "C", name: "C", pkg: "", type: chanType$2, tag: ""}, {prop: "r", name: "r", pkg: "time", type: runtimeTimer, tag: ""}]);
	Time.init([{prop: "sec", name: "sec", pkg: "time", type: $Int64, tag: ""}, {prop: "nsec", name: "nsec", pkg: "time", type: $Int32, tag: ""}, {prop: "loc", name: "loc", pkg: "time", type: ptrType$1, tag: ""}]);
	Location.init([{prop: "name", name: "name", pkg: "time", type: $String, tag: ""}, {prop: "zone", name: "zone", pkg: "time", type: sliceType$1, tag: ""}, {prop: "tx", name: "tx", pkg: "time", type: sliceType$2, tag: ""}, {prop: "cacheStart", name: "cacheStart", pkg: "time", type: $Int64, tag: ""}, {prop: "cacheEnd", name: "cacheEnd", pkg: "time", type: $Int64, tag: ""}, {prop: "cacheZone", name: "cacheZone", pkg: "time", type: ptrType, tag: ""}]);
	zone.init([{prop: "name", name: "name", pkg: "time", type: $String, tag: ""}, {prop: "offset", name: "offset", pkg: "time", type: $Int, tag: ""}, {prop: "isDST", name: "isDST", pkg: "time", type: $Bool, tag: ""}]);
	zoneTrans.init([{prop: "when", name: "when", pkg: "time", type: $Int64, tag: ""}, {prop: "index", name: "index", pkg: "time", type: $Uint8, tag: ""}, {prop: "isstd", name: "isstd", pkg: "time", type: $Bool, tag: ""}, {prop: "isutc", name: "isutc", pkg: "time", type: $Bool, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_time = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = nosync.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = syscall.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		localLoc = new Location.ptr();
		localOnce = new nosync.Once.ptr();
		std0x = $toNativeArray($kindInt, [260, 265, 524, 526, 528, 274]);
		longDayNames = new sliceType(["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]);
		shortDayNames = new sliceType(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]);
		shortMonthNames = new sliceType(["---", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]);
		longMonthNames = new sliceType(["---", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]);
		atoiError = errors.New("time: invalid number");
		errBad = errors.New("bad value for field");
		errLeadingInt = errors.New("time: bad [0-9]*");
		months = $toNativeArray($kindString, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]);
		days = $toNativeArray($kindString, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]);
		unitMap = (_map = new $Map(), _key = "ns", _map[_key] = { k: _key, v: 1 }, _key = "us", _map[_key] = { k: _key, v: 1000 }, _key = "\xC2\xB5s", _map[_key] = { k: _key, v: 1000 }, _key = "\xCE\xBCs", _map[_key] = { k: _key, v: 1000 }, _key = "ms", _map[_key] = { k: _key, v: 1e+06 }, _key = "s", _map[_key] = { k: _key, v: 1e+09 }, _key = "m", _map[_key] = { k: _key, v: 6e+10 }, _key = "h", _map[_key] = { k: _key, v: 3.6e+12 }, _map);
		daysBefore = $toNativeArray($kindInt32, [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365]);
		utcLoc = new Location.ptr("UTC", sliceType$1.nil, sliceType$2.nil, new $Int64(0, 0), new $Int64(0, 0), ptrType.nil);
		$pkg.UTC = utcLoc;
		$pkg.Local = localLoc;
		_tuple = syscall.Getenv("ZONEINFO"); zoneinfo = _tuple[0];
		badData = errors.New("malformed time zone information");
		zoneDirs = new sliceType(["/usr/share/zoneinfo/", "/usr/share/lib/zoneinfo/", "/usr/lib/locale/TZ/", runtime.GOROOT() + "/lib/time/zoneinfo.zip"]);
		/* */ } return; } }; $init_time.$blocking = true; return $init_time;
	};
	return $pkg;
})();
$packages["os"] = (function() {
	var $pkg = {}, errors, js, io, runtime, sync, atomic, syscall, time, PathError, SyscallError, LinkError, File, file, dirInfo, FileInfo, FileMode, fileStat, sliceType, ptrType, sliceType$1, sliceType$2, ptrType$2, ptrType$3, ptrType$4, arrayType, ptrType$11, funcType$1, ptrType$12, ptrType$14, ptrType$15, ptrType$16, errFinished, lstat, useSyscallwd, supportsCloseOnExec, runtime_args, init, NewSyscallError, IsNotExist, isNotExist, fixCount, sigpipe, syscallMode, NewFile, epipecheck, Lstat, basename, init$1, useSyscallwdDarwin, init$2, Exit, fileInfoFromStat, timespecToTime, init$3;
	errors = $packages["errors"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	io = $packages["io"];
	runtime = $packages["runtime"];
	sync = $packages["sync"];
	atomic = $packages["sync/atomic"];
	syscall = $packages["syscall"];
	time = $packages["time"];
	PathError = $pkg.PathError = $newType(0, $kindStruct, "os.PathError", "PathError", "os", function(Op_, Path_, Err_) {
		this.$val = this;
		this.Op = Op_ !== undefined ? Op_ : "";
		this.Path = Path_ !== undefined ? Path_ : "";
		this.Err = Err_ !== undefined ? Err_ : $ifaceNil;
	});
	SyscallError = $pkg.SyscallError = $newType(0, $kindStruct, "os.SyscallError", "SyscallError", "os", function(Syscall_, Err_) {
		this.$val = this;
		this.Syscall = Syscall_ !== undefined ? Syscall_ : "";
		this.Err = Err_ !== undefined ? Err_ : $ifaceNil;
	});
	LinkError = $pkg.LinkError = $newType(0, $kindStruct, "os.LinkError", "LinkError", "os", function(Op_, Old_, New_, Err_) {
		this.$val = this;
		this.Op = Op_ !== undefined ? Op_ : "";
		this.Old = Old_ !== undefined ? Old_ : "";
		this.New = New_ !== undefined ? New_ : "";
		this.Err = Err_ !== undefined ? Err_ : $ifaceNil;
	});
	File = $pkg.File = $newType(0, $kindStruct, "os.File", "File", "os", function(file_) {
		this.$val = this;
		this.file = file_ !== undefined ? file_ : ptrType$11.nil;
	});
	file = $pkg.file = $newType(0, $kindStruct, "os.file", "file", "os", function(fd_, name_, dirinfo_, nepipe_) {
		this.$val = this;
		this.fd = fd_ !== undefined ? fd_ : 0;
		this.name = name_ !== undefined ? name_ : "";
		this.dirinfo = dirinfo_ !== undefined ? dirinfo_ : ptrType.nil;
		this.nepipe = nepipe_ !== undefined ? nepipe_ : 0;
	});
	dirInfo = $pkg.dirInfo = $newType(0, $kindStruct, "os.dirInfo", "dirInfo", "os", function(buf_, nbuf_, bufp_) {
		this.$val = this;
		this.buf = buf_ !== undefined ? buf_ : sliceType$1.nil;
		this.nbuf = nbuf_ !== undefined ? nbuf_ : 0;
		this.bufp = bufp_ !== undefined ? bufp_ : 0;
	});
	FileInfo = $pkg.FileInfo = $newType(8, $kindInterface, "os.FileInfo", "FileInfo", "os", null);
	FileMode = $pkg.FileMode = $newType(4, $kindUint32, "os.FileMode", "FileMode", "os", null);
	fileStat = $pkg.fileStat = $newType(0, $kindStruct, "os.fileStat", "fileStat", "os", function(name_, size_, mode_, modTime_, sys_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : "";
		this.size = size_ !== undefined ? size_ : new $Int64(0, 0);
		this.mode = mode_ !== undefined ? mode_ : 0;
		this.modTime = modTime_ !== undefined ? modTime_ : new time.Time.ptr();
		this.sys = sys_ !== undefined ? sys_ : $ifaceNil;
	});
		sliceType = $sliceType($String);
		ptrType = $ptrType(dirInfo);
		sliceType$1 = $sliceType($Uint8);
		sliceType$2 = $sliceType(FileInfo);
		ptrType$2 = $ptrType(File);
		ptrType$3 = $ptrType(PathError);
		ptrType$4 = $ptrType(LinkError);
		arrayType = $arrayType($Uint8, 32);
		ptrType$11 = $ptrType(file);
		funcType$1 = $funcType([ptrType$11], [$error], false);
		ptrType$12 = $ptrType($Int32);
		ptrType$14 = $ptrType(fileStat);
		ptrType$15 = $ptrType(SyscallError);
		ptrType$16 = $ptrType(FileMode);
	runtime_args = function() {
		return $pkg.Args;
	};
	init = function() {
		var argv, i, process;
		process = $global.process;
		if (!(process === undefined)) {
			argv = process.argv;
			$pkg.Args = $makeSlice(sliceType, ($parseInt(argv.length) - 1 >> 0));
			i = 0;
			while (i < ($parseInt(argv.length) - 1 >> 0)) {
				(i < 0 || i >= $pkg.Args.$length) ? $throwRuntimeError("index out of range") : $pkg.Args.$array[$pkg.Args.$offset + i] = $internalize(argv[(i + 1 >> 0)], $String);
				i = i + (1) >> 0;
			}
		}
		if ($pkg.Args.$length === 0) {
			$pkg.Args = new sliceType(["?"]);
		}
	};
	File.ptr.prototype.readdirnames = function(n) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tuple, _tuple$1, _tuple$2, d, err = $ifaceNil, errno, f, names = sliceType.nil, nb, nc, size;
		f = this;
		if (f.file.dirinfo === ptrType.nil) {
			f.file.dirinfo = new dirInfo.ptr();
			f.file.dirinfo.buf = $makeSlice(sliceType$1, 4096);
		}
		d = f.file.dirinfo;
		size = n;
		if (size <= 0) {
			size = 100;
			n = -1;
		}
		names = $makeSlice(sliceType, 0, size);
		while (!((n === 0))) {
			if (d.bufp >= d.nbuf) {
				d.bufp = 0;
				errno = $ifaceNil;
				_tuple$1 = syscall.ReadDirent(f.file.fd, d.buf);
				_tuple = fixCount(_tuple$1[0], _tuple$1[1]); d.nbuf = _tuple[0]; errno = _tuple[1];
				if (!($interfaceIsEqual(errno, $ifaceNil))) {
					_tmp = names; _tmp$1 = NewSyscallError("readdirent", errno); names = _tmp; err = _tmp$1;
					return [names, err];
				}
				if (d.nbuf <= 0) {
					break;
				}
			}
			_tmp$2 = 0; _tmp$3 = 0; nb = _tmp$2; nc = _tmp$3;
			_tuple$2 = syscall.ParseDirent($subslice(d.buf, d.bufp, d.nbuf), n, names); nb = _tuple$2[0]; nc = _tuple$2[1]; names = _tuple$2[2];
			d.bufp = d.bufp + (nb) >> 0;
			n = n - (nc) >> 0;
		}
		if (n >= 0 && (names.$length === 0)) {
			_tmp$4 = names; _tmp$5 = io.EOF; names = _tmp$4; err = _tmp$5;
			return [names, err];
		}
		_tmp$6 = names; _tmp$7 = $ifaceNil; names = _tmp$6; err = _tmp$7;
		return [names, err];
	};
	File.prototype.readdirnames = function(n) { return this.$val.readdirnames(n); };
	File.ptr.prototype.Readdir = function(n) {
		var _tmp, _tmp$1, _tuple, err = $ifaceNil, f, fi = sliceType$2.nil;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = sliceType$2.nil; _tmp$1 = $pkg.ErrInvalid; fi = _tmp; err = _tmp$1;
			return [fi, err];
		}
		_tuple = f.readdir(n); fi = _tuple[0]; err = _tuple[1];
		return [fi, err];
	};
	File.prototype.Readdir = function(n) { return this.$val.Readdir(n); };
	File.ptr.prototype.Readdirnames = function(n) {
		var _tmp, _tmp$1, _tuple, err = $ifaceNil, f, names = sliceType.nil;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = sliceType.nil; _tmp$1 = $pkg.ErrInvalid; names = _tmp; err = _tmp$1;
			return [names, err];
		}
		_tuple = f.readdirnames(n); names = _tuple[0]; err = _tuple[1];
		return [names, err];
	};
	File.prototype.Readdirnames = function(n) { return this.$val.Readdirnames(n); };
	PathError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return e.Op + " " + e.Path + ": " + e.Err.Error();
	};
	PathError.prototype.Error = function() { return this.$val.Error(); };
	SyscallError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return e.Syscall + ": " + e.Err.Error();
	};
	SyscallError.prototype.Error = function() { return this.$val.Error(); };
	NewSyscallError = $pkg.NewSyscallError = function(syscall$1, err) {
		if ($interfaceIsEqual(err, $ifaceNil)) {
			return $ifaceNil;
		}
		return new SyscallError.ptr(syscall$1, err);
	};
	IsNotExist = $pkg.IsNotExist = function(err) {
		return isNotExist(err);
	};
	isNotExist = function(err) {
		var _ref, pe;
		_ref = err;
		if (_ref === $ifaceNil) {
			pe = _ref;
			return false;
		} else if ($assertType(_ref, ptrType$3, true)[1]) {
			pe = _ref.$val;
			err = pe.Err;
		} else if ($assertType(_ref, ptrType$4, true)[1]) {
			pe = _ref.$val;
			err = pe.Err;
		}
		return $interfaceIsEqual(err, new syscall.Errno(2)) || $interfaceIsEqual(err, $pkg.ErrNotExist);
	};
	File.ptr.prototype.Name = function() {
		var f;
		f = this;
		return f.file.name;
	};
	File.prototype.Name = function() { return this.$val.Name(); };
	LinkError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return e.Op + " " + e.Old + " " + e.New + ": " + e.Err.Error();
	};
	LinkError.prototype.Error = function() { return this.$val.Error(); };
	File.ptr.prototype.Read = function(b) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, e, err = $ifaceNil, f, n = 0;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = 0; _tmp$1 = $pkg.ErrInvalid; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		_tuple = f.read(b); n = _tuple[0]; e = _tuple[1];
		if (n < 0) {
			n = 0;
		}
		if ((n === 0) && b.$length > 0 && $interfaceIsEqual(e, $ifaceNil)) {
			_tmp$2 = 0; _tmp$3 = io.EOF; n = _tmp$2; err = _tmp$3;
			return [n, err];
		}
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			err = new PathError.ptr("read", f.file.name, e);
		}
		_tmp$4 = n; _tmp$5 = err; n = _tmp$4; err = _tmp$5;
		return [n, err];
	};
	File.prototype.Read = function(b) { return this.$val.Read(b); };
	File.ptr.prototype.ReadAt = function(b, off) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, e, err = $ifaceNil, f, m, n = 0, x;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = 0; _tmp$1 = $pkg.ErrInvalid; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		while (b.$length > 0) {
			_tuple = f.pread(b, off); m = _tuple[0]; e = _tuple[1];
			if ((m === 0) && $interfaceIsEqual(e, $ifaceNil)) {
				_tmp$2 = n; _tmp$3 = io.EOF; n = _tmp$2; err = _tmp$3;
				return [n, err];
			}
			if (!($interfaceIsEqual(e, $ifaceNil))) {
				err = new PathError.ptr("read", f.file.name, e);
				break;
			}
			n = n + (m) >> 0;
			b = $subslice(b, m);
			off = (x = new $Int64(0, m), new $Int64(off.$high + x.$high, off.$low + x.$low));
		}
		return [n, err];
	};
	File.prototype.ReadAt = function(b, off) { return this.$val.ReadAt(b, off); };
	File.ptr.prototype.Write = function(b) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, e, err = $ifaceNil, f, n = 0;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = 0; _tmp$1 = $pkg.ErrInvalid; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		_tuple = f.write(b); n = _tuple[0]; e = _tuple[1];
		if (n < 0) {
			n = 0;
		}
		if (!((n === b.$length))) {
			err = io.ErrShortWrite;
		}
		epipecheck(f, e);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			err = new PathError.ptr("write", f.file.name, e);
		}
		_tmp$2 = n; _tmp$3 = err; n = _tmp$2; err = _tmp$3;
		return [n, err];
	};
	File.prototype.Write = function(b) { return this.$val.Write(b); };
	File.ptr.prototype.WriteAt = function(b, off) {
		var _tmp, _tmp$1, _tuple, e, err = $ifaceNil, f, m, n = 0, x;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = 0; _tmp$1 = $pkg.ErrInvalid; n = _tmp; err = _tmp$1;
			return [n, err];
		}
		while (b.$length > 0) {
			_tuple = f.pwrite(b, off); m = _tuple[0]; e = _tuple[1];
			if (!($interfaceIsEqual(e, $ifaceNil))) {
				err = new PathError.ptr("write", f.file.name, e);
				break;
			}
			n = n + (m) >> 0;
			b = $subslice(b, m);
			off = (x = new $Int64(0, m), new $Int64(off.$high + x.$high, off.$low + x.$low));
		}
		return [n, err];
	};
	File.prototype.WriteAt = function(b, off) { return this.$val.WriteAt(b, off); };
	File.ptr.prototype.Seek = function(offset, whence) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, e, err = $ifaceNil, f, r, ret = new $Int64(0, 0);
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = new $Int64(0, 0); _tmp$1 = $pkg.ErrInvalid; ret = _tmp; err = _tmp$1;
			return [ret, err];
		}
		_tuple = f.seek(offset, whence); r = _tuple[0]; e = _tuple[1];
		if ($interfaceIsEqual(e, $ifaceNil) && !(f.file.dirinfo === ptrType.nil) && !((r.$high === 0 && r.$low === 0))) {
			e = new syscall.Errno(21);
		}
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			_tmp$2 = new $Int64(0, 0); _tmp$3 = new PathError.ptr("seek", f.file.name, e); ret = _tmp$2; err = _tmp$3;
			return [ret, err];
		}
		_tmp$4 = r; _tmp$5 = $ifaceNil; ret = _tmp$4; err = _tmp$5;
		return [ret, err];
	};
	File.prototype.Seek = function(offset, whence) { return this.$val.Seek(offset, whence); };
	File.ptr.prototype.WriteString = function(s) {
		var _tmp, _tmp$1, _tuple, err = $ifaceNil, f, ret = 0;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = 0; _tmp$1 = $pkg.ErrInvalid; ret = _tmp; err = _tmp$1;
			return [ret, err];
		}
		_tuple = f.Write(new sliceType$1($stringToBytes(s))); ret = _tuple[0]; err = _tuple[1];
		return [ret, err];
	};
	File.prototype.WriteString = function(s) { return this.$val.WriteString(s); };
	File.ptr.prototype.Chdir = function() {
		var e, f;
		f = this;
		if (f === ptrType$2.nil) {
			return $pkg.ErrInvalid;
		}
		e = syscall.Fchdir(f.file.fd);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			return new PathError.ptr("chdir", f.file.name, e);
		}
		return $ifaceNil;
	};
	File.prototype.Chdir = function() { return this.$val.Chdir(); };
	fixCount = function(n, err) {
		if (n < 0) {
			n = 0;
		}
		return [n, err];
	};
	sigpipe = function() {
		$panic("Native function not implemented: os.sigpipe");
	};
	syscallMode = function(i) {
		var o = 0;
		o = (o | ((new FileMode(i).Perm() >>> 0))) >>> 0;
		if (!((((i & 8388608) >>> 0) === 0))) {
			o = (o | (2048)) >>> 0;
		}
		if (!((((i & 4194304) >>> 0) === 0))) {
			o = (o | (1024)) >>> 0;
		}
		if (!((((i & 1048576) >>> 0) === 0))) {
			o = (o | (512)) >>> 0;
		}
		return o;
	};
	File.ptr.prototype.Chmod = function(mode) {
		var e, f;
		f = this;
		if (f === ptrType$2.nil) {
			return $pkg.ErrInvalid;
		}
		e = syscall.Fchmod(f.file.fd, syscallMode(mode));
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			return new PathError.ptr("chmod", f.file.name, e);
		}
		return $ifaceNil;
	};
	File.prototype.Chmod = function(mode) { return this.$val.Chmod(mode); };
	File.ptr.prototype.Chown = function(uid, gid) {
		var e, f;
		f = this;
		if (f === ptrType$2.nil) {
			return $pkg.ErrInvalid;
		}
		e = syscall.Fchown(f.file.fd, uid, gid);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			return new PathError.ptr("chown", f.file.name, e);
		}
		return $ifaceNil;
	};
	File.prototype.Chown = function(uid, gid) { return this.$val.Chown(uid, gid); };
	File.ptr.prototype.Truncate = function(size) {
		var e, f;
		f = this;
		if (f === ptrType$2.nil) {
			return $pkg.ErrInvalid;
		}
		e = syscall.Ftruncate(f.file.fd, size);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			return new PathError.ptr("truncate", f.file.name, e);
		}
		return $ifaceNil;
	};
	File.prototype.Truncate = function(size) { return this.$val.Truncate(size); };
	File.ptr.prototype.Sync = function() {
		var e, err = $ifaceNil, f;
		f = this;
		if (f === ptrType$2.nil) {
			err = $pkg.ErrInvalid;
			return err;
		}
		e = syscall.Fsync(f.file.fd);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			err = NewSyscallError("fsync", e);
			return err;
		}
		err = $ifaceNil;
		return err;
	};
	File.prototype.Sync = function() { return this.$val.Sync(); };
	File.ptr.prototype.Fd = function() {
		var f;
		f = this;
		if (f === ptrType$2.nil) {
			return 4294967295;
		}
		return (f.file.fd >>> 0);
	};
	File.prototype.Fd = function() { return this.$val.Fd(); };
	NewFile = $pkg.NewFile = function(fd, name) {
		var f, fdi;
		fdi = (fd >> 0);
		if (fdi < 0) {
			return ptrType$2.nil;
		}
		f = new File.ptr(new file.ptr(fdi, name, ptrType.nil, 0));
		runtime.SetFinalizer(f.file, new funcType$1($methodExpr(ptrType$11.prototype.close)));
		return f;
	};
	epipecheck = function(file$1, e) {
		if ($interfaceIsEqual(e, new syscall.Errno(32))) {
			if (atomic.AddInt32(new ptrType$12(function() { return this.$target.file.nepipe; }, function($v) { this.$target.file.nepipe = $v; }, file$1), 1) >= 10) {
				sigpipe();
			}
		} else {
			atomic.StoreInt32(new ptrType$12(function() { return this.$target.file.nepipe; }, function($v) { this.$target.file.nepipe = $v; }, file$1), 0);
		}
	};
	File.ptr.prototype.Close = function() {
		var f;
		f = this;
		if (f === ptrType$2.nil) {
			return $pkg.ErrInvalid;
		}
		return f.file.close();
	};
	File.prototype.Close = function() { return this.$val.Close(); };
	file.ptr.prototype.close = function() {
		var e, err, file$1;
		file$1 = this;
		if (file$1 === ptrType$11.nil || file$1.fd < 0) {
			return new syscall.Errno(22);
		}
		err = $ifaceNil;
		e = syscall.Close(file$1.fd);
		if (!($interfaceIsEqual(e, $ifaceNil))) {
			err = new PathError.ptr("close", file$1.name, e);
		}
		file$1.fd = -1;
		runtime.SetFinalizer(file$1, $ifaceNil);
		return err;
	};
	file.prototype.close = function() { return this.$val.close(); };
	File.ptr.prototype.Stat = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, err = $ifaceNil, f, fi = $ifaceNil, stat;
		f = this;
		if (f === ptrType$2.nil) {
			_tmp = $ifaceNil; _tmp$1 = $pkg.ErrInvalid; fi = _tmp; err = _tmp$1;
			return [fi, err];
		}
		stat = $clone(new syscall.Stat_t.ptr(), syscall.Stat_t);
		err = syscall.Fstat(f.file.fd, stat);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp$2 = $ifaceNil; _tmp$3 = new PathError.ptr("stat", f.file.name, err); fi = _tmp$2; err = _tmp$3;
			return [fi, err];
		}
		_tmp$4 = fileInfoFromStat(stat, f.file.name); _tmp$5 = $ifaceNil; fi = _tmp$4; err = _tmp$5;
		return [fi, err];
	};
	File.prototype.Stat = function() { return this.$val.Stat(); };
	Lstat = $pkg.Lstat = function(name) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, err = $ifaceNil, fi = $ifaceNil, stat;
		stat = $clone(new syscall.Stat_t.ptr(), syscall.Stat_t);
		err = syscall.Lstat(name, stat);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp = $ifaceNil; _tmp$1 = new PathError.ptr("lstat", name, err); fi = _tmp; err = _tmp$1;
			return [fi, err];
		}
		_tmp$2 = fileInfoFromStat(stat, name); _tmp$3 = $ifaceNil; fi = _tmp$2; err = _tmp$3;
		return [fi, err];
	};
	File.ptr.prototype.readdir = function(n) {
		var _i, _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, _tuple$1, dirname, err = $ifaceNil, f, fi = sliceType$2.nil, filename, fip, lerr, names;
		f = this;
		dirname = f.file.name;
		if (dirname === "") {
			dirname = ".";
		}
		_tuple = f.Readdirnames(n); names = _tuple[0]; err = _tuple[1];
		fi = $makeSlice(sliceType$2, 0, names.$length);
		_ref = names;
		_i = 0;
		while (_i < _ref.$length) {
			filename = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			_tuple$1 = lstat(dirname + "/" + filename); fip = _tuple$1[0]; lerr = _tuple$1[1];
			if (IsNotExist(lerr)) {
				_i++;
				continue;
			}
			if (!($interfaceIsEqual(lerr, $ifaceNil))) {
				_tmp = fi; _tmp$1 = lerr; fi = _tmp; err = _tmp$1;
				return [fi, err];
			}
			fi = $append(fi, fip);
			_i++;
		}
		_tmp$2 = fi; _tmp$3 = err; fi = _tmp$2; err = _tmp$3;
		return [fi, err];
	};
	File.prototype.readdir = function(n) { return this.$val.readdir(n); };
	File.ptr.prototype.read = function(b) {
		var _tuple, _tuple$1, err = $ifaceNil, f, n = 0;
		f = this;
		if (true && b.$length > 1073741824) {
			b = $subslice(b, 0, 1073741824);
		}
		_tuple$1 = syscall.Read(f.file.fd, b);
		_tuple = fixCount(_tuple$1[0], _tuple$1[1]); n = _tuple[0]; err = _tuple[1];
		return [n, err];
	};
	File.prototype.read = function(b) { return this.$val.read(b); };
	File.ptr.prototype.pread = function(b, off) {
		var _tuple, _tuple$1, err = $ifaceNil, f, n = 0;
		f = this;
		if (true && b.$length > 1073741824) {
			b = $subslice(b, 0, 1073741824);
		}
		_tuple$1 = syscall.Pread(f.file.fd, b, off);
		_tuple = fixCount(_tuple$1[0], _tuple$1[1]); n = _tuple[0]; err = _tuple[1];
		return [n, err];
	};
	File.prototype.pread = function(b, off) { return this.$val.pread(b, off); };
	File.ptr.prototype.write = function(b) {
		var _tmp, _tmp$1, _tuple, _tuple$1, bcap, err = $ifaceNil, err$1, f, m, n = 0;
		f = this;
		while (true) {
			bcap = b;
			if (true && bcap.$length > 1073741824) {
				bcap = $subslice(bcap, 0, 1073741824);
			}
			_tuple$1 = syscall.Write(f.file.fd, bcap);
			_tuple = fixCount(_tuple$1[0], _tuple$1[1]); m = _tuple[0]; err$1 = _tuple[1];
			n = n + (m) >> 0;
			if (0 < m && m < bcap.$length || $interfaceIsEqual(err$1, new syscall.Errno(4))) {
				b = $subslice(b, m);
				continue;
			}
			if (true && !((bcap.$length === b.$length)) && $interfaceIsEqual(err$1, $ifaceNil)) {
				b = $subslice(b, m);
				continue;
			}
			_tmp = n; _tmp$1 = err$1; n = _tmp; err = _tmp$1;
			return [n, err];
		}
	};
	File.prototype.write = function(b) { return this.$val.write(b); };
	File.ptr.prototype.pwrite = function(b, off) {
		var _tuple, _tuple$1, err = $ifaceNil, f, n = 0;
		f = this;
		if (true && b.$length > 1073741824) {
			b = $subslice(b, 0, 1073741824);
		}
		_tuple$1 = syscall.Pwrite(f.file.fd, b, off);
		_tuple = fixCount(_tuple$1[0], _tuple$1[1]); n = _tuple[0]; err = _tuple[1];
		return [n, err];
	};
	File.prototype.pwrite = function(b, off) { return this.$val.pwrite(b, off); };
	File.ptr.prototype.seek = function(offset, whence) {
		var _tuple, err = $ifaceNil, f, ret = new $Int64(0, 0);
		f = this;
		_tuple = syscall.Seek(f.file.fd, offset, whence); ret = _tuple[0]; err = _tuple[1];
		return [ret, err];
	};
	File.prototype.seek = function(offset, whence) { return this.$val.seek(offset, whence); };
	basename = function(name) {
		var i;
		i = name.length - 1 >> 0;
		while (i > 0 && (name.charCodeAt(i) === 47)) {
			name = name.substring(0, i);
			i = i - (1) >> 0;
		}
		i = i - (1) >> 0;
		while (i >= 0) {
			if (name.charCodeAt(i) === 47) {
				name = name.substring((i + 1 >> 0));
				break;
			}
			i = i - (1) >> 0;
		}
		return name;
	};
	init$1 = function() {
		useSyscallwd = useSyscallwdDarwin;
	};
	useSyscallwdDarwin = function(err) {
		return !($interfaceIsEqual(err, new syscall.Errno(45)));
	};
	init$2 = function() {
		$pkg.Args = runtime_args();
	};
	Exit = $pkg.Exit = function(code) {
		syscall.Exit(code);
	};
	fileInfoFromStat = function(st, name) {
		var _ref, fs;
		fs = new fileStat.ptr(basename(name), st.Size, 0, $clone(timespecToTime(st.Mtimespec), time.Time), st);
		fs.mode = (((st.Mode & 511) >>> 0) >>> 0);
		_ref = (st.Mode & 61440) >>> 0;
		if (_ref === 24576 || _ref === 57344) {
			fs.mode = (fs.mode | (67108864)) >>> 0;
		} else if (_ref === 8192) {
			fs.mode = (fs.mode | (69206016)) >>> 0;
		} else if (_ref === 16384) {
			fs.mode = (fs.mode | (2147483648)) >>> 0;
		} else if (_ref === 4096) {
			fs.mode = (fs.mode | (33554432)) >>> 0;
		} else if (_ref === 40960) {
			fs.mode = (fs.mode | (134217728)) >>> 0;
		} else if (_ref === 32768) {
		} else if (_ref === 49152) {
			fs.mode = (fs.mode | (16777216)) >>> 0;
		}
		if (!((((st.Mode & 1024) >>> 0) === 0))) {
			fs.mode = (fs.mode | (4194304)) >>> 0;
		}
		if (!((((st.Mode & 2048) >>> 0) === 0))) {
			fs.mode = (fs.mode | (8388608)) >>> 0;
		}
		if (!((((st.Mode & 512) >>> 0) === 0))) {
			fs.mode = (fs.mode | (1048576)) >>> 0;
		}
		return fs;
	};
	timespecToTime = function(ts) {
		ts = $clone(ts, syscall.Timespec);
		return time.Unix(ts.Sec, ts.Nsec);
	};
	init$3 = function() {
		var _i, _ref, _rune, _tuple, err, i, osver;
		_tuple = syscall.Sysctl("kern.osrelease"); osver = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return;
		}
		i = 0;
		_ref = osver;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			i = _i;
			if (!((osver.charCodeAt(i) === 46))) {
				_i += _rune[1];
				continue;
			}
			_i += _rune[1];
		}
		if (i > 2 || (i === 2) && osver.charCodeAt(0) >= 49 && osver.charCodeAt(1) >= 49) {
			supportsCloseOnExec = true;
		}
	};
	FileMode.prototype.String = function() {
		var _i, _i$1, _ref, _ref$1, _rune, _rune$1, buf, c, c$1, i, i$1, m, w, y, y$1;
		m = this.$val;
		buf = $clone(arrayType.zero(), arrayType);
		w = 0;
		_ref = "dalTLDpSugct";
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			i = _i;
			c = _rune[0];
			if (!((((m & (((y = ((31 - i >> 0) >>> 0), y < 32 ? (1 << y) : 0) >>> 0))) >>> 0) === 0))) {
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = (c << 24 >>> 24);
				w = w + (1) >> 0;
			}
			_i += _rune[1];
		}
		if (w === 0) {
			(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 45;
			w = w + (1) >> 0;
		}
		_ref$1 = "rwxrwxrwx";
		_i$1 = 0;
		while (_i$1 < _ref$1.length) {
			_rune$1 = $decodeRune(_ref$1, _i$1);
			i$1 = _i$1;
			c$1 = _rune$1[0];
			if (!((((m & (((y$1 = ((8 - i$1 >> 0) >>> 0), y$1 < 32 ? (1 << y$1) : 0) >>> 0))) >>> 0) === 0))) {
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = (c$1 << 24 >>> 24);
			} else {
				(w < 0 || w >= buf.length) ? $throwRuntimeError("index out of range") : buf[w] = 45;
			}
			w = w + (1) >> 0;
			_i$1 += _rune$1[1];
		}
		return $bytesToString($subslice(new sliceType$1(buf), 0, w));
	};
	$ptrType(FileMode).prototype.String = function() { return new FileMode(this.$get()).String(); };
	FileMode.prototype.IsDir = function() {
		var m;
		m = this.$val;
		return !((((m & 2147483648) >>> 0) === 0));
	};
	$ptrType(FileMode).prototype.IsDir = function() { return new FileMode(this.$get()).IsDir(); };
	FileMode.prototype.IsRegular = function() {
		var m;
		m = this.$val;
		return ((m & 2399141888) >>> 0) === 0;
	};
	$ptrType(FileMode).prototype.IsRegular = function() { return new FileMode(this.$get()).IsRegular(); };
	FileMode.prototype.Perm = function() {
		var m;
		m = this.$val;
		return (m & 511) >>> 0;
	};
	$ptrType(FileMode).prototype.Perm = function() { return new FileMode(this.$get()).Perm(); };
	fileStat.ptr.prototype.Name = function() {
		var fs;
		fs = this;
		return fs.name;
	};
	fileStat.prototype.Name = function() { return this.$val.Name(); };
	fileStat.ptr.prototype.IsDir = function() {
		var fs;
		fs = this;
		return new FileMode(fs.Mode()).IsDir();
	};
	fileStat.prototype.IsDir = function() { return this.$val.IsDir(); };
	fileStat.ptr.prototype.Size = function() {
		var fs;
		fs = this;
		return fs.size;
	};
	fileStat.prototype.Size = function() { return this.$val.Size(); };
	fileStat.ptr.prototype.Mode = function() {
		var fs;
		fs = this;
		return fs.mode;
	};
	fileStat.prototype.Mode = function() { return this.$val.Mode(); };
	fileStat.ptr.prototype.ModTime = function() {
		var fs;
		fs = this;
		return fs.modTime;
	};
	fileStat.prototype.ModTime = function() { return this.$val.ModTime(); };
	fileStat.ptr.prototype.Sys = function() {
		var fs;
		fs = this;
		return fs.sys;
	};
	fileStat.prototype.Sys = function() { return this.$val.Sys(); };
	ptrType$3.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$15.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$4.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	File.methods = [{prop: "close", name: "close", pkg: "os", type: $funcType([], [$error], false)}];
	ptrType$2.methods = [{prop: "Chdir", name: "Chdir", pkg: "", type: $funcType([], [$error], false)}, {prop: "Chmod", name: "Chmod", pkg: "", type: $funcType([FileMode], [$error], false)}, {prop: "Chown", name: "Chown", pkg: "", type: $funcType([$Int, $Int], [$error], false)}, {prop: "Close", name: "Close", pkg: "", type: $funcType([], [$error], false)}, {prop: "Fd", name: "Fd", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "Read", name: "Read", pkg: "", type: $funcType([sliceType$1], [$Int, $error], false)}, {prop: "ReadAt", name: "ReadAt", pkg: "", type: $funcType([sliceType$1, $Int64], [$Int, $error], false)}, {prop: "Readdir", name: "Readdir", pkg: "", type: $funcType([$Int], [sliceType$2, $error], false)}, {prop: "Readdirnames", name: "Readdirnames", pkg: "", type: $funcType([$Int], [sliceType, $error], false)}, {prop: "Seek", name: "Seek", pkg: "", type: $funcType([$Int64, $Int], [$Int64, $error], false)}, {prop: "Stat", name: "Stat", pkg: "", type: $funcType([], [FileInfo, $error], false)}, {prop: "Sync", name: "Sync", pkg: "", type: $funcType([], [$error], false)}, {prop: "Truncate", name: "Truncate", pkg: "", type: $funcType([$Int64], [$error], false)}, {prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType$1], [$Int, $error], false)}, {prop: "WriteAt", name: "WriteAt", pkg: "", type: $funcType([sliceType$1, $Int64], [$Int, $error], false)}, {prop: "WriteString", name: "WriteString", pkg: "", type: $funcType([$String], [$Int, $error], false)}, {prop: "close", name: "close", pkg: "os", type: $funcType([], [$error], false)}, {prop: "pread", name: "pread", pkg: "os", type: $funcType([sliceType$1, $Int64], [$Int, $error], false)}, {prop: "pwrite", name: "pwrite", pkg: "os", type: $funcType([sliceType$1, $Int64], [$Int, $error], false)}, {prop: "read", name: "read", pkg: "os", type: $funcType([sliceType$1], [$Int, $error], false)}, {prop: "readdir", name: "readdir", pkg: "os", type: $funcType([$Int], [sliceType$2, $error], false)}, {prop: "readdirnames", name: "readdirnames", pkg: "os", type: $funcType([$Int], [sliceType, $error], false)}, {prop: "seek", name: "seek", pkg: "os", type: $funcType([$Int64, $Int], [$Int64, $error], false)}, {prop: "write", name: "write", pkg: "os", type: $funcType([sliceType$1], [$Int, $error], false)}];
	ptrType$11.methods = [{prop: "close", name: "close", pkg: "os", type: $funcType([], [$error], false)}];
	FileMode.methods = [{prop: "IsDir", name: "IsDir", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsRegular", name: "IsRegular", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Perm", name: "Perm", pkg: "", type: $funcType([], [FileMode], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$16.methods = [{prop: "IsDir", name: "IsDir", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsRegular", name: "IsRegular", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Perm", name: "Perm", pkg: "", type: $funcType([], [FileMode], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$14.methods = [{prop: "IsDir", name: "IsDir", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ModTime", name: "ModTime", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Mode", name: "Mode", pkg: "", type: $funcType([], [FileMode], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Sys", name: "Sys", pkg: "", type: $funcType([], [$emptyInterface], false)}];
	PathError.init([{prop: "Op", name: "Op", pkg: "", type: $String, tag: ""}, {prop: "Path", name: "Path", pkg: "", type: $String, tag: ""}, {prop: "Err", name: "Err", pkg: "", type: $error, tag: ""}]);
	SyscallError.init([{prop: "Syscall", name: "Syscall", pkg: "", type: $String, tag: ""}, {prop: "Err", name: "Err", pkg: "", type: $error, tag: ""}]);
	LinkError.init([{prop: "Op", name: "Op", pkg: "", type: $String, tag: ""}, {prop: "Old", name: "Old", pkg: "", type: $String, tag: ""}, {prop: "New", name: "New", pkg: "", type: $String, tag: ""}, {prop: "Err", name: "Err", pkg: "", type: $error, tag: ""}]);
	File.init([{prop: "file", name: "", pkg: "os", type: ptrType$11, tag: ""}]);
	file.init([{prop: "fd", name: "fd", pkg: "os", type: $Int, tag: ""}, {prop: "name", name: "name", pkg: "os", type: $String, tag: ""}, {prop: "dirinfo", name: "dirinfo", pkg: "os", type: ptrType, tag: ""}, {prop: "nepipe", name: "nepipe", pkg: "os", type: $Int32, tag: ""}]);
	dirInfo.init([{prop: "buf", name: "buf", pkg: "os", type: sliceType$1, tag: ""}, {prop: "nbuf", name: "nbuf", pkg: "os", type: $Int, tag: ""}, {prop: "bufp", name: "bufp", pkg: "os", type: $Int, tag: ""}]);
	FileInfo.init([{prop: "IsDir", name: "IsDir", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ModTime", name: "ModTime", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Mode", name: "Mode", pkg: "", type: $funcType([], [FileMode], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Sys", name: "Sys", pkg: "", type: $funcType([], [$emptyInterface], false)}]);
	fileStat.init([{prop: "name", name: "name", pkg: "os", type: $String, tag: ""}, {prop: "size", name: "size", pkg: "os", type: $Int64, tag: ""}, {prop: "mode", name: "mode", pkg: "os", type: FileMode, tag: ""}, {prop: "modTime", name: "modTime", pkg: "os", type: time.Time, tag: ""}, {prop: "sys", name: "sys", pkg: "os", type: $emptyInterface, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_os = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = atomic.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = syscall.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.Args = sliceType.nil;
		supportsCloseOnExec = false;
		$pkg.ErrInvalid = errors.New("invalid argument");
		$pkg.ErrPermission = errors.New("permission denied");
		$pkg.ErrExist = errors.New("file already exists");
		$pkg.ErrNotExist = errors.New("file does not exist");
		errFinished = errors.New("os: process already finished");
		$pkg.Stdin = NewFile((syscall.Stdin >>> 0), "/dev/stdin");
		$pkg.Stdout = NewFile((syscall.Stdout >>> 0), "/dev/stdout");
		$pkg.Stderr = NewFile((syscall.Stderr >>> 0), "/dev/stderr");
		useSyscallwd = (function(param) {
			return true;
		});
		lstat = Lstat;
		init();
		init$1();
		init$2();
		init$3();
		/* */ } return; } }; $init_os.$blocking = true; return $init_os;
	};
	return $pkg;
})();
$packages["reflect"] = (function() {
	var $pkg = {}, js, math, runtime, strconv, sync, mapIter, Type, Kind, rtype, typeAlg, method, uncommonType, ChanDir, arrayType, chanType, funcType, imethod, interfaceType, mapType, ptrType, sliceType, structField, structType, Method, StructField, StructTag, fieldScan, Value, flag, ValueError, nonEmptyInterface, ptrType$1, ptrType$2, sliceType$1, ptrType$3, arrayType$1, ptrType$4, ptrType$5, sliceType$2, sliceType$3, sliceType$4, sliceType$5, structType$5, sliceType$6, ptrType$6, arrayType$2, structType$6, ptrType$7, sliceType$7, ptrType$8, ptrType$9, ptrType$10, ptrType$11, sliceType$9, sliceType$10, ptrType$12, ptrType$17, sliceType$12, sliceType$13, ptrType$18, funcType$2, ptrType$19, funcType$3, funcType$4, ptrType$20, ptrType$21, ptrType$22, ptrType$23, ptrType$24, ptrType$25, arrayType$3, ptrType$27, ptrType$28, ptrType$29, initialized, stringPtrMap, jsObject, jsContainer, kindNames, uint8Type, init, jsType, reflectType, newStringPtr, isWrapped, copyStruct, makeValue, MakeSlice, TypeOf, ValueOf, SliceOf, Zero, unsafe_New, makeInt, memmove, makemap, mapaccess, mapassign, mapdelete, mapiterinit, mapiterkey, mapiternext, maplen, cvtDirect, Copy, methodReceiver, valueInterface, ifaceE2I, methodName, makeMethodValue, wrapJsObject, unwrapJsObject, PtrTo, implements$1, directlyAssignable, haveIdenticalUnderlyingType, toType, ifaceIndir, overflowFloat32, typesMustMatch, MakeMap, New, convertOp, makeFloat, makeComplex, makeString, makeBytes, makeRunes, cvtInt, cvtUint, cvtFloatInt, cvtFloatUint, cvtIntFloat, cvtUintFloat, cvtFloat, cvtComplex, cvtIntString, cvtUintString, cvtBytesString, cvtStringBytes, cvtRunesString, cvtStringRunes, cvtT2I, cvtI2I;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	math = $packages["math"];
	runtime = $packages["runtime"];
	strconv = $packages["strconv"];
	sync = $packages["sync"];
	mapIter = $pkg.mapIter = $newType(0, $kindStruct, "reflect.mapIter", "mapIter", "reflect", function(t_, m_, keys_, i_) {
		this.$val = this;
		this.t = t_ !== undefined ? t_ : $ifaceNil;
		this.m = m_ !== undefined ? m_ : null;
		this.keys = keys_ !== undefined ? keys_ : null;
		this.i = i_ !== undefined ? i_ : 0;
	});
	Type = $pkg.Type = $newType(8, $kindInterface, "reflect.Type", "Type", "reflect", null);
	Kind = $pkg.Kind = $newType(4, $kindUint, "reflect.Kind", "Kind", "reflect", null);
	rtype = $pkg.rtype = $newType(0, $kindStruct, "reflect.rtype", "rtype", "reflect", function(size_, hash_, _$2_, align_, fieldAlign_, kind_, alg_, gc_, string_, uncommonType_, ptrToThis_, zero_) {
		this.$val = this;
		this.size = size_ !== undefined ? size_ : 0;
		this.hash = hash_ !== undefined ? hash_ : 0;
		this._$2 = _$2_ !== undefined ? _$2_ : 0;
		this.align = align_ !== undefined ? align_ : 0;
		this.fieldAlign = fieldAlign_ !== undefined ? fieldAlign_ : 0;
		this.kind = kind_ !== undefined ? kind_ : 0;
		this.alg = alg_ !== undefined ? alg_ : ptrType$3.nil;
		this.gc = gc_ !== undefined ? gc_ : arrayType$1.zero();
		this.string = string_ !== undefined ? string_ : ptrType$4.nil;
		this.uncommonType = uncommonType_ !== undefined ? uncommonType_ : ptrType$5.nil;
		this.ptrToThis = ptrToThis_ !== undefined ? ptrToThis_ : ptrType$1.nil;
		this.zero = zero_ !== undefined ? zero_ : 0;
	});
	typeAlg = $pkg.typeAlg = $newType(0, $kindStruct, "reflect.typeAlg", "typeAlg", "reflect", function(hash_, equal_) {
		this.$val = this;
		this.hash = hash_ !== undefined ? hash_ : $throwNilPointerError;
		this.equal = equal_ !== undefined ? equal_ : $throwNilPointerError;
	});
	method = $pkg.method = $newType(0, $kindStruct, "reflect.method", "method", "reflect", function(name_, pkgPath_, mtyp_, typ_, ifn_, tfn_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : ptrType$4.nil;
		this.pkgPath = pkgPath_ !== undefined ? pkgPath_ : ptrType$4.nil;
		this.mtyp = mtyp_ !== undefined ? mtyp_ : ptrType$1.nil;
		this.typ = typ_ !== undefined ? typ_ : ptrType$1.nil;
		this.ifn = ifn_ !== undefined ? ifn_ : 0;
		this.tfn = tfn_ !== undefined ? tfn_ : 0;
	});
	uncommonType = $pkg.uncommonType = $newType(0, $kindStruct, "reflect.uncommonType", "uncommonType", "reflect", function(name_, pkgPath_, methods_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : ptrType$4.nil;
		this.pkgPath = pkgPath_ !== undefined ? pkgPath_ : ptrType$4.nil;
		this.methods = methods_ !== undefined ? methods_ : sliceType$2.nil;
	});
	ChanDir = $pkg.ChanDir = $newType(4, $kindInt, "reflect.ChanDir", "ChanDir", "reflect", null);
	arrayType = $pkg.arrayType = $newType(0, $kindStruct, "reflect.arrayType", "arrayType", "reflect", function(rtype_, elem_, slice_, len_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.elem = elem_ !== undefined ? elem_ : ptrType$1.nil;
		this.slice = slice_ !== undefined ? slice_ : ptrType$1.nil;
		this.len = len_ !== undefined ? len_ : 0;
	});
	chanType = $pkg.chanType = $newType(0, $kindStruct, "reflect.chanType", "chanType", "reflect", function(rtype_, elem_, dir_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.elem = elem_ !== undefined ? elem_ : ptrType$1.nil;
		this.dir = dir_ !== undefined ? dir_ : 0;
	});
	funcType = $pkg.funcType = $newType(0, $kindStruct, "reflect.funcType", "funcType", "reflect", function(rtype_, dotdotdot_, in$2_, out_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.dotdotdot = dotdotdot_ !== undefined ? dotdotdot_ : false;
		this.in$2 = in$2_ !== undefined ? in$2_ : sliceType$3.nil;
		this.out = out_ !== undefined ? out_ : sliceType$3.nil;
	});
	imethod = $pkg.imethod = $newType(0, $kindStruct, "reflect.imethod", "imethod", "reflect", function(name_, pkgPath_, typ_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : ptrType$4.nil;
		this.pkgPath = pkgPath_ !== undefined ? pkgPath_ : ptrType$4.nil;
		this.typ = typ_ !== undefined ? typ_ : ptrType$1.nil;
	});
	interfaceType = $pkg.interfaceType = $newType(0, $kindStruct, "reflect.interfaceType", "interfaceType", "reflect", function(rtype_, methods_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.methods = methods_ !== undefined ? methods_ : sliceType$4.nil;
	});
	mapType = $pkg.mapType = $newType(0, $kindStruct, "reflect.mapType", "mapType", "reflect", function(rtype_, key_, elem_, bucket_, hmap_, keysize_, indirectkey_, valuesize_, indirectvalue_, bucketsize_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.key = key_ !== undefined ? key_ : ptrType$1.nil;
		this.elem = elem_ !== undefined ? elem_ : ptrType$1.nil;
		this.bucket = bucket_ !== undefined ? bucket_ : ptrType$1.nil;
		this.hmap = hmap_ !== undefined ? hmap_ : ptrType$1.nil;
		this.keysize = keysize_ !== undefined ? keysize_ : 0;
		this.indirectkey = indirectkey_ !== undefined ? indirectkey_ : 0;
		this.valuesize = valuesize_ !== undefined ? valuesize_ : 0;
		this.indirectvalue = indirectvalue_ !== undefined ? indirectvalue_ : 0;
		this.bucketsize = bucketsize_ !== undefined ? bucketsize_ : 0;
	});
	ptrType = $pkg.ptrType = $newType(0, $kindStruct, "reflect.ptrType", "ptrType", "reflect", function(rtype_, elem_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.elem = elem_ !== undefined ? elem_ : ptrType$1.nil;
	});
	sliceType = $pkg.sliceType = $newType(0, $kindStruct, "reflect.sliceType", "sliceType", "reflect", function(rtype_, elem_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.elem = elem_ !== undefined ? elem_ : ptrType$1.nil;
	});
	structField = $pkg.structField = $newType(0, $kindStruct, "reflect.structField", "structField", "reflect", function(name_, pkgPath_, typ_, tag_, offset_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : ptrType$4.nil;
		this.pkgPath = pkgPath_ !== undefined ? pkgPath_ : ptrType$4.nil;
		this.typ = typ_ !== undefined ? typ_ : ptrType$1.nil;
		this.tag = tag_ !== undefined ? tag_ : ptrType$4.nil;
		this.offset = offset_ !== undefined ? offset_ : 0;
	});
	structType = $pkg.structType = $newType(0, $kindStruct, "reflect.structType", "structType", "reflect", function(rtype_, fields_) {
		this.$val = this;
		this.rtype = rtype_ !== undefined ? rtype_ : new rtype.ptr();
		this.fields = fields_ !== undefined ? fields_ : sliceType$5.nil;
	});
	Method = $pkg.Method = $newType(0, $kindStruct, "reflect.Method", "Method", "reflect", function(Name_, PkgPath_, Type_, Func_, Index_) {
		this.$val = this;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.PkgPath = PkgPath_ !== undefined ? PkgPath_ : "";
		this.Type = Type_ !== undefined ? Type_ : $ifaceNil;
		this.Func = Func_ !== undefined ? Func_ : new Value.ptr();
		this.Index = Index_ !== undefined ? Index_ : 0;
	});
	StructField = $pkg.StructField = $newType(0, $kindStruct, "reflect.StructField", "StructField", "reflect", function(Name_, PkgPath_, Type_, Tag_, Offset_, Index_, Anonymous_) {
		this.$val = this;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.PkgPath = PkgPath_ !== undefined ? PkgPath_ : "";
		this.Type = Type_ !== undefined ? Type_ : $ifaceNil;
		this.Tag = Tag_ !== undefined ? Tag_ : "";
		this.Offset = Offset_ !== undefined ? Offset_ : 0;
		this.Index = Index_ !== undefined ? Index_ : sliceType$9.nil;
		this.Anonymous = Anonymous_ !== undefined ? Anonymous_ : false;
	});
	StructTag = $pkg.StructTag = $newType(8, $kindString, "reflect.StructTag", "StructTag", "reflect", null);
	fieldScan = $pkg.fieldScan = $newType(0, $kindStruct, "reflect.fieldScan", "fieldScan", "reflect", function(typ_, index_) {
		this.$val = this;
		this.typ = typ_ !== undefined ? typ_ : ptrType$12.nil;
		this.index = index_ !== undefined ? index_ : sliceType$9.nil;
	});
	Value = $pkg.Value = $newType(0, $kindStruct, "reflect.Value", "Value", "reflect", function(typ_, ptr_, flag_) {
		this.$val = this;
		this.typ = typ_ !== undefined ? typ_ : ptrType$1.nil;
		this.ptr = ptr_ !== undefined ? ptr_ : 0;
		this.flag = flag_ !== undefined ? flag_ : 0;
	});
	flag = $pkg.flag = $newType(4, $kindUintptr, "reflect.flag", "flag", "reflect", null);
	ValueError = $pkg.ValueError = $newType(0, $kindStruct, "reflect.ValueError", "ValueError", "reflect", function(Method_, Kind_) {
		this.$val = this;
		this.Method = Method_ !== undefined ? Method_ : "";
		this.Kind = Kind_ !== undefined ? Kind_ : 0;
	});
	nonEmptyInterface = $pkg.nonEmptyInterface = $newType(0, $kindStruct, "reflect.nonEmptyInterface", "nonEmptyInterface", "reflect", function(itab_, word_) {
		this.$val = this;
		this.itab = itab_ !== undefined ? itab_ : ptrType$7.nil;
		this.word = word_ !== undefined ? word_ : 0;
	});
		ptrType$1 = $ptrType(rtype);
		ptrType$2 = $ptrType(ptrType);
		sliceType$1 = $sliceType($String);
		ptrType$3 = $ptrType(typeAlg);
		arrayType$1 = $arrayType($UnsafePointer, 2);
		ptrType$4 = $ptrType($String);
		ptrType$5 = $ptrType(uncommonType);
		sliceType$2 = $sliceType(method);
		sliceType$3 = $sliceType(ptrType$1);
		sliceType$4 = $sliceType(imethod);
		sliceType$5 = $sliceType(structField);
		structType$5 = $structType([{prop: "str", name: "str", pkg: "reflect", type: $String, tag: ""}]);
		sliceType$6 = $sliceType(Value);
		ptrType$6 = $ptrType(nonEmptyInterface);
		arrayType$2 = $arrayType($UnsafePointer, 100000);
		structType$6 = $structType([{prop: "ityp", name: "ityp", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "typ", name: "typ", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "link", name: "link", pkg: "reflect", type: $UnsafePointer, tag: ""}, {prop: "bad", name: "bad", pkg: "reflect", type: $Int32, tag: ""}, {prop: "unused", name: "unused", pkg: "reflect", type: $Int32, tag: ""}, {prop: "fun", name: "fun", pkg: "reflect", type: arrayType$2, tag: ""}]);
		ptrType$7 = $ptrType(structType$6);
		sliceType$7 = $sliceType(js.Object);
		ptrType$8 = $ptrType($Uint8);
		ptrType$9 = $ptrType(method);
		ptrType$10 = $ptrType(interfaceType);
		ptrType$11 = $ptrType(imethod);
		sliceType$9 = $sliceType($Int);
		sliceType$10 = $sliceType(fieldScan);
		ptrType$12 = $ptrType(structType);
		ptrType$17 = $ptrType($UnsafePointer);
		sliceType$12 = $sliceType($Uint8);
		sliceType$13 = $sliceType($Int32);
		ptrType$18 = $ptrType(funcType);
		funcType$2 = $funcType([$String], [$Bool], false);
		ptrType$19 = $ptrType(Kind);
		funcType$3 = $funcType([$UnsafePointer, $Uintptr, $Uintptr], [$Uintptr], false);
		funcType$4 = $funcType([$UnsafePointer, $UnsafePointer, $Uintptr], [$Bool], false);
		ptrType$20 = $ptrType(ChanDir);
		ptrType$21 = $ptrType(arrayType);
		ptrType$22 = $ptrType(chanType);
		ptrType$23 = $ptrType(mapType);
		ptrType$24 = $ptrType(sliceType);
		ptrType$25 = $ptrType(StructTag);
		arrayType$3 = $arrayType($Uintptr, 2);
		ptrType$27 = $ptrType(Value);
		ptrType$28 = $ptrType(flag);
		ptrType$29 = $ptrType(ValueError);
	init = function() {
		var used, x, x$1, x$10, x$11, x$12, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		used = (function(i) {
		});
		used((x = new rtype.ptr(0, 0, 0, 0, 0, 0, ptrType$3.nil, arrayType$1.zero(), ptrType$4.nil, ptrType$5.nil, ptrType$1.nil, 0), new x.constructor.elem(x)));
		used((x$1 = new uncommonType.ptr(ptrType$4.nil, ptrType$4.nil, sliceType$2.nil), new x$1.constructor.elem(x$1)));
		used((x$2 = new method.ptr(ptrType$4.nil, ptrType$4.nil, ptrType$1.nil, ptrType$1.nil, 0, 0), new x$2.constructor.elem(x$2)));
		used((x$3 = new arrayType.ptr(new rtype.ptr(), ptrType$1.nil, ptrType$1.nil, 0), new x$3.constructor.elem(x$3)));
		used((x$4 = new chanType.ptr(new rtype.ptr(), ptrType$1.nil, 0), new x$4.constructor.elem(x$4)));
		used((x$5 = new funcType.ptr(new rtype.ptr(), false, sliceType$3.nil, sliceType$3.nil), new x$5.constructor.elem(x$5)));
		used((x$6 = new interfaceType.ptr(new rtype.ptr(), sliceType$4.nil), new x$6.constructor.elem(x$6)));
		used((x$7 = new mapType.ptr(new rtype.ptr(), ptrType$1.nil, ptrType$1.nil, ptrType$1.nil, ptrType$1.nil, 0, 0, 0, 0, 0), new x$7.constructor.elem(x$7)));
		used((x$8 = new ptrType.ptr(new rtype.ptr(), ptrType$1.nil), new x$8.constructor.elem(x$8)));
		used((x$9 = new sliceType.ptr(new rtype.ptr(), ptrType$1.nil), new x$9.constructor.elem(x$9)));
		used((x$10 = new structType.ptr(new rtype.ptr(), sliceType$5.nil), new x$10.constructor.elem(x$10)));
		used((x$11 = new imethod.ptr(ptrType$4.nil, ptrType$4.nil, ptrType$1.nil), new x$11.constructor.elem(x$11)));
		used((x$12 = new structField.ptr(ptrType$4.nil, ptrType$4.nil, ptrType$1.nil, ptrType$4.nil, 0), new x$12.constructor.elem(x$12)));
		initialized = true;
		uint8Type = $assertType(TypeOf(new $Uint8(0)), ptrType$1);
	};
	jsType = function(typ) {
		return typ.jsType;
	};
	reflectType = function(typ) {
		var _i, _i$1, _i$2, _i$3, _i$4, _ref, _ref$1, _ref$2, _ref$3, _ref$4, _ref$5, dir, f, fields, i, i$1, i$2, i$3, i$4, imethods, in$1, m, m$1, methods, methods$1, out, params, reflectFields, reflectMethods, results, rt, setKindType, t;
		if (typ.reflectType === undefined) {
			rt = new rtype.ptr((($parseInt(typ.size) >> 0) >>> 0), 0, 0, 0, 0, (($parseInt(typ.kind) >> 0) << 24 >>> 24), ptrType$3.nil, arrayType$1.zero(), newStringPtr(typ.string), ptrType$5.nil, ptrType$1.nil, 0);
			rt.jsType = typ;
			typ.reflectType = rt;
			methods = typ.methods;
			if (!($internalize(typ.typeName, $String) === "") || !(($parseInt(methods.length) === 0))) {
				reflectMethods = $makeSlice(sliceType$2, $parseInt(methods.length));
				_ref = reflectMethods;
				_i = 0;
				while (_i < _ref.$length) {
					i = _i;
					m = methods[i];
					t = m.type;
					$copy(((i < 0 || i >= reflectMethods.$length) ? $throwRuntimeError("index out of range") : reflectMethods.$array[reflectMethods.$offset + i]), new method.ptr(newStringPtr(m.name), newStringPtr(m.pkg), reflectType(t), reflectType($funcType(new ($global.Array)(typ).concat(t.params), t.results, t.variadic)), 0, 0), method);
					_i++;
				}
				rt.uncommonType = new uncommonType.ptr(newStringPtr(typ.typeName), newStringPtr(typ.pkg), reflectMethods);
				rt.uncommonType.jsType = typ;
			}
			setKindType = (function(kindType) {
				kindType.rtype = rt;
				rt.kindType = kindType;
			});
			_ref$1 = rt.Kind();
			if (_ref$1 === 17) {
				setKindType(new arrayType.ptr(new rtype.ptr(), reflectType(typ.elem), ptrType$1.nil, (($parseInt(typ.len) >> 0) >>> 0)));
			} else if (_ref$1 === 18) {
				dir = 3;
				if (!!(typ.sendOnly)) {
					dir = 2;
				}
				if (!!(typ.recvOnly)) {
					dir = 1;
				}
				setKindType(new chanType.ptr(new rtype.ptr(), reflectType(typ.elem), (dir >>> 0)));
			} else if (_ref$1 === 19) {
				params = typ.params;
				in$1 = $makeSlice(sliceType$3, $parseInt(params.length));
				_ref$2 = in$1;
				_i$1 = 0;
				while (_i$1 < _ref$2.$length) {
					i$1 = _i$1;
					(i$1 < 0 || i$1 >= in$1.$length) ? $throwRuntimeError("index out of range") : in$1.$array[in$1.$offset + i$1] = reflectType(params[i$1]);
					_i$1++;
				}
				results = typ.results;
				out = $makeSlice(sliceType$3, $parseInt(results.length));
				_ref$3 = out;
				_i$2 = 0;
				while (_i$2 < _ref$3.$length) {
					i$2 = _i$2;
					(i$2 < 0 || i$2 >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i$2] = reflectType(results[i$2]);
					_i$2++;
				}
				setKindType(new funcType.ptr($clone(rt, rtype), !!(typ.variadic), in$1, out));
			} else if (_ref$1 === 20) {
				methods$1 = typ.methods;
				imethods = $makeSlice(sliceType$4, $parseInt(methods$1.length));
				_ref$4 = imethods;
				_i$3 = 0;
				while (_i$3 < _ref$4.$length) {
					i$3 = _i$3;
					m$1 = methods$1[i$3];
					$copy(((i$3 < 0 || i$3 >= imethods.$length) ? $throwRuntimeError("index out of range") : imethods.$array[imethods.$offset + i$3]), new imethod.ptr(newStringPtr(m$1.name), newStringPtr(m$1.pkg), reflectType(m$1.type)), imethod);
					_i$3++;
				}
				setKindType(new interfaceType.ptr($clone(rt, rtype), imethods));
			} else if (_ref$1 === 21) {
				setKindType(new mapType.ptr(new rtype.ptr(), reflectType(typ.key), reflectType(typ.elem), ptrType$1.nil, ptrType$1.nil, 0, 0, 0, 0, 0));
			} else if (_ref$1 === 22) {
				setKindType(new ptrType.ptr(new rtype.ptr(), reflectType(typ.elem)));
			} else if (_ref$1 === 23) {
				setKindType(new sliceType.ptr(new rtype.ptr(), reflectType(typ.elem)));
			} else if (_ref$1 === 25) {
				fields = typ.fields;
				reflectFields = $makeSlice(sliceType$5, $parseInt(fields.length));
				_ref$5 = reflectFields;
				_i$4 = 0;
				while (_i$4 < _ref$5.$length) {
					i$4 = _i$4;
					f = fields[i$4];
					$copy(((i$4 < 0 || i$4 >= reflectFields.$length) ? $throwRuntimeError("index out of range") : reflectFields.$array[reflectFields.$offset + i$4]), new structField.ptr(newStringPtr(f.name), newStringPtr(f.pkg), reflectType(f.type), newStringPtr(f.tag), (i$4 >>> 0)), structField);
					_i$4++;
				}
				setKindType(new structType.ptr($clone(rt, rtype), reflectFields));
			}
		}
		return typ.reflectType;
	};
	newStringPtr = function(strObj) {
		var _entry, _key, _tuple, c, ok, ptr, str;
		c = $clone(new structType$5.ptr(), structType$5);
		c.str = strObj;
		str = c.str;
		if (str === "") {
			return ptrType$4.nil;
		}
		_tuple = (_entry = stringPtrMap[str], _entry !== undefined ? [_entry.v, true] : [ptrType$4.nil, false]); ptr = _tuple[0]; ok = _tuple[1];
		if (!ok) {
			ptr = new ptrType$4(function() { return str; }, function($v) { str = $v; });
			_key = str; (stringPtrMap || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: ptr };
		}
		return ptr;
	};
	isWrapped = function(typ) {
		var _ref;
		_ref = typ.Kind();
		if (_ref === 1 || _ref === 2 || _ref === 3 || _ref === 4 || _ref === 5 || _ref === 7 || _ref === 8 || _ref === 9 || _ref === 10 || _ref === 12 || _ref === 13 || _ref === 14 || _ref === 17 || _ref === 21 || _ref === 19 || _ref === 24 || _ref === 25) {
			return true;
		} else if (_ref === 22) {
			return typ.Elem().Kind() === 17;
		}
		return false;
	};
	copyStruct = function(dst, src, typ) {
		var fields, i, prop;
		fields = jsType(typ).fields;
		i = 0;
		while (i < $parseInt(fields.length)) {
			prop = $internalize(fields[i].prop, $String);
			dst[$externalize(prop, $String)] = src[$externalize(prop, $String)];
			i = i + (1) >> 0;
		}
	};
	makeValue = function(t, v, fl) {
		var rt;
		rt = t.common();
		if ((t.Kind() === 17) || (t.Kind() === 25) || (t.Kind() === 22)) {
			return new Value.ptr(rt, v, (fl | (t.Kind() >>> 0)) >>> 0);
		}
		return new Value.ptr(rt, $newDataPointer(v, jsType(rt.ptrTo())), (((fl | (t.Kind() >>> 0)) >>> 0) | 64) >>> 0);
	};
	MakeSlice = $pkg.MakeSlice = function(typ, len, cap) {
		if (!((typ.Kind() === 23))) {
			$panic(new $String("reflect.MakeSlice of non-slice type"));
		}
		if (len < 0) {
			$panic(new $String("reflect.MakeSlice: negative len"));
		}
		if (cap < 0) {
			$panic(new $String("reflect.MakeSlice: negative cap"));
		}
		if (len > cap) {
			$panic(new $String("reflect.MakeSlice: len > cap"));
		}
		return makeValue(typ, $makeSlice(jsType(typ), len, cap, (function() {
			return jsType(typ.Elem()).zero();
		})), 0);
	};
	TypeOf = $pkg.TypeOf = function(i) {
		if (!initialized) {
			return new rtype.ptr(0, 0, 0, 0, 0, 0, ptrType$3.nil, arrayType$1.zero(), ptrType$4.nil, ptrType$5.nil, ptrType$1.nil, 0);
		}
		if ($interfaceIsEqual(i, $ifaceNil)) {
			return $ifaceNil;
		}
		return reflectType(i.constructor);
	};
	ValueOf = $pkg.ValueOf = function(i) {
		if ($interfaceIsEqual(i, $ifaceNil)) {
			return new Value.ptr(ptrType$1.nil, 0, 0);
		}
		return makeValue(reflectType(i.constructor), i.$val, 0);
	};
	rtype.ptr.prototype.ptrTo = function() {
		var t;
		t = this;
		return reflectType($ptrType(jsType(t)));
	};
	rtype.prototype.ptrTo = function() { return this.$val.ptrTo(); };
	SliceOf = $pkg.SliceOf = function(t) {
		return reflectType($sliceType(jsType(t)));
	};
	Zero = $pkg.Zero = function(typ) {
		return makeValue(typ, jsType(typ).zero(), 0);
	};
	unsafe_New = function(typ) {
		var _ref;
		_ref = typ.Kind();
		if (_ref === 25) {
			return new (jsType(typ).ptr)();
		} else if (_ref === 17) {
			return jsType(typ).zero();
		} else {
			return $newDataPointer(jsType(typ).zero(), jsType(typ.ptrTo()));
		}
	};
	makeInt = function(f, bits, t) {
		var _ref, ptr, typ;
		typ = t.common();
		ptr = unsafe_New(typ);
		_ref = typ.Kind();
		if (_ref === 3) {
			ptr.$set((bits.$low << 24 >> 24));
		} else if (_ref === 4) {
			ptr.$set((bits.$low << 16 >> 16));
		} else if (_ref === 2 || _ref === 5) {
			ptr.$set((bits.$low >> 0));
		} else if (_ref === 6) {
			ptr.$set(new $Int64(bits.$high, bits.$low));
		} else if (_ref === 8) {
			ptr.$set((bits.$low << 24 >>> 24));
		} else if (_ref === 9) {
			ptr.$set((bits.$low << 16 >>> 16));
		} else if (_ref === 7 || _ref === 10 || _ref === 12) {
			ptr.$set((bits.$low >>> 0));
		} else if (_ref === 11) {
			ptr.$set(bits);
		}
		return new Value.ptr(typ, ptr, (((f | 64) >>> 0) | (typ.Kind() >>> 0)) >>> 0);
	};
	memmove = function(adst, asrc, n) {
		adst.$set(asrc.$get());
	};
	makemap = function(t) {
		var m = 0;
		m = new ($Map)();
		return m;
	};
	mapaccess = function(t, m, key) {
		var entry, k;
		k = key.$get();
		if (!(k.$key === undefined)) {
			k = k.$key();
		}
		entry = m[$externalize($internalize(k, $String), $String)];
		if (entry === undefined) {
			return 0;
		}
		return $newDataPointer(entry.v, jsType(PtrTo(t.Elem())));
	};
	mapassign = function(t, m, key, val) {
		var entry, et, jsVal, k, kv, newVal;
		kv = key.$get();
		k = kv;
		if (!(k.$key === undefined)) {
			k = k.$key();
		}
		jsVal = val.$get();
		et = t.Elem();
		if (et.Kind() === 25) {
			newVal = jsType(et).zero();
			copyStruct(newVal, jsVal, et);
			jsVal = newVal;
		}
		entry = new ($global.Object)();
		entry.k = kv;
		entry.v = jsVal;
		m[$externalize($internalize(k, $String), $String)] = entry;
	};
	mapdelete = function(t, m, key) {
		var k;
		k = key.$get();
		if (!(k.$key === undefined)) {
			k = k.$key();
		}
		delete m[$externalize($internalize(k, $String), $String)];
	};
	mapiterinit = function(t, m) {
		return new mapIter.ptr(t, m, $keys(m), 0);
	};
	mapiterkey = function(it) {
		var iter, k;
		iter = it;
		k = iter.keys[iter.i];
		return $newDataPointer(iter.m[$externalize($internalize(k, $String), $String)].k, jsType(PtrTo(iter.t.Key())));
	};
	mapiternext = function(it) {
		var iter;
		iter = it;
		iter.i = iter.i + (1) >> 0;
	};
	maplen = function(m) {
		return $parseInt($keys(m).length);
	};
	cvtDirect = function(v, typ) {
		var _ref, k, slice, srcVal, val;
		v = v;
		srcVal = v.object();
		if (srcVal === jsType(v.typ).nil) {
			return makeValue(typ, jsType(typ).nil, v.flag);
		}
		val = null;
		k = typ.Kind();
		_ref = k;
		switch (0) { default: if (_ref === 18) {
			val = new (jsType(typ))();
		} else if (_ref === 23) {
			slice = new (jsType(typ))(srcVal.$array);
			slice.$offset = srcVal.$offset;
			slice.$length = srcVal.$length;
			slice.$capacity = srcVal.$capacity;
			val = $newDataPointer(slice, jsType(PtrTo(typ)));
		} else if (_ref === 22) {
			if (typ.Elem().Kind() === 25) {
				if ($interfaceIsEqual(typ.Elem(), v.typ.Elem())) {
					val = srcVal;
					break;
				}
				val = new (jsType(typ))();
				copyStruct(val, srcVal, typ.Elem());
				break;
			}
			val = new (jsType(typ))(srcVal.$get, srcVal.$set);
		} else if (_ref === 25) {
			val = new (jsType(typ).ptr)();
			copyStruct(val, srcVal, typ);
		} else if (_ref === 17 || _ref === 19 || _ref === 20 || _ref === 21 || _ref === 24) {
			val = v.ptr;
		} else {
			$panic(new ValueError.ptr("reflect.Convert", k));
		} }
		return new Value.ptr(typ.common(), val, (((v.flag & 96) >>> 0) | (typ.Kind() >>> 0)) >>> 0);
	};
	Copy = $pkg.Copy = function(dst, src) {
		var dk, dstVal, sk, srcVal;
		src = src;
		dst = dst;
		dk = new flag(dst.flag).kind();
		if (!((dk === 17)) && !((dk === 23))) {
			$panic(new ValueError.ptr("reflect.Copy", dk));
		}
		if (dk === 17) {
			new flag(dst.flag).mustBeAssignable();
		}
		new flag(dst.flag).mustBeExported();
		sk = new flag(src.flag).kind();
		if (!((sk === 17)) && !((sk === 23))) {
			$panic(new ValueError.ptr("reflect.Copy", sk));
		}
		new flag(src.flag).mustBeExported();
		typesMustMatch("reflect.Copy", dst.typ.Elem(), src.typ.Elem());
		dstVal = dst.object();
		if (dk === 17) {
			dstVal = new (jsType(SliceOf(dst.typ.Elem())))(dstVal);
		}
		srcVal = src.object();
		if (sk === 17) {
			srcVal = new (jsType(SliceOf(src.typ.Elem())))(srcVal);
		}
		return $parseInt($copySlice(dstVal, srcVal)) >> 0;
	};
	methodReceiver = function(op, v, i) {
		var fn = 0, iface, m, m$1, prop, rcvr, rcvrtype = ptrType$1.nil, t = ptrType$1.nil, tt, ut, x, x$1;
		v = v;
		prop = "";
		if (v.typ.Kind() === 20) {
			tt = v.typ.kindType;
			if (i < 0 || i >= tt.methods.$length) {
				$panic(new $String("reflect: internal error: invalid method index"));
			}
			m = (x = tt.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
			if (!($pointerIsEqual(m.pkgPath, ptrType$4.nil))) {
				$panic(new $String("reflect: " + op + " of unexported method"));
			}
			iface = $pointerOfStructConversion(v.ptr, ptrType$6);
			if (iface.itab === ptrType$7.nil) {
				$panic(new $String("reflect: " + op + " of method on nil interface value"));
			}
			t = m.typ;
			prop = m.name.$get();
		} else {
			ut = v.typ.uncommonType.uncommon();
			if (ut === ptrType$5.nil || i < 0 || i >= ut.methods.$length) {
				$panic(new $String("reflect: internal error: invalid method index"));
			}
			m$1 = (x$1 = ut.methods, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i]));
			if (!($pointerIsEqual(m$1.pkgPath, ptrType$4.nil))) {
				$panic(new $String("reflect: " + op + " of unexported method"));
			}
			t = m$1.mtyp;
			prop = $internalize(jsType(v.typ).methods[i].prop, $String);
		}
		rcvr = v.object();
		if (isWrapped(v.typ)) {
			rcvr = new (jsType(v.typ))(rcvr);
		}
		fn = rcvr[$externalize(prop, $String)];
		return [rcvrtype, t, fn];
	};
	valueInterface = function(v, safe) {
		v = v;
		if (v.flag === 0) {
			$panic(new ValueError.ptr("reflect.Value.Interface", 0));
		}
		if (safe && !((((v.flag & 32) >>> 0) === 0))) {
			$panic(new $String("reflect.Value.Interface: cannot return value obtained from unexported field or method"));
		}
		if (!((((v.flag & 256) >>> 0) === 0))) {
			v = makeMethodValue("Interface", v);
		}
		if (isWrapped(v.typ)) {
			return new (jsType(v.typ))(v.object());
		}
		return v.object();
	};
	ifaceE2I = function(t, src, dst) {
		dst.$set(src);
	};
	methodName = function() {
		return "?FIXME?";
	};
	makeMethodValue = function(op, v) {
		var _tuple, fn, fv, rcvr;
		v = v;
		if (((v.flag & 256) >>> 0) === 0) {
			$panic(new $String("reflect: internal error: invalid use of makePartialFunc"));
		}
		_tuple = methodReceiver(op, v, (v.flag >> 0) >> 9 >> 0); fn = _tuple[2];
		rcvr = v.object();
		if (isWrapped(v.typ)) {
			rcvr = new (jsType(v.typ))(rcvr);
		}
		fv = (function() {
			return fn.apply(rcvr, $externalize(new ($sliceType(js.Object))($global.Array.prototype.slice.call(arguments, [])), sliceType$7));
		});
		return new Value.ptr(v.Type().common(), fv, (((v.flag & 32) >>> 0) | 19) >>> 0);
	};
	rtype.ptr.prototype.pointers = function() {
		var _ref, t;
		t = this;
		_ref = t.Kind();
		if (_ref === 22 || _ref === 21 || _ref === 18 || _ref === 19 || _ref === 25 || _ref === 17) {
			return true;
		} else {
			return false;
		}
	};
	rtype.prototype.pointers = function() { return this.$val.pointers(); };
	rtype.ptr.prototype.Comparable = function() {
		var _ref, i, t;
		t = this;
		_ref = t.Kind();
		if (_ref === 19 || _ref === 23 || _ref === 21) {
			return false;
		} else if (_ref === 17) {
			return t.Elem().Comparable();
		} else if (_ref === 25) {
			i = 0;
			while (i < t.NumField()) {
				if (!t.Field(i).Type.Comparable()) {
					return false;
				}
				i = i + (1) >> 0;
			}
		}
		return true;
	};
	rtype.prototype.Comparable = function() { return this.$val.Comparable(); };
	uncommonType.ptr.prototype.Method = function(i) {
		var fl, fn, m = new Method.ptr(), mt, p, prop, t, x;
		t = this;
		if (t === ptrType$5.nil || i < 0 || i >= t.methods.$length) {
			$panic(new $String("reflect: Method index out of range"));
		}
		p = (x = t.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
		if (!($pointerIsEqual(p.name, ptrType$4.nil))) {
			m.Name = p.name.$get();
		}
		fl = 19;
		if (!($pointerIsEqual(p.pkgPath, ptrType$4.nil))) {
			m.PkgPath = p.pkgPath.$get();
			fl = (fl | (32)) >>> 0;
		}
		mt = p.typ;
		m.Type = mt;
		prop = $internalize(t.jsType.methods[i].prop, $String);
		fn = (function(rcvr) {
			return rcvr[$externalize(prop, $String)].apply(rcvr, $externalize($subslice(new ($sliceType(js.Object))($global.Array.prototype.slice.call(arguments, [])), 1), sliceType$7));
		});
		m.Func = new Value.ptr(mt, fn, fl);
		m.Index = i;
		return m;
	};
	uncommonType.prototype.Method = function(i) { return this.$val.Method(i); };
	Value.ptr.prototype.object = function() {
		var _ref, newVal, v, val;
		v = this;
		if ((v.typ.Kind() === 17) || (v.typ.Kind() === 25)) {
			return v.ptr;
		}
		if (!((((v.flag & 64) >>> 0) === 0))) {
			val = v.ptr.$get();
			if (!(val === $ifaceNil) && !(val.constructor === jsType(v.typ))) {
				_ref = v.typ.Kind();
				switch (0) { default: if (_ref === 11 || _ref === 6) {
					val = new (jsType(v.typ))(val.$high, val.$low);
				} else if (_ref === 15 || _ref === 16) {
					val = new (jsType(v.typ))(val.$real, val.$imag);
				} else if (_ref === 23) {
					if (val === val.constructor.nil) {
						val = jsType(v.typ).nil;
						break;
					}
					newVal = new (jsType(v.typ))(val.$array);
					newVal.$offset = val.$offset;
					newVal.$length = val.$length;
					newVal.$capacity = val.$capacity;
					val = newVal;
				} }
			}
			return val;
		}
		return v.ptr;
	};
	Value.prototype.object = function() { return this.$val.object(); };
	Value.ptr.prototype.call = function(op, in$1) {
		var _i, _i$1, _i$2, _ref, _ref$1, _ref$2, _ref$3, _tmp, _tmp$1, _tuple, arg, argsArray, elem, fn, i, i$1, i$2, i$3, isSlice, m, n, nin, nout, origIn, rcvr, results, ret, slice, t, targ, v, x, x$1, x$2, xt, xt$1;
		v = this;
		t = v.typ;
		fn = 0;
		rcvr = null;
		if (!((((v.flag & 256) >>> 0) === 0))) {
			_tuple = methodReceiver(op, v, (v.flag >> 0) >> 9 >> 0); t = _tuple[1]; fn = _tuple[2];
			rcvr = v.object();
			if (isWrapped(v.typ)) {
				rcvr = new (jsType(v.typ))(rcvr);
			}
		} else {
			fn = v.object();
		}
		if (fn === 0) {
			$panic(new $String("reflect.Value.Call: call of nil function"));
		}
		isSlice = op === "CallSlice";
		n = t.NumIn();
		if (isSlice) {
			if (!t.IsVariadic()) {
				$panic(new $String("reflect: CallSlice of non-variadic function"));
			}
			if (in$1.$length < n) {
				$panic(new $String("reflect: CallSlice with too few input arguments"));
			}
			if (in$1.$length > n) {
				$panic(new $String("reflect: CallSlice with too many input arguments"));
			}
		} else {
			if (t.IsVariadic()) {
				n = n - (1) >> 0;
			}
			if (in$1.$length < n) {
				$panic(new $String("reflect: Call with too few input arguments"));
			}
			if (!t.IsVariadic() && in$1.$length > n) {
				$panic(new $String("reflect: Call with too many input arguments"));
			}
		}
		_ref = in$1;
		_i = 0;
		while (_i < _ref.$length) {
			x = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (x.Kind() === 0) {
				$panic(new $String("reflect: " + op + " using zero Value argument"));
			}
			_i++;
		}
		i = 0;
		while (i < n) {
			_tmp = ((i < 0 || i >= in$1.$length) ? $throwRuntimeError("index out of range") : in$1.$array[in$1.$offset + i]).Type(); _tmp$1 = t.In(i); xt = _tmp; targ = _tmp$1;
			if (!xt.AssignableTo(targ)) {
				$panic(new $String("reflect: " + op + " using " + xt.String() + " as type " + targ.String()));
			}
			i = i + (1) >> 0;
		}
		if (!isSlice && t.IsVariadic()) {
			m = in$1.$length - n >> 0;
			slice = MakeSlice(t.In(n), m, m);
			elem = t.In(n).Elem();
			i$1 = 0;
			while (i$1 < m) {
				x$2 = (x$1 = n + i$1 >> 0, ((x$1 < 0 || x$1 >= in$1.$length) ? $throwRuntimeError("index out of range") : in$1.$array[in$1.$offset + x$1]));
				xt$1 = x$2.Type();
				if (!xt$1.AssignableTo(elem)) {
					$panic(new $String("reflect: cannot use " + xt$1.String() + " as type " + elem.String() + " in " + op));
				}
				slice.Index(i$1).Set(x$2);
				i$1 = i$1 + (1) >> 0;
			}
			origIn = in$1;
			in$1 = $makeSlice(sliceType$6, (n + 1 >> 0));
			$copySlice($subslice(in$1, 0, n), origIn);
			(n < 0 || n >= in$1.$length) ? $throwRuntimeError("index out of range") : in$1.$array[in$1.$offset + n] = slice;
		}
		nin = in$1.$length;
		if (!((nin === t.NumIn()))) {
			$panic(new $String("reflect.Value.Call: wrong argument count"));
		}
		nout = t.NumOut();
		argsArray = new ($global.Array)(t.NumIn());
		_ref$1 = in$1;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			i$2 = _i$1;
			arg = ((_i$1 < 0 || _i$1 >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i$1]);
			argsArray[i$2] = unwrapJsObject(t.In(i$2), arg.assignTo("reflect.Value.Call", t.In(i$2).common(), 0).object());
			_i$1++;
		}
		results = fn.apply(rcvr, argsArray);
		_ref$2 = nout;
		if (_ref$2 === 0) {
			return sliceType$6.nil;
		} else if (_ref$2 === 1) {
			return new sliceType$6([$clone(makeValue(t.Out(0), wrapJsObject(t.Out(0), results), 0), Value)]);
		} else {
			ret = $makeSlice(sliceType$6, nout);
			_ref$3 = ret;
			_i$2 = 0;
			while (_i$2 < _ref$3.$length) {
				i$3 = _i$2;
				(i$3 < 0 || i$3 >= ret.$length) ? $throwRuntimeError("index out of range") : ret.$array[ret.$offset + i$3] = makeValue(t.Out(i$3), wrapJsObject(t.Out(i$3), results[i$3]), 0);
				_i$2++;
			}
			return ret;
		}
	};
	Value.prototype.call = function(op, in$1) { return this.$val.call(op, in$1); };
	Value.ptr.prototype.Cap = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 17) {
			return v.typ.Len();
		} else if (_ref === 18 || _ref === 23) {
			return $parseInt(v.object().$capacity) >> 0;
		}
		$panic(new ValueError.ptr("reflect.Value.Cap", k));
	};
	Value.prototype.Cap = function() { return this.$val.Cap(); };
	wrapJsObject = function(typ, val) {
		if ($interfaceIsEqual(typ, reflectType(jsObject))) {
			return new (jsContainer)(val);
		}
		return val;
	};
	unwrapJsObject = function(typ, val) {
		if ($interfaceIsEqual(typ, reflectType(jsObject))) {
			return val.Object;
		}
		return val;
	};
	Value.ptr.prototype.Elem = function() {
		var _ref, fl, k, tt, typ, v, val, val$1;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 20) {
			val = v.object();
			if (val === $ifaceNil) {
				return new Value.ptr(ptrType$1.nil, 0, 0);
			}
			typ = reflectType(val.constructor);
			return makeValue(typ, val.$val, (v.flag & 32) >>> 0);
		} else if (_ref === 22) {
			if (v.IsNil()) {
				return new Value.ptr(ptrType$1.nil, 0, 0);
			}
			val$1 = v.object();
			tt = v.typ.kindType;
			fl = (((((v.flag & 32) >>> 0) | 64) >>> 0) | 128) >>> 0;
			fl = (fl | ((tt.elem.Kind() >>> 0))) >>> 0;
			return new Value.ptr(tt.elem, wrapJsObject(tt.elem, val$1), fl);
		} else {
			$panic(new ValueError.ptr("reflect.Value.Elem", k));
		}
	};
	Value.prototype.Elem = function() { return this.$val.Elem(); };
	Value.ptr.prototype.Field = function(i) {
		var field, fl, prop, s, tt, typ, v, x;
		v = this;
		new flag(v.flag).mustBe(25);
		tt = v.typ.kindType;
		if (i < 0 || i >= tt.fields.$length) {
			$panic(new $String("reflect: Field index out of range"));
		}
		field = (x = tt.fields, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
		prop = $internalize(jsType(v.typ).fields[i].prop, $String);
		typ = field.typ;
		fl = (v.flag & 224) >>> 0;
		if (!($pointerIsEqual(field.pkgPath, ptrType$4.nil))) {
			fl = (fl | (32)) >>> 0;
		}
		fl = (fl | ((typ.Kind() >>> 0))) >>> 0;
		s = v.ptr;
		if (!((((fl & 64) >>> 0) === 0)) && !((typ.Kind() === 17)) && !((typ.Kind() === 25))) {
			return new Value.ptr(typ, new (jsType(PtrTo(typ)))((function() {
				return wrapJsObject(typ, s[$externalize(prop, $String)]);
			}), (function(v$1) {
				s[$externalize(prop, $String)] = unwrapJsObject(typ, v$1);
			})), fl);
		}
		return makeValue(typ, wrapJsObject(typ, s[$externalize(prop, $String)]), fl);
	};
	Value.prototype.Field = function(i) { return this.$val.Field(i); };
	Value.ptr.prototype.Index = function(i) {
		var _ref, a, a$1, c, fl, fl$1, fl$2, k, s, str, tt, tt$1, typ, typ$1, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 17) {
			tt = v.typ.kindType;
			if (i < 0 || i > (tt.len >> 0)) {
				$panic(new $String("reflect: array index out of range"));
			}
			typ = tt.elem;
			fl = (v.flag & 224) >>> 0;
			fl = (fl | ((typ.Kind() >>> 0))) >>> 0;
			a = v.ptr;
			if (!((((fl & 64) >>> 0) === 0)) && !((typ.Kind() === 17)) && !((typ.Kind() === 25))) {
				return new Value.ptr(typ, new (jsType(PtrTo(typ)))((function() {
					return wrapJsObject(typ, a[i]);
				}), (function(v$1) {
					a[i] = unwrapJsObject(typ, v$1);
				})), fl);
			}
			return makeValue(typ, wrapJsObject(typ, a[i]), fl);
		} else if (_ref === 23) {
			s = v.object();
			if (i < 0 || i >= ($parseInt(s.$length) >> 0)) {
				$panic(new $String("reflect: slice index out of range"));
			}
			tt$1 = v.typ.kindType;
			typ$1 = tt$1.elem;
			fl$1 = (192 | ((v.flag & 32) >>> 0)) >>> 0;
			fl$1 = (fl$1 | ((typ$1.Kind() >>> 0))) >>> 0;
			i = i + (($parseInt(s.$offset) >> 0)) >> 0;
			a$1 = s.$array;
			if (!((((fl$1 & 64) >>> 0) === 0)) && !((typ$1.Kind() === 17)) && !((typ$1.Kind() === 25))) {
				return new Value.ptr(typ$1, new (jsType(PtrTo(typ$1)))((function() {
					return wrapJsObject(typ$1, a$1[i]);
				}), (function(v$1) {
					a$1[i] = unwrapJsObject(typ$1, v$1);
				})), fl$1);
			}
			return makeValue(typ$1, wrapJsObject(typ$1, a$1[i]), fl$1);
		} else if (_ref === 24) {
			str = v.ptr.$get();
			if (i < 0 || i >= str.length) {
				$panic(new $String("reflect: string index out of range"));
			}
			fl$2 = (((v.flag & 32) >>> 0) | 8) >>> 0;
			c = str.charCodeAt(i);
			return new Value.ptr(uint8Type, new ptrType$8(function() { return c; }, function($v) { c = $v; }), (fl$2 | 64) >>> 0);
		} else {
			$panic(new ValueError.ptr("reflect.Value.Index", k));
		}
	};
	Value.prototype.Index = function(i) { return this.$val.Index(i); };
	Value.ptr.prototype.IsNil = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 18 || _ref === 22 || _ref === 23) {
			return v.object() === jsType(v.typ).nil;
		} else if (_ref === 19) {
			return v.object() === $throwNilPointerError;
		} else if (_ref === 21) {
			return v.object() === false;
		} else if (_ref === 20) {
			return v.object() === $ifaceNil;
		} else {
			$panic(new ValueError.ptr("reflect.Value.IsNil", k));
		}
	};
	Value.prototype.IsNil = function() { return this.$val.IsNil(); };
	Value.ptr.prototype.Len = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 17 || _ref === 24) {
			return $parseInt(v.object().length);
		} else if (_ref === 23) {
			return $parseInt(v.object().$length) >> 0;
		} else if (_ref === 18) {
			return $parseInt(v.object().$buffer.length) >> 0;
		} else if (_ref === 21) {
			return $parseInt($keys(v.object()).length);
		} else {
			$panic(new ValueError.ptr("reflect.Value.Len", k));
		}
	};
	Value.prototype.Len = function() { return this.$val.Len(); };
	Value.ptr.prototype.Pointer = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 18 || _ref === 21 || _ref === 22 || _ref === 26) {
			if (v.IsNil()) {
				return 0;
			}
			return v.object();
		} else if (_ref === 19) {
			if (v.IsNil()) {
				return 0;
			}
			return 1;
		} else if (_ref === 23) {
			if (v.IsNil()) {
				return 0;
			}
			return v.object().$array;
		} else {
			$panic(new ValueError.ptr("reflect.Value.Pointer", k));
		}
	};
	Value.prototype.Pointer = function() { return this.$val.Pointer(); };
	Value.ptr.prototype.Set = function(x) {
		var _ref, v;
		v = this;
		x = x;
		new flag(v.flag).mustBeAssignable();
		new flag(x.flag).mustBeExported();
		x = x.assignTo("reflect.Set", v.typ, 0);
		if (!((((v.flag & 64) >>> 0) === 0))) {
			_ref = v.typ.Kind();
			if (_ref === 17) {
				$copy(v.ptr, x.ptr, jsType(v.typ));
			} else if (_ref === 20) {
				v.ptr.$set(valueInterface(x, false));
			} else if (_ref === 25) {
				copyStruct(v.ptr, x.ptr, v.typ);
			} else {
				v.ptr.$set(x.object());
			}
			return;
		}
		v.ptr = x.ptr;
	};
	Value.prototype.Set = function(x) { return this.$val.Set(x); };
	Value.ptr.prototype.SetCap = function(n) {
		var newSlice, s, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(23);
		s = v.ptr.$get();
		if (n < ($parseInt(s.$length) >> 0) || n > ($parseInt(s.$capacity) >> 0)) {
			$panic(new $String("reflect: slice capacity out of range in SetCap"));
		}
		newSlice = new (jsType(v.typ))(s.$array);
		newSlice.$offset = s.$offset;
		newSlice.$length = s.$length;
		newSlice.$capacity = n;
		v.ptr.$set(newSlice);
	};
	Value.prototype.SetCap = function(n) { return this.$val.SetCap(n); };
	Value.ptr.prototype.SetLen = function(n) {
		var newSlice, s, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(23);
		s = v.ptr.$get();
		if (n < 0 || n > ($parseInt(s.$capacity) >> 0)) {
			$panic(new $String("reflect: slice length out of range in SetLen"));
		}
		newSlice = new (jsType(v.typ))(s.$array);
		newSlice.$offset = s.$offset;
		newSlice.$length = n;
		newSlice.$capacity = s.$capacity;
		v.ptr.$set(newSlice);
	};
	Value.prototype.SetLen = function(n) { return this.$val.SetLen(n); };
	Value.ptr.prototype.Slice = function(i, j) {
		var _ref, cap, kind, s, str, tt, typ, v;
		v = this;
		cap = 0;
		typ = $ifaceNil;
		s = null;
		kind = new flag(v.flag).kind();
		_ref = kind;
		if (_ref === 17) {
			if (((v.flag & 128) >>> 0) === 0) {
				$panic(new $String("reflect.Value.Slice: slice of unaddressable array"));
			}
			tt = v.typ.kindType;
			cap = (tt.len >> 0);
			typ = SliceOf(tt.elem);
			s = new (jsType(typ))(v.object());
		} else if (_ref === 23) {
			typ = v.typ;
			s = v.object();
			cap = $parseInt(s.$capacity) >> 0;
		} else if (_ref === 24) {
			str = v.ptr.$get();
			if (i < 0 || j < i || j > str.length) {
				$panic(new $String("reflect.Value.Slice: string slice index out of bounds"));
			}
			return ValueOf(new $String(str.substring(i, j)));
		} else {
			$panic(new ValueError.ptr("reflect.Value.Slice", kind));
		}
		if (i < 0 || j < i || j > cap) {
			$panic(new $String("reflect.Value.Slice: slice index out of bounds"));
		}
		return makeValue(typ, $subslice(s, i, j), (v.flag & 32) >>> 0);
	};
	Value.prototype.Slice = function(i, j) { return this.$val.Slice(i, j); };
	Value.ptr.prototype.Slice3 = function(i, j, k) {
		var _ref, cap, kind, s, tt, typ, v;
		v = this;
		cap = 0;
		typ = $ifaceNil;
		s = null;
		kind = new flag(v.flag).kind();
		_ref = kind;
		if (_ref === 17) {
			if (((v.flag & 128) >>> 0) === 0) {
				$panic(new $String("reflect.Value.Slice: slice of unaddressable array"));
			}
			tt = v.typ.kindType;
			cap = (tt.len >> 0);
			typ = SliceOf(tt.elem);
			s = new (jsType(typ))(v.object());
		} else if (_ref === 23) {
			typ = v.typ;
			s = v.object();
			cap = $parseInt(s.$capacity) >> 0;
		} else {
			$panic(new ValueError.ptr("reflect.Value.Slice3", kind));
		}
		if (i < 0 || j < i || k < j || k > cap) {
			$panic(new $String("reflect.Value.Slice3: slice index out of bounds"));
		}
		return makeValue(typ, $subslice(s, i, j, k), (v.flag & 32) >>> 0);
	};
	Value.prototype.Slice3 = function(i, j, k) { return this.$val.Slice3(i, j, k); };
	Value.ptr.prototype.Close = function() {
		var v;
		v = this;
		new flag(v.flag).mustBe(18);
		new flag(v.flag).mustBeExported();
		$close(v.object());
	};
	Value.prototype.Close = function() { return this.$val.Close(); };
	Value.ptr.prototype.TrySend = function(x) {
		var c, tt, v;
		v = this;
		x = x;
		new flag(v.flag).mustBe(18);
		new flag(v.flag).mustBeExported();
		tt = v.typ.kindType;
		if (((tt.dir >> 0) & 2) === 0) {
			$panic(new $String("reflect: send on recv-only channel"));
		}
		new flag(x.flag).mustBeExported();
		c = v.object();
		if (!!!(c.$closed) && ($parseInt(c.$recvQueue.length) === 0) && ($parseInt(c.$buffer.length) === ($parseInt(c.$capacity) >> 0))) {
			return false;
		}
		x = x.assignTo("reflect.Value.Send", tt.elem, 0);
		$send(c, x.object());
		return true;
	};
	Value.prototype.TrySend = function(x) { return this.$val.TrySend(x); };
	Value.ptr.prototype.Send = function(x) {
		var v;
		v = this;
		x = x;
		$panic(new runtime.NotSupportedError.ptr("reflect.Value.Send, use reflect.Value.TrySend if possible"));
	};
	Value.prototype.Send = function(x) { return this.$val.Send(x); };
	Value.ptr.prototype.TryRecv = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, ok = false, res, tt, v, x = new Value.ptr();
		v = this;
		new flag(v.flag).mustBe(18);
		new flag(v.flag).mustBeExported();
		tt = v.typ.kindType;
		if (((tt.dir >> 0) & 1) === 0) {
			$panic(new $String("reflect: recv on send-only channel"));
		}
		res = $recv(v.object());
		if (res.constructor === $global.Function) {
			_tmp = new Value.ptr(ptrType$1.nil, 0, 0); _tmp$1 = false; x = _tmp; ok = _tmp$1;
			return [x, ok];
		}
		_tmp$2 = makeValue(tt.elem, res[0], 0); _tmp$3 = !!(res[1]); x = _tmp$2; ok = _tmp$3;
		return [x, ok];
	};
	Value.prototype.TryRecv = function() { return this.$val.TryRecv(); };
	Value.ptr.prototype.Recv = function() {
		var ok = false, v, x = new Value.ptr();
		v = this;
		$panic(new runtime.NotSupportedError.ptr("reflect.Value.Recv, use reflect.Value.TryRecv if possible"));
	};
	Value.prototype.Recv = function() { return this.$val.Recv(); };
	Kind.prototype.String = function() {
		var k;
		k = this.$val;
		if ((k >> 0) < kindNames.$length) {
			return ((k < 0 || k >= kindNames.$length) ? $throwRuntimeError("index out of range") : kindNames.$array[kindNames.$offset + k]);
		}
		return "kind" + strconv.Itoa((k >> 0));
	};
	$ptrType(Kind).prototype.String = function() { return new Kind(this.$get()).String(); };
	uncommonType.ptr.prototype.uncommon = function() {
		var t;
		t = this;
		return t;
	};
	uncommonType.prototype.uncommon = function() { return this.$val.uncommon(); };
	uncommonType.ptr.prototype.PkgPath = function() {
		var t;
		t = this;
		if (t === ptrType$5.nil || $pointerIsEqual(t.pkgPath, ptrType$4.nil)) {
			return "";
		}
		return t.pkgPath.$get();
	};
	uncommonType.prototype.PkgPath = function() { return this.$val.PkgPath(); };
	uncommonType.ptr.prototype.Name = function() {
		var t;
		t = this;
		if (t === ptrType$5.nil || $pointerIsEqual(t.name, ptrType$4.nil)) {
			return "";
		}
		return t.name.$get();
	};
	uncommonType.prototype.Name = function() { return this.$val.Name(); };
	rtype.ptr.prototype.String = function() {
		var t;
		t = this;
		return t.string.$get();
	};
	rtype.prototype.String = function() { return this.$val.String(); };
	rtype.ptr.prototype.Size = function() {
		var t;
		t = this;
		return t.size;
	};
	rtype.prototype.Size = function() { return this.$val.Size(); };
	rtype.ptr.prototype.Bits = function() {
		var k, t;
		t = this;
		if (t === ptrType$1.nil) {
			$panic(new $String("reflect: Bits of nil Type"));
		}
		k = t.Kind();
		if (k < 2 || k > 16) {
			$panic(new $String("reflect: Bits of non-arithmetic Type " + t.String()));
		}
		return (t.size >> 0) * 8 >> 0;
	};
	rtype.prototype.Bits = function() { return this.$val.Bits(); };
	rtype.ptr.prototype.Align = function() {
		var t;
		t = this;
		return (t.align >> 0);
	};
	rtype.prototype.Align = function() { return this.$val.Align(); };
	rtype.ptr.prototype.FieldAlign = function() {
		var t;
		t = this;
		return (t.fieldAlign >> 0);
	};
	rtype.prototype.FieldAlign = function() { return this.$val.FieldAlign(); };
	rtype.ptr.prototype.Kind = function() {
		var t;
		t = this;
		return (((t.kind & 31) >>> 0) >>> 0);
	};
	rtype.prototype.Kind = function() { return this.$val.Kind(); };
	rtype.ptr.prototype.common = function() {
		var t;
		t = this;
		return t;
	};
	rtype.prototype.common = function() { return this.$val.common(); };
	uncommonType.ptr.prototype.NumMethod = function() {
		var t;
		t = this;
		if (t === ptrType$5.nil) {
			return 0;
		}
		return t.methods.$length;
	};
	uncommonType.prototype.NumMethod = function() { return this.$val.NumMethod(); };
	uncommonType.ptr.prototype.MethodByName = function(name) {
		var _i, _ref, _tmp, _tmp$1, i, m = new Method.ptr(), ok = false, p, t, x;
		t = this;
		if (t === ptrType$5.nil) {
			return [m, ok];
		}
		p = ptrType$9.nil;
		_ref = t.methods;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			p = (x = t.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
			if (!($pointerIsEqual(p.name, ptrType$4.nil)) && p.name.$get() === name) {
				_tmp = $clone(t.Method(i), Method); _tmp$1 = true; $copy(m, _tmp, Method); ok = _tmp$1;
				return [m, ok];
			}
			_i++;
		}
		return [m, ok];
	};
	uncommonType.prototype.MethodByName = function(name) { return this.$val.MethodByName(name); };
	rtype.ptr.prototype.NumMethod = function() {
		var t, tt;
		t = this;
		if (t.Kind() === 20) {
			tt = t.kindType;
			return tt.NumMethod();
		}
		return t.uncommonType.NumMethod();
	};
	rtype.prototype.NumMethod = function() { return this.$val.NumMethod(); };
	rtype.ptr.prototype.Method = function(i) {
		var m = new Method.ptr(), t, tt;
		t = this;
		if (t.Kind() === 20) {
			tt = t.kindType;
			$copy(m, tt.Method(i), Method);
			return m;
		}
		$copy(m, t.uncommonType.Method(i), Method);
		return m;
	};
	rtype.prototype.Method = function(i) { return this.$val.Method(i); };
	rtype.ptr.prototype.MethodByName = function(name) {
		var _tuple, _tuple$1, m = new Method.ptr(), ok = false, t, tt;
		t = this;
		if (t.Kind() === 20) {
			tt = t.kindType;
			_tuple = tt.MethodByName(name); $copy(m, _tuple[0], Method); ok = _tuple[1];
			return [m, ok];
		}
		_tuple$1 = t.uncommonType.MethodByName(name); $copy(m, _tuple$1[0], Method); ok = _tuple$1[1];
		return [m, ok];
	};
	rtype.prototype.MethodByName = function(name) { return this.$val.MethodByName(name); };
	rtype.ptr.prototype.PkgPath = function() {
		var t;
		t = this;
		return t.uncommonType.PkgPath();
	};
	rtype.prototype.PkgPath = function() { return this.$val.PkgPath(); };
	rtype.ptr.prototype.Name = function() {
		var t;
		t = this;
		return t.uncommonType.Name();
	};
	rtype.prototype.Name = function() { return this.$val.Name(); };
	rtype.ptr.prototype.ChanDir = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 18))) {
			$panic(new $String("reflect: ChanDir of non-chan type"));
		}
		tt = t.kindType;
		return (tt.dir >> 0);
	};
	rtype.prototype.ChanDir = function() { return this.$val.ChanDir(); };
	rtype.ptr.prototype.IsVariadic = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 19))) {
			$panic(new $String("reflect: IsVariadic of non-func type"));
		}
		tt = t.kindType;
		return tt.dotdotdot;
	};
	rtype.prototype.IsVariadic = function() { return this.$val.IsVariadic(); };
	rtype.ptr.prototype.Elem = function() {
		var _ref, t, tt, tt$1, tt$2, tt$3, tt$4;
		t = this;
		_ref = t.Kind();
		if (_ref === 17) {
			tt = t.kindType;
			return toType(tt.elem);
		} else if (_ref === 18) {
			tt$1 = t.kindType;
			return toType(tt$1.elem);
		} else if (_ref === 21) {
			tt$2 = t.kindType;
			return toType(tt$2.elem);
		} else if (_ref === 22) {
			tt$3 = t.kindType;
			return toType(tt$3.elem);
		} else if (_ref === 23) {
			tt$4 = t.kindType;
			return toType(tt$4.elem);
		}
		$panic(new $String("reflect: Elem of invalid type"));
	};
	rtype.prototype.Elem = function() { return this.$val.Elem(); };
	rtype.ptr.prototype.Field = function(i) {
		var t, tt;
		t = this;
		if (!((t.Kind() === 25))) {
			$panic(new $String("reflect: Field of non-struct type"));
		}
		tt = t.kindType;
		return tt.Field(i);
	};
	rtype.prototype.Field = function(i) { return this.$val.Field(i); };
	rtype.ptr.prototype.FieldByIndex = function(index) {
		var t, tt;
		t = this;
		if (!((t.Kind() === 25))) {
			$panic(new $String("reflect: FieldByIndex of non-struct type"));
		}
		tt = t.kindType;
		return tt.FieldByIndex(index);
	};
	rtype.prototype.FieldByIndex = function(index) { return this.$val.FieldByIndex(index); };
	rtype.ptr.prototype.FieldByName = function(name) {
		var t, tt;
		t = this;
		if (!((t.Kind() === 25))) {
			$panic(new $String("reflect: FieldByName of non-struct type"));
		}
		tt = t.kindType;
		return tt.FieldByName(name);
	};
	rtype.prototype.FieldByName = function(name) { return this.$val.FieldByName(name); };
	rtype.ptr.prototype.FieldByNameFunc = function(match) {
		var t, tt;
		t = this;
		if (!((t.Kind() === 25))) {
			$panic(new $String("reflect: FieldByNameFunc of non-struct type"));
		}
		tt = t.kindType;
		return tt.FieldByNameFunc(match);
	};
	rtype.prototype.FieldByNameFunc = function(match) { return this.$val.FieldByNameFunc(match); };
	rtype.ptr.prototype.In = function(i) {
		var t, tt, x;
		t = this;
		if (!((t.Kind() === 19))) {
			$panic(new $String("reflect: In of non-func type"));
		}
		tt = t.kindType;
		return toType((x = tt.in$2, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i])));
	};
	rtype.prototype.In = function(i) { return this.$val.In(i); };
	rtype.ptr.prototype.Key = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 21))) {
			$panic(new $String("reflect: Key of non-map type"));
		}
		tt = t.kindType;
		return toType(tt.key);
	};
	rtype.prototype.Key = function() { return this.$val.Key(); };
	rtype.ptr.prototype.Len = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 17))) {
			$panic(new $String("reflect: Len of non-array type"));
		}
		tt = t.kindType;
		return (tt.len >> 0);
	};
	rtype.prototype.Len = function() { return this.$val.Len(); };
	rtype.ptr.prototype.NumField = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 25))) {
			$panic(new $String("reflect: NumField of non-struct type"));
		}
		tt = t.kindType;
		return tt.fields.$length;
	};
	rtype.prototype.NumField = function() { return this.$val.NumField(); };
	rtype.ptr.prototype.NumIn = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 19))) {
			$panic(new $String("reflect: NumIn of non-func type"));
		}
		tt = t.kindType;
		return tt.in$2.$length;
	};
	rtype.prototype.NumIn = function() { return this.$val.NumIn(); };
	rtype.ptr.prototype.NumOut = function() {
		var t, tt;
		t = this;
		if (!((t.Kind() === 19))) {
			$panic(new $String("reflect: NumOut of non-func type"));
		}
		tt = t.kindType;
		return tt.out.$length;
	};
	rtype.prototype.NumOut = function() { return this.$val.NumOut(); };
	rtype.ptr.prototype.Out = function(i) {
		var t, tt, x;
		t = this;
		if (!((t.Kind() === 19))) {
			$panic(new $String("reflect: Out of non-func type"));
		}
		tt = t.kindType;
		return toType((x = tt.out, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i])));
	};
	rtype.prototype.Out = function(i) { return this.$val.Out(i); };
	ChanDir.prototype.String = function() {
		var _ref, d;
		d = this.$val;
		_ref = d;
		if (_ref === 2) {
			return "chan<-";
		} else if (_ref === 1) {
			return "<-chan";
		} else if (_ref === 3) {
			return "chan";
		}
		return "ChanDir" + strconv.Itoa((d >> 0));
	};
	$ptrType(ChanDir).prototype.String = function() { return new ChanDir(this.$get()).String(); };
	interfaceType.ptr.prototype.Method = function(i) {
		var m = new Method.ptr(), p, t, x;
		t = this;
		if (i < 0 || i >= t.methods.$length) {
			return m;
		}
		p = (x = t.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
		m.Name = p.name.$get();
		if (!($pointerIsEqual(p.pkgPath, ptrType$4.nil))) {
			m.PkgPath = p.pkgPath.$get();
		}
		m.Type = toType(p.typ);
		m.Index = i;
		return m;
	};
	interfaceType.prototype.Method = function(i) { return this.$val.Method(i); };
	interfaceType.ptr.prototype.NumMethod = function() {
		var t;
		t = this;
		return t.methods.$length;
	};
	interfaceType.prototype.NumMethod = function() { return this.$val.NumMethod(); };
	interfaceType.ptr.prototype.MethodByName = function(name) {
		var _i, _ref, _tmp, _tmp$1, i, m = new Method.ptr(), ok = false, p, t, x;
		t = this;
		if (t === ptrType$10.nil) {
			return [m, ok];
		}
		p = ptrType$11.nil;
		_ref = t.methods;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			p = (x = t.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
			if (p.name.$get() === name) {
				_tmp = $clone(t.Method(i), Method); _tmp$1 = true; $copy(m, _tmp, Method); ok = _tmp$1;
				return [m, ok];
			}
			_i++;
		}
		return [m, ok];
	};
	interfaceType.prototype.MethodByName = function(name) { return this.$val.MethodByName(name); };
	StructTag.prototype.Get = function(key) {
		var _tuple, i, name, qvalue, tag, value;
		tag = this.$val;
		while (!(tag === "")) {
			i = 0;
			while (i < tag.length && (tag.charCodeAt(i) === 32)) {
				i = i + (1) >> 0;
			}
			tag = tag.substring(i);
			if (tag === "") {
				break;
			}
			i = 0;
			while (i < tag.length && !((tag.charCodeAt(i) === 32)) && !((tag.charCodeAt(i) === 58)) && !((tag.charCodeAt(i) === 34))) {
				i = i + (1) >> 0;
			}
			if ((i + 1 >> 0) >= tag.length || !((tag.charCodeAt(i) === 58)) || !((tag.charCodeAt((i + 1 >> 0)) === 34))) {
				break;
			}
			name = tag.substring(0, i);
			tag = tag.substring((i + 1 >> 0));
			i = 1;
			while (i < tag.length && !((tag.charCodeAt(i) === 34))) {
				if (tag.charCodeAt(i) === 92) {
					i = i + (1) >> 0;
				}
				i = i + (1) >> 0;
			}
			if (i >= tag.length) {
				break;
			}
			qvalue = tag.substring(0, (i + 1 >> 0));
			tag = tag.substring((i + 1 >> 0));
			if (key === name) {
				_tuple = strconv.Unquote(qvalue); value = _tuple[0];
				return value;
			}
		}
		return "";
	};
	$ptrType(StructTag).prototype.Get = function(key) { return new StructTag(this.$get()).Get(key); };
	structType.ptr.prototype.Field = function(i) {
		var f = new StructField.ptr(), p, t, t$1, x;
		t = this;
		if (i < 0 || i >= t.fields.$length) {
			return f;
		}
		p = (x = t.fields, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
		f.Type = toType(p.typ);
		if (!($pointerIsEqual(p.name, ptrType$4.nil))) {
			f.Name = p.name.$get();
		} else {
			t$1 = f.Type;
			if (t$1.Kind() === 22) {
				t$1 = t$1.Elem();
			}
			f.Name = t$1.Name();
			f.Anonymous = true;
		}
		if (!($pointerIsEqual(p.pkgPath, ptrType$4.nil))) {
			f.PkgPath = p.pkgPath.$get();
		}
		if (!($pointerIsEqual(p.tag, ptrType$4.nil))) {
			f.Tag = p.tag.$get();
		}
		f.Offset = p.offset;
		f.Index = new sliceType$9([i]);
		return f;
	};
	structType.prototype.Field = function(i) { return this.$val.Field(i); };
	structType.ptr.prototype.FieldByIndex = function(index) {
		var _i, _ref, f = new StructField.ptr(), ft, i, t, x;
		t = this;
		f.Type = toType(t.rtype);
		_ref = index;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			x = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (i > 0) {
				ft = f.Type;
				if ((ft.Kind() === 22) && (ft.Elem().Kind() === 25)) {
					ft = ft.Elem();
				}
				f.Type = ft;
			}
			$copy(f, f.Type.Field(x), StructField);
			_i++;
		}
		return f;
	};
	structType.prototype.FieldByIndex = function(index) { return this.$val.FieldByIndex(index); };
	structType.ptr.prototype.FieldByNameFunc = function(match) {
		var _entry, _entry$1, _entry$2, _entry$3, _i, _i$1, _key, _key$1, _key$2, _key$3, _key$4, _key$5, _map, _map$1, _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, count, current, f, fname, i, index, next, nextCount, ntyp, ok = false, result = new StructField.ptr(), scan, styp, t, t$1, visited, x;
		t = this;
		current = new sliceType$10([]);
		next = new sliceType$10([new fieldScan.ptr(t, sliceType$9.nil)]);
		nextCount = false;
		visited = (_map = new $Map(), _map);
		while (next.$length > 0) {
			_tmp = next; _tmp$1 = $subslice(current, 0, 0); current = _tmp; next = _tmp$1;
			count = nextCount;
			nextCount = false;
			_ref = current;
			_i = 0;
			while (_i < _ref.$length) {
				scan = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), fieldScan);
				t$1 = scan.typ;
				if ((_entry = visited[t$1.$key()], _entry !== undefined ? _entry.v : false)) {
					_i++;
					continue;
				}
				_key$1 = t$1; (visited || $throwRuntimeError("assignment to entry in nil map"))[_key$1.$key()] = { k: _key$1, v: true };
				_ref$1 = t$1.fields;
				_i$1 = 0;
				while (_i$1 < _ref$1.$length) {
					i = _i$1;
					f = (x = t$1.fields, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
					fname = "";
					ntyp = ptrType$1.nil;
					if (!($pointerIsEqual(f.name, ptrType$4.nil))) {
						fname = f.name.$get();
					} else {
						ntyp = f.typ;
						if (ntyp.Kind() === 22) {
							ntyp = ntyp.Elem().common();
						}
						fname = ntyp.Name();
					}
					if (match(fname)) {
						if ((_entry$1 = count[t$1.$key()], _entry$1 !== undefined ? _entry$1.v : 0) > 1 || ok) {
							_tmp$2 = new StructField.ptr("", "", $ifaceNil, "", 0, sliceType$9.nil, false); _tmp$3 = false; $copy(result, _tmp$2, StructField); ok = _tmp$3;
							return [result, ok];
						}
						$copy(result, t$1.Field(i), StructField);
						result.Index = sliceType$9.nil;
						result.Index = $appendSlice(result.Index, scan.index);
						result.Index = $append(result.Index, i);
						ok = true;
						_i$1++;
						continue;
					}
					if (ok || ntyp === ptrType$1.nil || !((ntyp.Kind() === 25))) {
						_i$1++;
						continue;
					}
					styp = ntyp.kindType;
					if ((_entry$2 = nextCount[styp.$key()], _entry$2 !== undefined ? _entry$2.v : 0) > 0) {
						_key$2 = styp; (nextCount || $throwRuntimeError("assignment to entry in nil map"))[_key$2.$key()] = { k: _key$2, v: 2 };
						_i$1++;
						continue;
					}
					if (nextCount === false) {
						nextCount = (_map$1 = new $Map(), _map$1);
					}
					_key$4 = styp; (nextCount || $throwRuntimeError("assignment to entry in nil map"))[_key$4.$key()] = { k: _key$4, v: 1 };
					if ((_entry$3 = count[t$1.$key()], _entry$3 !== undefined ? _entry$3.v : 0) > 1) {
						_key$5 = styp; (nextCount || $throwRuntimeError("assignment to entry in nil map"))[_key$5.$key()] = { k: _key$5, v: 2 };
					}
					index = sliceType$9.nil;
					index = $appendSlice(index, scan.index);
					index = $append(index, i);
					next = $append(next, new fieldScan.ptr(styp, index));
					_i$1++;
				}
				_i++;
			}
			if (ok) {
				break;
			}
		}
		return [result, ok];
	};
	structType.prototype.FieldByNameFunc = function(match) { return this.$val.FieldByNameFunc(match); };
	structType.ptr.prototype.FieldByName = function(name) {
		var _i, _ref, _tmp, _tmp$1, _tuple, f = new StructField.ptr(), hasAnon, i, present = false, t, tf, x;
		t = this;
		hasAnon = false;
		if (!(name === "")) {
			_ref = t.fields;
			_i = 0;
			while (_i < _ref.$length) {
				i = _i;
				tf = (x = t.fields, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
				if ($pointerIsEqual(tf.name, ptrType$4.nil)) {
					hasAnon = true;
					_i++;
					continue;
				}
				if (tf.name.$get() === name) {
					_tmp = $clone(t.Field(i), StructField); _tmp$1 = true; $copy(f, _tmp, StructField); present = _tmp$1;
					return [f, present];
				}
				_i++;
			}
		}
		if (!hasAnon) {
			return [f, present];
		}
		_tuple = t.FieldByNameFunc((function(s) {
			return s === name;
		})); $copy(f, _tuple[0], StructField); present = _tuple[1];
		return [f, present];
	};
	structType.prototype.FieldByName = function(name) { return this.$val.FieldByName(name); };
	PtrTo = $pkg.PtrTo = function(t) {
		return $assertType(t, ptrType$1).ptrTo();
	};
	rtype.ptr.prototype.Implements = function(u) {
		var t;
		t = this;
		if ($interfaceIsEqual(u, $ifaceNil)) {
			$panic(new $String("reflect: nil type passed to Type.Implements"));
		}
		if (!((u.Kind() === 20))) {
			$panic(new $String("reflect: non-interface type passed to Type.Implements"));
		}
		return implements$1($assertType(u, ptrType$1), t);
	};
	rtype.prototype.Implements = function(u) { return this.$val.Implements(u); };
	rtype.ptr.prototype.AssignableTo = function(u) {
		var t, uu;
		t = this;
		if ($interfaceIsEqual(u, $ifaceNil)) {
			$panic(new $String("reflect: nil type passed to Type.AssignableTo"));
		}
		uu = $assertType(u, ptrType$1);
		return directlyAssignable(uu, t) || implements$1(uu, t);
	};
	rtype.prototype.AssignableTo = function(u) { return this.$val.AssignableTo(u); };
	rtype.ptr.prototype.ConvertibleTo = function(u) {
		var t, uu;
		t = this;
		if ($interfaceIsEqual(u, $ifaceNil)) {
			$panic(new $String("reflect: nil type passed to Type.ConvertibleTo"));
		}
		uu = $assertType(u, ptrType$1);
		return !(convertOp(uu, t) === $throwNilPointerError);
	};
	rtype.prototype.ConvertibleTo = function(u) { return this.$val.ConvertibleTo(u); };
	implements$1 = function(T, V) {
		var i, i$1, j, j$1, t, tm, tm$1, v, v$1, vm, vm$1, x, x$1, x$2, x$3;
		if (!((T.Kind() === 20))) {
			return false;
		}
		t = T.kindType;
		if (t.methods.$length === 0) {
			return true;
		}
		if (V.Kind() === 20) {
			v = V.kindType;
			i = 0;
			j = 0;
			while (j < v.methods.$length) {
				tm = (x = t.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
				vm = (x$1 = v.methods, ((j < 0 || j >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + j]));
				if ($pointerIsEqual(vm.name, tm.name) && $pointerIsEqual(vm.pkgPath, tm.pkgPath) && vm.typ === tm.typ) {
					i = i + (1) >> 0;
					if (i >= t.methods.$length) {
						return true;
					}
				}
				j = j + (1) >> 0;
			}
			return false;
		}
		v$1 = V.uncommonType.uncommon();
		if (v$1 === ptrType$5.nil) {
			return false;
		}
		i$1 = 0;
		j$1 = 0;
		while (j$1 < v$1.methods.$length) {
			tm$1 = (x$2 = t.methods, ((i$1 < 0 || i$1 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + i$1]));
			vm$1 = (x$3 = v$1.methods, ((j$1 < 0 || j$1 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + j$1]));
			if ($pointerIsEqual(vm$1.name, tm$1.name) && $pointerIsEqual(vm$1.pkgPath, tm$1.pkgPath) && vm$1.mtyp === tm$1.typ) {
				i$1 = i$1 + (1) >> 0;
				if (i$1 >= t.methods.$length) {
					return true;
				}
			}
			j$1 = j$1 + (1) >> 0;
		}
		return false;
	};
	directlyAssignable = function(T, V) {
		if (T === V) {
			return true;
		}
		if (!(T.Name() === "") && !(V.Name() === "") || !((T.Kind() === V.Kind()))) {
			return false;
		}
		return haveIdenticalUnderlyingType(T, V);
	};
	haveIdenticalUnderlyingType = function(T, V) {
		var _i, _i$1, _i$2, _ref, _ref$1, _ref$2, _ref$3, i, i$1, i$2, kind, t, t$1, t$2, tf, typ, typ$1, v, v$1, v$2, vf, x, x$1, x$2, x$3;
		if (T === V) {
			return true;
		}
		kind = T.Kind();
		if (!((kind === V.Kind()))) {
			return false;
		}
		if (1 <= kind && kind <= 16 || (kind === 24) || (kind === 26)) {
			return true;
		}
		_ref = kind;
		if (_ref === 17) {
			return $interfaceIsEqual(T.Elem(), V.Elem()) && (T.Len() === V.Len());
		} else if (_ref === 18) {
			if ((V.ChanDir() === 3) && $interfaceIsEqual(T.Elem(), V.Elem())) {
				return true;
			}
			return (V.ChanDir() === T.ChanDir()) && $interfaceIsEqual(T.Elem(), V.Elem());
		} else if (_ref === 19) {
			t = T.kindType;
			v = V.kindType;
			if (!(t.dotdotdot === v.dotdotdot) || !((t.in$2.$length === v.in$2.$length)) || !((t.out.$length === v.out.$length))) {
				return false;
			}
			_ref$1 = t.in$2;
			_i = 0;
			while (_i < _ref$1.$length) {
				i = _i;
				typ = ((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]);
				if (!(typ === (x = v.in$2, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i])))) {
					return false;
				}
				_i++;
			}
			_ref$2 = t.out;
			_i$1 = 0;
			while (_i$1 < _ref$2.$length) {
				i$1 = _i$1;
				typ$1 = ((_i$1 < 0 || _i$1 >= _ref$2.$length) ? $throwRuntimeError("index out of range") : _ref$2.$array[_ref$2.$offset + _i$1]);
				if (!(typ$1 === (x$1 = v.out, ((i$1 < 0 || i$1 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i$1])))) {
					return false;
				}
				_i$1++;
			}
			return true;
		} else if (_ref === 20) {
			t$1 = T.kindType;
			v$1 = V.kindType;
			if ((t$1.methods.$length === 0) && (v$1.methods.$length === 0)) {
				return true;
			}
			return false;
		} else if (_ref === 21) {
			return $interfaceIsEqual(T.Key(), V.Key()) && $interfaceIsEqual(T.Elem(), V.Elem());
		} else if (_ref === 22 || _ref === 23) {
			return $interfaceIsEqual(T.Elem(), V.Elem());
		} else if (_ref === 25) {
			t$2 = T.kindType;
			v$2 = V.kindType;
			if (!((t$2.fields.$length === v$2.fields.$length))) {
				return false;
			}
			_ref$3 = t$2.fields;
			_i$2 = 0;
			while (_i$2 < _ref$3.$length) {
				i$2 = _i$2;
				tf = (x$2 = t$2.fields, ((i$2 < 0 || i$2 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + i$2]));
				vf = (x$3 = v$2.fields, ((i$2 < 0 || i$2 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + i$2]));
				if (!($pointerIsEqual(tf.name, vf.name)) && ($pointerIsEqual(tf.name, ptrType$4.nil) || $pointerIsEqual(vf.name, ptrType$4.nil) || !(tf.name.$get() === vf.name.$get()))) {
					return false;
				}
				if (!($pointerIsEqual(tf.pkgPath, vf.pkgPath)) && ($pointerIsEqual(tf.pkgPath, ptrType$4.nil) || $pointerIsEqual(vf.pkgPath, ptrType$4.nil) || !(tf.pkgPath.$get() === vf.pkgPath.$get()))) {
					return false;
				}
				if (!(tf.typ === vf.typ)) {
					return false;
				}
				if (!($pointerIsEqual(tf.tag, vf.tag)) && ($pointerIsEqual(tf.tag, ptrType$4.nil) || $pointerIsEqual(vf.tag, ptrType$4.nil) || !(tf.tag.$get() === vf.tag.$get()))) {
					return false;
				}
				if (!((tf.offset === vf.offset))) {
					return false;
				}
				_i$2++;
			}
			return true;
		}
		return false;
	};
	toType = function(t) {
		if (t === ptrType$1.nil) {
			return $ifaceNil;
		}
		return t;
	};
	ifaceIndir = function(t) {
		return ((t.kind & 32) >>> 0) === 0;
	};
	flag.prototype.kind = function() {
		var f;
		f = this.$val;
		return (((f & 31) >>> 0) >>> 0);
	};
	$ptrType(flag).prototype.kind = function() { return new flag(this.$get()).kind(); };
	Value.ptr.prototype.pointer = function() {
		var v;
		v = this;
		if (!((v.typ.size === 4)) || !v.typ.pointers()) {
			$panic(new $String("can't call pointer on a non-pointer Value"));
		}
		if (!((((v.flag & 64) >>> 0) === 0))) {
			return v.ptr.$get();
		}
		return v.ptr;
	};
	Value.prototype.pointer = function() { return this.$val.pointer(); };
	ValueError.ptr.prototype.Error = function() {
		var e;
		e = this;
		if (e.Kind === 0) {
			return "reflect: call of " + e.Method + " on zero Value";
		}
		return "reflect: call of " + e.Method + " on " + new Kind(e.Kind).String() + " Value";
	};
	ValueError.prototype.Error = function() { return this.$val.Error(); };
	flag.prototype.mustBe = function(expected) {
		var f;
		f = this.$val;
		if (!((new flag(f).kind() === expected))) {
			$panic(new ValueError.ptr(methodName(), new flag(f).kind()));
		}
	};
	$ptrType(flag).prototype.mustBe = function(expected) { return new flag(this.$get()).mustBe(expected); };
	flag.prototype.mustBeExported = function() {
		var f;
		f = this.$val;
		if (f === 0) {
			$panic(new ValueError.ptr(methodName(), 0));
		}
		if (!((((f & 32) >>> 0) === 0))) {
			$panic(new $String("reflect: " + methodName() + " using value obtained using unexported field"));
		}
	};
	$ptrType(flag).prototype.mustBeExported = function() { return new flag(this.$get()).mustBeExported(); };
	flag.prototype.mustBeAssignable = function() {
		var f;
		f = this.$val;
		if (f === 0) {
			$panic(new ValueError.ptr(methodName(), 0));
		}
		if (!((((f & 32) >>> 0) === 0))) {
			$panic(new $String("reflect: " + methodName() + " using value obtained using unexported field"));
		}
		if (((f & 128) >>> 0) === 0) {
			$panic(new $String("reflect: " + methodName() + " using unaddressable value"));
		}
	};
	$ptrType(flag).prototype.mustBeAssignable = function() { return new flag(this.$get()).mustBeAssignable(); };
	Value.ptr.prototype.Addr = function() {
		var v;
		v = this;
		if (((v.flag & 128) >>> 0) === 0) {
			$panic(new $String("reflect.Value.Addr of unaddressable value"));
		}
		return new Value.ptr(v.typ.ptrTo(), v.ptr, ((((v.flag & 32) >>> 0)) | 22) >>> 0);
	};
	Value.prototype.Addr = function() { return this.$val.Addr(); };
	Value.ptr.prototype.Bool = function() {
		var v;
		v = this;
		new flag(v.flag).mustBe(1);
		return v.ptr.$get();
	};
	Value.prototype.Bool = function() { return this.$val.Bool(); };
	Value.ptr.prototype.Bytes = function() {
		var v;
		v = this;
		new flag(v.flag).mustBe(23);
		if (!((v.typ.Elem().Kind() === 8))) {
			$panic(new $String("reflect.Value.Bytes of non-byte slice"));
		}
		return v.ptr.$get();
	};
	Value.prototype.Bytes = function() { return this.$val.Bytes(); };
	Value.ptr.prototype.runes = function() {
		var v;
		v = this;
		new flag(v.flag).mustBe(23);
		if (!((v.typ.Elem().Kind() === 5))) {
			$panic(new $String("reflect.Value.Bytes of non-rune slice"));
		}
		return v.ptr.$get();
	};
	Value.prototype.runes = function() { return this.$val.runes(); };
	Value.ptr.prototype.CanAddr = function() {
		var v;
		v = this;
		return !((((v.flag & 128) >>> 0) === 0));
	};
	Value.prototype.CanAddr = function() { return this.$val.CanAddr(); };
	Value.ptr.prototype.CanSet = function() {
		var v;
		v = this;
		return ((v.flag & 160) >>> 0) === 128;
	};
	Value.prototype.CanSet = function() { return this.$val.CanSet(); };
	Value.ptr.prototype.Call = function(in$1) {
		var v;
		v = this;
		new flag(v.flag).mustBe(19);
		new flag(v.flag).mustBeExported();
		return v.call("Call", in$1);
	};
	Value.prototype.Call = function(in$1) { return this.$val.Call(in$1); };
	Value.ptr.prototype.CallSlice = function(in$1) {
		var v;
		v = this;
		new flag(v.flag).mustBe(19);
		new flag(v.flag).mustBeExported();
		return v.call("CallSlice", in$1);
	};
	Value.prototype.CallSlice = function(in$1) { return this.$val.CallSlice(in$1); };
	Value.ptr.prototype.Complex = function() {
		var _ref, k, v, x;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 15) {
			return (x = v.ptr.$get(), new $Complex128(x.$real, x.$imag));
		} else if (_ref === 16) {
			return v.ptr.$get();
		}
		$panic(new ValueError.ptr("reflect.Value.Complex", new flag(v.flag).kind()));
	};
	Value.prototype.Complex = function() { return this.$val.Complex(); };
	Value.ptr.prototype.FieldByIndex = function(index) {
		var _i, _ref, i, v, x;
		v = this;
		if (index.$length === 1) {
			return v.Field(((0 < 0 || 0 >= index.$length) ? $throwRuntimeError("index out of range") : index.$array[index.$offset + 0]));
		}
		new flag(v.flag).mustBe(25);
		_ref = index;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			x = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (i > 0) {
				if ((v.Kind() === 22) && (v.typ.Elem().Kind() === 25)) {
					if (v.IsNil()) {
						$panic(new $String("reflect: indirection through nil pointer to embedded struct"));
					}
					v = v.Elem();
				}
			}
			v = v.Field(x);
			_i++;
		}
		return v;
	};
	Value.prototype.FieldByIndex = function(index) { return this.$val.FieldByIndex(index); };
	Value.ptr.prototype.FieldByName = function(name) {
		var _tuple, f, ok, v;
		v = this;
		new flag(v.flag).mustBe(25);
		_tuple = v.typ.FieldByName(name); f = $clone(_tuple[0], StructField); ok = _tuple[1];
		if (ok) {
			return v.FieldByIndex(f.Index);
		}
		return new Value.ptr(ptrType$1.nil, 0, 0);
	};
	Value.prototype.FieldByName = function(name) { return this.$val.FieldByName(name); };
	Value.ptr.prototype.FieldByNameFunc = function(match) {
		var _tuple, f, ok, v;
		v = this;
		_tuple = v.typ.FieldByNameFunc(match); f = $clone(_tuple[0], StructField); ok = _tuple[1];
		if (ok) {
			return v.FieldByIndex(f.Index);
		}
		return new Value.ptr(ptrType$1.nil, 0, 0);
	};
	Value.prototype.FieldByNameFunc = function(match) { return this.$val.FieldByNameFunc(match); };
	Value.ptr.prototype.Float = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 13) {
			return $coerceFloat32(v.ptr.$get());
		} else if (_ref === 14) {
			return v.ptr.$get();
		}
		$panic(new ValueError.ptr("reflect.Value.Float", new flag(v.flag).kind()));
	};
	Value.prototype.Float = function() { return this.$val.Float(); };
	Value.ptr.prototype.Int = function() {
		var _ref, k, p, v;
		v = this;
		k = new flag(v.flag).kind();
		p = v.ptr;
		_ref = k;
		if (_ref === 2) {
			return new $Int64(0, p.$get());
		} else if (_ref === 3) {
			return new $Int64(0, p.$get());
		} else if (_ref === 4) {
			return new $Int64(0, p.$get());
		} else if (_ref === 5) {
			return new $Int64(0, p.$get());
		} else if (_ref === 6) {
			return p.$get();
		}
		$panic(new ValueError.ptr("reflect.Value.Int", new flag(v.flag).kind()));
	};
	Value.prototype.Int = function() { return this.$val.Int(); };
	Value.ptr.prototype.CanInterface = function() {
		var v;
		v = this;
		if (v.flag === 0) {
			$panic(new ValueError.ptr("reflect.Value.CanInterface", 0));
		}
		return ((v.flag & 32) >>> 0) === 0;
	};
	Value.prototype.CanInterface = function() { return this.$val.CanInterface(); };
	Value.ptr.prototype.Interface = function() {
		var i = $ifaceNil, v;
		v = this;
		i = valueInterface(v, true);
		return i;
	};
	Value.prototype.Interface = function() { return this.$val.Interface(); };
	Value.ptr.prototype.InterfaceData = function() {
		var v;
		v = this;
		new flag(v.flag).mustBe(20);
		return v.ptr;
	};
	Value.prototype.InterfaceData = function() { return this.$val.InterfaceData(); };
	Value.ptr.prototype.IsValid = function() {
		var v;
		v = this;
		return !((v.flag === 0));
	};
	Value.prototype.IsValid = function() { return this.$val.IsValid(); };
	Value.ptr.prototype.Kind = function() {
		var v;
		v = this;
		return new flag(v.flag).kind();
	};
	Value.prototype.Kind = function() { return this.$val.Kind(); };
	Value.ptr.prototype.MapIndex = function(key) {
		var c, e, fl, k, tt, typ, v;
		v = this;
		key = key;
		new flag(v.flag).mustBe(21);
		tt = v.typ.kindType;
		key = key.assignTo("reflect.Value.MapIndex", tt.key, 0);
		k = 0;
		if (!((((key.flag & 64) >>> 0) === 0))) {
			k = key.ptr;
		} else {
			k = new ptrType$17(function() { return this.$target.ptr; }, function($v) { this.$target.ptr = $v; }, key);
		}
		e = mapaccess(v.typ, v.pointer(), k);
		if (e === 0) {
			return new Value.ptr(ptrType$1.nil, 0, 0);
		}
		typ = tt.elem;
		fl = ((((v.flag | key.flag) >>> 0)) & 32) >>> 0;
		fl = (fl | ((typ.Kind() >>> 0))) >>> 0;
		if (ifaceIndir(typ)) {
			c = unsafe_New(typ);
			memmove(c, e, typ.size);
			return new Value.ptr(typ, c, (fl | 64) >>> 0);
		} else {
			return new Value.ptr(typ, e.$get(), fl);
		}
	};
	Value.prototype.MapIndex = function(key) { return this.$val.MapIndex(key); };
	Value.ptr.prototype.MapKeys = function() {
		var a, c, fl, i, it, key, keyType, m, mlen, tt, v;
		v = this;
		new flag(v.flag).mustBe(21);
		tt = v.typ.kindType;
		keyType = tt.key;
		fl = (((v.flag & 32) >>> 0) | (keyType.Kind() >>> 0)) >>> 0;
		m = v.pointer();
		mlen = 0;
		if (!(m === 0)) {
			mlen = maplen(m);
		}
		it = mapiterinit(v.typ, m);
		a = $makeSlice(sliceType$6, mlen);
		i = 0;
		i = 0;
		while (i < a.$length) {
			key = mapiterkey(it);
			if (key === 0) {
				break;
			}
			if (ifaceIndir(keyType)) {
				c = unsafe_New(keyType);
				memmove(c, key, keyType.size);
				(i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i] = new Value.ptr(keyType, c, (fl | 64) >>> 0);
			} else {
				(i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i] = new Value.ptr(keyType, key.$get(), fl);
			}
			mapiternext(it);
			i = i + (1) >> 0;
		}
		return $subslice(a, 0, i);
	};
	Value.prototype.MapKeys = function() { return this.$val.MapKeys(); };
	Value.ptr.prototype.Method = function(i) {
		var fl, v;
		v = this;
		if (v.typ === ptrType$1.nil) {
			$panic(new ValueError.ptr("reflect.Value.Method", 0));
		}
		if (!((((v.flag & 256) >>> 0) === 0)) || (i >>> 0) >= (v.typ.NumMethod() >>> 0)) {
			$panic(new $String("reflect: Method index out of range"));
		}
		if ((v.typ.Kind() === 20) && v.IsNil()) {
			$panic(new $String("reflect: Method on nil interface value"));
		}
		fl = (v.flag & 96) >>> 0;
		fl = (fl | (19)) >>> 0;
		fl = (fl | (((((i >>> 0) << 9 >>> 0) | 256) >>> 0))) >>> 0;
		return new Value.ptr(v.typ, v.ptr, fl);
	};
	Value.prototype.Method = function(i) { return this.$val.Method(i); };
	Value.ptr.prototype.NumMethod = function() {
		var v;
		v = this;
		if (v.typ === ptrType$1.nil) {
			$panic(new ValueError.ptr("reflect.Value.NumMethod", 0));
		}
		if (!((((v.flag & 256) >>> 0) === 0))) {
			return 0;
		}
		return v.typ.NumMethod();
	};
	Value.prototype.NumMethod = function() { return this.$val.NumMethod(); };
	Value.ptr.prototype.MethodByName = function(name) {
		var _tuple, m, ok, v;
		v = this;
		if (v.typ === ptrType$1.nil) {
			$panic(new ValueError.ptr("reflect.Value.MethodByName", 0));
		}
		if (!((((v.flag & 256) >>> 0) === 0))) {
			return new Value.ptr(ptrType$1.nil, 0, 0);
		}
		_tuple = v.typ.MethodByName(name); m = $clone(_tuple[0], Method); ok = _tuple[1];
		if (!ok) {
			return new Value.ptr(ptrType$1.nil, 0, 0);
		}
		return v.Method(m.Index);
	};
	Value.prototype.MethodByName = function(name) { return this.$val.MethodByName(name); };
	Value.ptr.prototype.NumField = function() {
		var tt, v;
		v = this;
		new flag(v.flag).mustBe(25);
		tt = v.typ.kindType;
		return tt.fields.$length;
	};
	Value.prototype.NumField = function() { return this.$val.NumField(); };
	Value.ptr.prototype.OverflowComplex = function(x) {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 15) {
			return overflowFloat32(x.$real) || overflowFloat32(x.$imag);
		} else if (_ref === 16) {
			return false;
		}
		$panic(new ValueError.ptr("reflect.Value.OverflowComplex", new flag(v.flag).kind()));
	};
	Value.prototype.OverflowComplex = function(x) { return this.$val.OverflowComplex(x); };
	Value.ptr.prototype.OverflowFloat = function(x) {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 13) {
			return overflowFloat32(x);
		} else if (_ref === 14) {
			return false;
		}
		$panic(new ValueError.ptr("reflect.Value.OverflowFloat", new flag(v.flag).kind()));
	};
	Value.prototype.OverflowFloat = function(x) { return this.$val.OverflowFloat(x); };
	overflowFloat32 = function(x) {
		if (x < 0) {
			x = -x;
		}
		return 3.4028234663852886e+38 < x && x <= 1.7976931348623157e+308;
	};
	Value.ptr.prototype.OverflowInt = function(x) {
		var _ref, bitSize, k, trunc, v, x$1;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 2 || _ref === 3 || _ref === 4 || _ref === 5 || _ref === 6) {
			bitSize = (x$1 = v.typ.size, (((x$1 >>> 16 << 16) * 8 >>> 0) + (x$1 << 16 >>> 16) * 8) >>> 0);
			trunc = $shiftRightInt64(($shiftLeft64(x, ((64 - bitSize >>> 0)))), ((64 - bitSize >>> 0)));
			return !((x.$high === trunc.$high && x.$low === trunc.$low));
		}
		$panic(new ValueError.ptr("reflect.Value.OverflowInt", new flag(v.flag).kind()));
	};
	Value.prototype.OverflowInt = function(x) { return this.$val.OverflowInt(x); };
	Value.ptr.prototype.OverflowUint = function(x) {
		var _ref, bitSize, k, trunc, v, x$1;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 7 || _ref === 12 || _ref === 8 || _ref === 9 || _ref === 10 || _ref === 11) {
			bitSize = (x$1 = v.typ.size, (((x$1 >>> 16 << 16) * 8 >>> 0) + (x$1 << 16 >>> 16) * 8) >>> 0);
			trunc = $shiftRightUint64(($shiftLeft64(x, ((64 - bitSize >>> 0)))), ((64 - bitSize >>> 0)));
			return !((x.$high === trunc.$high && x.$low === trunc.$low));
		}
		$panic(new ValueError.ptr("reflect.Value.OverflowUint", new flag(v.flag).kind()));
	};
	Value.prototype.OverflowUint = function(x) { return this.$val.OverflowUint(x); };
	Value.ptr.prototype.SetBool = function(x) {
		var v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(1);
		v.ptr.$set(x);
	};
	Value.prototype.SetBool = function(x) { return this.$val.SetBool(x); };
	Value.ptr.prototype.SetBytes = function(x) {
		var v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(23);
		if (!((v.typ.Elem().Kind() === 8))) {
			$panic(new $String("reflect.Value.SetBytes of non-byte slice"));
		}
		v.ptr.$set(x);
	};
	Value.prototype.SetBytes = function(x) { return this.$val.SetBytes(x); };
	Value.ptr.prototype.setRunes = function(x) {
		var v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(23);
		if (!((v.typ.Elem().Kind() === 5))) {
			$panic(new $String("reflect.Value.setRunes of non-rune slice"));
		}
		v.ptr.$set(x);
	};
	Value.prototype.setRunes = function(x) { return this.$val.setRunes(x); };
	Value.ptr.prototype.SetComplex = function(x) {
		var _ref, k, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 15) {
			v.ptr.$set(new $Complex64(x.$real, x.$imag));
		} else if (_ref === 16) {
			v.ptr.$set(x);
		} else {
			$panic(new ValueError.ptr("reflect.Value.SetComplex", new flag(v.flag).kind()));
		}
	};
	Value.prototype.SetComplex = function(x) { return this.$val.SetComplex(x); };
	Value.ptr.prototype.SetFloat = function(x) {
		var _ref, k, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 13) {
			v.ptr.$set(x);
		} else if (_ref === 14) {
			v.ptr.$set(x);
		} else {
			$panic(new ValueError.ptr("reflect.Value.SetFloat", new flag(v.flag).kind()));
		}
	};
	Value.prototype.SetFloat = function(x) { return this.$val.SetFloat(x); };
	Value.ptr.prototype.SetInt = function(x) {
		var _ref, k, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 2) {
			v.ptr.$set(((x.$low + ((x.$high >> 31) * 4294967296)) >> 0));
		} else if (_ref === 3) {
			v.ptr.$set(((x.$low + ((x.$high >> 31) * 4294967296)) << 24 >> 24));
		} else if (_ref === 4) {
			v.ptr.$set(((x.$low + ((x.$high >> 31) * 4294967296)) << 16 >> 16));
		} else if (_ref === 5) {
			v.ptr.$set(((x.$low + ((x.$high >> 31) * 4294967296)) >> 0));
		} else if (_ref === 6) {
			v.ptr.$set(x);
		} else {
			$panic(new ValueError.ptr("reflect.Value.SetInt", new flag(v.flag).kind()));
		}
	};
	Value.prototype.SetInt = function(x) { return this.$val.SetInt(x); };
	Value.ptr.prototype.SetMapIndex = function(key, val) {
		var e, k, tt, v;
		v = this;
		val = val;
		key = key;
		new flag(v.flag).mustBe(21);
		new flag(v.flag).mustBeExported();
		new flag(key.flag).mustBeExported();
		tt = v.typ.kindType;
		key = key.assignTo("reflect.Value.SetMapIndex", tt.key, 0);
		k = 0;
		if (!((((key.flag & 64) >>> 0) === 0))) {
			k = key.ptr;
		} else {
			k = new ptrType$17(function() { return this.$target.ptr; }, function($v) { this.$target.ptr = $v; }, key);
		}
		if (val.typ === ptrType$1.nil) {
			mapdelete(v.typ, v.pointer(), k);
			return;
		}
		new flag(val.flag).mustBeExported();
		val = val.assignTo("reflect.Value.SetMapIndex", tt.elem, 0);
		e = 0;
		if (!((((val.flag & 64) >>> 0) === 0))) {
			e = val.ptr;
		} else {
			e = new ptrType$17(function() { return this.$target.ptr; }, function($v) { this.$target.ptr = $v; }, val);
		}
		mapassign(v.typ, v.pointer(), k, e);
	};
	Value.prototype.SetMapIndex = function(key, val) { return this.$val.SetMapIndex(key, val); };
	Value.ptr.prototype.SetUint = function(x) {
		var _ref, k, v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 7) {
			v.ptr.$set((x.$low >>> 0));
		} else if (_ref === 8) {
			v.ptr.$set((x.$low << 24 >>> 24));
		} else if (_ref === 9) {
			v.ptr.$set((x.$low << 16 >>> 16));
		} else if (_ref === 10) {
			v.ptr.$set((x.$low >>> 0));
		} else if (_ref === 11) {
			v.ptr.$set(x);
		} else if (_ref === 12) {
			v.ptr.$set((x.$low >>> 0));
		} else {
			$panic(new ValueError.ptr("reflect.Value.SetUint", new flag(v.flag).kind()));
		}
	};
	Value.prototype.SetUint = function(x) { return this.$val.SetUint(x); };
	Value.ptr.prototype.SetPointer = function(x) {
		var v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(26);
		v.ptr.$set(x);
	};
	Value.prototype.SetPointer = function(x) { return this.$val.SetPointer(x); };
	Value.ptr.prototype.SetString = function(x) {
		var v;
		v = this;
		new flag(v.flag).mustBeAssignable();
		new flag(v.flag).mustBe(24);
		v.ptr.$set(x);
	};
	Value.prototype.SetString = function(x) { return this.$val.SetString(x); };
	Value.ptr.prototype.String = function() {
		var _ref, k, v;
		v = this;
		k = new flag(v.flag).kind();
		_ref = k;
		if (_ref === 0) {
			return "<invalid Value>";
		} else if (_ref === 24) {
			return v.ptr.$get();
		}
		return "<" + v.Type().String() + " Value>";
	};
	Value.prototype.String = function() { return this.$val.String(); };
	Value.ptr.prototype.Type = function() {
		var f, i, m, m$1, tt, ut, v, x, x$1;
		v = this;
		f = v.flag;
		if (f === 0) {
			$panic(new ValueError.ptr("reflect.Value.Type", 0));
		}
		if (((f & 256) >>> 0) === 0) {
			return v.typ;
		}
		i = (v.flag >> 0) >> 9 >> 0;
		if (v.typ.Kind() === 20) {
			tt = v.typ.kindType;
			if ((i >>> 0) >= (tt.methods.$length >>> 0)) {
				$panic(new $String("reflect: internal error: invalid method index"));
			}
			m = (x = tt.methods, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]));
			return m.typ;
		}
		ut = v.typ.uncommonType.uncommon();
		if (ut === ptrType$5.nil || (i >>> 0) >= (ut.methods.$length >>> 0)) {
			$panic(new $String("reflect: internal error: invalid method index"));
		}
		m$1 = (x$1 = ut.methods, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i]));
		return m$1.mtyp;
	};
	Value.prototype.Type = function() { return this.$val.Type(); };
	Value.ptr.prototype.Uint = function() {
		var _ref, k, p, v, x;
		v = this;
		k = new flag(v.flag).kind();
		p = v.ptr;
		_ref = k;
		if (_ref === 7) {
			return new $Uint64(0, p.$get());
		} else if (_ref === 8) {
			return new $Uint64(0, p.$get());
		} else if (_ref === 9) {
			return new $Uint64(0, p.$get());
		} else if (_ref === 10) {
			return new $Uint64(0, p.$get());
		} else if (_ref === 11) {
			return p.$get();
		} else if (_ref === 12) {
			return (x = p.$get(), new $Uint64(0, x.constructor === Number ? x : 1));
		}
		$panic(new ValueError.ptr("reflect.Value.Uint", new flag(v.flag).kind()));
	};
	Value.prototype.Uint = function() { return this.$val.Uint(); };
	Value.ptr.prototype.UnsafeAddr = function() {
		var v;
		v = this;
		if (v.typ === ptrType$1.nil) {
			$panic(new ValueError.ptr("reflect.Value.UnsafeAddr", 0));
		}
		if (((v.flag & 128) >>> 0) === 0) {
			$panic(new $String("reflect.Value.UnsafeAddr of unaddressable value"));
		}
		return v.ptr;
	};
	Value.prototype.UnsafeAddr = function() { return this.$val.UnsafeAddr(); };
	typesMustMatch = function(what, t1, t2) {
		if (!($interfaceIsEqual(t1, t2))) {
			$panic(new $String(what + ": " + t1.String() + " != " + t2.String()));
		}
	};
	MakeMap = $pkg.MakeMap = function(typ) {
		var m;
		if (!((typ.Kind() === 21))) {
			$panic(new $String("reflect.MakeMap of non-map type"));
		}
		m = makemap($assertType(typ, ptrType$1));
		return new Value.ptr(typ.common(), m, 21);
	};
	New = $pkg.New = function(typ) {
		var fl, ptr;
		if ($interfaceIsEqual(typ, $ifaceNil)) {
			$panic(new $String("reflect: New(nil)"));
		}
		ptr = unsafe_New($assertType(typ, ptrType$1));
		fl = 22;
		return new Value.ptr(typ.common().ptrTo(), ptr, fl);
	};
	Value.ptr.prototype.assignTo = function(context, dst, target) {
		var fl, v, x;
		v = this;
		if (!((((v.flag & 256) >>> 0) === 0))) {
			v = makeMethodValue(context, v);
		}
		if (directlyAssignable(dst, v.typ)) {
			v.typ = dst;
			fl = (v.flag & 224) >>> 0;
			fl = (fl | ((dst.Kind() >>> 0))) >>> 0;
			return new Value.ptr(dst, v.ptr, fl);
		} else if (implements$1(dst, v.typ)) {
			if (target === 0) {
				target = unsafe_New(dst);
			}
			x = valueInterface(v, false);
			if (dst.NumMethod() === 0) {
				target.$set(x);
			} else {
				ifaceE2I(dst, x, target);
			}
			return new Value.ptr(dst, target, 84);
		}
		$panic(new $String(context + ": value of type " + v.typ.String() + " is not assignable to type " + dst.String()));
	};
	Value.prototype.assignTo = function(context, dst, target) { return this.$val.assignTo(context, dst, target); };
	Value.ptr.prototype.Convert = function(t) {
		var op, v;
		v = this;
		if (!((((v.flag & 256) >>> 0) === 0))) {
			v = makeMethodValue("Convert", v);
		}
		op = convertOp(t.common(), v.typ);
		if (op === $throwNilPointerError) {
			$panic(new $String("reflect.Value.Convert: value of type " + v.typ.String() + " cannot be converted to type " + t.String()));
		}
		return op(v, t);
	};
	Value.prototype.Convert = function(t) { return this.$val.Convert(t); };
	convertOp = function(dst, src) {
		var _ref, _ref$1, _ref$2, _ref$3, _ref$4, _ref$5, _ref$6;
		_ref = src.Kind();
		if (_ref === 2 || _ref === 3 || _ref === 4 || _ref === 5 || _ref === 6) {
			_ref$1 = dst.Kind();
			if (_ref$1 === 2 || _ref$1 === 3 || _ref$1 === 4 || _ref$1 === 5 || _ref$1 === 6 || _ref$1 === 7 || _ref$1 === 8 || _ref$1 === 9 || _ref$1 === 10 || _ref$1 === 11 || _ref$1 === 12) {
				return cvtInt;
			} else if (_ref$1 === 13 || _ref$1 === 14) {
				return cvtIntFloat;
			} else if (_ref$1 === 24) {
				return cvtIntString;
			}
		} else if (_ref === 7 || _ref === 8 || _ref === 9 || _ref === 10 || _ref === 11 || _ref === 12) {
			_ref$2 = dst.Kind();
			if (_ref$2 === 2 || _ref$2 === 3 || _ref$2 === 4 || _ref$2 === 5 || _ref$2 === 6 || _ref$2 === 7 || _ref$2 === 8 || _ref$2 === 9 || _ref$2 === 10 || _ref$2 === 11 || _ref$2 === 12) {
				return cvtUint;
			} else if (_ref$2 === 13 || _ref$2 === 14) {
				return cvtUintFloat;
			} else if (_ref$2 === 24) {
				return cvtUintString;
			}
		} else if (_ref === 13 || _ref === 14) {
			_ref$3 = dst.Kind();
			if (_ref$3 === 2 || _ref$3 === 3 || _ref$3 === 4 || _ref$3 === 5 || _ref$3 === 6) {
				return cvtFloatInt;
			} else if (_ref$3 === 7 || _ref$3 === 8 || _ref$3 === 9 || _ref$3 === 10 || _ref$3 === 11 || _ref$3 === 12) {
				return cvtFloatUint;
			} else if (_ref$3 === 13 || _ref$3 === 14) {
				return cvtFloat;
			}
		} else if (_ref === 15 || _ref === 16) {
			_ref$4 = dst.Kind();
			if (_ref$4 === 15 || _ref$4 === 16) {
				return cvtComplex;
			}
		} else if (_ref === 24) {
			if ((dst.Kind() === 23) && dst.Elem().PkgPath() === "") {
				_ref$5 = dst.Elem().Kind();
				if (_ref$5 === 8) {
					return cvtStringBytes;
				} else if (_ref$5 === 5) {
					return cvtStringRunes;
				}
			}
		} else if (_ref === 23) {
			if ((dst.Kind() === 24) && src.Elem().PkgPath() === "") {
				_ref$6 = src.Elem().Kind();
				if (_ref$6 === 8) {
					return cvtBytesString;
				} else if (_ref$6 === 5) {
					return cvtRunesString;
				}
			}
		}
		if (haveIdenticalUnderlyingType(dst, src)) {
			return cvtDirect;
		}
		if ((dst.Kind() === 22) && dst.Name() === "" && (src.Kind() === 22) && src.Name() === "" && haveIdenticalUnderlyingType(dst.Elem().common(), src.Elem().common())) {
			return cvtDirect;
		}
		if (implements$1(dst, src)) {
			if (src.Kind() === 20) {
				return cvtI2I;
			}
			return cvtT2I;
		}
		return $throwNilPointerError;
	};
	makeFloat = function(f, v, t) {
		var _ref, ptr, typ;
		typ = t.common();
		ptr = unsafe_New(typ);
		_ref = typ.size;
		if (_ref === 4) {
			ptr.$set(v);
		} else if (_ref === 8) {
			ptr.$set(v);
		}
		return new Value.ptr(typ, ptr, (((f | 64) >>> 0) | (typ.Kind() >>> 0)) >>> 0);
	};
	makeComplex = function(f, v, t) {
		var _ref, ptr, typ;
		typ = t.common();
		ptr = unsafe_New(typ);
		_ref = typ.size;
		if (_ref === 8) {
			ptr.$set(new $Complex64(v.$real, v.$imag));
		} else if (_ref === 16) {
			ptr.$set(v);
		}
		return new Value.ptr(typ, ptr, (((f | 64) >>> 0) | (typ.Kind() >>> 0)) >>> 0);
	};
	makeString = function(f, v, t) {
		var ret;
		ret = New(t).Elem();
		ret.SetString(v);
		ret.flag = ((ret.flag & ~128) | f) >>> 0;
		return ret;
	};
	makeBytes = function(f, v, t) {
		var ret;
		ret = New(t).Elem();
		ret.SetBytes(v);
		ret.flag = ((ret.flag & ~128) | f) >>> 0;
		return ret;
	};
	makeRunes = function(f, v, t) {
		var ret;
		ret = New(t).Elem();
		ret.setRunes(v);
		ret.flag = ((ret.flag & ~128) | f) >>> 0;
		return ret;
	};
	cvtInt = function(v, t) {
		var x;
		v = v;
		return makeInt((v.flag & 32) >>> 0, (x = v.Int(), new $Uint64(x.$high, x.$low)), t);
	};
	cvtUint = function(v, t) {
		v = v;
		return makeInt((v.flag & 32) >>> 0, v.Uint(), t);
	};
	cvtFloatInt = function(v, t) {
		var x;
		v = v;
		return makeInt((v.flag & 32) >>> 0, (x = new $Int64(0, v.Float()), new $Uint64(x.$high, x.$low)), t);
	};
	cvtFloatUint = function(v, t) {
		v = v;
		return makeInt((v.flag & 32) >>> 0, new $Uint64(0, v.Float()), t);
	};
	cvtIntFloat = function(v, t) {
		v = v;
		return makeFloat((v.flag & 32) >>> 0, $flatten64(v.Int()), t);
	};
	cvtUintFloat = function(v, t) {
		v = v;
		return makeFloat((v.flag & 32) >>> 0, $flatten64(v.Uint()), t);
	};
	cvtFloat = function(v, t) {
		v = v;
		return makeFloat((v.flag & 32) >>> 0, v.Float(), t);
	};
	cvtComplex = function(v, t) {
		v = v;
		return makeComplex((v.flag & 32) >>> 0, v.Complex(), t);
	};
	cvtIntString = function(v, t) {
		v = v;
		return makeString((v.flag & 32) >>> 0, $encodeRune(v.Int().$low), t);
	};
	cvtUintString = function(v, t) {
		v = v;
		return makeString((v.flag & 32) >>> 0, $encodeRune(v.Uint().$low), t);
	};
	cvtBytesString = function(v, t) {
		v = v;
		return makeString((v.flag & 32) >>> 0, $bytesToString(v.Bytes()), t);
	};
	cvtStringBytes = function(v, t) {
		v = v;
		return makeBytes((v.flag & 32) >>> 0, new sliceType$12($stringToBytes(v.String())), t);
	};
	cvtRunesString = function(v, t) {
		v = v;
		return makeString((v.flag & 32) >>> 0, $runesToString(v.runes()), t);
	};
	cvtStringRunes = function(v, t) {
		v = v;
		return makeRunes((v.flag & 32) >>> 0, new sliceType$13($stringToRunes(v.String())), t);
	};
	cvtT2I = function(v, typ) {
		var target, x;
		v = v;
		target = unsafe_New(typ.common());
		x = valueInterface(v, false);
		if (typ.NumMethod() === 0) {
			target.$set(x);
		} else {
			ifaceE2I($assertType(typ, ptrType$1), x, target);
		}
		return new Value.ptr(typ.common(), target, (((((v.flag & 32) >>> 0) | 64) >>> 0) | 20) >>> 0);
	};
	cvtI2I = function(v, typ) {
		var ret;
		v = v;
		if (v.IsNil()) {
			ret = Zero(typ);
			ret.flag = (ret.flag | (((v.flag & 32) >>> 0))) >>> 0;
			return ret;
		}
		return cvtT2I(v.Elem(), typ);
	};
	Kind.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$19.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	rtype.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$1.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$5.methods = [{prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ChanDir.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$20.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	arrayType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$21.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	chanType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$22.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	funcType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$18.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	interfaceType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$10.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	mapType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$23.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$2.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	sliceType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$24.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	structType.methods = [{prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	ptrType$12.methods = [{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "pointers", name: "pointers", pkg: "reflect", type: $funcType([], [$Bool], false)}, {prop: "ptrTo", name: "ptrTo", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}];
	StructTag.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [$String], false)}];
	ptrType$25.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [$String], false)}];
	Value.methods = [{prop: "Addr", name: "Addr", pkg: "", type: $funcType([], [Value], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bytes", name: "Bytes", pkg: "", type: $funcType([], [sliceType$12], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([sliceType$6], [sliceType$6], false)}, {prop: "CallSlice", name: "CallSlice", pkg: "", type: $funcType([sliceType$6], [sliceType$6], false)}, {prop: "CanAddr", name: "CanAddr", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CanInterface", name: "CanInterface", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CanSet", name: "CanSet", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Cap", name: "Cap", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Close", name: "Close", pkg: "", type: $funcType([], [], false)}, {prop: "Complex", name: "Complex", pkg: "", type: $funcType([], [$Complex128], false)}, {prop: "Convert", name: "Convert", pkg: "", type: $funcType([Type], [Value], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Value], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [Value], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [Value], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [Value], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "InterfaceData", name: "InterfaceData", pkg: "", type: $funcType([], [arrayType$3], false)}, {prop: "IsNil", name: "IsNil", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsValid", name: "IsValid", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "MapIndex", name: "MapIndex", pkg: "", type: $funcType([Value], [Value], false)}, {prop: "MapKeys", name: "MapKeys", pkg: "", type: $funcType([], [sliceType$6], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Value], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "OverflowComplex", name: "OverflowComplex", pkg: "", type: $funcType([$Complex128], [$Bool], false)}, {prop: "OverflowFloat", name: "OverflowFloat", pkg: "", type: $funcType([$Float64], [$Bool], false)}, {prop: "OverflowInt", name: "OverflowInt", pkg: "", type: $funcType([$Int64], [$Bool], false)}, {prop: "OverflowUint", name: "OverflowUint", pkg: "", type: $funcType([$Uint64], [$Bool], false)}, {prop: "Pointer", name: "Pointer", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Recv", name: "Recv", pkg: "", type: $funcType([], [Value, $Bool], false)}, {prop: "Send", name: "Send", pkg: "", type: $funcType([Value], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([Value], [], false)}, {prop: "SetBool", name: "SetBool", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetBytes", name: "SetBytes", pkg: "", type: $funcType([sliceType$12], [], false)}, {prop: "SetCap", name: "SetCap", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetComplex", name: "SetComplex", pkg: "", type: $funcType([$Complex128], [], false)}, {prop: "SetFloat", name: "SetFloat", pkg: "", type: $funcType([$Float64], [], false)}, {prop: "SetInt", name: "SetInt", pkg: "", type: $funcType([$Int64], [], false)}, {prop: "SetLen", name: "SetLen", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetMapIndex", name: "SetMapIndex", pkg: "", type: $funcType([Value, Value], [], false)}, {prop: "SetPointer", name: "SetPointer", pkg: "", type: $funcType([$UnsafePointer], [], false)}, {prop: "SetString", name: "SetString", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetUint", name: "SetUint", pkg: "", type: $funcType([$Uint64], [], false)}, {prop: "Slice", name: "Slice", pkg: "", type: $funcType([$Int, $Int], [Value], false)}, {prop: "Slice3", name: "Slice3", pkg: "", type: $funcType([$Int, $Int, $Int], [Value], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TryRecv", name: "TryRecv", pkg: "", type: $funcType([], [Value, $Bool], false)}, {prop: "TrySend", name: "TrySend", pkg: "", type: $funcType([Value], [$Bool], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [Type], false)}, {prop: "Uint", name: "Uint", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "UnsafeAddr", name: "UnsafeAddr", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "assignTo", name: "assignTo", pkg: "reflect", type: $funcType([$String, ptrType$1, $UnsafePointer], [Value], false)}, {prop: "call", name: "call", pkg: "reflect", type: $funcType([$String, sliceType$6], [sliceType$6], false)}, {prop: "kind", name: "kind", pkg: "reflect", type: $funcType([], [Kind], false)}, {prop: "mustBe", name: "mustBe", pkg: "reflect", type: $funcType([Kind], [], false)}, {prop: "mustBeAssignable", name: "mustBeAssignable", pkg: "reflect", type: $funcType([], [], false)}, {prop: "mustBeExported", name: "mustBeExported", pkg: "reflect", type: $funcType([], [], false)}, {prop: "object", name: "object", pkg: "reflect", type: $funcType([], [js.Object], false)}, {prop: "pointer", name: "pointer", pkg: "reflect", type: $funcType([], [$UnsafePointer], false)}, {prop: "recv", name: "recv", pkg: "reflect", type: $funcType([$Bool], [Value, $Bool], false)}, {prop: "runes", name: "runes", pkg: "reflect", type: $funcType([], [sliceType$13], false)}, {prop: "send", name: "send", pkg: "reflect", type: $funcType([Value, $Bool], [$Bool], false)}, {prop: "setRunes", name: "setRunes", pkg: "reflect", type: $funcType([sliceType$13], [], false)}];
	ptrType$27.methods = [{prop: "Addr", name: "Addr", pkg: "", type: $funcType([], [Value], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bytes", name: "Bytes", pkg: "", type: $funcType([], [sliceType$12], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([sliceType$6], [sliceType$6], false)}, {prop: "CallSlice", name: "CallSlice", pkg: "", type: $funcType([sliceType$6], [sliceType$6], false)}, {prop: "CanAddr", name: "CanAddr", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CanInterface", name: "CanInterface", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CanSet", name: "CanSet", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Cap", name: "Cap", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Close", name: "Close", pkg: "", type: $funcType([], [], false)}, {prop: "Complex", name: "Complex", pkg: "", type: $funcType([], [$Complex128], false)}, {prop: "Convert", name: "Convert", pkg: "", type: $funcType([Type], [Value], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Value], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [Value], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [Value], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [Value], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "InterfaceData", name: "InterfaceData", pkg: "", type: $funcType([], [arrayType$3], false)}, {prop: "IsNil", name: "IsNil", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsValid", name: "IsValid", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "MapIndex", name: "MapIndex", pkg: "", type: $funcType([Value], [Value], false)}, {prop: "MapKeys", name: "MapKeys", pkg: "", type: $funcType([], [sliceType$6], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Value], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Value], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "OverflowComplex", name: "OverflowComplex", pkg: "", type: $funcType([$Complex128], [$Bool], false)}, {prop: "OverflowFloat", name: "OverflowFloat", pkg: "", type: $funcType([$Float64], [$Bool], false)}, {prop: "OverflowInt", name: "OverflowInt", pkg: "", type: $funcType([$Int64], [$Bool], false)}, {prop: "OverflowUint", name: "OverflowUint", pkg: "", type: $funcType([$Uint64], [$Bool], false)}, {prop: "Pointer", name: "Pointer", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Recv", name: "Recv", pkg: "", type: $funcType([], [Value, $Bool], false)}, {prop: "Send", name: "Send", pkg: "", type: $funcType([Value], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([Value], [], false)}, {prop: "SetBool", name: "SetBool", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetBytes", name: "SetBytes", pkg: "", type: $funcType([sliceType$12], [], false)}, {prop: "SetCap", name: "SetCap", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetComplex", name: "SetComplex", pkg: "", type: $funcType([$Complex128], [], false)}, {prop: "SetFloat", name: "SetFloat", pkg: "", type: $funcType([$Float64], [], false)}, {prop: "SetInt", name: "SetInt", pkg: "", type: $funcType([$Int64], [], false)}, {prop: "SetLen", name: "SetLen", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetMapIndex", name: "SetMapIndex", pkg: "", type: $funcType([Value, Value], [], false)}, {prop: "SetPointer", name: "SetPointer", pkg: "", type: $funcType([$UnsafePointer], [], false)}, {prop: "SetString", name: "SetString", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetUint", name: "SetUint", pkg: "", type: $funcType([$Uint64], [], false)}, {prop: "Slice", name: "Slice", pkg: "", type: $funcType([$Int, $Int], [Value], false)}, {prop: "Slice3", name: "Slice3", pkg: "", type: $funcType([$Int, $Int, $Int], [Value], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TryRecv", name: "TryRecv", pkg: "", type: $funcType([], [Value, $Bool], false)}, {prop: "TrySend", name: "TrySend", pkg: "", type: $funcType([Value], [$Bool], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [Type], false)}, {prop: "Uint", name: "Uint", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "UnsafeAddr", name: "UnsafeAddr", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "assignTo", name: "assignTo", pkg: "reflect", type: $funcType([$String, ptrType$1, $UnsafePointer], [Value], false)}, {prop: "call", name: "call", pkg: "reflect", type: $funcType([$String, sliceType$6], [sliceType$6], false)}, {prop: "kind", name: "kind", pkg: "reflect", type: $funcType([], [Kind], false)}, {prop: "mustBe", name: "mustBe", pkg: "reflect", type: $funcType([Kind], [], false)}, {prop: "mustBeAssignable", name: "mustBeAssignable", pkg: "reflect", type: $funcType([], [], false)}, {prop: "mustBeExported", name: "mustBeExported", pkg: "reflect", type: $funcType([], [], false)}, {prop: "object", name: "object", pkg: "reflect", type: $funcType([], [js.Object], false)}, {prop: "pointer", name: "pointer", pkg: "reflect", type: $funcType([], [$UnsafePointer], false)}, {prop: "recv", name: "recv", pkg: "reflect", type: $funcType([$Bool], [Value, $Bool], false)}, {prop: "runes", name: "runes", pkg: "reflect", type: $funcType([], [sliceType$13], false)}, {prop: "send", name: "send", pkg: "reflect", type: $funcType([Value, $Bool], [$Bool], false)}, {prop: "setRunes", name: "setRunes", pkg: "reflect", type: $funcType([sliceType$13], [], false)}];
	flag.methods = [{prop: "kind", name: "kind", pkg: "reflect", type: $funcType([], [Kind], false)}, {prop: "mustBe", name: "mustBe", pkg: "reflect", type: $funcType([Kind], [], false)}, {prop: "mustBeAssignable", name: "mustBeAssignable", pkg: "reflect", type: $funcType([], [], false)}, {prop: "mustBeExported", name: "mustBeExported", pkg: "reflect", type: $funcType([], [], false)}];
	ptrType$28.methods = [{prop: "kind", name: "kind", pkg: "reflect", type: $funcType([], [Kind], false)}, {prop: "mustBe", name: "mustBe", pkg: "reflect", type: $funcType([Kind], [], false)}, {prop: "mustBeAssignable", name: "mustBeAssignable", pkg: "reflect", type: $funcType([], [], false)}, {prop: "mustBeExported", name: "mustBeExported", pkg: "reflect", type: $funcType([], [], false)}];
	ptrType$29.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	mapIter.init([{prop: "t", name: "t", pkg: "reflect", type: Type, tag: ""}, {prop: "m", name: "m", pkg: "reflect", type: js.Object, tag: ""}, {prop: "keys", name: "keys", pkg: "reflect", type: js.Object, tag: ""}, {prop: "i", name: "i", pkg: "reflect", type: $Int, tag: ""}]);
	Type.init([{prop: "Align", name: "Align", pkg: "", type: $funcType([], [$Int], false)}, {prop: "AssignableTo", name: "AssignableTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Bits", name: "Bits", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ChanDir", name: "ChanDir", pkg: "", type: $funcType([], [ChanDir], false)}, {prop: "Comparable", name: "Comparable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ConvertibleTo", name: "ConvertibleTo", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "Elem", name: "Elem", pkg: "", type: $funcType([], [Type], false)}, {prop: "Field", name: "Field", pkg: "", type: $funcType([$Int], [StructField], false)}, {prop: "FieldAlign", name: "FieldAlign", pkg: "", type: $funcType([], [$Int], false)}, {prop: "FieldByIndex", name: "FieldByIndex", pkg: "", type: $funcType([sliceType$9], [StructField], false)}, {prop: "FieldByName", name: "FieldByName", pkg: "", type: $funcType([$String], [StructField, $Bool], false)}, {prop: "FieldByNameFunc", name: "FieldByNameFunc", pkg: "", type: $funcType([funcType$2], [StructField, $Bool], false)}, {prop: "Implements", name: "Implements", pkg: "", type: $funcType([Type], [$Bool], false)}, {prop: "In", name: "In", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "IsVariadic", name: "IsVariadic", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Key", name: "Key", pkg: "", type: $funcType([], [Type], false)}, {prop: "Kind", name: "Kind", pkg: "", type: $funcType([], [Kind], false)}, {prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Method", name: "Method", pkg: "", type: $funcType([$Int], [Method], false)}, {prop: "MethodByName", name: "MethodByName", pkg: "", type: $funcType([$String], [Method, $Bool], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "NumField", name: "NumField", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumIn", name: "NumIn", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumMethod", name: "NumMethod", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NumOut", name: "NumOut", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Out", name: "Out", pkg: "", type: $funcType([$Int], [Type], false)}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $funcType([], [$String], false)}, {prop: "Size", name: "Size", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "common", name: "common", pkg: "reflect", type: $funcType([], [ptrType$1], false)}, {prop: "uncommon", name: "uncommon", pkg: "reflect", type: $funcType([], [ptrType$5], false)}]);
	rtype.init([{prop: "size", name: "size", pkg: "reflect", type: $Uintptr, tag: ""}, {prop: "hash", name: "hash", pkg: "reflect", type: $Uint32, tag: ""}, {prop: "_$2", name: "_", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "align", name: "align", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "fieldAlign", name: "fieldAlign", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "kind", name: "kind", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "alg", name: "alg", pkg: "reflect", type: ptrType$3, tag: ""}, {prop: "gc", name: "gc", pkg: "reflect", type: arrayType$1, tag: ""}, {prop: "string", name: "string", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "uncommonType", name: "", pkg: "reflect", type: ptrType$5, tag: ""}, {prop: "ptrToThis", name: "ptrToThis", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "zero", name: "zero", pkg: "reflect", type: $UnsafePointer, tag: ""}]);
	typeAlg.init([{prop: "hash", name: "hash", pkg: "reflect", type: funcType$3, tag: ""}, {prop: "equal", name: "equal", pkg: "reflect", type: funcType$4, tag: ""}]);
	method.init([{prop: "name", name: "name", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "pkgPath", name: "pkgPath", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "mtyp", name: "mtyp", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "typ", name: "typ", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "ifn", name: "ifn", pkg: "reflect", type: $UnsafePointer, tag: ""}, {prop: "tfn", name: "tfn", pkg: "reflect", type: $UnsafePointer, tag: ""}]);
	uncommonType.init([{prop: "name", name: "name", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "pkgPath", name: "pkgPath", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "methods", name: "methods", pkg: "reflect", type: sliceType$2, tag: ""}]);
	arrayType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"array\""}, {prop: "elem", name: "elem", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "slice", name: "slice", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "len", name: "len", pkg: "reflect", type: $Uintptr, tag: ""}]);
	chanType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"chan\""}, {prop: "elem", name: "elem", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "dir", name: "dir", pkg: "reflect", type: $Uintptr, tag: ""}]);
	funcType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"func\""}, {prop: "dotdotdot", name: "dotdotdot", pkg: "reflect", type: $Bool, tag: ""}, {prop: "in$2", name: "in", pkg: "reflect", type: sliceType$3, tag: ""}, {prop: "out", name: "out", pkg: "reflect", type: sliceType$3, tag: ""}]);
	imethod.init([{prop: "name", name: "name", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "pkgPath", name: "pkgPath", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "typ", name: "typ", pkg: "reflect", type: ptrType$1, tag: ""}]);
	interfaceType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"interface\""}, {prop: "methods", name: "methods", pkg: "reflect", type: sliceType$4, tag: ""}]);
	mapType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"map\""}, {prop: "key", name: "key", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "elem", name: "elem", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "bucket", name: "bucket", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "hmap", name: "hmap", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "keysize", name: "keysize", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "indirectkey", name: "indirectkey", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "valuesize", name: "valuesize", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "indirectvalue", name: "indirectvalue", pkg: "reflect", type: $Uint8, tag: ""}, {prop: "bucketsize", name: "bucketsize", pkg: "reflect", type: $Uint16, tag: ""}]);
	ptrType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"ptr\""}, {prop: "elem", name: "elem", pkg: "reflect", type: ptrType$1, tag: ""}]);
	sliceType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"slice\""}, {prop: "elem", name: "elem", pkg: "reflect", type: ptrType$1, tag: ""}]);
	structField.init([{prop: "name", name: "name", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "pkgPath", name: "pkgPath", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "typ", name: "typ", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "tag", name: "tag", pkg: "reflect", type: ptrType$4, tag: ""}, {prop: "offset", name: "offset", pkg: "reflect", type: $Uintptr, tag: ""}]);
	structType.init([{prop: "rtype", name: "", pkg: "reflect", type: rtype, tag: "reflect:\"struct\""}, {prop: "fields", name: "fields", pkg: "reflect", type: sliceType$5, tag: ""}]);
	Method.init([{prop: "Name", name: "Name", pkg: "", type: $String, tag: ""}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $String, tag: ""}, {prop: "Type", name: "Type", pkg: "", type: Type, tag: ""}, {prop: "Func", name: "Func", pkg: "", type: Value, tag: ""}, {prop: "Index", name: "Index", pkg: "", type: $Int, tag: ""}]);
	StructField.init([{prop: "Name", name: "Name", pkg: "", type: $String, tag: ""}, {prop: "PkgPath", name: "PkgPath", pkg: "", type: $String, tag: ""}, {prop: "Type", name: "Type", pkg: "", type: Type, tag: ""}, {prop: "Tag", name: "Tag", pkg: "", type: StructTag, tag: ""}, {prop: "Offset", name: "Offset", pkg: "", type: $Uintptr, tag: ""}, {prop: "Index", name: "Index", pkg: "", type: sliceType$9, tag: ""}, {prop: "Anonymous", name: "Anonymous", pkg: "", type: $Bool, tag: ""}]);
	fieldScan.init([{prop: "typ", name: "typ", pkg: "reflect", type: ptrType$12, tag: ""}, {prop: "index", name: "index", pkg: "reflect", type: sliceType$9, tag: ""}]);
	Value.init([{prop: "typ", name: "typ", pkg: "reflect", type: ptrType$1, tag: ""}, {prop: "ptr", name: "ptr", pkg: "reflect", type: $UnsafePointer, tag: ""}, {prop: "flag", name: "", pkg: "reflect", type: flag, tag: ""}]);
	ValueError.init([{prop: "Method", name: "Method", pkg: "", type: $String, tag: ""}, {prop: "Kind", name: "Kind", pkg: "", type: Kind, tag: ""}]);
	nonEmptyInterface.init([{prop: "itab", name: "itab", pkg: "reflect", type: ptrType$7, tag: ""}, {prop: "word", name: "word", pkg: "reflect", type: $UnsafePointer, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_reflect = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = math.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		initialized = false;
		stringPtrMap = new $Map();
		jsObject = $js.Object;
		jsContainer = $js.container.ptr;
		kindNames = new sliceType$1(["invalid", "bool", "int", "int8", "int16", "int32", "int64", "uint", "uint8", "uint16", "uint32", "uint64", "uintptr", "float32", "float64", "complex64", "complex128", "array", "chan", "func", "interface", "map", "ptr", "slice", "string", "struct", "unsafe.Pointer"]);
		uint8Type = $assertType(TypeOf(new $Uint8(0)), ptrType$1);
		init();
		/* */ } return; } }; $init_reflect.$blocking = true; return $init_reflect;
	};
	return $pkg;
})();
$packages["fmt"] = (function() {
	var $pkg = {}, errors, io, math, os, reflect, strconv, sync, utf8, fmtFlags, fmt, State, Formatter, Stringer, GoStringer, buffer, pp, runeUnreader, scanError, ss, ssave, sliceType, sliceType$1, arrayType, sliceType$2, ptrType, ptrType$1, ptrType$2, ptrType$5, arrayType$1, arrayType$2, ptrType$25, funcType, padZeroBytes, padSpaceBytes, trueBytes, falseBytes, commaSpaceBytes, nilAngleBytes, nilParenBytes, nilBytes, mapBytes, percentBangBytes, missingBytes, badIndexBytes, panicBytes, extraBytes, irparenBytes, bytesBytes, badWidthBytes, badPrecBytes, noVerbBytes, ppFree, intBits, uintptrBits, byteType, space, ssFree, complexError, boolError, init, doPrec, newPrinter, Fprintf, Sprintf, Errorf, Sprint, Fprintln, getField, parsenum, intFromArg, parseArgNumber, isSpace, notSpace, indexRune;
	errors = $packages["errors"];
	io = $packages["io"];
	math = $packages["math"];
	os = $packages["os"];
	reflect = $packages["reflect"];
	strconv = $packages["strconv"];
	sync = $packages["sync"];
	utf8 = $packages["unicode/utf8"];
	fmtFlags = $pkg.fmtFlags = $newType(0, $kindStruct, "fmt.fmtFlags", "fmtFlags", "fmt", function(widPresent_, precPresent_, minus_, plus_, sharp_, space_, unicode_, uniQuote_, zero_, plusV_, sharpV_) {
		this.$val = this;
		this.widPresent = widPresent_ !== undefined ? widPresent_ : false;
		this.precPresent = precPresent_ !== undefined ? precPresent_ : false;
		this.minus = minus_ !== undefined ? minus_ : false;
		this.plus = plus_ !== undefined ? plus_ : false;
		this.sharp = sharp_ !== undefined ? sharp_ : false;
		this.space = space_ !== undefined ? space_ : false;
		this.unicode = unicode_ !== undefined ? unicode_ : false;
		this.uniQuote = uniQuote_ !== undefined ? uniQuote_ : false;
		this.zero = zero_ !== undefined ? zero_ : false;
		this.plusV = plusV_ !== undefined ? plusV_ : false;
		this.sharpV = sharpV_ !== undefined ? sharpV_ : false;
	});
	fmt = $pkg.fmt = $newType(0, $kindStruct, "fmt.fmt", "fmt", "fmt", function(intbuf_, buf_, wid_, prec_, fmtFlags_) {
		this.$val = this;
		this.intbuf = intbuf_ !== undefined ? intbuf_ : arrayType$2.zero();
		this.buf = buf_ !== undefined ? buf_ : ptrType$1.nil;
		this.wid = wid_ !== undefined ? wid_ : 0;
		this.prec = prec_ !== undefined ? prec_ : 0;
		this.fmtFlags = fmtFlags_ !== undefined ? fmtFlags_ : new fmtFlags.ptr();
	});
	State = $pkg.State = $newType(8, $kindInterface, "fmt.State", "State", "fmt", null);
	Formatter = $pkg.Formatter = $newType(8, $kindInterface, "fmt.Formatter", "Formatter", "fmt", null);
	Stringer = $pkg.Stringer = $newType(8, $kindInterface, "fmt.Stringer", "Stringer", "fmt", null);
	GoStringer = $pkg.GoStringer = $newType(8, $kindInterface, "fmt.GoStringer", "GoStringer", "fmt", null);
	buffer = $pkg.buffer = $newType(12, $kindSlice, "fmt.buffer", "buffer", "fmt", null);
	pp = $pkg.pp = $newType(0, $kindStruct, "fmt.pp", "pp", "fmt", function(n_, panicking_, erroring_, buf_, arg_, value_, reordered_, goodArgNum_, runeBuf_, fmt_) {
		this.$val = this;
		this.n = n_ !== undefined ? n_ : 0;
		this.panicking = panicking_ !== undefined ? panicking_ : false;
		this.erroring = erroring_ !== undefined ? erroring_ : false;
		this.buf = buf_ !== undefined ? buf_ : buffer.nil;
		this.arg = arg_ !== undefined ? arg_ : $ifaceNil;
		this.value = value_ !== undefined ? value_ : new reflect.Value.ptr();
		this.reordered = reordered_ !== undefined ? reordered_ : false;
		this.goodArgNum = goodArgNum_ !== undefined ? goodArgNum_ : false;
		this.runeBuf = runeBuf_ !== undefined ? runeBuf_ : arrayType$1.zero();
		this.fmt = fmt_ !== undefined ? fmt_ : new fmt.ptr();
	});
	runeUnreader = $pkg.runeUnreader = $newType(8, $kindInterface, "fmt.runeUnreader", "runeUnreader", "fmt", null);
	scanError = $pkg.scanError = $newType(0, $kindStruct, "fmt.scanError", "scanError", "fmt", function(err_) {
		this.$val = this;
		this.err = err_ !== undefined ? err_ : $ifaceNil;
	});
	ss = $pkg.ss = $newType(0, $kindStruct, "fmt.ss", "ss", "fmt", function(rr_, buf_, peekRune_, prevRune_, count_, atEOF_, ssave_) {
		this.$val = this;
		this.rr = rr_ !== undefined ? rr_ : $ifaceNil;
		this.buf = buf_ !== undefined ? buf_ : buffer.nil;
		this.peekRune = peekRune_ !== undefined ? peekRune_ : 0;
		this.prevRune = prevRune_ !== undefined ? prevRune_ : 0;
		this.count = count_ !== undefined ? count_ : 0;
		this.atEOF = atEOF_ !== undefined ? atEOF_ : false;
		this.ssave = ssave_ !== undefined ? ssave_ : new ssave.ptr();
	});
	ssave = $pkg.ssave = $newType(0, $kindStruct, "fmt.ssave", "ssave", "fmt", function(validSave_, nlIsEnd_, nlIsSpace_, argLimit_, limit_, maxWid_) {
		this.$val = this;
		this.validSave = validSave_ !== undefined ? validSave_ : false;
		this.nlIsEnd = nlIsEnd_ !== undefined ? nlIsEnd_ : false;
		this.nlIsSpace = nlIsSpace_ !== undefined ? nlIsSpace_ : false;
		this.argLimit = argLimit_ !== undefined ? argLimit_ : 0;
		this.limit = limit_ !== undefined ? limit_ : 0;
		this.maxWid = maxWid_ !== undefined ? maxWid_ : 0;
	});
		sliceType = $sliceType($Uint8);
		sliceType$1 = $sliceType($emptyInterface);
		arrayType = $arrayType($Uint16, 2);
		sliceType$2 = $sliceType(arrayType);
		ptrType = $ptrType(pp);
		ptrType$1 = $ptrType(buffer);
		ptrType$2 = $ptrType(reflect.rtype);
		ptrType$5 = $ptrType(ss);
		arrayType$1 = $arrayType($Uint8, 4);
		arrayType$2 = $arrayType($Uint8, 65);
		ptrType$25 = $ptrType(fmt);
		funcType = $funcType([$Int32], [$Bool], false);
	init = function() {
		var i;
		i = 0;
		while (i < 65) {
			(i < 0 || i >= padZeroBytes.$length) ? $throwRuntimeError("index out of range") : padZeroBytes.$array[padZeroBytes.$offset + i] = 48;
			(i < 0 || i >= padSpaceBytes.$length) ? $throwRuntimeError("index out of range") : padSpaceBytes.$array[padSpaceBytes.$offset + i] = 32;
			i = i + (1) >> 0;
		}
	};
	fmt.ptr.prototype.clearflags = function() {
		var f;
		f = this;
		$copy(f.fmtFlags, new fmtFlags.ptr(false, false, false, false, false, false, false, false, false, false, false), fmtFlags);
	};
	fmt.prototype.clearflags = function() { return this.$val.clearflags(); };
	fmt.ptr.prototype.init = function(buf) {
		var f;
		f = this;
		f.buf = buf;
		f.clearflags();
	};
	fmt.prototype.init = function(buf) { return this.$val.init(buf); };
	fmt.ptr.prototype.computePadding = function(width) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, f, left, leftWidth = 0, padding = sliceType.nil, rightWidth = 0, w;
		f = this;
		left = !f.fmtFlags.minus;
		w = f.wid;
		if (w < 0) {
			left = false;
			w = -w;
		}
		w = w - (width) >> 0;
		if (w > 0) {
			if (left && f.fmtFlags.zero) {
				_tmp = padZeroBytes; _tmp$1 = w; _tmp$2 = 0; padding = _tmp; leftWidth = _tmp$1; rightWidth = _tmp$2;
				return [padding, leftWidth, rightWidth];
			}
			if (left) {
				_tmp$3 = padSpaceBytes; _tmp$4 = w; _tmp$5 = 0; padding = _tmp$3; leftWidth = _tmp$4; rightWidth = _tmp$5;
				return [padding, leftWidth, rightWidth];
			} else {
				_tmp$6 = padSpaceBytes; _tmp$7 = 0; _tmp$8 = w; padding = _tmp$6; leftWidth = _tmp$7; rightWidth = _tmp$8;
				return [padding, leftWidth, rightWidth];
			}
		}
		return [padding, leftWidth, rightWidth];
	};
	fmt.prototype.computePadding = function(width) { return this.$val.computePadding(width); };
	fmt.ptr.prototype.writePadding = function(n, padding) {
		var f, m;
		f = this;
		while (n > 0) {
			m = n;
			if (m > 65) {
				m = 65;
			}
			f.buf.Write($subslice(padding, 0, m));
			n = n - (m) >> 0;
		}
	};
	fmt.prototype.writePadding = function(n, padding) { return this.$val.writePadding(n, padding); };
	fmt.ptr.prototype.pad = function(b) {
		var _tuple, f, left, padding, right;
		f = this;
		if (!f.fmtFlags.widPresent || (f.wid === 0)) {
			f.buf.Write(b);
			return;
		}
		_tuple = f.computePadding(utf8.RuneCount(b)); padding = _tuple[0]; left = _tuple[1]; right = _tuple[2];
		if (left > 0) {
			f.writePadding(left, padding);
		}
		f.buf.Write(b);
		if (right > 0) {
			f.writePadding(right, padding);
		}
	};
	fmt.prototype.pad = function(b) { return this.$val.pad(b); };
	fmt.ptr.prototype.padString = function(s) {
		var _tuple, f, left, padding, right;
		f = this;
		if (!f.fmtFlags.widPresent || (f.wid === 0)) {
			f.buf.WriteString(s);
			return;
		}
		_tuple = f.computePadding(utf8.RuneCountInString(s)); padding = _tuple[0]; left = _tuple[1]; right = _tuple[2];
		if (left > 0) {
			f.writePadding(left, padding);
		}
		f.buf.WriteString(s);
		if (right > 0) {
			f.writePadding(right, padding);
		}
	};
	fmt.prototype.padString = function(s) { return this.$val.padString(s); };
	fmt.ptr.prototype.fmt_boolean = function(v) {
		var f;
		f = this;
		if (v) {
			f.pad(trueBytes);
		} else {
			f.pad(falseBytes);
		}
	};
	fmt.prototype.fmt_boolean = function(v) { return this.$val.fmt_boolean(v); };
	fmt.ptr.prototype.integer = function(a, base, signedness, digits) {
		var _ref, _ref$1, buf, f, i, j, negative, next, prec, runeWidth, ua, width, width$1, x, x$1, x$2, x$3;
		f = this;
		if (f.fmtFlags.precPresent && (f.prec === 0) && (a.$high === 0 && a.$low === 0)) {
			return;
		}
		buf = $subslice(new sliceType(f.intbuf), 0);
		if (f.fmtFlags.widPresent) {
			width = f.wid;
			if ((base.$high === 0 && base.$low === 16) && f.fmtFlags.sharp) {
				width = width + (2) >> 0;
			}
			if (width > 65) {
				buf = $makeSlice(sliceType, width);
			}
		}
		negative = signedness === true && (a.$high < 0 || (a.$high === 0 && a.$low < 0));
		if (negative) {
			a = new $Int64(-a.$high, -a.$low);
		}
		prec = 0;
		if (f.fmtFlags.precPresent) {
			prec = f.prec;
			f.fmtFlags.zero = false;
		} else if (f.fmtFlags.zero && f.fmtFlags.widPresent && !f.fmtFlags.minus && f.wid > 0) {
			prec = f.wid;
			if (negative || f.fmtFlags.plus || f.fmtFlags.space) {
				prec = prec - (1) >> 0;
			}
		}
		i = buf.$length;
		ua = new $Uint64(a.$high, a.$low);
		_ref = base;
		if ((_ref.$high === 0 && _ref.$low === 10)) {
			while ((ua.$high > 0 || (ua.$high === 0 && ua.$low >= 10))) {
				i = i - (1) >> 0;
				next = $div64(ua, new $Uint64(0, 10), false);
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = ((x = new $Uint64(0 + ua.$high, 48 + ua.$low), x$1 = $mul64(next, new $Uint64(0, 10)), new $Uint64(x.$high - x$1.$high, x.$low - x$1.$low)).$low << 24 >>> 24);
				ua = next;
			}
		} else if ((_ref.$high === 0 && _ref.$low === 16)) {
			while ((ua.$high > 0 || (ua.$high === 0 && ua.$low >= 16))) {
				i = i - (1) >> 0;
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = digits.charCodeAt($flatten64(new $Uint64(ua.$high & 0, (ua.$low & 15) >>> 0)));
				ua = $shiftRightUint64(ua, (4));
			}
		} else if ((_ref.$high === 0 && _ref.$low === 8)) {
			while ((ua.$high > 0 || (ua.$high === 0 && ua.$low >= 8))) {
				i = i - (1) >> 0;
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = ((x$2 = new $Uint64(ua.$high & 0, (ua.$low & 7) >>> 0), new $Uint64(0 + x$2.$high, 48 + x$2.$low)).$low << 24 >>> 24);
				ua = $shiftRightUint64(ua, (3));
			}
		} else if ((_ref.$high === 0 && _ref.$low === 2)) {
			while ((ua.$high > 0 || (ua.$high === 0 && ua.$low >= 2))) {
				i = i - (1) >> 0;
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = ((x$3 = new $Uint64(ua.$high & 0, (ua.$low & 1) >>> 0), new $Uint64(0 + x$3.$high, 48 + x$3.$low)).$low << 24 >>> 24);
				ua = $shiftRightUint64(ua, (1));
			}
		} else {
			$panic(new $String("fmt: unknown base; can't happen"));
		}
		i = i - (1) >> 0;
		(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = digits.charCodeAt($flatten64(ua));
		while (i > 0 && prec > (buf.$length - i >> 0)) {
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 48;
		}
		if (f.fmtFlags.sharp) {
			_ref$1 = base;
			if ((_ref$1.$high === 0 && _ref$1.$low === 8)) {
				if (!((((i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i]) === 48))) {
					i = i - (1) >> 0;
					(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 48;
				}
			} else if ((_ref$1.$high === 0 && _ref$1.$low === 16)) {
				i = i - (1) >> 0;
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = (120 + digits.charCodeAt(10) << 24 >>> 24) - 97 << 24 >>> 24;
				i = i - (1) >> 0;
				(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 48;
			}
		}
		if (f.fmtFlags.unicode) {
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 43;
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 85;
		}
		if (negative) {
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 45;
		} else if (f.fmtFlags.plus) {
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 43;
		} else if (f.fmtFlags.space) {
			i = i - (1) >> 0;
			(i < 0 || i >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + i] = 32;
		}
		if (f.fmtFlags.unicode && f.fmtFlags.uniQuote && (a.$high > 0 || (a.$high === 0 && a.$low >= 0)) && (a.$high < 0 || (a.$high === 0 && a.$low <= 1114111)) && strconv.IsPrint(((a.$low + ((a.$high >> 31) * 4294967296)) >> 0))) {
			runeWidth = utf8.RuneLen(((a.$low + ((a.$high >> 31) * 4294967296)) >> 0));
			width$1 = (2 + runeWidth >> 0) + 1 >> 0;
			$copySlice($subslice(buf, (i - width$1 >> 0)), $subslice(buf, i));
			i = i - (width$1) >> 0;
			j = buf.$length - width$1 >> 0;
			(j < 0 || j >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + j] = 32;
			j = j + (1) >> 0;
			(j < 0 || j >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + j] = 39;
			j = j + (1) >> 0;
			utf8.EncodeRune($subslice(buf, j), ((a.$low + ((a.$high >> 31) * 4294967296)) >> 0));
			j = j + (runeWidth) >> 0;
			(j < 0 || j >= buf.$length) ? $throwRuntimeError("index out of range") : buf.$array[buf.$offset + j] = 39;
		}
		f.pad($subslice(buf, i));
	};
	fmt.prototype.integer = function(a, base, signedness, digits) { return this.$val.integer(a, base, signedness, digits); };
	fmt.ptr.prototype.truncate = function(s) {
		var _i, _ref, _rune, f, i, n;
		f = this;
		if (f.fmtFlags.precPresent && f.prec < utf8.RuneCountInString(s)) {
			n = f.prec;
			_ref = s;
			_i = 0;
			while (_i < _ref.length) {
				_rune = $decodeRune(_ref, _i);
				i = _i;
				if (n === 0) {
					s = s.substring(0, i);
					break;
				}
				n = n - (1) >> 0;
				_i += _rune[1];
			}
		}
		return s;
	};
	fmt.prototype.truncate = function(s) { return this.$val.truncate(s); };
	fmt.ptr.prototype.fmt_s = function(s) {
		var f;
		f = this;
		s = f.truncate(s);
		f.padString(s);
	};
	fmt.prototype.fmt_s = function(s) { return this.$val.fmt_s(s); };
	fmt.ptr.prototype.fmt_sbx = function(s, b, digits) {
		var buf, c, f, i, n, x;
		f = this;
		n = b.$length;
		if (b === sliceType.nil) {
			n = s.length;
		}
		x = (digits.charCodeAt(10) - 97 << 24 >>> 24) + 120 << 24 >>> 24;
		buf = sliceType.nil;
		i = 0;
		while (i < n) {
			if (i > 0 && f.fmtFlags.space) {
				buf = $append(buf, 32);
			}
			if (f.fmtFlags.sharp && (f.fmtFlags.space || (i === 0))) {
				buf = $append(buf, 48, x);
			}
			c = 0;
			if (b === sliceType.nil) {
				c = s.charCodeAt(i);
			} else {
				c = ((i < 0 || i >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + i]);
			}
			buf = $append(buf, digits.charCodeAt((c >>> 4 << 24 >>> 24)), digits.charCodeAt(((c & 15) >>> 0)));
			i = i + (1) >> 0;
		}
		f.pad(buf);
	};
	fmt.prototype.fmt_sbx = function(s, b, digits) { return this.$val.fmt_sbx(s, b, digits); };
	fmt.ptr.prototype.fmt_sx = function(s, digits) {
		var f;
		f = this;
		if (f.fmtFlags.precPresent && f.prec < s.length) {
			s = s.substring(0, f.prec);
		}
		f.fmt_sbx(s, sliceType.nil, digits);
	};
	fmt.prototype.fmt_sx = function(s, digits) { return this.$val.fmt_sx(s, digits); };
	fmt.ptr.prototype.fmt_bx = function(b, digits) {
		var f;
		f = this;
		if (f.fmtFlags.precPresent && f.prec < b.$length) {
			b = $subslice(b, 0, f.prec);
		}
		f.fmt_sbx("", b, digits);
	};
	fmt.prototype.fmt_bx = function(b, digits) { return this.$val.fmt_bx(b, digits); };
	fmt.ptr.prototype.fmt_q = function(s) {
		var f, quoted;
		f = this;
		s = f.truncate(s);
		quoted = "";
		if (f.fmtFlags.sharp && strconv.CanBackquote(s)) {
			quoted = "`" + s + "`";
		} else {
			if (f.fmtFlags.plus) {
				quoted = strconv.QuoteToASCII(s);
			} else {
				quoted = strconv.Quote(s);
			}
		}
		f.padString(quoted);
	};
	fmt.prototype.fmt_q = function(s) { return this.$val.fmt_q(s); };
	fmt.ptr.prototype.fmt_qc = function(c) {
		var f, quoted;
		f = this;
		quoted = sliceType.nil;
		if (f.fmtFlags.plus) {
			quoted = strconv.AppendQuoteRuneToASCII($subslice(new sliceType(f.intbuf), 0, 0), ((c.$low + ((c.$high >> 31) * 4294967296)) >> 0));
		} else {
			quoted = strconv.AppendQuoteRune($subslice(new sliceType(f.intbuf), 0, 0), ((c.$low + ((c.$high >> 31) * 4294967296)) >> 0));
		}
		f.pad(quoted);
	};
	fmt.prototype.fmt_qc = function(c) { return this.$val.fmt_qc(c); };
	doPrec = function(f, def) {
		if (f.fmtFlags.precPresent) {
			return f.prec;
		}
		return def;
	};
	fmt.ptr.prototype.formatFloat = function(v, verb, prec, n) {
		var $deferred = [], $err = null, f, num;
		/* */ try { $deferFrames.push($deferred);
		f = this;
		num = strconv.AppendFloat($subslice(new sliceType(f.intbuf), 0, 1), v, verb, prec, n);
		if ((((1 < 0 || 1 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 1]) === 45) || (((1 < 0 || 1 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 1]) === 43)) {
			num = $subslice(num, 1);
		} else {
			(0 < 0 || 0 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 0] = 43;
		}
		if (math.IsInf(v, 0)) {
			if (f.fmtFlags.zero) {
				$deferred.push([(function() {
					f.fmtFlags.zero = true;
				}), []]);
				f.fmtFlags.zero = false;
			}
		}
		if (f.fmtFlags.zero && f.fmtFlags.widPresent && f.wid > num.$length) {
			if (f.fmtFlags.space && v >= 0) {
				f.buf.WriteByte(32);
				f.wid = f.wid - (1) >> 0;
			} else if (f.fmtFlags.plus || v < 0) {
				f.buf.WriteByte(((0 < 0 || 0 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 0]));
				f.wid = f.wid - (1) >> 0;
			}
			f.pad($subslice(num, 1));
			return;
		}
		if (f.fmtFlags.space && (((0 < 0 || 0 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 0]) === 43)) {
			(0 < 0 || 0 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 0] = 32;
			f.pad(num);
			return;
		}
		if (f.fmtFlags.plus || (((0 < 0 || 0 >= num.$length) ? $throwRuntimeError("index out of range") : num.$array[num.$offset + 0]) === 45) || math.IsInf(v, 0)) {
			f.pad(num);
			return;
		}
		f.pad($subslice(num, 1));
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	fmt.prototype.formatFloat = function(v, verb, prec, n) { return this.$val.formatFloat(v, verb, prec, n); };
	fmt.ptr.prototype.fmt_e64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 101, doPrec(f, 6), 64);
	};
	fmt.prototype.fmt_e64 = function(v) { return this.$val.fmt_e64(v); };
	fmt.ptr.prototype.fmt_E64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 69, doPrec(f, 6), 64);
	};
	fmt.prototype.fmt_E64 = function(v) { return this.$val.fmt_E64(v); };
	fmt.ptr.prototype.fmt_f64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 102, doPrec(f, 6), 64);
	};
	fmt.prototype.fmt_f64 = function(v) { return this.$val.fmt_f64(v); };
	fmt.ptr.prototype.fmt_g64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 103, doPrec(f, -1), 64);
	};
	fmt.prototype.fmt_g64 = function(v) { return this.$val.fmt_g64(v); };
	fmt.ptr.prototype.fmt_G64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 71, doPrec(f, -1), 64);
	};
	fmt.prototype.fmt_G64 = function(v) { return this.$val.fmt_G64(v); };
	fmt.ptr.prototype.fmt_fb64 = function(v) {
		var f;
		f = this;
		f.formatFloat(v, 98, 0, 64);
	};
	fmt.prototype.fmt_fb64 = function(v) { return this.$val.fmt_fb64(v); };
	fmt.ptr.prototype.fmt_e32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 101, doPrec(f, 6), 32);
	};
	fmt.prototype.fmt_e32 = function(v) { return this.$val.fmt_e32(v); };
	fmt.ptr.prototype.fmt_E32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 69, doPrec(f, 6), 32);
	};
	fmt.prototype.fmt_E32 = function(v) { return this.$val.fmt_E32(v); };
	fmt.ptr.prototype.fmt_f32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 102, doPrec(f, 6), 32);
	};
	fmt.prototype.fmt_f32 = function(v) { return this.$val.fmt_f32(v); };
	fmt.ptr.prototype.fmt_g32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 103, doPrec(f, -1), 32);
	};
	fmt.prototype.fmt_g32 = function(v) { return this.$val.fmt_g32(v); };
	fmt.ptr.prototype.fmt_G32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 71, doPrec(f, -1), 32);
	};
	fmt.prototype.fmt_G32 = function(v) { return this.$val.fmt_G32(v); };
	fmt.ptr.prototype.fmt_fb32 = function(v) {
		var f;
		f = this;
		f.formatFloat($coerceFloat32(v), 98, 0, 32);
	};
	fmt.prototype.fmt_fb32 = function(v) { return this.$val.fmt_fb32(v); };
	fmt.ptr.prototype.fmt_c64 = function(v, verb) {
		var f;
		f = this;
		f.fmt_complex($coerceFloat32(v.$real), $coerceFloat32(v.$imag), 32, verb);
	};
	fmt.prototype.fmt_c64 = function(v, verb) { return this.$val.fmt_c64(v, verb); };
	fmt.ptr.prototype.fmt_c128 = function(v, verb) {
		var f;
		f = this;
		f.fmt_complex(v.$real, v.$imag, 64, verb);
	};
	fmt.prototype.fmt_c128 = function(v, verb) { return this.$val.fmt_c128(v, verb); };
	fmt.ptr.prototype.fmt_complex = function(r, j, size, verb) {
		var _ref, f, i, oldPlus, oldSpace, oldWid;
		f = this;
		f.buf.WriteByte(40);
		oldPlus = f.fmtFlags.plus;
		oldSpace = f.fmtFlags.space;
		oldWid = f.wid;
		i = 0;
		while (true) {
			_ref = verb;
			if (_ref === 98) {
				f.formatFloat(r, 98, 0, size);
			} else if (_ref === 101) {
				f.formatFloat(r, 101, doPrec(f, 6), size);
			} else if (_ref === 69) {
				f.formatFloat(r, 69, doPrec(f, 6), size);
			} else if (_ref === 102 || _ref === 70) {
				f.formatFloat(r, 102, doPrec(f, 6), size);
			} else if (_ref === 103) {
				f.formatFloat(r, 103, doPrec(f, -1), size);
			} else if (_ref === 71) {
				f.formatFloat(r, 71, doPrec(f, -1), size);
			}
			if (!((i === 0))) {
				break;
			}
			f.fmtFlags.plus = true;
			f.fmtFlags.space = false;
			f.wid = oldWid;
			r = j;
			i = i + (1) >> 0;
		}
		f.fmtFlags.space = oldSpace;
		f.fmtFlags.plus = oldPlus;
		f.wid = oldWid;
		f.buf.Write(irparenBytes);
	};
	fmt.prototype.fmt_complex = function(r, j, size, verb) { return this.$val.fmt_complex(r, j, size, verb); };
	$ptrType(buffer).prototype.Write = function(p) {
		var _tmp, _tmp$1, b, err = $ifaceNil, n = 0;
		b = this;
		b.$set($appendSlice(b.$get(), p));
		_tmp = p.$length; _tmp$1 = $ifaceNil; n = _tmp; err = _tmp$1;
		return [n, err];
	};
	$ptrType(buffer).prototype.WriteString = function(s) {
		var _tmp, _tmp$1, b, err = $ifaceNil, n = 0;
		b = this;
		b.$set($appendSlice(b.$get(), new buffer($stringToBytes(s))));
		_tmp = s.length; _tmp$1 = $ifaceNil; n = _tmp; err = _tmp$1;
		return [n, err];
	};
	$ptrType(buffer).prototype.WriteByte = function(c) {
		var b;
		b = this;
		b.$set($append(b.$get(), c));
		return $ifaceNil;
	};
	$ptrType(buffer).prototype.WriteRune = function(r) {
		var b, bp, n, w, x;
		bp = this;
		if (r < 128) {
			bp.$set($append(bp.$get(), (r << 24 >>> 24)));
			return $ifaceNil;
		}
		b = bp.$get();
		n = b.$length;
		while ((n + 4 >> 0) > b.$capacity) {
			b = $append(b, 0);
		}
		w = utf8.EncodeRune((x = $subslice(b, n, (n + 4 >> 0)), $subslice(new sliceType(x.$array), x.$offset, x.$offset + x.$length)), r);
		bp.$set($subslice(b, 0, (n + w >> 0)));
		return $ifaceNil;
	};
	newPrinter = function() {
		var p;
		p = $assertType(ppFree.Get(), ptrType);
		p.panicking = false;
		p.erroring = false;
		p.fmt.init(new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p));
		return p;
	};
	pp.ptr.prototype.free = function() {
		var p;
		p = this;
		if (p.buf.$capacity > 1024) {
			return;
		}
		p.buf = $subslice(p.buf, 0, 0);
		p.arg = $ifaceNil;
		p.value = new reflect.Value.ptr(ptrType$2.nil, 0, 0);
		ppFree.Put(p);
	};
	pp.prototype.free = function() { return this.$val.free(); };
	pp.ptr.prototype.Width = function() {
		var _tmp, _tmp$1, ok = false, p, wid = 0;
		p = this;
		_tmp = p.fmt.wid; _tmp$1 = p.fmt.fmtFlags.widPresent; wid = _tmp; ok = _tmp$1;
		return [wid, ok];
	};
	pp.prototype.Width = function() { return this.$val.Width(); };
	pp.ptr.prototype.Precision = function() {
		var _tmp, _tmp$1, ok = false, p, prec = 0;
		p = this;
		_tmp = p.fmt.prec; _tmp$1 = p.fmt.fmtFlags.precPresent; prec = _tmp; ok = _tmp$1;
		return [prec, ok];
	};
	pp.prototype.Precision = function() { return this.$val.Precision(); };
	pp.ptr.prototype.Flag = function(b) {
		var _ref, p;
		p = this;
		_ref = b;
		if (_ref === 45) {
			return p.fmt.fmtFlags.minus;
		} else if (_ref === 43) {
			return p.fmt.fmtFlags.plus;
		} else if (_ref === 35) {
			return p.fmt.fmtFlags.sharp;
		} else if (_ref === 32) {
			return p.fmt.fmtFlags.space;
		} else if (_ref === 48) {
			return p.fmt.fmtFlags.zero;
		}
		return false;
	};
	pp.prototype.Flag = function(b) { return this.$val.Flag(b); };
	pp.ptr.prototype.add = function(c) {
		var p;
		p = this;
		new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteRune(c);
	};
	pp.prototype.add = function(c) { return this.$val.add(c); };
	pp.ptr.prototype.Write = function(b) {
		var _tuple, err = $ifaceNil, p, ret = 0;
		p = this;
		_tuple = new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(b); ret = _tuple[0]; err = _tuple[1];
		return [ret, err];
	};
	pp.prototype.Write = function(b) { return this.$val.Write(b); };
	Fprintf = $pkg.Fprintf = function(w, format, a) {
		var _tuple, err = $ifaceNil, n = 0, p, x;
		p = newPrinter();
		p.doPrintf(format, a);
		_tuple = w.Write((x = p.buf, $subslice(new sliceType(x.$array), x.$offset, x.$offset + x.$length))); n = _tuple[0]; err = _tuple[1];
		p.free();
		return [n, err];
	};
	Sprintf = $pkg.Sprintf = function(format, a) {
		var p, s;
		p = newPrinter();
		p.doPrintf(format, a);
		s = $bytesToString(p.buf);
		p.free();
		return s;
	};
	Errorf = $pkg.Errorf = function(format, a) {
		return errors.New(Sprintf(format, a));
	};
	Sprint = $pkg.Sprint = function(a) {
		var p, s;
		p = newPrinter();
		p.doPrint(a, false, false);
		s = $bytesToString(p.buf);
		p.free();
		return s;
	};
	Fprintln = $pkg.Fprintln = function(w, a) {
		var _tuple, err = $ifaceNil, n = 0, p, x;
		p = newPrinter();
		p.doPrint(a, true, true);
		_tuple = w.Write((x = p.buf, $subslice(new sliceType(x.$array), x.$offset, x.$offset + x.$length))); n = _tuple[0]; err = _tuple[1];
		p.free();
		return [n, err];
	};
	getField = function(v, i) {
		var val;
		v = v;
		val = v.Field(i);
		if ((val.Kind() === 20) && !val.IsNil()) {
			val = val.Elem();
		}
		return val;
	};
	parsenum = function(s, start, end) {
		var _tmp, _tmp$1, _tmp$2, isnum = false, newi = 0, num = 0;
		if (start >= end) {
			_tmp = 0; _tmp$1 = false; _tmp$2 = end; num = _tmp; isnum = _tmp$1; newi = _tmp$2;
			return [num, isnum, newi];
		}
		newi = start;
		while (newi < end && 48 <= s.charCodeAt(newi) && s.charCodeAt(newi) <= 57) {
			num = (num * 10 >> 0) + ((s.charCodeAt(newi) - 48 << 24 >>> 24) >> 0) >> 0;
			isnum = true;
			newi = newi + (1) >> 0;
		}
		return [num, isnum, newi];
	};
	pp.ptr.prototype.unknownType = function(v) {
		var p;
		p = this;
		v = v;
		if (!v.IsValid()) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
			return;
		}
		new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(63);
		new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(v.Type().String());
		new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(63);
	};
	pp.prototype.unknownType = function(v) { return this.$val.unknownType(v); };
	pp.ptr.prototype.badVerb = function(verb) {
		var p;
		p = this;
		p.erroring = true;
		p.add(37);
		p.add(33);
		p.add(verb);
		p.add(40);
		if (!($interfaceIsEqual(p.arg, $ifaceNil))) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(reflect.TypeOf(p.arg).String());
			p.add(61);
			p.printArg(p.arg, 118, 0);
		} else if (p.value.IsValid()) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(p.value.Type().String());
			p.add(61);
			p.printValue(p.value, 118, 0);
		} else {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
		}
		p.add(41);
		p.erroring = false;
	};
	pp.prototype.badVerb = function(verb) { return this.$val.badVerb(verb); };
	pp.ptr.prototype.fmtBool = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 116 || _ref === 118) {
			p.fmt.fmt_boolean(v);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtBool = function(v, verb) { return this.$val.fmtBool(v, verb); };
	pp.ptr.prototype.fmtC = function(c) {
		var p, r, w, x;
		p = this;
		r = ((c.$low + ((c.$high >> 31) * 4294967296)) >> 0);
		if (!((x = new $Int64(0, r), (x.$high === c.$high && x.$low === c.$low)))) {
			r = 65533;
		}
		w = utf8.EncodeRune($subslice(new sliceType(p.runeBuf), 0, 4), r);
		p.fmt.pad($subslice(new sliceType(p.runeBuf), 0, w));
	};
	pp.prototype.fmtC = function(c) { return this.$val.fmtC(c); };
	pp.ptr.prototype.fmtInt64 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98) {
			p.fmt.integer(v, new $Uint64(0, 2), true, "0123456789abcdef");
		} else if (_ref === 99) {
			p.fmtC(v);
		} else if (_ref === 100 || _ref === 118) {
			p.fmt.integer(v, new $Uint64(0, 10), true, "0123456789abcdef");
		} else if (_ref === 111) {
			p.fmt.integer(v, new $Uint64(0, 8), true, "0123456789abcdef");
		} else if (_ref === 113) {
			if ((0 < v.$high || (0 === v.$high && 0 <= v.$low)) && (v.$high < 0 || (v.$high === 0 && v.$low <= 1114111))) {
				p.fmt.fmt_qc(v);
			} else {
				p.badVerb(verb);
			}
		} else if (_ref === 120) {
			p.fmt.integer(v, new $Uint64(0, 16), true, "0123456789abcdef");
		} else if (_ref === 85) {
			p.fmtUnicode(v);
		} else if (_ref === 88) {
			p.fmt.integer(v, new $Uint64(0, 16), true, "0123456789ABCDEF");
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtInt64 = function(v, verb) { return this.$val.fmtInt64(v, verb); };
	pp.ptr.prototype.fmt0x64 = function(v, leading0x) {
		var p, sharp;
		p = this;
		sharp = p.fmt.fmtFlags.sharp;
		p.fmt.fmtFlags.sharp = leading0x;
		p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 16), false, "0123456789abcdef");
		p.fmt.fmtFlags.sharp = sharp;
	};
	pp.prototype.fmt0x64 = function(v, leading0x) { return this.$val.fmt0x64(v, leading0x); };
	pp.ptr.prototype.fmtUnicode = function(v) {
		var p, prec, precPresent, sharp;
		p = this;
		precPresent = p.fmt.fmtFlags.precPresent;
		sharp = p.fmt.fmtFlags.sharp;
		p.fmt.fmtFlags.sharp = false;
		prec = p.fmt.prec;
		if (!precPresent) {
			p.fmt.prec = 4;
			p.fmt.fmtFlags.precPresent = true;
		}
		p.fmt.fmtFlags.unicode = true;
		p.fmt.fmtFlags.uniQuote = sharp;
		p.fmt.integer(v, new $Uint64(0, 16), false, "0123456789ABCDEF");
		p.fmt.fmtFlags.unicode = false;
		p.fmt.fmtFlags.uniQuote = false;
		p.fmt.prec = prec;
		p.fmt.fmtFlags.precPresent = precPresent;
		p.fmt.fmtFlags.sharp = sharp;
	};
	pp.prototype.fmtUnicode = function(v) { return this.$val.fmtUnicode(v); };
	pp.ptr.prototype.fmtUint64 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98) {
			p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 2), false, "0123456789abcdef");
		} else if (_ref === 99) {
			p.fmtC(new $Int64(v.$high, v.$low));
		} else if (_ref === 100) {
			p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 10), false, "0123456789abcdef");
		} else if (_ref === 118) {
			if (p.fmt.fmtFlags.sharpV) {
				p.fmt0x64(v, true);
			} else {
				p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 10), false, "0123456789abcdef");
			}
		} else if (_ref === 111) {
			p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 8), false, "0123456789abcdef");
		} else if (_ref === 113) {
			if ((0 < v.$high || (0 === v.$high && 0 <= v.$low)) && (v.$high < 0 || (v.$high === 0 && v.$low <= 1114111))) {
				p.fmt.fmt_qc(new $Int64(v.$high, v.$low));
			} else {
				p.badVerb(verb);
			}
		} else if (_ref === 120) {
			p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 16), false, "0123456789abcdef");
		} else if (_ref === 88) {
			p.fmt.integer(new $Int64(v.$high, v.$low), new $Uint64(0, 16), false, "0123456789ABCDEF");
		} else if (_ref === 85) {
			p.fmtUnicode(new $Int64(v.$high, v.$low));
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtUint64 = function(v, verb) { return this.$val.fmtUint64(v, verb); };
	pp.ptr.prototype.fmtFloat32 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98) {
			p.fmt.fmt_fb32(v);
		} else if (_ref === 101) {
			p.fmt.fmt_e32(v);
		} else if (_ref === 69) {
			p.fmt.fmt_E32(v);
		} else if (_ref === 102 || _ref === 70) {
			p.fmt.fmt_f32(v);
		} else if (_ref === 103 || _ref === 118) {
			p.fmt.fmt_g32(v);
		} else if (_ref === 71) {
			p.fmt.fmt_G32(v);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtFloat32 = function(v, verb) { return this.$val.fmtFloat32(v, verb); };
	pp.ptr.prototype.fmtFloat64 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98) {
			p.fmt.fmt_fb64(v);
		} else if (_ref === 101) {
			p.fmt.fmt_e64(v);
		} else if (_ref === 69) {
			p.fmt.fmt_E64(v);
		} else if (_ref === 102 || _ref === 70) {
			p.fmt.fmt_f64(v);
		} else if (_ref === 103 || _ref === 118) {
			p.fmt.fmt_g64(v);
		} else if (_ref === 71) {
			p.fmt.fmt_G64(v);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtFloat64 = function(v, verb) { return this.$val.fmtFloat64(v, verb); };
	pp.ptr.prototype.fmtComplex64 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98 || _ref === 101 || _ref === 69 || _ref === 102 || _ref === 70 || _ref === 103 || _ref === 71) {
			p.fmt.fmt_c64(v, verb);
		} else if (_ref === 118) {
			p.fmt.fmt_c64(v, 103);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtComplex64 = function(v, verb) { return this.$val.fmtComplex64(v, verb); };
	pp.ptr.prototype.fmtComplex128 = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 98 || _ref === 101 || _ref === 69 || _ref === 102 || _ref === 70 || _ref === 103 || _ref === 71) {
			p.fmt.fmt_c128(v, verb);
		} else if (_ref === 118) {
			p.fmt.fmt_c128(v, 103);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtComplex128 = function(v, verb) { return this.$val.fmtComplex128(v, verb); };
	pp.ptr.prototype.fmtString = function(v, verb) {
		var _ref, p;
		p = this;
		_ref = verb;
		if (_ref === 118) {
			if (p.fmt.fmtFlags.sharpV) {
				p.fmt.fmt_q(v);
			} else {
				p.fmt.fmt_s(v);
			}
		} else if (_ref === 115) {
			p.fmt.fmt_s(v);
		} else if (_ref === 120) {
			p.fmt.fmt_sx(v, "0123456789abcdef");
		} else if (_ref === 88) {
			p.fmt.fmt_sx(v, "0123456789ABCDEF");
		} else if (_ref === 113) {
			p.fmt.fmt_q(v);
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtString = function(v, verb) { return this.$val.fmtString(v, verb); };
	pp.ptr.prototype.fmtBytes = function(v, verb, typ, depth) {
		var _i, _ref, _ref$1, c, i, p;
		p = this;
		if ((verb === 118) || (verb === 100)) {
			if (p.fmt.fmtFlags.sharpV) {
				if (v === sliceType.nil) {
					if ($interfaceIsEqual(typ, $ifaceNil)) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString("[]byte(nil)");
					} else {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(typ.String());
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilParenBytes);
					}
					return;
				}
				if ($interfaceIsEqual(typ, $ifaceNil)) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(bytesBytes);
				} else {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(typ.String());
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(123);
				}
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(91);
			}
			_ref = v;
			_i = 0;
			while (_i < _ref.$length) {
				i = _i;
				c = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
				if (i > 0) {
					if (p.fmt.fmtFlags.sharpV) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(commaSpaceBytes);
					} else {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(32);
					}
				}
				p.printArg(new $Uint8(c), 118, depth + 1 >> 0);
				_i++;
			}
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(125);
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(93);
			}
			return;
		}
		_ref$1 = verb;
		if (_ref$1 === 115) {
			p.fmt.fmt_s($bytesToString(v));
		} else if (_ref$1 === 120) {
			p.fmt.fmt_bx(v, "0123456789abcdef");
		} else if (_ref$1 === 88) {
			p.fmt.fmt_bx(v, "0123456789ABCDEF");
		} else if (_ref$1 === 113) {
			p.fmt.fmt_q($bytesToString(v));
		} else {
			p.badVerb(verb);
		}
	};
	pp.prototype.fmtBytes = function(v, verb, typ, depth) { return this.$val.fmtBytes(v, verb, typ, depth); };
	pp.ptr.prototype.fmtPointer = function(value, verb) {
		var _ref, _ref$1, p, u, use0x64;
		p = this;
		value = value;
		use0x64 = true;
		_ref = verb;
		if (_ref === 112 || _ref === 118) {
		} else if (_ref === 98 || _ref === 100 || _ref === 111 || _ref === 120 || _ref === 88) {
			use0x64 = false;
		} else {
			p.badVerb(verb);
			return;
		}
		u = 0;
		_ref$1 = value.Kind();
		if (_ref$1 === 18 || _ref$1 === 19 || _ref$1 === 21 || _ref$1 === 22 || _ref$1 === 23 || _ref$1 === 26) {
			u = value.Pointer();
		} else {
			p.badVerb(verb);
			return;
		}
		if (p.fmt.fmtFlags.sharpV) {
			p.add(40);
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(value.Type().String());
			p.add(41);
			p.add(40);
			if (u === 0) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilBytes);
			} else {
				p.fmt0x64(new $Uint64(0, u.constructor === Number ? u : 1), true);
			}
			p.add(41);
		} else if ((verb === 118) && (u === 0)) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
		} else {
			if (use0x64) {
				p.fmt0x64(new $Uint64(0, u.constructor === Number ? u : 1), !p.fmt.fmtFlags.sharp);
			} else {
				p.fmtUint64(new $Uint64(0, u.constructor === Number ? u : 1), verb);
			}
		}
	};
	pp.prototype.fmtPointer = function(value, verb) { return this.$val.fmtPointer(value, verb); };
	pp.ptr.prototype.catchPanic = function(arg, verb) {
		var err, p, v;
		p = this;
		err = $recover();
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			v = reflect.ValueOf(arg);
			if ((v.Kind() === 22) && v.IsNil()) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
				return;
			}
			if (p.panicking) {
				$panic(err);
			}
			p.fmt.clearflags();
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(percentBangBytes);
			p.add(verb);
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(panicBytes);
			p.panicking = true;
			p.printArg(err, 118, 0);
			p.panicking = false;
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(41);
		}
	};
	pp.prototype.catchPanic = function(arg, verb) { return this.$val.catchPanic(arg, verb); };
	pp.ptr.prototype.clearSpecialFlags = function() {
		var p, plusV = false, sharpV = false;
		p = this;
		plusV = p.fmt.fmtFlags.plusV;
		if (plusV) {
			p.fmt.fmtFlags.plus = true;
			p.fmt.fmtFlags.plusV = false;
		}
		sharpV = p.fmt.fmtFlags.sharpV;
		if (sharpV) {
			p.fmt.fmtFlags.sharp = true;
			p.fmt.fmtFlags.sharpV = false;
		}
		return [plusV, sharpV];
	};
	pp.prototype.clearSpecialFlags = function() { return this.$val.clearSpecialFlags(); };
	pp.ptr.prototype.restoreSpecialFlags = function(plusV, sharpV) {
		var p;
		p = this;
		if (plusV) {
			p.fmt.fmtFlags.plus = false;
			p.fmt.fmtFlags.plusV = true;
		}
		if (sharpV) {
			p.fmt.fmtFlags.sharp = false;
			p.fmt.fmtFlags.sharpV = true;
		}
	};
	pp.prototype.restoreSpecialFlags = function(plusV, sharpV) { return this.$val.restoreSpecialFlags(plusV, sharpV); };
	pp.ptr.prototype.handleMethods = function(verb, depth) {
		var $deferred = [], $err = null, _ref, _ref$1, _tuple, _tuple$1, _tuple$2, formatter, handled = false, ok, ok$1, p, stringer, v;
		/* */ try { $deferFrames.push($deferred);
		p = this;
		if (p.erroring) {
			return handled;
		}
		_tuple = $assertType(p.arg, Formatter, true); formatter = _tuple[0]; ok = _tuple[1];
		if (ok) {
			handled = true;
			_tuple$1 = p.clearSpecialFlags();
			$deferred.push([$methodVal(p, "restoreSpecialFlags"), [_tuple$1[0], _tuple$1[1]]]);
			$deferred.push([$methodVal(p, "catchPanic"), [p.arg, verb]]);
			formatter.Format(p, verb);
			return handled;
		}
		if (p.fmt.fmtFlags.sharpV) {
			_tuple$2 = $assertType(p.arg, GoStringer, true); stringer = _tuple$2[0]; ok$1 = _tuple$2[1];
			if (ok$1) {
				handled = true;
				$deferred.push([$methodVal(p, "catchPanic"), [p.arg, verb]]);
				p.fmt.fmt_s(stringer.GoString());
				return handled;
			}
		} else {
			_ref = verb;
			if (_ref === 118 || _ref === 115 || _ref === 120 || _ref === 88 || _ref === 113) {
				_ref$1 = p.arg;
				if ($assertType(_ref$1, $error, true)[1]) {
					v = _ref$1;
					handled = true;
					$deferred.push([$methodVal(p, "catchPanic"), [p.arg, verb]]);
					p.printArg(new $String(v.Error()), verb, depth);
					return handled;
				} else if ($assertType(_ref$1, Stringer, true)[1]) {
					v = _ref$1;
					handled = true;
					$deferred.push([$methodVal(p, "catchPanic"), [p.arg, verb]]);
					p.printArg(new $String(v.String()), verb, depth);
					return handled;
				}
			}
		}
		handled = false;
		return handled;
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return handled; }
	};
	pp.prototype.handleMethods = function(verb, depth) { return this.$val.handleMethods(verb, depth); };
	pp.ptr.prototype.printArg = function(arg, verb, depth) {
		var _ref, _ref$1, f, handled, p, wasString = false;
		p = this;
		p.arg = arg;
		p.value = new reflect.Value.ptr(ptrType$2.nil, 0, 0);
		if ($interfaceIsEqual(arg, $ifaceNil)) {
			if ((verb === 84) || (verb === 118)) {
				p.fmt.pad(nilAngleBytes);
			} else {
				p.badVerb(verb);
			}
			wasString = false;
			return wasString;
		}
		_ref = verb;
		if (_ref === 84) {
			p.printArg(new $String(reflect.TypeOf(arg).String()), 115, 0);
			wasString = false;
			return wasString;
		} else if (_ref === 112) {
			p.fmtPointer(reflect.ValueOf(arg), verb);
			wasString = false;
			return wasString;
		}
		_ref$1 = arg;
		if ($assertType(_ref$1, $Bool, true)[1]) {
			f = _ref$1.$val;
			p.fmtBool(f, verb);
		} else if ($assertType(_ref$1, $Float32, true)[1]) {
			f = _ref$1.$val;
			p.fmtFloat32(f, verb);
		} else if ($assertType(_ref$1, $Float64, true)[1]) {
			f = _ref$1.$val;
			p.fmtFloat64(f, verb);
		} else if ($assertType(_ref$1, $Complex64, true)[1]) {
			f = _ref$1.$val;
			p.fmtComplex64(f, verb);
		} else if ($assertType(_ref$1, $Complex128, true)[1]) {
			f = _ref$1.$val;
			p.fmtComplex128(f, verb);
		} else if ($assertType(_ref$1, $Int, true)[1]) {
			f = _ref$1.$val;
			p.fmtInt64(new $Int64(0, f), verb);
		} else if ($assertType(_ref$1, $Int8, true)[1]) {
			f = _ref$1.$val;
			p.fmtInt64(new $Int64(0, f), verb);
		} else if ($assertType(_ref$1, $Int16, true)[1]) {
			f = _ref$1.$val;
			p.fmtInt64(new $Int64(0, f), verb);
		} else if ($assertType(_ref$1, $Int32, true)[1]) {
			f = _ref$1.$val;
			p.fmtInt64(new $Int64(0, f), verb);
		} else if ($assertType(_ref$1, $Int64, true)[1]) {
			f = _ref$1.$val;
			p.fmtInt64(f, verb);
		} else if ($assertType(_ref$1, $Uint, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(new $Uint64(0, f), verb);
		} else if ($assertType(_ref$1, $Uint8, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(new $Uint64(0, f), verb);
		} else if ($assertType(_ref$1, $Uint16, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(new $Uint64(0, f), verb);
		} else if ($assertType(_ref$1, $Uint32, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(new $Uint64(0, f), verb);
		} else if ($assertType(_ref$1, $Uint64, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(f, verb);
		} else if ($assertType(_ref$1, $Uintptr, true)[1]) {
			f = _ref$1.$val;
			p.fmtUint64(new $Uint64(0, f.constructor === Number ? f : 1), verb);
		} else if ($assertType(_ref$1, $String, true)[1]) {
			f = _ref$1.$val;
			p.fmtString(f, verb);
			wasString = (verb === 115) || (verb === 118);
		} else if ($assertType(_ref$1, sliceType, true)[1]) {
			f = _ref$1.$val;
			p.fmtBytes(f, verb, $ifaceNil, depth);
			wasString = verb === 115;
		} else {
			f = _ref$1;
			handled = p.handleMethods(verb, depth);
			if (handled) {
				wasString = false;
				return wasString;
			}
			wasString = p.printReflectValue(reflect.ValueOf(arg), verb, depth);
			return wasString;
		}
		p.arg = $ifaceNil;
		return wasString;
	};
	pp.prototype.printArg = function(arg, verb, depth) { return this.$val.printArg(arg, verb, depth); };
	pp.ptr.prototype.printValue = function(value, verb, depth) {
		var _ref, handled, p, wasString = false;
		p = this;
		value = value;
		if (!value.IsValid()) {
			if ((verb === 84) || (verb === 118)) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
			} else {
				p.badVerb(verb);
			}
			wasString = false;
			return wasString;
		}
		_ref = verb;
		if (_ref === 84) {
			p.printArg(new $String(value.Type().String()), 115, 0);
			wasString = false;
			return wasString;
		} else if (_ref === 112) {
			p.fmtPointer(value, verb);
			wasString = false;
			return wasString;
		}
		p.arg = $ifaceNil;
		if (value.CanInterface()) {
			p.arg = value.Interface();
		}
		handled = p.handleMethods(verb, depth);
		if (handled) {
			wasString = false;
			return wasString;
		}
		wasString = p.printReflectValue(value, verb, depth);
		return wasString;
	};
	pp.prototype.printValue = function(value, verb, depth) { return this.$val.printValue(value, verb, depth); };
	pp.ptr.prototype.printReflectValue = function(value, verb, depth) {
		var _i, _i$1, _ref, _ref$1, _ref$2, _ref$3, a, bytes, f, f$1, i, i$1, i$2, i$3, key, keys, oldValue, p, t, typ, v, v$1, value$1, wasString = false, x;
		p = this;
		value = value;
		oldValue = p.value;
		p.value = value;
		f = value;
		_ref = f.Kind();
		BigSwitch:
		switch (0) { default: if (_ref === 1) {
			p.fmtBool(f.Bool(), verb);
		} else if (_ref === 2 || _ref === 3 || _ref === 4 || _ref === 5 || _ref === 6) {
			p.fmtInt64(f.Int(), verb);
		} else if (_ref === 7 || _ref === 8 || _ref === 9 || _ref === 10 || _ref === 11 || _ref === 12) {
			p.fmtUint64(f.Uint(), verb);
		} else if (_ref === 13 || _ref === 14) {
			if (f.Type().Size() === 4) {
				p.fmtFloat32(f.Float(), verb);
			} else {
				p.fmtFloat64(f.Float(), verb);
			}
		} else if (_ref === 15 || _ref === 16) {
			if (f.Type().Size() === 8) {
				p.fmtComplex64((x = f.Complex(), new $Complex64(x.$real, x.$imag)), verb);
			} else {
				p.fmtComplex128(f.Complex(), verb);
			}
		} else if (_ref === 24) {
			p.fmtString(f.String(), verb);
		} else if (_ref === 21) {
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(f.Type().String());
				if (f.IsNil()) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString("(nil)");
					break;
				}
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(123);
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(mapBytes);
			}
			keys = f.MapKeys();
			_ref$1 = keys;
			_i = 0;
			while (_i < _ref$1.$length) {
				i = _i;
				key = ((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]);
				if (i > 0) {
					if (p.fmt.fmtFlags.sharpV) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(commaSpaceBytes);
					} else {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(32);
					}
				}
				p.printValue(key, verb, depth + 1 >> 0);
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(58);
				p.printValue(f.MapIndex(key), verb, depth + 1 >> 0);
				_i++;
			}
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(125);
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(93);
			}
		} else if (_ref === 25) {
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(value.Type().String());
			}
			p.add(123);
			v = f;
			t = v.Type();
			i$1 = 0;
			while (i$1 < v.NumField()) {
				if (i$1 > 0) {
					if (p.fmt.fmtFlags.sharpV) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(commaSpaceBytes);
					} else {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(32);
					}
				}
				if (p.fmt.fmtFlags.plusV || p.fmt.fmtFlags.sharpV) {
					f$1 = $clone(t.Field(i$1), reflect.StructField);
					if (!(f$1.Name === "")) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(f$1.Name);
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(58);
					}
				}
				p.printValue(getField(v, i$1), verb, depth + 1 >> 0);
				i$1 = i$1 + (1) >> 0;
			}
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(125);
		} else if (_ref === 20) {
			value$1 = f.Elem();
			if (!value$1.IsValid()) {
				if (p.fmt.fmtFlags.sharpV) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(f.Type().String());
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilParenBytes);
				} else {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(nilAngleBytes);
				}
			} else {
				wasString = p.printValue(value$1, verb, depth + 1 >> 0);
			}
		} else if (_ref === 17 || _ref === 23) {
			typ = f.Type();
			if ((typ.Elem().Kind() === 8) && ($interfaceIsEqual(typ.Elem(), byteType) || (verb === 115) || (verb === 113) || (verb === 120))) {
				bytes = sliceType.nil;
				if (f.Kind() === 23) {
					bytes = f.Bytes();
				} else if (f.CanAddr()) {
					bytes = f.Slice(0, f.Len()).Bytes();
				} else {
					bytes = $makeSlice(sliceType, f.Len());
					_ref$2 = bytes;
					_i$1 = 0;
					while (_i$1 < _ref$2.$length) {
						i$2 = _i$1;
						(i$2 < 0 || i$2 >= bytes.$length) ? $throwRuntimeError("index out of range") : bytes.$array[bytes.$offset + i$2] = (f.Index(i$2).Uint().$low << 24 >>> 24);
						_i$1++;
					}
				}
				p.fmtBytes(bytes, verb, typ, depth);
				wasString = verb === 115;
				break;
			}
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(value.Type().String());
				if ((f.Kind() === 23) && f.IsNil()) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString("(nil)");
					break;
				}
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(123);
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(91);
			}
			i$3 = 0;
			while (i$3 < f.Len()) {
				if (i$3 > 0) {
					if (p.fmt.fmtFlags.sharpV) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(commaSpaceBytes);
					} else {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(32);
					}
				}
				p.printValue(f.Index(i$3), verb, depth + 1 >> 0);
				i$3 = i$3 + (1) >> 0;
			}
			if (p.fmt.fmtFlags.sharpV) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(125);
			} else {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(93);
			}
		} else if (_ref === 22) {
			v$1 = f.Pointer();
			if (!((v$1 === 0)) && (depth === 0)) {
				a = f.Elem();
				_ref$3 = a.Kind();
				if (_ref$3 === 17 || _ref$3 === 23) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(38);
					p.printValue(a, verb, depth + 1 >> 0);
					break BigSwitch;
				} else if (_ref$3 === 25) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(38);
					p.printValue(a, verb, depth + 1 >> 0);
					break BigSwitch;
				} else if (_ref$3 === 21) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(38);
					p.printValue(a, verb, depth + 1 >> 0);
					break BigSwitch;
				}
			}
			p.fmtPointer(value, verb);
		} else if (_ref === 18 || _ref === 19 || _ref === 26) {
			p.fmtPointer(value, verb);
		} else {
			p.unknownType(f);
		} }
		p.value = oldValue;
		wasString = wasString;
		return wasString;
	};
	pp.prototype.printReflectValue = function(value, verb, depth) { return this.$val.printReflectValue(value, verb, depth); };
	intFromArg = function(a, argNum) {
		var _tuple, isInt = false, newArgNum = 0, num = 0;
		newArgNum = argNum;
		if (argNum < a.$length) {
			_tuple = $assertType(((argNum < 0 || argNum >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + argNum]), $Int, true); num = _tuple[0]; isInt = _tuple[1];
			newArgNum = argNum + 1 >> 0;
		}
		return [num, isInt, newArgNum];
	};
	parseArgNumber = function(format) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tuple, i, index = 0, newi, ok = false, ok$1, wid = 0, width;
		i = 1;
		while (i < format.length) {
			if (format.charCodeAt(i) === 93) {
				_tuple = parsenum(format, 1, i); width = _tuple[0]; ok$1 = _tuple[1]; newi = _tuple[2];
				if (!ok$1 || !((newi === i))) {
					_tmp = 0; _tmp$1 = i + 1 >> 0; _tmp$2 = false; index = _tmp; wid = _tmp$1; ok = _tmp$2;
					return [index, wid, ok];
				}
				_tmp$3 = width - 1 >> 0; _tmp$4 = i + 1 >> 0; _tmp$5 = true; index = _tmp$3; wid = _tmp$4; ok = _tmp$5;
				return [index, wid, ok];
			}
			i = i + (1) >> 0;
		}
		_tmp$6 = 0; _tmp$7 = 1; _tmp$8 = false; index = _tmp$6; wid = _tmp$7; ok = _tmp$8;
		return [index, wid, ok];
	};
	pp.ptr.prototype.argNumber = function(argNum, format, i, numArgs) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tuple, found = false, index, newArgNum = 0, newi = 0, ok, p, wid;
		p = this;
		if (format.length <= i || !((format.charCodeAt(i) === 91))) {
			_tmp = argNum; _tmp$1 = i; _tmp$2 = false; newArgNum = _tmp; newi = _tmp$1; found = _tmp$2;
			return [newArgNum, newi, found];
		}
		p.reordered = true;
		_tuple = parseArgNumber(format.substring(i)); index = _tuple[0]; wid = _tuple[1]; ok = _tuple[2];
		if (ok && 0 <= index && index < numArgs) {
			_tmp$3 = index; _tmp$4 = i + wid >> 0; _tmp$5 = true; newArgNum = _tmp$3; newi = _tmp$4; found = _tmp$5;
			return [newArgNum, newi, found];
		}
		p.goodArgNum = false;
		_tmp$6 = argNum; _tmp$7 = i + wid >> 0; _tmp$8 = true; newArgNum = _tmp$6; newi = _tmp$7; found = _tmp$8;
		return [newArgNum, newi, found];
	};
	pp.prototype.argNumber = function(argNum, format, i, numArgs) { return this.$val.argNumber(argNum, format, i, numArgs); };
	pp.ptr.prototype.doPrintf = function(format, a) {
		var _ref, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, _tuple$5, _tuple$6, _tuple$7, afterIndex, arg, arg$1, argNum, c, end, i, lasti, p, w;
		p = this;
		end = format.length;
		argNum = 0;
		afterIndex = false;
		p.reordered = false;
		i = 0;
		while (i < end) {
			p.goodArgNum = true;
			lasti = i;
			while (i < end && !((format.charCodeAt(i) === 37))) {
				i = i + (1) >> 0;
			}
			if (i > lasti) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(format.substring(lasti, i));
			}
			if (i >= end) {
				break;
			}
			i = i + (1) >> 0;
			p.fmt.clearflags();
			F:
			while (i < end) {
				_ref = format.charCodeAt(i);
				if (_ref === 35) {
					p.fmt.fmtFlags.sharp = true;
				} else if (_ref === 48) {
					p.fmt.fmtFlags.zero = true;
				} else if (_ref === 43) {
					p.fmt.fmtFlags.plus = true;
				} else if (_ref === 45) {
					p.fmt.fmtFlags.minus = true;
				} else if (_ref === 32) {
					p.fmt.fmtFlags.space = true;
				} else {
					break F;
				}
				i = i + (1) >> 0;
			}
			_tuple = p.argNumber(argNum, format, i, a.$length); argNum = _tuple[0]; i = _tuple[1]; afterIndex = _tuple[2];
			if (i < end && (format.charCodeAt(i) === 42)) {
				i = i + (1) >> 0;
				_tuple$1 = intFromArg(a, argNum); p.fmt.wid = _tuple$1[0]; p.fmt.fmtFlags.widPresent = _tuple$1[1]; argNum = _tuple$1[2];
				if (!p.fmt.fmtFlags.widPresent) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(badWidthBytes);
				}
				afterIndex = false;
			} else {
				_tuple$2 = parsenum(format, i, end); p.fmt.wid = _tuple$2[0]; p.fmt.fmtFlags.widPresent = _tuple$2[1]; i = _tuple$2[2];
				if (afterIndex && p.fmt.fmtFlags.widPresent) {
					p.goodArgNum = false;
				}
			}
			if ((i + 1 >> 0) < end && (format.charCodeAt(i) === 46)) {
				i = i + (1) >> 0;
				if (afterIndex) {
					p.goodArgNum = false;
				}
				_tuple$3 = p.argNumber(argNum, format, i, a.$length); argNum = _tuple$3[0]; i = _tuple$3[1]; afterIndex = _tuple$3[2];
				if (format.charCodeAt(i) === 42) {
					i = i + (1) >> 0;
					_tuple$4 = intFromArg(a, argNum); p.fmt.prec = _tuple$4[0]; p.fmt.fmtFlags.precPresent = _tuple$4[1]; argNum = _tuple$4[2];
					if (!p.fmt.fmtFlags.precPresent) {
						new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(badPrecBytes);
					}
					afterIndex = false;
				} else {
					_tuple$5 = parsenum(format, i, end); p.fmt.prec = _tuple$5[0]; p.fmt.fmtFlags.precPresent = _tuple$5[1]; i = _tuple$5[2];
					if (!p.fmt.fmtFlags.precPresent) {
						p.fmt.prec = 0;
						p.fmt.fmtFlags.precPresent = true;
					}
				}
			}
			if (!afterIndex) {
				_tuple$6 = p.argNumber(argNum, format, i, a.$length); argNum = _tuple$6[0]; i = _tuple$6[1]; afterIndex = _tuple$6[2];
			}
			if (i >= end) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(noVerbBytes);
				continue;
			}
			_tuple$7 = utf8.DecodeRuneInString(format.substring(i)); c = _tuple$7[0]; w = _tuple$7[1];
			i = i + (w) >> 0;
			if (c === 37) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(37);
				continue;
			}
			if (!p.goodArgNum) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(percentBangBytes);
				p.add(c);
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(badIndexBytes);
				continue;
			} else if (argNum >= a.$length) {
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(percentBangBytes);
				p.add(c);
				new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(missingBytes);
				continue;
			}
			arg = ((argNum < 0 || argNum >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + argNum]);
			argNum = argNum + (1) >> 0;
			if (c === 118) {
				if (p.fmt.fmtFlags.sharp) {
					p.fmt.fmtFlags.sharp = false;
					p.fmt.fmtFlags.sharpV = true;
				}
				if (p.fmt.fmtFlags.plus) {
					p.fmt.fmtFlags.plus = false;
					p.fmt.fmtFlags.plusV = true;
				}
			}
			p.printArg(arg, c, 0);
		}
		if (!p.reordered && argNum < a.$length) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(extraBytes);
			while (argNum < a.$length) {
				arg$1 = ((argNum < 0 || argNum >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + argNum]);
				if (!($interfaceIsEqual(arg$1, $ifaceNil))) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteString(reflect.TypeOf(arg$1).String());
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(61);
				}
				p.printArg(arg$1, 118, 0);
				if ((argNum + 1 >> 0) < a.$length) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).Write(commaSpaceBytes);
				}
				argNum = argNum + (1) >> 0;
			}
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(41);
		}
	};
	pp.prototype.doPrintf = function(format, a) { return this.$val.doPrintf(format, a); };
	pp.ptr.prototype.doPrint = function(a, addspace, addnewline) {
		var arg, argNum, isString, p, prevString;
		p = this;
		prevString = false;
		argNum = 0;
		while (argNum < a.$length) {
			p.fmt.clearflags();
			arg = ((argNum < 0 || argNum >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + argNum]);
			if (argNum > 0) {
				isString = !($interfaceIsEqual(arg, $ifaceNil)) && (reflect.TypeOf(arg).Kind() === 24);
				if (addspace || !isString && !prevString) {
					new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(32);
				}
			}
			prevString = p.printArg(arg, 118, 0);
			argNum = argNum + (1) >> 0;
		}
		if (addnewline) {
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, p).WriteByte(10);
		}
	};
	pp.prototype.doPrint = function(a, addspace, addnewline) { return this.$val.doPrint(a, addspace, addnewline); };
	ss.ptr.prototype.Read = function(buf) {
		var _tmp, _tmp$1, err = $ifaceNil, n = 0, s;
		s = this;
		_tmp = 0; _tmp$1 = errors.New("ScanState's Read should not be called. Use ReadRune"); n = _tmp; err = _tmp$1;
		return [n, err];
	};
	ss.prototype.Read = function(buf) { return this.$val.Read(buf); };
	ss.ptr.prototype.ReadRune = function() {
		var _tuple, err = $ifaceNil, r = 0, s, size = 0;
		s = this;
		if (s.peekRune >= 0) {
			s.count = s.count + (1) >> 0;
			r = s.peekRune;
			size = utf8.RuneLen(r);
			s.prevRune = r;
			s.peekRune = -1;
			return [r, size, err];
		}
		if (s.atEOF || s.ssave.nlIsEnd && (s.prevRune === 10) || s.count >= s.ssave.argLimit) {
			err = io.EOF;
			return [r, size, err];
		}
		_tuple = s.rr.ReadRune(); r = _tuple[0]; size = _tuple[1]; err = _tuple[2];
		if ($interfaceIsEqual(err, $ifaceNil)) {
			s.count = s.count + (1) >> 0;
			s.prevRune = r;
		} else if ($interfaceIsEqual(err, io.EOF)) {
			s.atEOF = true;
		}
		return [r, size, err];
	};
	ss.prototype.ReadRune = function() { return this.$val.ReadRune(); };
	ss.ptr.prototype.Width = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, ok = false, s, wid = 0;
		s = this;
		if (s.ssave.maxWid === 1073741824) {
			_tmp = 0; _tmp$1 = false; wid = _tmp; ok = _tmp$1;
			return [wid, ok];
		}
		_tmp$2 = s.ssave.maxWid; _tmp$3 = true; wid = _tmp$2; ok = _tmp$3;
		return [wid, ok];
	};
	ss.prototype.Width = function() { return this.$val.Width(); };
	ss.ptr.prototype.getRune = function() {
		var _tuple, err, r = 0, s;
		s = this;
		_tuple = s.ReadRune(); r = _tuple[0]; err = _tuple[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			if ($interfaceIsEqual(err, io.EOF)) {
				r = -1;
				return r;
			}
			s.error(err);
		}
		return r;
	};
	ss.prototype.getRune = function() { return this.$val.getRune(); };
	ss.ptr.prototype.UnreadRune = function() {
		var _tuple, ok, s, u;
		s = this;
		_tuple = $assertType(s.rr, runeUnreader, true); u = _tuple[0]; ok = _tuple[1];
		if (ok) {
			u.UnreadRune();
		} else {
			s.peekRune = s.prevRune;
		}
		s.prevRune = -1;
		s.count = s.count - (1) >> 0;
		return $ifaceNil;
	};
	ss.prototype.UnreadRune = function() { return this.$val.UnreadRune(); };
	ss.ptr.prototype.error = function(err) {
		var s, x;
		s = this;
		$panic((x = new scanError.ptr(err), new x.constructor.elem(x)));
	};
	ss.prototype.error = function(err) { return this.$val.error(err); };
	ss.ptr.prototype.errorString = function(err) {
		var s, x;
		s = this;
		$panic((x = new scanError.ptr(errors.New(err)), new x.constructor.elem(x)));
	};
	ss.prototype.errorString = function(err) { return this.$val.errorString(err); };
	ss.ptr.prototype.Token = function(skipSpace, f) {
		var $deferred = [], $err = null, err = $ifaceNil, s, tok = sliceType.nil;
		/* */ try { $deferFrames.push($deferred);
		s = this;
		$deferred.push([(function() {
			var _tuple, e, ok, se;
			e = $recover();
			if (!($interfaceIsEqual(e, $ifaceNil))) {
				_tuple = $assertType(e, scanError, true); se = $clone(_tuple[0], scanError); ok = _tuple[1];
				if (ok) {
					err = se.err;
				} else {
					$panic(e);
				}
			}
		}), []]);
		if (f === $throwNilPointerError) {
			f = notSpace;
		}
		s.buf = $subslice(s.buf, 0, 0);
		tok = s.token(skipSpace, f);
		return [tok, err];
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return [tok, err]; }
	};
	ss.prototype.Token = function(skipSpace, f) { return this.$val.Token(skipSpace, f); };
	isSpace = function(r) {
		var _i, _ref, rng, rx;
		if (r >= 65536) {
			return false;
		}
		rx = (r << 16 >>> 16);
		_ref = space;
		_i = 0;
		while (_i < _ref.$length) {
			rng = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), arrayType);
			if (rx < rng[0]) {
				return false;
			}
			if (rx <= rng[1]) {
				return true;
			}
			_i++;
		}
		return false;
	};
	notSpace = function(r) {
		return !isSpace(r);
	};
	ss.ptr.prototype.SkipSpace = function() {
		var s;
		s = this;
		s.skipSpace(false);
	};
	ss.prototype.SkipSpace = function() { return this.$val.SkipSpace(); };
	ss.ptr.prototype.free = function(old) {
		var s;
		s = this;
		old = $clone(old, ssave);
		if (old.validSave) {
			$copy(s.ssave, old, ssave);
			return;
		}
		if (s.buf.$capacity > 1024) {
			return;
		}
		s.buf = $subslice(s.buf, 0, 0);
		s.rr = $ifaceNil;
		ssFree.Put(s);
	};
	ss.prototype.free = function(old) { return this.$val.free(old); };
	ss.ptr.prototype.skipSpace = function(stopAtNewline) {
		var r, s;
		s = this;
		while (true) {
			r = s.getRune();
			if (r === -1) {
				return;
			}
			if ((r === 13) && s.peek("\n")) {
				continue;
			}
			if (r === 10) {
				if (stopAtNewline) {
					break;
				}
				if (s.ssave.nlIsSpace) {
					continue;
				}
				s.errorString("unexpected newline");
				return;
			}
			if (!isSpace(r)) {
				s.UnreadRune();
				break;
			}
		}
	};
	ss.prototype.skipSpace = function(stopAtNewline) { return this.$val.skipSpace(stopAtNewline); };
	ss.ptr.prototype.token = function(skipSpace, f) {
		var r, s, x;
		s = this;
		if (skipSpace) {
			s.skipSpace(false);
		}
		while (true) {
			r = s.getRune();
			if (r === -1) {
				break;
			}
			if (!f(r)) {
				s.UnreadRune();
				break;
			}
			new ptrType$1(function() { return this.$target.buf; }, function($v) { this.$target.buf = $v; }, s).WriteRune(r);
		}
		return (x = s.buf, $subslice(new sliceType(x.$array), x.$offset, x.$offset + x.$length));
	};
	ss.prototype.token = function(skipSpace, f) { return this.$val.token(skipSpace, f); };
	indexRune = function(s, r) {
		var _i, _ref, _rune, c, i;
		_ref = s;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			i = _i;
			c = _rune[0];
			if (c === r) {
				return i;
			}
			_i += _rune[1];
		}
		return -1;
	};
	ss.ptr.prototype.peek = function(ok) {
		var r, s;
		s = this;
		r = s.getRune();
		if (!((r === -1))) {
			s.UnreadRune();
		}
		return indexRune(ok, r) >= 0;
	};
	ss.prototype.peek = function(ok) { return this.$val.peek(ok); };
	ptrType$25.methods = [{prop: "clearflags", name: "clearflags", pkg: "fmt", type: $funcType([], [], false)}, {prop: "computePadding", name: "computePadding", pkg: "fmt", type: $funcType([$Int], [sliceType, $Int, $Int], false)}, {prop: "fmt_E32", name: "fmt_E32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_E64", name: "fmt_E64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_G32", name: "fmt_G32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_G64", name: "fmt_G64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_boolean", name: "fmt_boolean", pkg: "fmt", type: $funcType([$Bool], [], false)}, {prop: "fmt_bx", name: "fmt_bx", pkg: "fmt", type: $funcType([sliceType, $String], [], false)}, {prop: "fmt_c128", name: "fmt_c128", pkg: "fmt", type: $funcType([$Complex128, $Int32], [], false)}, {prop: "fmt_c64", name: "fmt_c64", pkg: "fmt", type: $funcType([$Complex64, $Int32], [], false)}, {prop: "fmt_complex", name: "fmt_complex", pkg: "fmt", type: $funcType([$Float64, $Float64, $Int, $Int32], [], false)}, {prop: "fmt_e32", name: "fmt_e32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_e64", name: "fmt_e64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_f32", name: "fmt_f32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_f64", name: "fmt_f64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_fb32", name: "fmt_fb32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_fb64", name: "fmt_fb64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_g32", name: "fmt_g32", pkg: "fmt", type: $funcType([$Float32], [], false)}, {prop: "fmt_g64", name: "fmt_g64", pkg: "fmt", type: $funcType([$Float64], [], false)}, {prop: "fmt_q", name: "fmt_q", pkg: "fmt", type: $funcType([$String], [], false)}, {prop: "fmt_qc", name: "fmt_qc", pkg: "fmt", type: $funcType([$Int64], [], false)}, {prop: "fmt_s", name: "fmt_s", pkg: "fmt", type: $funcType([$String], [], false)}, {prop: "fmt_sbx", name: "fmt_sbx", pkg: "fmt", type: $funcType([$String, sliceType, $String], [], false)}, {prop: "fmt_sx", name: "fmt_sx", pkg: "fmt", type: $funcType([$String, $String], [], false)}, {prop: "formatFloat", name: "formatFloat", pkg: "fmt", type: $funcType([$Float64, $Uint8, $Int, $Int], [], false)}, {prop: "init", name: "init", pkg: "fmt", type: $funcType([ptrType$1], [], false)}, {prop: "integer", name: "integer", pkg: "fmt", type: $funcType([$Int64, $Uint64, $Bool, $String], [], false)}, {prop: "pad", name: "pad", pkg: "fmt", type: $funcType([sliceType], [], false)}, {prop: "padString", name: "padString", pkg: "fmt", type: $funcType([$String], [], false)}, {prop: "truncate", name: "truncate", pkg: "fmt", type: $funcType([$String], [$String], false)}, {prop: "writePadding", name: "writePadding", pkg: "fmt", type: $funcType([$Int, sliceType], [], false)}];
	ptrType$1.methods = [{prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}, {prop: "WriteByte", name: "WriteByte", pkg: "", type: $funcType([$Uint8], [$error], false)}, {prop: "WriteRune", name: "WriteRune", pkg: "", type: $funcType([$Int32], [$error], false)}, {prop: "WriteString", name: "WriteString", pkg: "", type: $funcType([$String], [$Int, $error], false)}];
	ptrType.methods = [{prop: "Flag", name: "Flag", pkg: "", type: $funcType([$Int], [$Bool], false)}, {prop: "Precision", name: "Precision", pkg: "", type: $funcType([], [$Int, $Bool], false)}, {prop: "Width", name: "Width", pkg: "", type: $funcType([], [$Int, $Bool], false)}, {prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}, {prop: "add", name: "add", pkg: "fmt", type: $funcType([$Int32], [], false)}, {prop: "argNumber", name: "argNumber", pkg: "fmt", type: $funcType([$Int, $String, $Int, $Int], [$Int, $Int, $Bool], false)}, {prop: "badVerb", name: "badVerb", pkg: "fmt", type: $funcType([$Int32], [], false)}, {prop: "catchPanic", name: "catchPanic", pkg: "fmt", type: $funcType([$emptyInterface, $Int32], [], false)}, {prop: "clearSpecialFlags", name: "clearSpecialFlags", pkg: "fmt", type: $funcType([], [$Bool, $Bool], false)}, {prop: "doPrint", name: "doPrint", pkg: "fmt", type: $funcType([sliceType$1, $Bool, $Bool], [], false)}, {prop: "doPrintf", name: "doPrintf", pkg: "fmt", type: $funcType([$String, sliceType$1], [], false)}, {prop: "fmt0x64", name: "fmt0x64", pkg: "fmt", type: $funcType([$Uint64, $Bool], [], false)}, {prop: "fmtBool", name: "fmtBool", pkg: "fmt", type: $funcType([$Bool, $Int32], [], false)}, {prop: "fmtBytes", name: "fmtBytes", pkg: "fmt", type: $funcType([sliceType, $Int32, reflect.Type, $Int], [], false)}, {prop: "fmtC", name: "fmtC", pkg: "fmt", type: $funcType([$Int64], [], false)}, {prop: "fmtComplex128", name: "fmtComplex128", pkg: "fmt", type: $funcType([$Complex128, $Int32], [], false)}, {prop: "fmtComplex64", name: "fmtComplex64", pkg: "fmt", type: $funcType([$Complex64, $Int32], [], false)}, {prop: "fmtFloat32", name: "fmtFloat32", pkg: "fmt", type: $funcType([$Float32, $Int32], [], false)}, {prop: "fmtFloat64", name: "fmtFloat64", pkg: "fmt", type: $funcType([$Float64, $Int32], [], false)}, {prop: "fmtInt64", name: "fmtInt64", pkg: "fmt", type: $funcType([$Int64, $Int32], [], false)}, {prop: "fmtPointer", name: "fmtPointer", pkg: "fmt", type: $funcType([reflect.Value, $Int32], [], false)}, {prop: "fmtString", name: "fmtString", pkg: "fmt", type: $funcType([$String, $Int32], [], false)}, {prop: "fmtUint64", name: "fmtUint64", pkg: "fmt", type: $funcType([$Uint64, $Int32], [], false)}, {prop: "fmtUnicode", name: "fmtUnicode", pkg: "fmt", type: $funcType([$Int64], [], false)}, {prop: "free", name: "free", pkg: "fmt", type: $funcType([], [], false)}, {prop: "handleMethods", name: "handleMethods", pkg: "fmt", type: $funcType([$Int32, $Int], [$Bool], false)}, {prop: "printArg", name: "printArg", pkg: "fmt", type: $funcType([$emptyInterface, $Int32, $Int], [$Bool], false)}, {prop: "printReflectValue", name: "printReflectValue", pkg: "fmt", type: $funcType([reflect.Value, $Int32, $Int], [$Bool], false)}, {prop: "printValue", name: "printValue", pkg: "fmt", type: $funcType([reflect.Value, $Int32, $Int], [$Bool], false)}, {prop: "restoreSpecialFlags", name: "restoreSpecialFlags", pkg: "fmt", type: $funcType([$Bool, $Bool], [], false)}, {prop: "unknownType", name: "unknownType", pkg: "fmt", type: $funcType([reflect.Value], [], false)}];
	ptrType$5.methods = [{prop: "Read", name: "Read", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}, {prop: "ReadRune", name: "ReadRune", pkg: "", type: $funcType([], [$Int32, $Int, $error], false)}, {prop: "SkipSpace", name: "SkipSpace", pkg: "", type: $funcType([], [], false)}, {prop: "Token", name: "Token", pkg: "", type: $funcType([$Bool, funcType], [sliceType, $error], false)}, {prop: "UnreadRune", name: "UnreadRune", pkg: "", type: $funcType([], [$error], false)}, {prop: "Width", name: "Width", pkg: "", type: $funcType([], [$Int, $Bool], false)}, {prop: "accept", name: "accept", pkg: "fmt", type: $funcType([$String], [$Bool], false)}, {prop: "advance", name: "advance", pkg: "fmt", type: $funcType([$String], [$Int], false)}, {prop: "complexTokens", name: "complexTokens", pkg: "fmt", type: $funcType([], [$String, $String], false)}, {prop: "consume", name: "consume", pkg: "fmt", type: $funcType([$String, $Bool], [$Bool], false)}, {prop: "convertFloat", name: "convertFloat", pkg: "fmt", type: $funcType([$String, $Int], [$Float64], false)}, {prop: "convertString", name: "convertString", pkg: "fmt", type: $funcType([$Int32], [$String], false)}, {prop: "doScan", name: "doScan", pkg: "fmt", type: $funcType([sliceType$1], [$Int, $error], false)}, {prop: "doScanf", name: "doScanf", pkg: "fmt", type: $funcType([$String, sliceType$1], [$Int, $error], false)}, {prop: "error", name: "error", pkg: "fmt", type: $funcType([$error], [], false)}, {prop: "errorString", name: "errorString", pkg: "fmt", type: $funcType([$String], [], false)}, {prop: "floatToken", name: "floatToken", pkg: "fmt", type: $funcType([], [$String], false)}, {prop: "free", name: "free", pkg: "fmt", type: $funcType([ssave], [], false)}, {prop: "getBase", name: "getBase", pkg: "fmt", type: $funcType([$Int32], [$Int, $String], false)}, {prop: "getRune", name: "getRune", pkg: "fmt", type: $funcType([], [$Int32], false)}, {prop: "hexByte", name: "hexByte", pkg: "fmt", type: $funcType([], [$Uint8, $Bool], false)}, {prop: "hexDigit", name: "hexDigit", pkg: "fmt", type: $funcType([$Int32], [$Int], false)}, {prop: "hexString", name: "hexString", pkg: "fmt", type: $funcType([], [$String], false)}, {prop: "mustReadRune", name: "mustReadRune", pkg: "fmt", type: $funcType([], [$Int32], false)}, {prop: "notEOF", name: "notEOF", pkg: "fmt", type: $funcType([], [], false)}, {prop: "okVerb", name: "okVerb", pkg: "fmt", type: $funcType([$Int32, $String, $String], [$Bool], false)}, {prop: "peek", name: "peek", pkg: "fmt", type: $funcType([$String], [$Bool], false)}, {prop: "quotedString", name: "quotedString", pkg: "fmt", type: $funcType([], [$String], false)}, {prop: "scanBasePrefix", name: "scanBasePrefix", pkg: "fmt", type: $funcType([], [$Int, $String, $Bool], false)}, {prop: "scanBool", name: "scanBool", pkg: "fmt", type: $funcType([$Int32], [$Bool], false)}, {prop: "scanComplex", name: "scanComplex", pkg: "fmt", type: $funcType([$Int32, $Int], [$Complex128], false)}, {prop: "scanInt", name: "scanInt", pkg: "fmt", type: $funcType([$Int32, $Int], [$Int64], false)}, {prop: "scanNumber", name: "scanNumber", pkg: "fmt", type: $funcType([$String, $Bool], [$String], false)}, {prop: "scanOne", name: "scanOne", pkg: "fmt", type: $funcType([$Int32, $emptyInterface], [], false)}, {prop: "scanRune", name: "scanRune", pkg: "fmt", type: $funcType([$Int], [$Int64], false)}, {prop: "scanUint", name: "scanUint", pkg: "fmt", type: $funcType([$Int32, $Int], [$Uint64], false)}, {prop: "skipSpace", name: "skipSpace", pkg: "fmt", type: $funcType([$Bool], [], false)}, {prop: "token", name: "token", pkg: "fmt", type: $funcType([$Bool, funcType], [sliceType], false)}];
	fmtFlags.init([{prop: "widPresent", name: "widPresent", pkg: "fmt", type: $Bool, tag: ""}, {prop: "precPresent", name: "precPresent", pkg: "fmt", type: $Bool, tag: ""}, {prop: "minus", name: "minus", pkg: "fmt", type: $Bool, tag: ""}, {prop: "plus", name: "plus", pkg: "fmt", type: $Bool, tag: ""}, {prop: "sharp", name: "sharp", pkg: "fmt", type: $Bool, tag: ""}, {prop: "space", name: "space", pkg: "fmt", type: $Bool, tag: ""}, {prop: "unicode", name: "unicode", pkg: "fmt", type: $Bool, tag: ""}, {prop: "uniQuote", name: "uniQuote", pkg: "fmt", type: $Bool, tag: ""}, {prop: "zero", name: "zero", pkg: "fmt", type: $Bool, tag: ""}, {prop: "plusV", name: "plusV", pkg: "fmt", type: $Bool, tag: ""}, {prop: "sharpV", name: "sharpV", pkg: "fmt", type: $Bool, tag: ""}]);
	fmt.init([{prop: "intbuf", name: "intbuf", pkg: "fmt", type: arrayType$2, tag: ""}, {prop: "buf", name: "buf", pkg: "fmt", type: ptrType$1, tag: ""}, {prop: "wid", name: "wid", pkg: "fmt", type: $Int, tag: ""}, {prop: "prec", name: "prec", pkg: "fmt", type: $Int, tag: ""}, {prop: "fmtFlags", name: "", pkg: "fmt", type: fmtFlags, tag: ""}]);
	State.init([{prop: "Flag", name: "Flag", pkg: "", type: $funcType([$Int], [$Bool], false)}, {prop: "Precision", name: "Precision", pkg: "", type: $funcType([], [$Int, $Bool], false)}, {prop: "Width", name: "Width", pkg: "", type: $funcType([], [$Int, $Bool], false)}, {prop: "Write", name: "Write", pkg: "", type: $funcType([sliceType], [$Int, $error], false)}]);
	Formatter.init([{prop: "Format", name: "Format", pkg: "", type: $funcType([State, $Int32], [], false)}]);
	Stringer.init([{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}]);
	GoStringer.init([{prop: "GoString", name: "GoString", pkg: "", type: $funcType([], [$String], false)}]);
	buffer.init($Uint8);
	pp.init([{prop: "n", name: "n", pkg: "fmt", type: $Int, tag: ""}, {prop: "panicking", name: "panicking", pkg: "fmt", type: $Bool, tag: ""}, {prop: "erroring", name: "erroring", pkg: "fmt", type: $Bool, tag: ""}, {prop: "buf", name: "buf", pkg: "fmt", type: buffer, tag: ""}, {prop: "arg", name: "arg", pkg: "fmt", type: $emptyInterface, tag: ""}, {prop: "value", name: "value", pkg: "fmt", type: reflect.Value, tag: ""}, {prop: "reordered", name: "reordered", pkg: "fmt", type: $Bool, tag: ""}, {prop: "goodArgNum", name: "goodArgNum", pkg: "fmt", type: $Bool, tag: ""}, {prop: "runeBuf", name: "runeBuf", pkg: "fmt", type: arrayType$1, tag: ""}, {prop: "fmt", name: "fmt", pkg: "fmt", type: fmt, tag: ""}]);
	runeUnreader.init([{prop: "UnreadRune", name: "UnreadRune", pkg: "", type: $funcType([], [$error], false)}]);
	scanError.init([{prop: "err", name: "err", pkg: "fmt", type: $error, tag: ""}]);
	ss.init([{prop: "rr", name: "rr", pkg: "fmt", type: io.RuneReader, tag: ""}, {prop: "buf", name: "buf", pkg: "fmt", type: buffer, tag: ""}, {prop: "peekRune", name: "peekRune", pkg: "fmt", type: $Int32, tag: ""}, {prop: "prevRune", name: "prevRune", pkg: "fmt", type: $Int32, tag: ""}, {prop: "count", name: "count", pkg: "fmt", type: $Int, tag: ""}, {prop: "atEOF", name: "atEOF", pkg: "fmt", type: $Bool, tag: ""}, {prop: "ssave", name: "", pkg: "fmt", type: ssave, tag: ""}]);
	ssave.init([{prop: "validSave", name: "validSave", pkg: "fmt", type: $Bool, tag: ""}, {prop: "nlIsEnd", name: "nlIsEnd", pkg: "fmt", type: $Bool, tag: ""}, {prop: "nlIsSpace", name: "nlIsSpace", pkg: "fmt", type: $Bool, tag: ""}, {prop: "argLimit", name: "argLimit", pkg: "fmt", type: $Int, tag: ""}, {prop: "limit", name: "limit", pkg: "fmt", type: $Int, tag: ""}, {prop: "maxWid", name: "maxWid", pkg: "fmt", type: $Int, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_fmt = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = math.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = os.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = reflect.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		padZeroBytes = $makeSlice(sliceType, 65);
		padSpaceBytes = $makeSlice(sliceType, 65);
		trueBytes = new sliceType($stringToBytes("true"));
		falseBytes = new sliceType($stringToBytes("false"));
		commaSpaceBytes = new sliceType($stringToBytes(", "));
		nilAngleBytes = new sliceType($stringToBytes("<nil>"));
		nilParenBytes = new sliceType($stringToBytes("(nil)"));
		nilBytes = new sliceType($stringToBytes("nil"));
		mapBytes = new sliceType($stringToBytes("map["));
		percentBangBytes = new sliceType($stringToBytes("%!"));
		missingBytes = new sliceType($stringToBytes("(MISSING)"));
		badIndexBytes = new sliceType($stringToBytes("(BADINDEX)"));
		panicBytes = new sliceType($stringToBytes("(PANIC="));
		extraBytes = new sliceType($stringToBytes("%!(EXTRA "));
		irparenBytes = new sliceType($stringToBytes("i)"));
		bytesBytes = new sliceType($stringToBytes("[]byte{"));
		badWidthBytes = new sliceType($stringToBytes("%!(BADWIDTH)"));
		badPrecBytes = new sliceType($stringToBytes("%!(BADPREC)"));
		noVerbBytes = new sliceType($stringToBytes("%!(NOVERB)"));
		ppFree = new sync.Pool.ptr(0, 0, sliceType$1.nil, (function() {
			return new pp.ptr();
		}));
		intBits = reflect.TypeOf(new $Int(0)).Bits();
		uintptrBits = reflect.TypeOf(new $Uintptr(0)).Bits();
		byteType = reflect.TypeOf(new $Uint8(0));
		space = new sliceType$2([$toNativeArray($kindUint16, [9, 13]), $toNativeArray($kindUint16, [32, 32]), $toNativeArray($kindUint16, [133, 133]), $toNativeArray($kindUint16, [160, 160]), $toNativeArray($kindUint16, [5760, 5760]), $toNativeArray($kindUint16, [8192, 8202]), $toNativeArray($kindUint16, [8232, 8233]), $toNativeArray($kindUint16, [8239, 8239]), $toNativeArray($kindUint16, [8287, 8287]), $toNativeArray($kindUint16, [12288, 12288])]);
		ssFree = new sync.Pool.ptr(0, 0, sliceType$1.nil, (function() {
			return new ss.ptr();
		}));
		complexError = errors.New("syntax error scanning complex number");
		boolError = errors.New("syntax error scanning boolean");
		init();
		/* */ } return; } }; $init_fmt.$blocking = true; return $init_fmt;
	};
	return $pkg;
})();
$packages["sort"] = (function() {
	var $pkg = {}, StringSlice, sliceType$2, ptrType$3, Search, SearchStrings, min, insertionSort, siftDown, heapSort, medianOfThree, swapRange, doPivot, quickSort, Sort;
	StringSlice = $pkg.StringSlice = $newType(12, $kindSlice, "sort.StringSlice", "StringSlice", "sort", null);
		sliceType$2 = $sliceType($String);
		ptrType$3 = $ptrType(StringSlice);
	Search = $pkg.Search = function(n, f) {
		var _q, _tmp, _tmp$1, h, i, j;
		_tmp = 0; _tmp$1 = n; i = _tmp; j = _tmp$1;
		while (i < j) {
			h = i + (_q = ((j - i >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			if (!f(h)) {
				i = h + 1 >> 0;
			} else {
				j = h;
			}
		}
		return i;
	};
	SearchStrings = $pkg.SearchStrings = function(a, x) {
		return Search(a.$length, (function(i) {
			return ((i < 0 || i >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + i]) >= x;
		}));
	};
	StringSlice.prototype.Search = function(x) {
		var p;
		p = this;
		return SearchStrings($subslice(new sliceType$2(p.$array), p.$offset, p.$offset + p.$length), x);
	};
	$ptrType(StringSlice).prototype.Search = function(x) { return this.$get().Search(x); };
	min = function(a, b) {
		if (a < b) {
			return a;
		}
		return b;
	};
	insertionSort = function(data, a, b) {
		var i, j;
		i = a + 1 >> 0;
		while (i < b) {
			j = i;
			while (j > a && data.Less(j, j - 1 >> 0)) {
				data.Swap(j, j - 1 >> 0);
				j = j - (1) >> 0;
			}
			i = i + (1) >> 0;
		}
	};
	siftDown = function(data, lo, hi, first) {
		var child, root;
		root = lo;
		while (true) {
			child = (2 * root >> 0) + 1 >> 0;
			if (child >= hi) {
				break;
			}
			if ((child + 1 >> 0) < hi && data.Less(first + child >> 0, (first + child >> 0) + 1 >> 0)) {
				child = child + (1) >> 0;
			}
			if (!data.Less(first + root >> 0, first + child >> 0)) {
				return;
			}
			data.Swap(first + root >> 0, first + child >> 0);
			root = child;
		}
	};
	heapSort = function(data, a, b) {
		var _q, first, hi, i, i$1, lo;
		first = a;
		lo = 0;
		hi = b - a >> 0;
		i = (_q = ((hi - 1 >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		while (i >= 0) {
			siftDown(data, i, hi, first);
			i = i - (1) >> 0;
		}
		i$1 = hi - 1 >> 0;
		while (i$1 >= 0) {
			data.Swap(first, first + i$1 >> 0);
			siftDown(data, lo, i$1, first);
			i$1 = i$1 - (1) >> 0;
		}
	};
	medianOfThree = function(data, a, b, c) {
		var m0, m1, m2;
		m0 = b;
		m1 = a;
		m2 = c;
		if (data.Less(m1, m0)) {
			data.Swap(m1, m0);
		}
		if (data.Less(m2, m1)) {
			data.Swap(m2, m1);
		}
		if (data.Less(m1, m0)) {
			data.Swap(m1, m0);
		}
	};
	swapRange = function(data, a, b, n) {
		var i;
		i = 0;
		while (i < n) {
			data.Swap(a + i >> 0, b + i >> 0);
			i = i + (1) >> 0;
		}
	};
	doPivot = function(data, lo, hi) {
		var _q, _q$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, a, b, c, d, m, midhi = 0, midlo = 0, n, pivot, s;
		m = lo + (_q = ((hi - lo >> 0)) / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
		if ((hi - lo >> 0) > 40) {
			s = (_q$1 = ((hi - lo >> 0)) / 8, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
			medianOfThree(data, lo, lo + s >> 0, lo + (2 * s >> 0) >> 0);
			medianOfThree(data, m, m - s >> 0, m + s >> 0);
			medianOfThree(data, hi - 1 >> 0, (hi - 1 >> 0) - s >> 0, (hi - 1 >> 0) - (2 * s >> 0) >> 0);
		}
		medianOfThree(data, lo, m, hi - 1 >> 0);
		pivot = lo;
		_tmp = lo + 1 >> 0; _tmp$1 = lo + 1 >> 0; _tmp$2 = hi; _tmp$3 = hi; a = _tmp; b = _tmp$1; c = _tmp$2; d = _tmp$3;
		while (true) {
			while (b < c) {
				if (data.Less(b, pivot)) {
					b = b + (1) >> 0;
				} else if (!data.Less(pivot, b)) {
					data.Swap(a, b);
					a = a + (1) >> 0;
					b = b + (1) >> 0;
				} else {
					break;
				}
			}
			while (b < c) {
				if (data.Less(pivot, c - 1 >> 0)) {
					c = c - (1) >> 0;
				} else if (!data.Less(c - 1 >> 0, pivot)) {
					data.Swap(c - 1 >> 0, d - 1 >> 0);
					c = c - (1) >> 0;
					d = d - (1) >> 0;
				} else {
					break;
				}
			}
			if (b >= c) {
				break;
			}
			data.Swap(b, c - 1 >> 0);
			b = b + (1) >> 0;
			c = c - (1) >> 0;
		}
		n = min(b - a >> 0, a - lo >> 0);
		swapRange(data, lo, b - n >> 0, n);
		n = min(hi - d >> 0, d - c >> 0);
		swapRange(data, c, hi - n >> 0, n);
		_tmp$4 = (lo + b >> 0) - a >> 0; _tmp$5 = hi - ((d - c >> 0)) >> 0; midlo = _tmp$4; midhi = _tmp$5;
		return [midlo, midhi];
	};
	quickSort = function(data, a, b, maxDepth) {
		var _tuple, mhi, mlo;
		while ((b - a >> 0) > 7) {
			if (maxDepth === 0) {
				heapSort(data, a, b);
				return;
			}
			maxDepth = maxDepth - (1) >> 0;
			_tuple = doPivot(data, a, b); mlo = _tuple[0]; mhi = _tuple[1];
			if ((mlo - a >> 0) < (b - mhi >> 0)) {
				quickSort(data, a, mlo, maxDepth);
				a = mhi;
			} else {
				quickSort(data, mhi, b, maxDepth);
				b = mlo;
			}
		}
		if ((b - a >> 0) > 1) {
			insertionSort(data, a, b);
		}
	};
	Sort = $pkg.Sort = function(data) {
		var i, maxDepth, n;
		n = data.Len();
		maxDepth = 0;
		i = n;
		while (i > 0) {
			maxDepth = maxDepth + (1) >> 0;
			i = (i >> $min((1), 31)) >> 0;
		}
		maxDepth = maxDepth * (2) >> 0;
		quickSort(data, 0, n, maxDepth);
	};
	StringSlice.prototype.Len = function() {
		var p;
		p = this;
		return p.$length;
	};
	$ptrType(StringSlice).prototype.Len = function() { return this.$get().Len(); };
	StringSlice.prototype.Less = function(i, j) {
		var p;
		p = this;
		return ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]) < ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]);
	};
	$ptrType(StringSlice).prototype.Less = function(i, j) { return this.$get().Less(i, j); };
	StringSlice.prototype.Swap = function(i, j) {
		var _tmp, _tmp$1, p;
		p = this;
		_tmp = ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]); _tmp$1 = ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]); (i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i] = _tmp; (j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j] = _tmp$1;
	};
	$ptrType(StringSlice).prototype.Swap = function(i, j) { return this.$get().Swap(i, j); };
	StringSlice.prototype.Sort = function() {
		var p;
		p = this;
		Sort(p);
	};
	$ptrType(StringSlice).prototype.Sort = function() { return this.$get().Sort(); };
	StringSlice.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Search", name: "Search", pkg: "", type: $funcType([$String], [$Int], false)}, {prop: "Sort", name: "Sort", pkg: "", type: $funcType([], [], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$3.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Search", name: "Search", pkg: "", type: $funcType([$String], [$Int], false)}, {prop: "Sort", name: "Sort", pkg: "", type: $funcType([], [], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	StringSlice.init($String);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_sort = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_sort.$blocking = true; return $init_sort;
	};
	return $pkg;
})();
$packages["flag"] = (function() {
	var $pkg = {}, errors, fmt, io, os, sort, strconv, time, boolValue, boolFlag, intValue, int64Value, uintValue, uint64Value, stringValue, float64Value, durationValue, Value, ErrorHandling, FlagSet, Flag, sliceType, ptrType, ptrType$1, ptrType$2, ptrType$3, ptrType$4, ptrType$5, ptrType$6, ptrType$7, ptrType$8, ptrType$9, sliceType$1, ptrType$10, ptrType$11, ptrType$12, ptrType$13, ptrType$14, ptrType$15, ptrType$16, sliceType$2, funcType, ptrType$17, funcType$1, mapType, x, newBoolValue, newIntValue, newInt64Value, newUintValue, newUint64Value, newStringValue, newFloat64Value, newDurationValue, sortFlags, PrintDefaults, defaultUsage, Bool, Int, String, Duration, NewFlagSet;
	errors = $packages["errors"];
	fmt = $packages["fmt"];
	io = $packages["io"];
	os = $packages["os"];
	sort = $packages["sort"];
	strconv = $packages["strconv"];
	time = $packages["time"];
	boolValue = $pkg.boolValue = $newType(1, $kindBool, "flag.boolValue", "boolValue", "flag", null);
	boolFlag = $pkg.boolFlag = $newType(8, $kindInterface, "flag.boolFlag", "boolFlag", "flag", null);
	intValue = $pkg.intValue = $newType(4, $kindInt, "flag.intValue", "intValue", "flag", null);
	int64Value = $pkg.int64Value = $newType(8, $kindInt64, "flag.int64Value", "int64Value", "flag", null);
	uintValue = $pkg.uintValue = $newType(4, $kindUint, "flag.uintValue", "uintValue", "flag", null);
	uint64Value = $pkg.uint64Value = $newType(8, $kindUint64, "flag.uint64Value", "uint64Value", "flag", null);
	stringValue = $pkg.stringValue = $newType(8, $kindString, "flag.stringValue", "stringValue", "flag", null);
	float64Value = $pkg.float64Value = $newType(8, $kindFloat64, "flag.float64Value", "float64Value", "flag", null);
	durationValue = $pkg.durationValue = $newType(8, $kindInt64, "flag.durationValue", "durationValue", "flag", null);
	Value = $pkg.Value = $newType(8, $kindInterface, "flag.Value", "Value", "flag", null);
	ErrorHandling = $pkg.ErrorHandling = $newType(4, $kindInt, "flag.ErrorHandling", "ErrorHandling", "flag", null);
	FlagSet = $pkg.FlagSet = $newType(0, $kindStruct, "flag.FlagSet", "FlagSet", "flag", function(Usage_, name_, parsed_, actual_, formal_, args_, errorHandling_, output_) {
		this.$val = this;
		this.Usage = Usage_ !== undefined ? Usage_ : $throwNilPointerError;
		this.name = name_ !== undefined ? name_ : "";
		this.parsed = parsed_ !== undefined ? parsed_ : false;
		this.actual = actual_ !== undefined ? actual_ : false;
		this.formal = formal_ !== undefined ? formal_ : false;
		this.args = args_ !== undefined ? args_ : sliceType$2.nil;
		this.errorHandling = errorHandling_ !== undefined ? errorHandling_ : 0;
		this.output = output_ !== undefined ? output_ : $ifaceNil;
	});
	Flag = $pkg.Flag = $newType(0, $kindStruct, "flag.Flag", "Flag", "flag", function(Name_, Usage_, Value_, DefValue_) {
		this.$val = this;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Usage = Usage_ !== undefined ? Usage_ : "";
		this.Value = Value_ !== undefined ? Value_ : $ifaceNil;
		this.DefValue = DefValue_ !== undefined ? DefValue_ : "";
	});
		sliceType = $sliceType($emptyInterface);
		ptrType = $ptrType(boolValue);
		ptrType$1 = $ptrType(intValue);
		ptrType$2 = $ptrType(int64Value);
		ptrType$3 = $ptrType(uintValue);
		ptrType$4 = $ptrType(uint64Value);
		ptrType$5 = $ptrType(stringValue);
		ptrType$6 = $ptrType(float64Value);
		ptrType$7 = $ptrType(durationValue);
		ptrType$8 = $ptrType(time.Duration);
		ptrType$9 = $ptrType(Flag);
		sliceType$1 = $sliceType(ptrType$9);
		ptrType$10 = $ptrType($Bool);
		ptrType$11 = $ptrType($Int);
		ptrType$12 = $ptrType($Int64);
		ptrType$13 = $ptrType($Uint);
		ptrType$14 = $ptrType($Uint64);
		ptrType$15 = $ptrType($String);
		ptrType$16 = $ptrType($Float64);
		sliceType$2 = $sliceType($String);
		funcType = $funcType([ptrType$9], [], false);
		ptrType$17 = $ptrType(FlagSet);
		funcType$1 = $funcType([], [], false);
		mapType = $mapType($String, ptrType$9);
	newBoolValue = function(val, p) {
		p.$set(val);
		return new ptrType(p.$get, p.$set);
	};
	$ptrType(boolValue).prototype.Set = function(s) {
		var _tuple, b, err, v;
		b = this;
		_tuple = strconv.ParseBool(s); v = _tuple[0]; err = _tuple[1];
		b.$set(v);
		return err;
	};
	$ptrType(boolValue).prototype.Get = function() {
		var b;
		b = this;
		return new $Bool(b.$get());
	};
	$ptrType(boolValue).prototype.String = function() {
		var b;
		b = this;
		return fmt.Sprintf("%v", new sliceType([new boolValue(b.$get())]));
	};
	$ptrType(boolValue).prototype.IsBoolFlag = function() {
		var b;
		b = this;
		return true;
	};
	newIntValue = function(val, p) {
		p.$set(val);
		return new ptrType$1(p.$get, p.$set);
	};
	$ptrType(intValue).prototype.Set = function(s) {
		var _tuple, err, i, v;
		i = this;
		_tuple = strconv.ParseInt(s, 0, 64); v = _tuple[0]; err = _tuple[1];
		i.$set(((v.$low + ((v.$high >> 31) * 4294967296)) >> 0));
		return err;
	};
	$ptrType(intValue).prototype.Get = function() {
		var i;
		i = this;
		return new $Int((i.$get() >> 0));
	};
	$ptrType(intValue).prototype.String = function() {
		var i;
		i = this;
		return fmt.Sprintf("%v", new sliceType([new intValue(i.$get())]));
	};
	newInt64Value = function(val, p) {
		p.$set(val);
		return new ptrType$2(p.$get, p.$set);
	};
	$ptrType(int64Value).prototype.Set = function(s) {
		var _tuple, err, i, v;
		i = this;
		_tuple = strconv.ParseInt(s, 0, 64); v = _tuple[0]; err = _tuple[1];
		i.$set(new int64Value(v.$high, v.$low));
		return err;
	};
	$ptrType(int64Value).prototype.Get = function() {
		var i, x$1;
		i = this;
		return (x$1 = i.$get(), new $Int64(x$1.$high, x$1.$low));
	};
	$ptrType(int64Value).prototype.String = function() {
		var i;
		i = this;
		return fmt.Sprintf("%v", new sliceType([i.$get()]));
	};
	newUintValue = function(val, p) {
		p.$set(val);
		return new ptrType$3(p.$get, p.$set);
	};
	$ptrType(uintValue).prototype.Set = function(s) {
		var _tuple, err, i, v;
		i = this;
		_tuple = strconv.ParseUint(s, 0, 64); v = _tuple[0]; err = _tuple[1];
		i.$set((v.$low >>> 0));
		return err;
	};
	$ptrType(uintValue).prototype.Get = function() {
		var i;
		i = this;
		return new $Uint((i.$get() >>> 0));
	};
	$ptrType(uintValue).prototype.String = function() {
		var i;
		i = this;
		return fmt.Sprintf("%v", new sliceType([new uintValue(i.$get())]));
	};
	newUint64Value = function(val, p) {
		p.$set(val);
		return new ptrType$4(p.$get, p.$set);
	};
	$ptrType(uint64Value).prototype.Set = function(s) {
		var _tuple, err, i, v;
		i = this;
		_tuple = strconv.ParseUint(s, 0, 64); v = _tuple[0]; err = _tuple[1];
		i.$set(new uint64Value(v.$high, v.$low));
		return err;
	};
	$ptrType(uint64Value).prototype.Get = function() {
		var i, x$1;
		i = this;
		return (x$1 = i.$get(), new $Uint64(x$1.$high, x$1.$low));
	};
	$ptrType(uint64Value).prototype.String = function() {
		var i;
		i = this;
		return fmt.Sprintf("%v", new sliceType([i.$get()]));
	};
	newStringValue = function(val, p) {
		p.$set(val);
		return new ptrType$5(p.$get, p.$set);
	};
	$ptrType(stringValue).prototype.Set = function(val) {
		var s;
		s = this;
		s.$set(val);
		return $ifaceNil;
	};
	$ptrType(stringValue).prototype.Get = function() {
		var s;
		s = this;
		return new $String(s.$get());
	};
	$ptrType(stringValue).prototype.String = function() {
		var s;
		s = this;
		return fmt.Sprintf("%s", new sliceType([new stringValue(s.$get())]));
	};
	newFloat64Value = function(val, p) {
		p.$set(val);
		return new ptrType$6(p.$get, p.$set);
	};
	$ptrType(float64Value).prototype.Set = function(s) {
		var _tuple, err, f, v;
		f = this;
		_tuple = strconv.ParseFloat(s, 64); v = _tuple[0]; err = _tuple[1];
		f.$set(v);
		return err;
	};
	$ptrType(float64Value).prototype.Get = function() {
		var f;
		f = this;
		return new $Float64(f.$get());
	};
	$ptrType(float64Value).prototype.String = function() {
		var f;
		f = this;
		return fmt.Sprintf("%v", new sliceType([new float64Value(f.$get())]));
	};
	newDurationValue = function(val, p) {
		p.$set(val);
		return new ptrType$7(p.$get, p.$set);
	};
	$ptrType(durationValue).prototype.Set = function(s) {
		var _tuple, d, err, v;
		d = this;
		_tuple = time.ParseDuration(s); v = _tuple[0]; err = _tuple[1];
		d.$set(new durationValue(v.$high, v.$low));
		return err;
	};
	$ptrType(durationValue).prototype.Get = function() {
		var d, x$1;
		d = this;
		return (x$1 = d.$get(), new time.Duration(x$1.$high, x$1.$low));
	};
	$ptrType(durationValue).prototype.String = function() {
		var d;
		d = this;
		return new ptrType$8(d.$get, d.$set).String();
	};
	sortFlags = function(flags) {
		var _entry, _entry$1, _i, _i$1, _keys, _ref, _ref$1, f, i, i$1, list, name, result;
		list = $makeSlice(sort.StringSlice, $keys(flags).length);
		i = 0;
		_ref = flags;
		_i = 0;
		_keys = $keys(_ref);
		while (_i < _keys.length) {
			_entry = _ref[_keys[_i]];
			if (_entry === undefined) {
				_i++;
				continue;
			}
			f = _entry.v;
			(i < 0 || i >= list.$length) ? $throwRuntimeError("index out of range") : list.$array[list.$offset + i] = f.Name;
			i = i + (1) >> 0;
			_i++;
		}
		list.Sort();
		result = $makeSlice(sliceType$1, list.$length);
		_ref$1 = list;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			i$1 = _i$1;
			name = ((_i$1 < 0 || _i$1 >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i$1]);
			(i$1 < 0 || i$1 >= result.$length) ? $throwRuntimeError("index out of range") : result.$array[result.$offset + i$1] = (_entry$1 = flags[name], _entry$1 !== undefined ? _entry$1.v : ptrType$9.nil);
			_i$1++;
		}
		return result;
	};
	FlagSet.ptr.prototype.out = function() {
		var f;
		f = this;
		if ($interfaceIsEqual(f.output, $ifaceNil)) {
			return os.Stderr;
		}
		return f.output;
	};
	FlagSet.prototype.out = function() { return this.$val.out(); };
	FlagSet.ptr.prototype.SetOutput = function(output) {
		var f;
		f = this;
		f.output = output;
	};
	FlagSet.prototype.SetOutput = function(output) { return this.$val.SetOutput(output); };
	FlagSet.ptr.prototype.VisitAll = function(fn) {
		var _i, _ref, f, flag;
		f = this;
		_ref = sortFlags(f.formal);
		_i = 0;
		while (_i < _ref.$length) {
			flag = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			fn(flag);
			_i++;
		}
	};
	FlagSet.prototype.VisitAll = function(fn) { return this.$val.VisitAll(fn); };
	FlagSet.ptr.prototype.Visit = function(fn) {
		var _i, _ref, f, flag;
		f = this;
		_ref = sortFlags(f.actual);
		_i = 0;
		while (_i < _ref.$length) {
			flag = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			fn(flag);
			_i++;
		}
	};
	FlagSet.prototype.Visit = function(fn) { return this.$val.Visit(fn); };
	FlagSet.ptr.prototype.Lookup = function(name) {
		var _entry, f;
		f = this;
		return (_entry = f.formal[name], _entry !== undefined ? _entry.v : ptrType$9.nil);
	};
	FlagSet.prototype.Lookup = function(name) { return this.$val.Lookup(name); };
	FlagSet.ptr.prototype.Set = function(name, value) {
		var _entry, _key, _tuple, err, f, flag, ok;
		f = this;
		_tuple = (_entry = f.formal[name], _entry !== undefined ? [_entry.v, true] : [ptrType$9.nil, false]); flag = _tuple[0]; ok = _tuple[1];
		if (!ok) {
			return fmt.Errorf("no such flag -%v", new sliceType([new $String(name)]));
		}
		err = flag.Value.Set(value);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		if (f.actual === false) {
			f.actual = new $Map();
		}
		_key = name; (f.actual || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: flag };
		return $ifaceNil;
	};
	FlagSet.prototype.Set = function(name, value) { return this.$val.Set(name, value); };
	FlagSet.ptr.prototype.PrintDefaults = function() {
		var f;
		f = this;
		f.VisitAll((function(flag) {
			var _tuple, format, ok;
			format = "  -%s=%s: %s\n";
			_tuple = $assertType(flag.Value, ptrType$5, true); ok = _tuple[1];
			if (ok) {
				format = "  -%s=%q: %s\n";
			}
			fmt.Fprintf(f.out(), format, new sliceType([new $String(flag.Name), new $String(flag.DefValue), new $String(flag.Usage)]));
		}));
	};
	FlagSet.prototype.PrintDefaults = function() { return this.$val.PrintDefaults(); };
	PrintDefaults = $pkg.PrintDefaults = function() {
		$pkg.CommandLine.PrintDefaults();
	};
	defaultUsage = function(f) {
		if (f.name === "") {
			fmt.Fprintf(f.out(), "Usage:\n", new sliceType([]));
		} else {
			fmt.Fprintf(f.out(), "Usage of %s:\n", new sliceType([new $String(f.name)]));
		}
		f.PrintDefaults();
	};
	FlagSet.ptr.prototype.NFlag = function() {
		var f;
		f = this;
		return $keys(f.actual).length;
	};
	FlagSet.prototype.NFlag = function() { return this.$val.NFlag(); };
	FlagSet.ptr.prototype.Arg = function(i) {
		var f, x$1;
		f = this;
		if (i < 0 || i >= f.args.$length) {
			return "";
		}
		return (x$1 = f.args, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i]));
	};
	FlagSet.prototype.Arg = function(i) { return this.$val.Arg(i); };
	FlagSet.ptr.prototype.NArg = function() {
		var f;
		f = this;
		return f.args.$length;
	};
	FlagSet.prototype.NArg = function() { return this.$val.NArg(); };
	FlagSet.ptr.prototype.Args = function() {
		var f;
		f = this;
		return f.args;
	};
	FlagSet.prototype.Args = function() { return this.$val.Args(); };
	FlagSet.ptr.prototype.BoolVar = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newBoolValue(value, p), name, usage);
	};
	FlagSet.prototype.BoolVar = function(p, name, value, usage) { return this.$val.BoolVar(p, name, value, usage); };
	FlagSet.ptr.prototype.Bool = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(false, ptrType$10);
		f.BoolVar(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Bool = function(name, value, usage) { return this.$val.Bool(name, value, usage); };
	Bool = $pkg.Bool = function(name, value, usage) {
		return $pkg.CommandLine.Bool(name, value, usage);
	};
	FlagSet.ptr.prototype.IntVar = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newIntValue(value, p), name, usage);
	};
	FlagSet.prototype.IntVar = function(p, name, value, usage) { return this.$val.IntVar(p, name, value, usage); };
	FlagSet.ptr.prototype.Int = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(0, ptrType$11);
		f.IntVar(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Int = function(name, value, usage) { return this.$val.Int(name, value, usage); };
	Int = $pkg.Int = function(name, value, usage) {
		return $pkg.CommandLine.Int(name, value, usage);
	};
	FlagSet.ptr.prototype.Int64Var = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newInt64Value(value, p), name, usage);
	};
	FlagSet.prototype.Int64Var = function(p, name, value, usage) { return this.$val.Int64Var(p, name, value, usage); };
	FlagSet.ptr.prototype.Int64 = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(new $Int64(0, 0), ptrType$12);
		f.Int64Var(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Int64 = function(name, value, usage) { return this.$val.Int64(name, value, usage); };
	FlagSet.ptr.prototype.UintVar = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newUintValue(value, p), name, usage);
	};
	FlagSet.prototype.UintVar = function(p, name, value, usage) { return this.$val.UintVar(p, name, value, usage); };
	FlagSet.ptr.prototype.Uint = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(0, ptrType$13);
		f.UintVar(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Uint = function(name, value, usage) { return this.$val.Uint(name, value, usage); };
	FlagSet.ptr.prototype.Uint64Var = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newUint64Value(value, p), name, usage);
	};
	FlagSet.prototype.Uint64Var = function(p, name, value, usage) { return this.$val.Uint64Var(p, name, value, usage); };
	FlagSet.ptr.prototype.Uint64 = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(new $Uint64(0, 0), ptrType$14);
		f.Uint64Var(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Uint64 = function(name, value, usage) { return this.$val.Uint64(name, value, usage); };
	FlagSet.ptr.prototype.StringVar = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newStringValue(value, p), name, usage);
	};
	FlagSet.prototype.StringVar = function(p, name, value, usage) { return this.$val.StringVar(p, name, value, usage); };
	FlagSet.ptr.prototype.String = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer("", ptrType$15);
		f.StringVar(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.String = function(name, value, usage) { return this.$val.String(name, value, usage); };
	String = $pkg.String = function(name, value, usage) {
		return $pkg.CommandLine.String(name, value, usage);
	};
	FlagSet.ptr.prototype.Float64Var = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newFloat64Value(value, p), name, usage);
	};
	FlagSet.prototype.Float64Var = function(p, name, value, usage) { return this.$val.Float64Var(p, name, value, usage); };
	FlagSet.ptr.prototype.Float64 = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(0, ptrType$16);
		f.Float64Var(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Float64 = function(name, value, usage) { return this.$val.Float64(name, value, usage); };
	FlagSet.ptr.prototype.DurationVar = function(p, name, value, usage) {
		var f;
		f = this;
		f.Var(newDurationValue(value, p), name, usage);
	};
	FlagSet.prototype.DurationVar = function(p, name, value, usage) { return this.$val.DurationVar(p, name, value, usage); };
	FlagSet.ptr.prototype.Duration = function(name, value, usage) {
		var f, p;
		f = this;
		p = $newDataPointer(new time.Duration(0, 0), ptrType$8);
		f.DurationVar(p, name, value, usage);
		return p;
	};
	FlagSet.prototype.Duration = function(name, value, usage) { return this.$val.Duration(name, value, usage); };
	Duration = $pkg.Duration = function(name, value, usage) {
		return $pkg.CommandLine.Duration(name, value, usage);
	};
	FlagSet.ptr.prototype.Var = function(value, name, usage) {
		var _entry, _key, _tuple, alreadythere, f, flag, msg;
		f = this;
		flag = new Flag.ptr(name, usage, value, value.String());
		_tuple = (_entry = f.formal[name], _entry !== undefined ? [_entry.v, true] : [ptrType$9.nil, false]); alreadythere = _tuple[1];
		if (alreadythere) {
			msg = "";
			if (f.name === "") {
				msg = fmt.Sprintf("flag redefined: %s", new sliceType([new $String(name)]));
			} else {
				msg = fmt.Sprintf("%s flag redefined: %s", new sliceType([new $String(f.name), new $String(name)]));
			}
			fmt.Fprintln(f.out(), new sliceType([new $String(msg)]));
			$panic(new $String(msg));
		}
		if (f.formal === false) {
			f.formal = new $Map();
		}
		_key = name; (f.formal || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: flag };
	};
	FlagSet.prototype.Var = function(value, name, usage) { return this.$val.Var(value, name, usage); };
	FlagSet.ptr.prototype.failf = function(format, a) {
		var err, f;
		f = this;
		err = fmt.Errorf(format, a);
		fmt.Fprintln(f.out(), new sliceType([err]));
		f.usage();
		return err;
	};
	FlagSet.prototype.failf = function(format, a) { return this.$val.failf(format, a); };
	FlagSet.ptr.prototype.usage = function() {
		var f;
		f = this;
		if (f.Usage === $throwNilPointerError) {
			if (f === $pkg.CommandLine) {
				$pkg.Usage();
			} else {
				defaultUsage(f);
			}
		} else {
			f.Usage();
		}
	};
	FlagSet.prototype.usage = function() { return this.$val.usage(); };
	FlagSet.ptr.prototype.parseOne = function() {
		var _entry, _key, _tmp, _tmp$1, _tuple, _tuple$1, alreadythere, err, err$1, f, flag, fv, has_value, i, m, name, num_minuses, ok, s, value, x$1, x$2;
		f = this;
		if (f.args.$length === 0) {
			return [false, $ifaceNil];
		}
		s = (x$1 = f.args, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0]));
		if ((s.length === 0) || !((s.charCodeAt(0) === 45)) || (s.length === 1)) {
			return [false, $ifaceNil];
		}
		num_minuses = 1;
		if (s.charCodeAt(1) === 45) {
			num_minuses = num_minuses + (1) >> 0;
			if (s.length === 2) {
				f.args = $subslice(f.args, 1);
				return [false, $ifaceNil];
			}
		}
		name = s.substring(num_minuses);
		if ((name.length === 0) || (name.charCodeAt(0) === 45) || (name.charCodeAt(0) === 61)) {
			return [false, f.failf("bad flag syntax: %s", new sliceType([new $String(s)]))];
		}
		f.args = $subslice(f.args, 1);
		has_value = false;
		value = "";
		i = 1;
		while (i < name.length) {
			if (name.charCodeAt(i) === 61) {
				value = name.substring((i + 1 >> 0));
				has_value = true;
				name = name.substring(0, i);
				break;
			}
			i = i + (1) >> 0;
		}
		m = f.formal;
		_tuple = (_entry = m[name], _entry !== undefined ? [_entry.v, true] : [ptrType$9.nil, false]); flag = _tuple[0]; alreadythere = _tuple[1];
		if (!alreadythere) {
			if (name === "help" || name === "h") {
				f.usage();
				return [false, $pkg.ErrHelp];
			}
			return [false, f.failf("flag provided but not defined: -%s", new sliceType([new $String(name)]))];
		}
		_tuple$1 = $assertType(flag.Value, boolFlag, true); fv = _tuple$1[0]; ok = _tuple$1[1];
		if (ok && fv.IsBoolFlag()) {
			if (has_value) {
				err = fv.Set(value);
				if (!($interfaceIsEqual(err, $ifaceNil))) {
					return [false, f.failf("invalid boolean value %q for -%s: %v", new sliceType([new $String(value), new $String(name), err]))];
				}
			} else {
				fv.Set("true");
			}
		} else {
			if (!has_value && f.args.$length > 0) {
				has_value = true;
				_tmp = (x$2 = f.args, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0])); _tmp$1 = $subslice(f.args, 1); value = _tmp; f.args = _tmp$1;
			}
			if (!has_value) {
				return [false, f.failf("flag needs an argument: -%s", new sliceType([new $String(name)]))];
			}
			err$1 = flag.Value.Set(value);
			if (!($interfaceIsEqual(err$1, $ifaceNil))) {
				return [false, f.failf("invalid value %q for flag -%s: %v", new sliceType([new $String(value), new $String(name), err$1]))];
			}
		}
		if (f.actual === false) {
			f.actual = new $Map();
		}
		_key = name; (f.actual || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: flag };
		return [true, $ifaceNil];
	};
	FlagSet.prototype.parseOne = function() { return this.$val.parseOne(); };
	FlagSet.ptr.prototype.Parse = function(arguments$1) {
		var _ref, _tuple, err, f, seen;
		f = this;
		f.parsed = true;
		f.args = arguments$1;
		while (true) {
			_tuple = f.parseOne(); seen = _tuple[0]; err = _tuple[1];
			if (seen) {
				continue;
			}
			if ($interfaceIsEqual(err, $ifaceNil)) {
				break;
			}
			_ref = f.errorHandling;
			if (_ref === 0) {
				return err;
			} else if (_ref === 1) {
				os.Exit(2);
			} else if (_ref === 2) {
				$panic(err);
			}
		}
		return $ifaceNil;
	};
	FlagSet.prototype.Parse = function(arguments$1) { return this.$val.Parse(arguments$1); };
	FlagSet.ptr.prototype.Parsed = function() {
		var f;
		f = this;
		return f.parsed;
	};
	FlagSet.prototype.Parsed = function() { return this.$val.Parsed(); };
	NewFlagSet = $pkg.NewFlagSet = function(name, errorHandling) {
		var f;
		f = new FlagSet.ptr($throwNilPointerError, name, false, false, false, sliceType$2.nil, errorHandling, $ifaceNil);
		return f;
	};
	FlagSet.ptr.prototype.Init = function(name, errorHandling) {
		var f;
		f = this;
		f.name = name;
		f.errorHandling = errorHandling;
	};
	FlagSet.prototype.Init = function(name, errorHandling) { return this.$val.Init(name, errorHandling); };
	ptrType.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "IsBoolFlag", name: "IsBoolFlag", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$1.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$2.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$3.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$4.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$5.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$6.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$7.methods = [{prop: "Get", name: "Get", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$17.methods = [{prop: "Arg", name: "Arg", pkg: "", type: $funcType([$Int], [$String], false)}, {prop: "Args", name: "Args", pkg: "", type: $funcType([], [sliceType$2], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([$String, $Bool, $String], [ptrType$10], false)}, {prop: "BoolVar", name: "BoolVar", pkg: "", type: $funcType([ptrType$10, $String, $Bool, $String], [], false)}, {prop: "Duration", name: "Duration", pkg: "", type: $funcType([$String, time.Duration, $String], [ptrType$8], false)}, {prop: "DurationVar", name: "DurationVar", pkg: "", type: $funcType([ptrType$8, $String, time.Duration, $String], [], false)}, {prop: "Float64", name: "Float64", pkg: "", type: $funcType([$String, $Float64, $String], [ptrType$16], false)}, {prop: "Float64Var", name: "Float64Var", pkg: "", type: $funcType([ptrType$16, $String, $Float64, $String], [], false)}, {prop: "Init", name: "Init", pkg: "", type: $funcType([$String, ErrorHandling], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([$String, $Int, $String], [ptrType$11], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([$String, $Int64, $String], [ptrType$12], false)}, {prop: "Int64Var", name: "Int64Var", pkg: "", type: $funcType([ptrType$12, $String, $Int64, $String], [], false)}, {prop: "IntVar", name: "IntVar", pkg: "", type: $funcType([ptrType$11, $String, $Int, $String], [], false)}, {prop: "Lookup", name: "Lookup", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "NArg", name: "NArg", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NFlag", name: "NFlag", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Parse", name: "Parse", pkg: "", type: $funcType([sliceType$2], [$error], false)}, {prop: "Parsed", name: "Parsed", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "PrintDefaults", name: "PrintDefaults", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $String], [$error], false)}, {prop: "SetOutput", name: "SetOutput", pkg: "", type: $funcType([io.Writer], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([$String, $String, $String], [ptrType$15], false)}, {prop: "StringVar", name: "StringVar", pkg: "", type: $funcType([ptrType$15, $String, $String, $String], [], false)}, {prop: "Uint", name: "Uint", pkg: "", type: $funcType([$String, $Uint, $String], [ptrType$13], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([$String, $Uint64, $String], [ptrType$14], false)}, {prop: "Uint64Var", name: "Uint64Var", pkg: "", type: $funcType([ptrType$14, $String, $Uint64, $String], [], false)}, {prop: "UintVar", name: "UintVar", pkg: "", type: $funcType([ptrType$13, $String, $Uint, $String], [], false)}, {prop: "Var", name: "Var", pkg: "", type: $funcType([Value, $String, $String], [], false)}, {prop: "Visit", name: "Visit", pkg: "", type: $funcType([funcType], [], false)}, {prop: "VisitAll", name: "VisitAll", pkg: "", type: $funcType([funcType], [], false)}, {prop: "failf", name: "failf", pkg: "flag", type: $funcType([$String, sliceType], [$error], true)}, {prop: "out", name: "out", pkg: "flag", type: $funcType([], [io.Writer], false)}, {prop: "parseOne", name: "parseOne", pkg: "flag", type: $funcType([], [$Bool, $error], false)}, {prop: "usage", name: "usage", pkg: "flag", type: $funcType([], [], false)}];
	boolFlag.init([{prop: "IsBoolFlag", name: "IsBoolFlag", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}]);
	Value.init([{prop: "Set", name: "Set", pkg: "", type: $funcType([$String], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}]);
	FlagSet.init([{prop: "Usage", name: "Usage", pkg: "", type: funcType$1, tag: ""}, {prop: "name", name: "name", pkg: "flag", type: $String, tag: ""}, {prop: "parsed", name: "parsed", pkg: "flag", type: $Bool, tag: ""}, {prop: "actual", name: "actual", pkg: "flag", type: mapType, tag: ""}, {prop: "formal", name: "formal", pkg: "flag", type: mapType, tag: ""}, {prop: "args", name: "args", pkg: "flag", type: sliceType$2, tag: ""}, {prop: "errorHandling", name: "errorHandling", pkg: "flag", type: ErrorHandling, tag: ""}, {prop: "output", name: "output", pkg: "flag", type: io.Writer, tag: ""}]);
	Flag.init([{prop: "Name", name: "Name", pkg: "", type: $String, tag: ""}, {prop: "Usage", name: "Usage", pkg: "", type: $String, tag: ""}, {prop: "Value", name: "Value", pkg: "", type: Value, tag: ""}, {prop: "DefValue", name: "DefValue", pkg: "", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_flag = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = fmt.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = os.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = sort.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.ErrHelp = errors.New("flag: help requested");
		$pkg.CommandLine = NewFlagSet((x = os.Args, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])), 1);
		$pkg.Usage = (function() {
			var x$1;
			fmt.Fprintf(os.Stderr, "Usage of %s:\n", new sliceType([new $String((x$1 = os.Args, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0])))]));
			PrintDefaults();
		});
		/* */ } return; } }; $init_flag.$blocking = true; return $init_flag;
	};
	return $pkg;
})();
$packages["runtime/pprof"] = (function() {
	var $pkg = {}, io, sync;
	io = $packages["io"];
	sync = $packages["sync"];
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_pprof = function() { while (true) { switch ($s) { case 0:
		$r = io.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_pprof.$blocking = true; return $init_pprof;
	};
	return $pkg;
})();
$packages["testing"] = (function() {
	var $pkg = {}, bytes, flag, fmt, nosync, io, os, runtime, pprof, strconv, strings, atomic, time, matchBenchmarks, benchTime, benchmarkMemory, short$1, outputDir, chatty, coverProfile, match, memProfile, memProfileRate, cpuProfile, blockProfile, blockProfileRate, timeout, cpuListStr, parallel;
	bytes = $packages["bytes"];
	flag = $packages["flag"];
	fmt = $packages["fmt"];
	nosync = $packages["github.com/gopherjs/gopherjs/nosync"];
	io = $packages["io"];
	os = $packages["os"];
	runtime = $packages["runtime"];
	pprof = $packages["runtime/pprof"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
	atomic = $packages["sync/atomic"];
	time = $packages["time"];
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_testing = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = flag.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = fmt.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = nosync.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = os.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = pprof.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 9; case 9: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 10; case 10: if ($r && $r.$blocking) { $r = $r(); }
		$r = atomic.$init($BLOCKING); /* */ $s = 11; case 11: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 12; case 12: if ($r && $r.$blocking) { $r = $r(); }
		matchBenchmarks = flag.String("test.bench", "", "regular expression to select benchmarks to run");
		benchTime = flag.Duration("test.benchtime", new time.Duration(0, 1000000000), "approximate run time for each benchmark");
		benchmarkMemory = flag.Bool("test.benchmem", false, "print memory allocations for benchmarks");
		short$1 = flag.Bool("test.short", false, "run smaller test suite to save time");
		outputDir = flag.String("test.outputdir", "", "directory in which to write profiles");
		chatty = flag.Bool("test.v", false, "verbose: print additional output");
		coverProfile = flag.String("test.coverprofile", "", "write a coverage profile to the named file after execution");
		match = flag.String("test.run", "", "regular expression to select tests and examples to run");
		memProfile = flag.String("test.memprofile", "", "write a memory profile to the named file after execution");
		memProfileRate = flag.Int("test.memprofilerate", 0, "if >=0, sets runtime.MemProfileRate");
		cpuProfile = flag.String("test.cpuprofile", "", "write a cpu profile to the named file during execution");
		blockProfile = flag.String("test.blockprofile", "", "write a goroutine blocking profile to the named file after execution");
		blockProfileRate = flag.Int("test.blockprofilerate", 1, "if >= 0, calls runtime.SetBlockProfileRate()");
		timeout = flag.Duration("test.timeout", new time.Duration(0, 0), "if positive, sets an aggregate time limit for all tests");
		cpuListStr = flag.String("test.cpu", "", "comma-separated list of number of CPUs to use for each test");
		parallel = flag.Int("test.parallel", runtime.GOMAXPROCS(0), "maximum test parallelism");
		/* */ } return; } }; $init_testing.$blocking = true; return $init_testing;
	};
	return $pkg;
})();
$packages["encoding/base64"] = (function() {
	var $pkg = {}, bytes, io, strconv, strings, testing, Encoding, CorruptInputError, sliceType$1, ptrType, arrayType$2, arrayType$4, ptrType$2, removeNewlinesMapper, NewEncoding;
	bytes = $packages["bytes"];
	io = $packages["io"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
	testing = $packages["testing"];
	Encoding = $pkg.Encoding = $newType(0, $kindStruct, "base64.Encoding", "Encoding", "encoding/base64", function(encode_, decodeMap_) {
		this.$val = this;
		this.encode = encode_ !== undefined ? encode_ : "";
		this.decodeMap = decodeMap_ !== undefined ? decodeMap_ : arrayType$4.zero();
	});
	CorruptInputError = $pkg.CorruptInputError = $newType(8, $kindInt64, "base64.CorruptInputError", "CorruptInputError", "encoding/base64", null);
		sliceType$1 = $sliceType($Uint8);
		ptrType = $ptrType(Encoding);
		arrayType$2 = $arrayType($Uint8, 4);
		arrayType$4 = $arrayType($Uint8, 256);
		ptrType$2 = $ptrType(CorruptInputError);
	NewEncoding = $pkg.NewEncoding = function(encoder$1) {
		var e, i, i$1, x, x$1, x$2;
		e = new Encoding.ptr();
		e.encode = encoder$1;
		i = 0;
		while (i < 256) {
			(x = e.decodeMap, (i < 0 || i >= x.length) ? $throwRuntimeError("index out of range") : x[i] = 255);
			i = i + (1) >> 0;
		}
		i$1 = 0;
		while (i$1 < encoder$1.length) {
			(x$1 = e.decodeMap, x$2 = encoder$1.charCodeAt(i$1), (x$2 < 0 || x$2 >= x$1.length) ? $throwRuntimeError("index out of range") : x$1[x$2] = (i$1 << 24 >>> 24));
			i$1 = i$1 + (1) >> 0;
		}
		return e;
	};
	Encoding.ptr.prototype.Encode = function(dst, src) {
		var _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, b0, b1, b2, b3, enc;
		enc = this;
		if (src.$length === 0) {
			return;
		}
		while (src.$length > 0) {
			_tmp = 0; _tmp$1 = 0; _tmp$2 = 0; _tmp$3 = 0; b0 = _tmp; b1 = _tmp$1; b2 = _tmp$2; b3 = _tmp$3;
			_ref = src.$length;
			if (_ref === 2) {
				b2 = (b2 | (((((((1 < 0 || 1 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 1]) << 2 << 24 >>> 24)) & 63) >>> 0))) >>> 0;
				b1 = ((1 < 0 || 1 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 1]) >>> 4 << 24 >>> 24;
				b1 = (b1 | (((((((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) << 4 << 24 >>> 24)) & 63) >>> 0))) >>> 0;
				b0 = ((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) >>> 2 << 24 >>> 24;
			} else if (_ref === 1) {
				b1 = (b1 | (((((((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) << 4 << 24 >>> 24)) & 63) >>> 0))) >>> 0;
				b0 = ((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) >>> 2 << 24 >>> 24;
			} else {
				b3 = (((2 < 0 || 2 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 2]) & 63) >>> 0;
				b2 = ((2 < 0 || 2 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 2]) >>> 6 << 24 >>> 24;
				b2 = (b2 | (((((((1 < 0 || 1 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 1]) << 2 << 24 >>> 24)) & 63) >>> 0))) >>> 0;
				b1 = ((1 < 0 || 1 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 1]) >>> 4 << 24 >>> 24;
				b1 = (b1 | (((((((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) << 4 << 24 >>> 24)) & 63) >>> 0))) >>> 0;
				b0 = ((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) >>> 2 << 24 >>> 24;
			}
			(0 < 0 || 0 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 0] = enc.encode.charCodeAt(b0);
			(1 < 0 || 1 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 1] = enc.encode.charCodeAt(b1);
			(2 < 0 || 2 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 2] = enc.encode.charCodeAt(b2);
			(3 < 0 || 3 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 3] = enc.encode.charCodeAt(b3);
			if (src.$length < 3) {
				(3 < 0 || 3 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 3] = 61;
				if (src.$length < 2) {
					(2 < 0 || 2 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 2] = 61;
				}
				break;
			}
			src = $subslice(src, 3);
			dst = $subslice(dst, 4);
		}
	};
	Encoding.prototype.Encode = function(dst, src) { return this.$val.Encode(dst, src); };
	Encoding.ptr.prototype.EncodeToString = function(src) {
		var buf, enc;
		enc = this;
		buf = $makeSlice(sliceType$1, enc.EncodedLen(src.$length));
		enc.Encode(buf, src);
		return $bytesToString(buf);
	};
	Encoding.prototype.EncodeToString = function(src) { return this.$val.EncodeToString(src); };
	Encoding.ptr.prototype.EncodedLen = function(n) {
		var _q, enc;
		enc = this;
		return (_q = ((n + 2 >> 0)) / 3, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) * 4 >> 0;
	};
	Encoding.prototype.EncodedLen = function(n) { return this.$val.EncodedLen(n); };
	CorruptInputError.prototype.Error = function() {
		var e;
		e = this;
		return "illegal base64 data at input byte " + strconv.FormatInt(new $Int64(e.$high, e.$low), 10);
	};
	$ptrType(CorruptInputError).prototype.Error = function() { return this.$get().Error(); };
	Encoding.ptr.prototype.decode = function(dst, src) {
		var _i, _ref, _ref$1, _ref$2, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, dbuf, dlen, enc, end = false, err = $ifaceNil, in$1, j, n = 0, olen, x;
		enc = this;
		olen = src.$length;
		while (src.$length > 0 && !end) {
			dbuf = $clone(arrayType$2.zero(), arrayType$2);
			dlen = 4;
			_ref = dbuf;
			_i = 0;
			while (_i < 4) {
				j = _i;
				if (src.$length === 0) {
					_tmp = n; _tmp$1 = false; _tmp$2 = new CorruptInputError(0, ((olen - src.$length >> 0) - j >> 0)); n = _tmp; end = _tmp$1; err = _tmp$2;
					return [n, end, err];
				}
				in$1 = ((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]);
				src = $subslice(src, 1);
				if (in$1 === 61) {
					_ref$1 = j;
					if (_ref$1 === 0 || _ref$1 === 1) {
						_tmp$3 = n; _tmp$4 = false; _tmp$5 = new CorruptInputError(0, ((olen - src.$length >> 0) - 1 >> 0)); n = _tmp$3; end = _tmp$4; err = _tmp$5;
						return [n, end, err];
					} else if (_ref$1 === 2) {
						if (src.$length === 0) {
							_tmp$6 = n; _tmp$7 = false; _tmp$8 = new CorruptInputError(0, olen); n = _tmp$6; end = _tmp$7; err = _tmp$8;
							return [n, end, err];
						}
						if (!((((0 < 0 || 0 >= src.$length) ? $throwRuntimeError("index out of range") : src.$array[src.$offset + 0]) === 61))) {
							_tmp$9 = n; _tmp$10 = false; _tmp$11 = new CorruptInputError(0, ((olen - src.$length >> 0) - 1 >> 0)); n = _tmp$9; end = _tmp$10; err = _tmp$11;
							return [n, end, err];
						}
						src = $subslice(src, 1);
					}
					if (src.$length > 0) {
						err = new CorruptInputError(0, (olen - src.$length >> 0));
					}
					_tmp$12 = j; _tmp$13 = true; dlen = _tmp$12; end = _tmp$13;
					break;
				}
				(j < 0 || j >= dbuf.length) ? $throwRuntimeError("index out of range") : dbuf[j] = (x = enc.decodeMap, ((in$1 < 0 || in$1 >= x.length) ? $throwRuntimeError("index out of range") : x[in$1]));
				if (((j < 0 || j >= dbuf.length) ? $throwRuntimeError("index out of range") : dbuf[j]) === 255) {
					_tmp$14 = n; _tmp$15 = false; _tmp$16 = new CorruptInputError(0, ((olen - src.$length >> 0) - 1 >> 0)); n = _tmp$14; end = _tmp$15; err = _tmp$16;
					return [n, end, err];
				}
				_i++;
			}
			_ref$2 = dlen;
			if (_ref$2 === 4) {
				(2 < 0 || 2 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 2] = ((dbuf[2] << 6 << 24 >>> 24) | dbuf[3]) >>> 0;
				(1 < 0 || 1 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 1] = ((dbuf[1] << 4 << 24 >>> 24) | (dbuf[2] >>> 2 << 24 >>> 24)) >>> 0;
				(0 < 0 || 0 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 0] = ((dbuf[0] << 2 << 24 >>> 24) | (dbuf[1] >>> 4 << 24 >>> 24)) >>> 0;
			} else if (_ref$2 === 3) {
				(1 < 0 || 1 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 1] = ((dbuf[1] << 4 << 24 >>> 24) | (dbuf[2] >>> 2 << 24 >>> 24)) >>> 0;
				(0 < 0 || 0 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 0] = ((dbuf[0] << 2 << 24 >>> 24) | (dbuf[1] >>> 4 << 24 >>> 24)) >>> 0;
			} else if (_ref$2 === 2) {
				(0 < 0 || 0 >= dst.$length) ? $throwRuntimeError("index out of range") : dst.$array[dst.$offset + 0] = ((dbuf[0] << 2 << 24 >>> 24) | (dbuf[1] >>> 4 << 24 >>> 24)) >>> 0;
			}
			dst = $subslice(dst, 3);
			n = n + ((dlen - 1 >> 0)) >> 0;
		}
		_tmp$17 = n; _tmp$18 = end; _tmp$19 = err; n = _tmp$17; end = _tmp$18; err = _tmp$19;
		return [n, end, err];
	};
	Encoding.prototype.decode = function(dst, src) { return this.$val.decode(dst, src); };
	Encoding.ptr.prototype.Decode = function(dst, src) {
		var _tuple, enc, err = $ifaceNil, n = 0;
		enc = this;
		src = bytes.Map(removeNewlinesMapper, src);
		_tuple = enc.decode(dst, src); n = _tuple[0]; err = _tuple[2];
		return [n, err];
	};
	Encoding.prototype.Decode = function(dst, src) { return this.$val.Decode(dst, src); };
	Encoding.ptr.prototype.DecodeString = function(s) {
		var _tuple, dbuf, enc, err, n;
		enc = this;
		s = strings.Map(removeNewlinesMapper, s);
		dbuf = $makeSlice(sliceType$1, enc.DecodedLen(s.length));
		_tuple = enc.decode(dbuf, new sliceType$1($stringToBytes(s))); n = _tuple[0]; err = _tuple[2];
		return [$subslice(dbuf, 0, n), err];
	};
	Encoding.prototype.DecodeString = function(s) { return this.$val.DecodeString(s); };
	Encoding.ptr.prototype.DecodedLen = function(n) {
		var _q, enc;
		enc = this;
		return (_q = n / 4, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) * 3 >> 0;
	};
	Encoding.prototype.DecodedLen = function(n) { return this.$val.DecodedLen(n); };
	ptrType.methods = [{prop: "Decode", name: "Decode", pkg: "", type: $funcType([sliceType$1, sliceType$1], [$Int, $error], false)}, {prop: "DecodeString", name: "DecodeString", pkg: "", type: $funcType([$String], [sliceType$1, $error], false)}, {prop: "DecodedLen", name: "DecodedLen", pkg: "", type: $funcType([$Int], [$Int], false)}, {prop: "Encode", name: "Encode", pkg: "", type: $funcType([sliceType$1, sliceType$1], [], false)}, {prop: "EncodeToString", name: "EncodeToString", pkg: "", type: $funcType([sliceType$1], [$String], false)}, {prop: "EncodedLen", name: "EncodedLen", pkg: "", type: $funcType([$Int], [$Int], false)}, {prop: "decode", name: "decode", pkg: "encoding/base64", type: $funcType([sliceType$1, sliceType$1], [$Int, $Bool, $error], false)}];
	CorruptInputError.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$2.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	Encoding.init([{prop: "encode", name: "encode", pkg: "encoding/base64", type: $String, tag: ""}, {prop: "decodeMap", name: "decodeMap", pkg: "encoding/base64", type: arrayType$4, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_base64 = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = testing.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.StdEncoding = NewEncoding("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
		$pkg.URLEncoding = NewEncoding("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_");
		removeNewlinesMapper = (function(r) {
			if ((r === 13) || (r === 10)) {
				return -1;
			}
			return r;
		});
		/* */ } return; } }; $init_base64.$blocking = true; return $init_base64;
	};
	return $pkg;
})();
$packages["unicode/utf16"] = (function() {
	var $pkg = {}, IsSurrogate, DecodeRune;
	IsSurrogate = $pkg.IsSurrogate = function(r) {
		return 55296 <= r && r < 57344;
	};
	DecodeRune = $pkg.DecodeRune = function(r1, r2) {
		if (55296 <= r1 && r1 < 56320 && 56320 <= r2 && r2 < 57344) {
			return ((((r1 - 55296 >> 0)) << 10 >> 0) | ((r2 - 56320 >> 0))) + 65536 >> 0;
		}
		return 65533;
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_utf16 = function() { while (true) { switch ($s) { case 0:
		/* */ } return; } }; $init_utf16.$blocking = true; return $init_utf16;
	};
	return $pkg;
})();
$packages["encoding/json"] = (function() {
	var $pkg = {}, bytes, encoding, base64, errors, fmt, nosync, io, math, reflect, runtime, sort, strconv, strings, unicode, utf16, utf8, Unmarshaler, UnmarshalTypeError, InvalidUnmarshalError, Number, decodeState, unquotedValue, Marshaler, field, byName, byIndex, SyntaxError, scanner, tagOptions, sliceType, mapType$1, structType$1, sliceType$1, ptrType, ptrType$1, ptrType$2, mapType$2, ptrType$3, sliceType$2, sliceType$4, ptrType$6, ptrType$8, ptrType$9, ptrType$10, funcType, ptrType$23, ptrType$24, ptrType$25, ptrType$26, funcType$1, ptrType$29, errPhase, nullLiteral, numberType, byteSliceType, marshalerType, textMarshalerType, fieldCache, Unmarshal, getu4, unquote, unquoteBytes, isValidTag, fillField, typeFields, dominantField, cachedTypeFields, foldFunc, equalFoldRight, asciiEqualFold, simpleLetterEqualFold, checkValid, nextValue, isSpace, stateBeginValueOrEmpty, stateBeginValue, stateBeginStringOrEmpty, stateBeginString, stateEndValue, stateEndTop, stateInString, stateInStringEsc, stateInStringEscU, stateInStringEscU1, stateInStringEscU12, stateInStringEscU123, stateNeg, state1, state0, stateDot, stateDot0, stateE, stateESign, stateE0, stateT, stateTr, stateTru, stateF, stateFa, stateFal, stateFals, stateN, stateNu, stateNul, stateError, quoteChar, stateRedo, parseTag;
	bytes = $packages["bytes"];
	encoding = $packages["encoding"];
	base64 = $packages["encoding/base64"];
	errors = $packages["errors"];
	fmt = $packages["fmt"];
	nosync = $packages["github.com/gopherjs/gopherjs/nosync"];
	io = $packages["io"];
	math = $packages["math"];
	reflect = $packages["reflect"];
	runtime = $packages["runtime"];
	sort = $packages["sort"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
	unicode = $packages["unicode"];
	utf16 = $packages["unicode/utf16"];
	utf8 = $packages["unicode/utf8"];
	Unmarshaler = $pkg.Unmarshaler = $newType(8, $kindInterface, "json.Unmarshaler", "Unmarshaler", "encoding/json", null);
	UnmarshalTypeError = $pkg.UnmarshalTypeError = $newType(0, $kindStruct, "json.UnmarshalTypeError", "UnmarshalTypeError", "encoding/json", function(Value_, Type_) {
		this.$val = this;
		this.Value = Value_ !== undefined ? Value_ : "";
		this.Type = Type_ !== undefined ? Type_ : $ifaceNil;
	});
	InvalidUnmarshalError = $pkg.InvalidUnmarshalError = $newType(0, $kindStruct, "json.InvalidUnmarshalError", "InvalidUnmarshalError", "encoding/json", function(Type_) {
		this.$val = this;
		this.Type = Type_ !== undefined ? Type_ : $ifaceNil;
	});
	Number = $pkg.Number = $newType(8, $kindString, "json.Number", "Number", "encoding/json", null);
	decodeState = $pkg.decodeState = $newType(0, $kindStruct, "json.decodeState", "decodeState", "encoding/json", function(data_, off_, scan_, nextscan_, savedError_, useNumber_) {
		this.$val = this;
		this.data = data_ !== undefined ? data_ : sliceType$1.nil;
		this.off = off_ !== undefined ? off_ : 0;
		this.scan = scan_ !== undefined ? scan_ : new scanner.ptr();
		this.nextscan = nextscan_ !== undefined ? nextscan_ : new scanner.ptr();
		this.savedError = savedError_ !== undefined ? savedError_ : $ifaceNil;
		this.useNumber = useNumber_ !== undefined ? useNumber_ : false;
	});
	unquotedValue = $pkg.unquotedValue = $newType(0, $kindStruct, "json.unquotedValue", "unquotedValue", "encoding/json", function() {
		this.$val = this;
	});
	Marshaler = $pkg.Marshaler = $newType(8, $kindInterface, "json.Marshaler", "Marshaler", "encoding/json", null);
	field = $pkg.field = $newType(0, $kindStruct, "json.field", "field", "encoding/json", function(name_, nameBytes_, equalFold_, tag_, index_, typ_, omitEmpty_, quoted_) {
		this.$val = this;
		this.name = name_ !== undefined ? name_ : "";
		this.nameBytes = nameBytes_ !== undefined ? nameBytes_ : sliceType$1.nil;
		this.equalFold = equalFold_ !== undefined ? equalFold_ : $throwNilPointerError;
		this.tag = tag_ !== undefined ? tag_ : false;
		this.index = index_ !== undefined ? index_ : sliceType$4.nil;
		this.typ = typ_ !== undefined ? typ_ : $ifaceNil;
		this.omitEmpty = omitEmpty_ !== undefined ? omitEmpty_ : false;
		this.quoted = quoted_ !== undefined ? quoted_ : false;
	});
	byName = $pkg.byName = $newType(12, $kindSlice, "json.byName", "byName", "encoding/json", null);
	byIndex = $pkg.byIndex = $newType(12, $kindSlice, "json.byIndex", "byIndex", "encoding/json", null);
	SyntaxError = $pkg.SyntaxError = $newType(0, $kindStruct, "json.SyntaxError", "SyntaxError", "encoding/json", function(msg_, Offset_) {
		this.$val = this;
		this.msg = msg_ !== undefined ? msg_ : "";
		this.Offset = Offset_ !== undefined ? Offset_ : new $Int64(0, 0);
	});
	scanner = $pkg.scanner = $newType(0, $kindStruct, "json.scanner", "scanner", "encoding/json", function(step_, endTop_, parseState_, err_, redo_, redoCode_, redoState_, bytes_) {
		this.$val = this;
		this.step = step_ !== undefined ? step_ : $throwNilPointerError;
		this.endTop = endTop_ !== undefined ? endTop_ : false;
		this.parseState = parseState_ !== undefined ? parseState_ : sliceType$4.nil;
		this.err = err_ !== undefined ? err_ : $ifaceNil;
		this.redo = redo_ !== undefined ? redo_ : false;
		this.redoCode = redoCode_ !== undefined ? redoCode_ : 0;
		this.redoState = redoState_ !== undefined ? redoState_ : $throwNilPointerError;
		this.bytes = bytes_ !== undefined ? bytes_ : new $Int64(0, 0);
	});
	tagOptions = $pkg.tagOptions = $newType(8, $kindString, "json.tagOptions", "tagOptions", "encoding/json", null);
		sliceType = $sliceType(field);
		mapType$1 = $mapType(reflect.Type, sliceType);
		structType$1 = $structType([{prop: "RWMutex", name: "", pkg: "", type: nosync.RWMutex, tag: ""}, {prop: "m", name: "m", pkg: "encoding/json", type: mapType$1, tag: ""}]);
		sliceType$1 = $sliceType($Uint8);
		ptrType = $ptrType(Marshaler);
		ptrType$1 = $ptrType(encoding.TextMarshaler);
		ptrType$2 = $ptrType(reflect.rtype);
		mapType$2 = $mapType($String, $emptyInterface);
		ptrType$3 = $ptrType(field);
		sliceType$2 = $sliceType($emptyInterface);
		sliceType$4 = $sliceType($Int);
		ptrType$6 = $ptrType(UnmarshalTypeError);
		ptrType$8 = $ptrType(InvalidUnmarshalError);
		ptrType$9 = $ptrType(Number);
		ptrType$10 = $ptrType(decodeState);
		funcType = $funcType([sliceType$1, sliceType$1], [$Bool], false);
		ptrType$23 = $ptrType(byName);
		ptrType$24 = $ptrType(byIndex);
		ptrType$25 = $ptrType(SyntaxError);
		ptrType$26 = $ptrType(scanner);
		funcType$1 = $funcType([ptrType$26, $Int], [$Int], false);
		ptrType$29 = $ptrType(tagOptions);
	Unmarshal = $pkg.Unmarshal = function(data, v) {
		var d, err;
		d = $clone(new decodeState.ptr(), decodeState);
		err = checkValid(data, d.scan);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		d.init(data);
		return d.unmarshal(v);
	};
	UnmarshalTypeError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return "json: cannot unmarshal " + e.Value + " into Go value of type " + e.Type.String();
	};
	UnmarshalTypeError.prototype.Error = function() { return this.$val.Error(); };
	InvalidUnmarshalError.ptr.prototype.Error = function() {
		var e;
		e = this;
		if ($interfaceIsEqual(e.Type, $ifaceNil)) {
			return "json: Unmarshal(nil)";
		}
		if (!((e.Type.Kind() === 22))) {
			return "json: Unmarshal(non-pointer " + e.Type.String() + ")";
		}
		return "json: Unmarshal(nil " + e.Type.String() + ")";
	};
	InvalidUnmarshalError.prototype.Error = function() { return this.$val.Error(); };
	decodeState.ptr.prototype.unmarshal = function(v) {
		var $deferred = [], $err = null, d, err = $ifaceNil, rv;
		/* */ try { $deferFrames.push($deferred);
		d = this;
		$deferred.push([(function() {
			var _tuple, ok, r;
			r = $recover();
			if (!($interfaceIsEqual(r, $ifaceNil))) {
				_tuple = $assertType(r, runtime.Error, true); ok = _tuple[1];
				if (ok) {
					$panic(r);
				}
				err = $assertType(r, $error);
			}
		}), []]);
		rv = reflect.ValueOf(v);
		if (!((rv.Kind() === 22)) || rv.IsNil()) {
			err = new InvalidUnmarshalError.ptr(reflect.TypeOf(v));
			return err;
		}
		d.scan.reset();
		d.value(rv);
		err = d.savedError;
		return err;
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return err; }
	};
	decodeState.prototype.unmarshal = function(v) { return this.$val.unmarshal(v); };
	Number.prototype.String = function() {
		var n;
		n = this.$val;
		return n;
	};
	$ptrType(Number).prototype.String = function() { return new Number(this.$get()).String(); };
	Number.prototype.Float64 = function() {
		var n;
		n = this.$val;
		return strconv.ParseFloat(n, 64);
	};
	$ptrType(Number).prototype.Float64 = function() { return new Number(this.$get()).Float64(); };
	Number.prototype.Int64 = function() {
		var n;
		n = this.$val;
		return strconv.ParseInt(n, 10, 64);
	};
	$ptrType(Number).prototype.Int64 = function() { return new Number(this.$get()).Int64(); };
	decodeState.ptr.prototype.init = function(data) {
		var d;
		d = this;
		d.data = data;
		d.off = 0;
		d.savedError = $ifaceNil;
		return d;
	};
	decodeState.prototype.init = function(data) { return this.$val.init(data); };
	decodeState.ptr.prototype.error = function(err) {
		var d;
		d = this;
		$panic(err);
	};
	decodeState.prototype.error = function(err) { return this.$val.error(err); };
	decodeState.ptr.prototype.saveError = function(err) {
		var d;
		d = this;
		if ($interfaceIsEqual(d.savedError, $ifaceNil)) {
			d.savedError = err;
		}
	};
	decodeState.prototype.saveError = function(err) { return this.$val.saveError(err); };
	decodeState.ptr.prototype.next = function() {
		var _tuple, c, d, err, item, rest, x, x$1;
		d = this;
		c = (x = d.data, x$1 = d.off, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		_tuple = nextValue($subslice(d.data, d.off), d.nextscan); item = _tuple[0]; rest = _tuple[1]; err = _tuple[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			d.error(err);
		}
		d.off = d.data.$length - rest.$length >> 0;
		if (c === 123) {
			d.scan.step(d.scan, 125);
		} else {
			d.scan.step(d.scan, 93);
		}
		return item;
	};
	decodeState.prototype.next = function() { return this.$val.next(); };
	decodeState.ptr.prototype.scanWhile = function(op) {
		var c, d, newOp, x, x$1;
		d = this;
		newOp = 0;
		while (true) {
			if (d.off >= d.data.$length) {
				newOp = d.scan.eof();
				d.off = d.data.$length + 1 >> 0;
			} else {
				c = ((x = d.data, x$1 = d.off, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])) >> 0);
				d.off = d.off + (1) >> 0;
				newOp = d.scan.step(d.scan, c);
			}
			if (!((newOp === op))) {
				break;
			}
		}
		return newOp;
	};
	decodeState.prototype.scanWhile = function(op) { return this.$val.scanWhile(op); };
	decodeState.ptr.prototype.value = function(v) {
		var _ref, _tuple, d, err, n, op, rest, x, x$1;
		d = this;
		v = v;
		if (!v.IsValid()) {
			_tuple = nextValue($subslice(d.data, d.off), d.nextscan); rest = _tuple[1]; err = _tuple[2];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				d.error(err);
			}
			d.off = d.data.$length - rest.$length >> 0;
			if (d.scan.redo) {
				d.scan.redo = false;
				d.scan.step = stateBeginValue;
			}
			d.scan.step(d.scan, 34);
			d.scan.step(d.scan, 34);
			n = d.scan.parseState.$length;
			if (n > 0 && ((x = d.scan.parseState, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])) === 0)) {
				d.scan.step(d.scan, 58);
				d.scan.step(d.scan, 34);
				d.scan.step(d.scan, 34);
				d.scan.step(d.scan, 125);
			}
			return;
		}
		op = d.scanWhile(9);
		_ref = op;
		if (_ref === 6) {
			d.array(v);
		} else if (_ref === 2) {
			d.object(v);
		} else if (_ref === 1) {
			d.literal(v);
		} else {
			d.error(errPhase);
		}
	};
	decodeState.prototype.value = function(v) { return this.$val.value(v); };
	decodeState.ptr.prototype.valueQuoted = function() {
		var _ref, _ref$1, d, op, v, x;
		d = this;
		op = d.scanWhile(9);
		_ref = op;
		if (_ref === 6) {
			d.array(new reflect.Value.ptr(ptrType$2.nil, 0, 0));
		} else if (_ref === 2) {
			d.object(new reflect.Value.ptr(ptrType$2.nil, 0, 0));
		} else if (_ref === 1) {
			_ref$1 = d.literalInterface();
			if (_ref$1 === $ifaceNil || $assertType(_ref$1, $String, true)[1]) {
				v = _ref$1;
				return v;
			}
		} else {
			d.error(errPhase);
		}
		return (x = new unquotedValue.ptr(), new x.constructor.elem(x));
	};
	decodeState.prototype.valueQuoted = function() { return this.$val.valueQuoted(); };
	decodeState.ptr.prototype.indirect = function(v, decodingNull) {
		var _tuple, _tuple$1, d, e, ok, ok$1, u, u$1;
		d = this;
		v = v;
		if (!((v.Kind() === 22)) && !(v.Type().Name() === "") && v.CanAddr()) {
			v = v.Addr();
		}
		while (true) {
			if ((v.Kind() === 20) && !v.IsNil()) {
				e = v.Elem();
				if ((e.Kind() === 22) && !e.IsNil() && (!decodingNull || (e.Elem().Kind() === 22))) {
					v = e;
					continue;
				}
			}
			if (!((v.Kind() === 22))) {
				break;
			}
			if (!((v.Elem().Kind() === 22)) && decodingNull && v.CanSet()) {
				break;
			}
			if (v.IsNil()) {
				v.Set(reflect.New(v.Type().Elem()));
			}
			if (v.Type().NumMethod() > 0) {
				_tuple = $assertType(v.Interface(), Unmarshaler, true); u = _tuple[0]; ok = _tuple[1];
				if (ok) {
					return [u, $ifaceNil, new reflect.Value.ptr(ptrType$2.nil, 0, 0)];
				}
				_tuple$1 = $assertType(v.Interface(), encoding.TextUnmarshaler, true); u$1 = _tuple$1[0]; ok$1 = _tuple$1[1];
				if (ok$1) {
					return [$ifaceNil, u$1, new reflect.Value.ptr(ptrType$2.nil, 0, 0)];
				}
			}
			v = v.Elem();
		}
		return [$ifaceNil, $ifaceNil, v];
	};
	decodeState.prototype.indirect = function(v, decodingNull) { return this.$val.indirect(v, decodingNull); };
	decodeState.ptr.prototype.array = function(v) {
		var _q, _ref, _tuple, d, err, i, newcap, newv, op, pv, u, ut, z;
		d = this;
		v = v;
		_tuple = d.indirect(v, false); u = _tuple[0]; ut = _tuple[1]; pv = _tuple[2];
		if (!($interfaceIsEqual(u, $ifaceNil))) {
			d.off = d.off - (1) >> 0;
			err = u.UnmarshalJSON(d.next());
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				d.error(err);
			}
			return;
		}
		if (!($interfaceIsEqual(ut, $ifaceNil))) {
			d.saveError(new UnmarshalTypeError.ptr("array", v.Type()));
			d.off = d.off - (1) >> 0;
			d.next();
			return;
		}
		v = pv;
		_ref = v.Kind();
		switch (0) { default: if (_ref === 20) {
			if (v.NumMethod() === 0) {
				v.Set(reflect.ValueOf(d.arrayInterface()));
				return;
			}
			d.saveError(new UnmarshalTypeError.ptr("array", v.Type()));
			d.off = d.off - (1) >> 0;
			d.next();
			return;
		} else if (_ref === 17) {
		} else if (_ref === 23) {
			break;
		} else {
			d.saveError(new UnmarshalTypeError.ptr("array", v.Type()));
			d.off = d.off - (1) >> 0;
			d.next();
			return;
		} }
		i = 0;
		while (true) {
			op = d.scanWhile(9);
			if (op === 8) {
				break;
			}
			d.off = d.off - (1) >> 0;
			d.scan.undo(op);
			if (v.Kind() === 23) {
				if (i >= v.Cap()) {
					newcap = v.Cap() + (_q = v.Cap() / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
					if (newcap < 4) {
						newcap = 4;
					}
					newv = reflect.MakeSlice(v.Type(), v.Len(), newcap);
					reflect.Copy(newv, v);
					v.Set(newv);
				}
				if (i >= v.Len()) {
					v.SetLen(i + 1 >> 0);
				}
			}
			if (i < v.Len()) {
				d.value(v.Index(i));
			} else {
				d.value(new reflect.Value.ptr(ptrType$2.nil, 0, 0));
			}
			i = i + (1) >> 0;
			op = d.scanWhile(9);
			if (op === 8) {
				break;
			}
			if (!((op === 7))) {
				d.error(errPhase);
			}
		}
		if (i < v.Len()) {
			if (v.Kind() === 17) {
				z = reflect.Zero(v.Type().Elem());
				while (i < v.Len()) {
					v.Index(i).Set(z);
					i = i + (1) >> 0;
				}
			} else {
				v.SetLen(i);
			}
		}
		if ((i === 0) && (v.Kind() === 23)) {
			v.Set(reflect.MakeSlice(v.Type(), 0, 0));
		}
	};
	decodeState.prototype.array = function(v) { return this.$val.array(v); };
	decodeState.ptr.prototype.object = function(v) {
		var _i, _i$1, _ref, _ref$1, _ref$2, _ref$3, _tuple, _tuple$1, d, destring, elemType, err, f, ff, fields, i, i$1, item, key, kv, mapElem, ok, op, pv, qv, start, subv, t, u, ut;
		d = this;
		v = v;
		_tuple = d.indirect(v, false); u = _tuple[0]; ut = _tuple[1]; pv = _tuple[2];
		if (!($interfaceIsEqual(u, $ifaceNil))) {
			d.off = d.off - (1) >> 0;
			err = u.UnmarshalJSON(d.next());
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				d.error(err);
			}
			return;
		}
		if (!($interfaceIsEqual(ut, $ifaceNil))) {
			d.saveError(new UnmarshalTypeError.ptr("object", v.Type()));
			d.off = d.off - (1) >> 0;
			d.next();
			return;
		}
		v = pv;
		if ((v.Kind() === 20) && (v.NumMethod() === 0)) {
			v.Set(reflect.ValueOf(new mapType$2(d.objectInterface())));
			return;
		}
		_ref = v.Kind();
		if (_ref === 21) {
			t = v.Type();
			if (!((t.Key().Kind() === 24))) {
				d.saveError(new UnmarshalTypeError.ptr("object", v.Type()));
				d.off = d.off - (1) >> 0;
				d.next();
				return;
			}
			if (v.IsNil()) {
				v.Set(reflect.MakeMap(t));
			}
		} else if (_ref === 25) {
		} else {
			d.saveError(new UnmarshalTypeError.ptr("object", v.Type()));
			d.off = d.off - (1) >> 0;
			d.next();
			return;
		}
		mapElem = new reflect.Value.ptr();
		while (true) {
			op = d.scanWhile(9);
			if (op === 5) {
				break;
			}
			if (!((op === 1))) {
				d.error(errPhase);
			}
			start = d.off - 1 >> 0;
			op = d.scanWhile(0);
			item = $subslice(d.data, start, (d.off - 1 >> 0));
			_tuple$1 = unquoteBytes(item); key = _tuple$1[0]; ok = _tuple$1[1];
			if (!ok) {
				d.error(errPhase);
			}
			subv = new reflect.Value.ptr();
			destring = false;
			if (v.Kind() === 21) {
				elemType = v.Type().Elem();
				if (!mapElem.IsValid()) {
					mapElem = reflect.New(elemType).Elem();
				} else {
					mapElem.Set(reflect.Zero(elemType));
				}
				subv = mapElem;
			} else {
				f = ptrType$3.nil;
				fields = cachedTypeFields(v.Type());
				_ref$1 = fields;
				_i = 0;
				while (_i < _ref$1.$length) {
					i = _i;
					ff = ((i < 0 || i >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + i]);
					if (bytes.Equal(ff.nameBytes, key)) {
						f = ff;
						break;
					}
					if (f === ptrType$3.nil && ff.equalFold(ff.nameBytes, key)) {
						f = ff;
					}
					_i++;
				}
				if (!(f === ptrType$3.nil)) {
					subv = v;
					destring = f.quoted;
					_ref$2 = f.index;
					_i$1 = 0;
					while (_i$1 < _ref$2.$length) {
						i$1 = ((_i$1 < 0 || _i$1 >= _ref$2.$length) ? $throwRuntimeError("index out of range") : _ref$2.$array[_ref$2.$offset + _i$1]);
						if (subv.Kind() === 22) {
							if (subv.IsNil()) {
								subv.Set(reflect.New(subv.Type().Elem()));
							}
							subv = subv.Elem();
						}
						subv = subv.Field(i$1);
						_i$1++;
					}
				}
			}
			if (op === 9) {
				op = d.scanWhile(9);
			}
			if (!((op === 3))) {
				d.error(errPhase);
			}
			if (destring) {
				_ref$3 = d.valueQuoted();
				if (_ref$3 === $ifaceNil) {
					qv = _ref$3;
					d.literalStore(nullLiteral, subv, false);
				} else if ($assertType(_ref$3, $String, true)[1]) {
					qv = _ref$3.$val;
					d.literalStore(new sliceType$1($stringToBytes(qv)), subv, true);
				} else {
					qv = _ref$3;
					d.saveError(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal unquoted value into %v", new sliceType$2([item, v.Type()])));
				}
			} else {
				d.value(subv);
			}
			if (v.Kind() === 21) {
				kv = reflect.ValueOf(key).Convert(v.Type().Key());
				v.SetMapIndex(kv, subv);
			}
			op = d.scanWhile(9);
			if (op === 5) {
				break;
			}
			if (!((op === 4))) {
				d.error(errPhase);
			}
		}
	};
	decodeState.prototype.object = function(v) { return this.$val.object(v); };
	decodeState.ptr.prototype.literal = function(v) {
		var d, op, start;
		d = this;
		v = v;
		start = d.off - 1 >> 0;
		op = d.scanWhile(0);
		d.off = d.off - (1) >> 0;
		d.scan.undo(op);
		d.literalStore($subslice(d.data, start, d.off), v, false);
	};
	decodeState.prototype.literal = function(v) { return this.$val.literal(v); };
	decodeState.ptr.prototype.convertNumber = function(s) {
		var _tuple, d, err, f;
		d = this;
		if (d.useNumber) {
			return [new Number(s), $ifaceNil];
		}
		_tuple = strconv.ParseFloat(s, 64); f = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [$ifaceNil, new UnmarshalTypeError.ptr("number " + s, reflect.TypeOf(new $Float64(0)))];
		}
		return [new $Float64(f), $ifaceNil];
	};
	decodeState.prototype.convertNumber = function(s) { return this.$val.convertNumber(s); };
	decodeState.ptr.prototype.literalStore = function(item, v, fromQuoted) {
		var _ref, _ref$1, _ref$2, _ref$3, _ref$4, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, _tuple$5, _tuple$6, _tuple$7, b, c, d, err, err$1, err$2, err$3, err$4, err$5, err$6, n, n$1, n$2, n$3, n$4, ok, ok$1, pv, s, s$1, s$2, u, ut, value, wantptr;
		d = this;
		v = v;
		if (item.$length === 0) {
			d.saveError(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
			return;
		}
		wantptr = ((0 < 0 || 0 >= item.$length) ? $throwRuntimeError("index out of range") : item.$array[item.$offset + 0]) === 110;
		_tuple = d.indirect(v, wantptr); u = _tuple[0]; ut = _tuple[1]; pv = _tuple[2];
		if (!($interfaceIsEqual(u, $ifaceNil))) {
			err = u.UnmarshalJSON(item);
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				d.error(err);
			}
			return;
		}
		if (!($interfaceIsEqual(ut, $ifaceNil))) {
			if (!((((0 < 0 || 0 >= item.$length) ? $throwRuntimeError("index out of range") : item.$array[item.$offset + 0]) === 34))) {
				if (fromQuoted) {
					d.saveError(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.saveError(new UnmarshalTypeError.ptr("string", v.Type()));
				}
			}
			_tuple$1 = unquoteBytes(item); s = _tuple$1[0]; ok = _tuple$1[1];
			if (!ok) {
				if (fromQuoted) {
					d.error(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.error(errPhase);
				}
			}
			err$1 = ut.UnmarshalText(s);
			if (!($interfaceIsEqual(err$1, $ifaceNil))) {
				d.error(err$1);
			}
			return;
		}
		v = pv;
		c = ((0 < 0 || 0 >= item.$length) ? $throwRuntimeError("index out of range") : item.$array[item.$offset + 0]);
		_ref = c;
		if (_ref === 110) {
			_ref$1 = v.Kind();
			if (_ref$1 === 20 || _ref$1 === 22 || _ref$1 === 21 || _ref$1 === 23) {
				v.Set(reflect.Zero(v.Type()));
			}
		} else if (_ref === 116 || _ref === 102) {
			value = c === 116;
			_ref$2 = v.Kind();
			if (_ref$2 === 1) {
				v.SetBool(value);
			} else if (_ref$2 === 20) {
				if (v.NumMethod() === 0) {
					v.Set(reflect.ValueOf(new $Bool(value)));
				} else {
					d.saveError(new UnmarshalTypeError.ptr("bool", v.Type()));
				}
			} else {
				if (fromQuoted) {
					d.saveError(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.saveError(new UnmarshalTypeError.ptr("bool", v.Type()));
				}
			}
		} else if (_ref === 34) {
			_tuple$2 = unquoteBytes(item); s$1 = _tuple$2[0]; ok$1 = _tuple$2[1];
			if (!ok$1) {
				if (fromQuoted) {
					d.error(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.error(errPhase);
				}
			}
			_ref$3 = v.Kind();
			switch (0) { default: if (_ref$3 === 23) {
				if (!($interfaceIsEqual(v.Type(), byteSliceType))) {
					d.saveError(new UnmarshalTypeError.ptr("string", v.Type()));
					break;
				}
				b = $makeSlice(sliceType$1, base64.StdEncoding.DecodedLen(s$1.$length));
				_tuple$3 = base64.StdEncoding.Decode(b, s$1); n = _tuple$3[0]; err$2 = _tuple$3[1];
				if (!($interfaceIsEqual(err$2, $ifaceNil))) {
					d.saveError(err$2);
					break;
				}
				v.Set(reflect.ValueOf($subslice(b, 0, n)));
			} else if (_ref$3 === 24) {
				v.SetString($bytesToString(s$1));
			} else if (_ref$3 === 20) {
				if (v.NumMethod() === 0) {
					v.Set(reflect.ValueOf(new $String($bytesToString(s$1))));
				} else {
					d.saveError(new UnmarshalTypeError.ptr("string", v.Type()));
				}
			} else {
				d.saveError(new UnmarshalTypeError.ptr("string", v.Type()));
			} }
		} else {
			if (!((c === 45)) && (c < 48 || c > 57)) {
				if (fromQuoted) {
					d.error(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.error(errPhase);
				}
			}
			s$2 = $bytesToString(item);
			_ref$4 = v.Kind();
			switch (0) { default: if (_ref$4 === 20) {
				_tuple$4 = d.convertNumber(s$2); n$1 = _tuple$4[0]; err$3 = _tuple$4[1];
				if (!($interfaceIsEqual(err$3, $ifaceNil))) {
					d.saveError(err$3);
					break;
				}
				if (!((v.NumMethod() === 0))) {
					d.saveError(new UnmarshalTypeError.ptr("number", v.Type()));
					break;
				}
				v.Set(reflect.ValueOf(n$1));
			} else if (_ref$4 === 2 || _ref$4 === 3 || _ref$4 === 4 || _ref$4 === 5 || _ref$4 === 6) {
				_tuple$5 = strconv.ParseInt(s$2, 10, 64); n$2 = _tuple$5[0]; err$4 = _tuple$5[1];
				if (!($interfaceIsEqual(err$4, $ifaceNil)) || v.OverflowInt(n$2)) {
					d.saveError(new UnmarshalTypeError.ptr("number " + s$2, v.Type()));
					break;
				}
				v.SetInt(n$2);
			} else if (_ref$4 === 7 || _ref$4 === 8 || _ref$4 === 9 || _ref$4 === 10 || _ref$4 === 11 || _ref$4 === 12) {
				_tuple$6 = strconv.ParseUint(s$2, 10, 64); n$3 = _tuple$6[0]; err$5 = _tuple$6[1];
				if (!($interfaceIsEqual(err$5, $ifaceNil)) || v.OverflowUint(n$3)) {
					d.saveError(new UnmarshalTypeError.ptr("number " + s$2, v.Type()));
					break;
				}
				v.SetUint(n$3);
			} else if (_ref$4 === 13 || _ref$4 === 14) {
				_tuple$7 = strconv.ParseFloat(s$2, v.Type().Bits()); n$4 = _tuple$7[0]; err$6 = _tuple$7[1];
				if (!($interfaceIsEqual(err$6, $ifaceNil)) || v.OverflowFloat(n$4)) {
					d.saveError(new UnmarshalTypeError.ptr("number " + s$2, v.Type()));
					break;
				}
				v.SetFloat(n$4);
			} else {
				if ((v.Kind() === 24) && $interfaceIsEqual(v.Type(), numberType)) {
					v.SetString(s$2);
					break;
				}
				if (fromQuoted) {
					d.error(fmt.Errorf("json: invalid use of ,string struct tag, trying to unmarshal %q into %v", new sliceType$2([item, v.Type()])));
				} else {
					d.error(new UnmarshalTypeError.ptr("number", v.Type()));
				}
			} }
		}
	};
	decodeState.prototype.literalStore = function(item, v, fromQuoted) { return this.$val.literalStore(item, v, fromQuoted); };
	decodeState.ptr.prototype.valueInterface = function() {
		var _ref, d;
		d = this;
		_ref = d.scanWhile(9);
		if (_ref === 6) {
			return d.arrayInterface();
		} else if (_ref === 2) {
			return new mapType$2(d.objectInterface());
		} else if (_ref === 1) {
			return d.literalInterface();
		} else {
			d.error(errPhase);
			$panic(new $String("unreachable"));
		}
	};
	decodeState.prototype.valueInterface = function() { return this.$val.valueInterface(); };
	decodeState.ptr.prototype.arrayInterface = function() {
		var d, op, v;
		d = this;
		v = $makeSlice(sliceType$2, 0);
		while (true) {
			op = d.scanWhile(9);
			if (op === 8) {
				break;
			}
			d.off = d.off - (1) >> 0;
			d.scan.undo(op);
			v = $append(v, d.valueInterface());
			op = d.scanWhile(9);
			if (op === 8) {
				break;
			}
			if (!((op === 7))) {
				d.error(errPhase);
			}
		}
		return v;
	};
	decodeState.prototype.arrayInterface = function() { return this.$val.arrayInterface(); };
	decodeState.ptr.prototype.objectInterface = function() {
		var _key, _tuple, d, item, key, m, ok, op, start;
		d = this;
		m = new $Map();
		while (true) {
			op = d.scanWhile(9);
			if (op === 5) {
				break;
			}
			if (!((op === 1))) {
				d.error(errPhase);
			}
			start = d.off - 1 >> 0;
			op = d.scanWhile(0);
			item = $subslice(d.data, start, (d.off - 1 >> 0));
			_tuple = unquote(item); key = _tuple[0]; ok = _tuple[1];
			if (!ok) {
				d.error(errPhase);
			}
			if (op === 9) {
				op = d.scanWhile(9);
			}
			if (!((op === 3))) {
				d.error(errPhase);
			}
			_key = key; (m || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: d.valueInterface() };
			op = d.scanWhile(9);
			if (op === 5) {
				break;
			}
			if (!((op === 4))) {
				d.error(errPhase);
			}
		}
		return m;
	};
	decodeState.prototype.objectInterface = function() { return this.$val.objectInterface(); };
	decodeState.ptr.prototype.literalInterface = function() {
		var _ref, _tuple, _tuple$1, c, d, err, item, n, ok, op, s, start;
		d = this;
		start = d.off - 1 >> 0;
		op = d.scanWhile(0);
		d.off = d.off - (1) >> 0;
		d.scan.undo(op);
		item = $subslice(d.data, start, d.off);
		c = ((0 < 0 || 0 >= item.$length) ? $throwRuntimeError("index out of range") : item.$array[item.$offset + 0]);
		_ref = c;
		if (_ref === 110) {
			return $ifaceNil;
		} else if (_ref === 116 || _ref === 102) {
			return new $Bool((c === 116));
		} else if (_ref === 34) {
			_tuple = unquote(item); s = _tuple[0]; ok = _tuple[1];
			if (!ok) {
				d.error(errPhase);
			}
			return new $String(s);
		} else {
			if (!((c === 45)) && (c < 48 || c > 57)) {
				d.error(errPhase);
			}
			_tuple$1 = d.convertNumber($bytesToString(item)); n = _tuple$1[0]; err = _tuple$1[1];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				d.saveError(err);
			}
			return n;
		}
	};
	decodeState.prototype.literalInterface = function() { return this.$val.literalInterface(); };
	getu4 = function(s) {
		var _tuple, err, r;
		if (s.$length < 6 || !((((0 < 0 || 0 >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + 0]) === 92)) || !((((1 < 0 || 1 >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + 1]) === 117))) {
			return -1;
		}
		_tuple = strconv.ParseUint($bytesToString($subslice(s, 2, 6)), 16, 64); r = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return -1;
		}
		return (r.$low >> 0);
	};
	unquote = function(s) {
		var _tuple, ok = false, t = "";
		_tuple = unquoteBytes(s); s = _tuple[0]; ok = _tuple[1];
		t = $bytesToString(s);
		return [t, ok];
	};
	unquoteBytes = function(s) {
		var _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, _tuple$1, b, c, c$1, dec, nb, ok = false, r, rr, rr$1, rr$2, rr1, size, size$1, t = sliceType$1.nil, w, x;
		if (s.$length < 2 || !((((0 < 0 || 0 >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + 0]) === 34)) || !(((x = s.$length - 1 >> 0, ((x < 0 || x >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + x])) === 34))) {
			return [t, ok];
		}
		s = $subslice(s, 1, (s.$length - 1 >> 0));
		r = 0;
		while (r < s.$length) {
			c = ((r < 0 || r >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + r]);
			if ((c === 92) || (c === 34) || c < 32) {
				break;
			}
			if (c < 128) {
				r = r + (1) >> 0;
				continue;
			}
			_tuple = utf8.DecodeRune($subslice(s, r)); rr = _tuple[0]; size = _tuple[1];
			if ((rr === 65533) && (size === 1)) {
				break;
			}
			r = r + (size) >> 0;
		}
		if (r === s.$length) {
			_tmp = s; _tmp$1 = true; t = _tmp; ok = _tmp$1;
			return [t, ok];
		}
		b = $makeSlice(sliceType$1, (s.$length + 8 >> 0));
		w = $copySlice(b, $subslice(s, 0, r));
		while (r < s.$length) {
			if (w >= (b.$length - 8 >> 0)) {
				nb = $makeSlice(sliceType$1, (((b.$length + 4 >> 0)) * 2 >> 0));
				$copySlice(nb, $subslice(b, 0, w));
				b = nb;
			}
			c$1 = ((r < 0 || r >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + r]);
			if (c$1 === 92) {
				r = r + (1) >> 0;
				if (r >= s.$length) {
					return [t, ok];
				}
				_ref = ((r < 0 || r >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + r]);
				switch (0) { default: if (_ref === 34 || _ref === 92 || _ref === 47 || _ref === 39) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = ((r < 0 || r >= s.$length) ? $throwRuntimeError("index out of range") : s.$array[s.$offset + r]);
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 98) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = 8;
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 102) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = 12;
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 110) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = 10;
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 114) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = 13;
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 116) {
					(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = 9;
					r = r + (1) >> 0;
					w = w + (1) >> 0;
				} else if (_ref === 117) {
					r = r - (1) >> 0;
					rr$1 = getu4($subslice(s, r));
					if (rr$1 < 0) {
						return [t, ok];
					}
					r = r + (6) >> 0;
					if (utf16.IsSurrogate(rr$1)) {
						rr1 = getu4($subslice(s, r));
						dec = utf16.DecodeRune(rr$1, rr1);
						if (!((dec === 65533))) {
							r = r + (6) >> 0;
							w = w + (utf8.EncodeRune($subslice(b, w), dec)) >> 0;
							break;
						}
						rr$1 = 65533;
					}
					w = w + (utf8.EncodeRune($subslice(b, w), rr$1)) >> 0;
				} else {
					return [t, ok];
				} }
			} else if (c$1 === 34 || c$1 < 32) {
				return [t, ok];
			} else if (c$1 < 128) {
				(w < 0 || w >= b.$length) ? $throwRuntimeError("index out of range") : b.$array[b.$offset + w] = c$1;
				r = r + (1) >> 0;
				w = w + (1) >> 0;
			} else {
				_tuple$1 = utf8.DecodeRune($subslice(s, r)); rr$2 = _tuple$1[0]; size$1 = _tuple$1[1];
				r = r + (size$1) >> 0;
				w = w + (utf8.EncodeRune($subslice(b, w), rr$2)) >> 0;
			}
		}
		_tmp$2 = $subslice(b, 0, w); _tmp$3 = true; t = _tmp$2; ok = _tmp$3;
		return [t, ok];
	};
	isValidTag = function(s) {
		var _i, _ref, _rune, c;
		if (s === "") {
			return false;
		}
		_ref = s;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			c = _rune[0];
			if (strings.ContainsRune("!#$%&()*+-./:<=>?@[]^_{|}~ ", c)) {
			} else {
				if (!unicode.IsLetter(c) && !unicode.IsDigit(c)) {
					return false;
				}
			}
			_i += _rune[1];
		}
		return true;
	};
	fillField = function(f) {
		f = $clone(f, field);
		f.nameBytes = new sliceType$1($stringToBytes(f.name));
		f.equalFold = foldFunc(f.nameBytes);
		return f;
	};
	byName.prototype.Len = function() {
		var x;
		x = this;
		return x.$length;
	};
	$ptrType(byName).prototype.Len = function() { return this.$get().Len(); };
	byName.prototype.Swap = function(i, j) {
		var _tmp, _tmp$1, x;
		x = this;
		_tmp = $clone(((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]), field); _tmp$1 = $clone(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), field); $copy(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), _tmp, field); $copy(((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]), _tmp$1, field);
	};
	$ptrType(byName).prototype.Swap = function(i, j) { return this.$get().Swap(i, j); };
	byName.prototype.Less = function(i, j) {
		var x;
		x = this;
		if (!(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).name === ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).name)) {
			return ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).name < ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).name;
		}
		if (!((((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).index.$length === ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index.$length))) {
			return ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).index.$length < ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index.$length;
		}
		if (!(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).tag === ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).tag)) {
			return ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).tag;
		}
		return $subslice(new byIndex(x.$array), x.$offset, x.$offset + x.$length).Less(i, j);
	};
	$ptrType(byName).prototype.Less = function(i, j) { return this.$get().Less(i, j); };
	byIndex.prototype.Len = function() {
		var x;
		x = this;
		return x.$length;
	};
	$ptrType(byIndex).prototype.Len = function() { return this.$get().Len(); };
	byIndex.prototype.Swap = function(i, j) {
		var _tmp, _tmp$1, x;
		x = this;
		_tmp = $clone(((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]), field); _tmp$1 = $clone(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), field); $copy(((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), _tmp, field); $copy(((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]), _tmp$1, field);
	};
	$ptrType(byIndex).prototype.Swap = function(i, j) { return this.$get().Swap(i, j); };
	byIndex.prototype.Less = function(i, j) {
		var _i, _ref, k, x, x$1, x$2, xik;
		x = this;
		_ref = ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).index;
		_i = 0;
		while (_i < _ref.$length) {
			k = _i;
			xik = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (k >= ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index.$length) {
				return false;
			}
			if (!((xik === (x$1 = ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index, ((k < 0 || k >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + k]))))) {
				return xik < (x$2 = ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index, ((k < 0 || k >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + k]));
			}
			_i++;
		}
		return ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]).index.$length < ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]).index.$length;
	};
	$ptrType(byIndex).prototype.Less = function(i, j) { return this.$get().Less(i, j); };
	typeFields = function(t) {
		var _entry, _entry$1, _entry$2, _entry$3, _i, _index, _key, _key$1, _key$2, _key$3, _key$4, _key$5, _lhs, _map, _map$1, _map$2, _map$3, _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, _tuple$1, advance, count, current, dominant, f, fi, fields, fj, ft, i, i$1, index, name, name$1, next, nextCount, ok, opts, out, sf, tag, tagged, visited, x, x$1, x$2;
		current = new sliceType([]);
		next = new sliceType([new field.ptr("", sliceType$1.nil, $throwNilPointerError, false, sliceType$4.nil, t, false, false)]);
		count = (_map = new $Map(), _map);
		nextCount = (_map$1 = new $Map(), _map$1);
		visited = (_map$2 = new $Map(), _map$2);
		fields = sliceType.nil;
		while (next.$length > 0) {
			_tmp = next; _tmp$1 = $subslice(current, 0, 0); current = _tmp; next = _tmp$1;
			_tmp$2 = nextCount; _tmp$3 = (_map$3 = new $Map(), _map$3); count = _tmp$2; nextCount = _tmp$3;
			_ref = current;
			_i = 0;
			while (_i < _ref.$length) {
				f = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), field);
				if ((_entry = visited[f.typ.$key()], _entry !== undefined ? _entry.v : false)) {
					_i++;
					continue;
				}
				_key$4 = f.typ; (visited || $throwRuntimeError("assignment to entry in nil map"))[_key$4.$key()] = { k: _key$4, v: true };
				i = 0;
				while (i < f.typ.NumField()) {
					sf = $clone(f.typ.Field(i), reflect.StructField);
					if (!(sf.PkgPath === "")) {
						i = i + (1) >> 0;
						continue;
					}
					tag = new reflect.StructTag(sf.Tag).Get("json");
					if (tag === "-") {
						i = i + (1) >> 0;
						continue;
					}
					_tuple = parseTag(tag); name = _tuple[0]; opts = _tuple[1];
					if (!isValidTag(name)) {
						name = "";
					}
					index = $makeSlice(sliceType$4, (f.index.$length + 1 >> 0));
					$copySlice(index, f.index);
					(x = f.index.$length, (x < 0 || x >= index.$length) ? $throwRuntimeError("index out of range") : index.$array[index.$offset + x] = i);
					ft = sf.Type;
					if (ft.Name() === "" && (ft.Kind() === 22)) {
						ft = ft.Elem();
					}
					if (!(name === "") || !sf.Anonymous || !((ft.Kind() === 25))) {
						tagged = !(name === "");
						if (name === "") {
							name = sf.Name;
						}
						fields = $append(fields, fillField(new field.ptr(name, sliceType$1.nil, $throwNilPointerError, tagged, index, ft, new tagOptions(opts).Contains("omitempty"), new tagOptions(opts).Contains("string"))));
						if ((_entry$1 = count[f.typ.$key()], _entry$1 !== undefined ? _entry$1.v : 0) > 1) {
							fields = $append(fields, (x$1 = fields.$length - 1 >> 0, ((x$1 < 0 || x$1 >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + x$1])));
						}
						i = i + (1) >> 0;
						continue;
					}
					_lhs = nextCount; _index = ft; _key$5 = _index; (_lhs || $throwRuntimeError("assignment to entry in nil map"))[_key$5.$key()] = { k: _key$5, v: (_entry$2 = _lhs[_index.$key()], _entry$2 !== undefined ? _entry$2.v : 0) + (1) >> 0 };
					if ((_entry$3 = nextCount[ft.$key()], _entry$3 !== undefined ? _entry$3.v : 0) === 1) {
						next = $append(next, fillField(new field.ptr(ft.Name(), sliceType$1.nil, $throwNilPointerError, false, index, ft, false, false)));
					}
					i = i + (1) >> 0;
				}
				_i++;
			}
		}
		sort.Sort($subslice(new byName(fields.$array), fields.$offset, fields.$offset + fields.$length));
		out = $subslice(fields, 0, 0);
		_tmp$4 = 0; _tmp$5 = 0; advance = _tmp$4; i$1 = _tmp$5;
		while (i$1 < fields.$length) {
			fi = $clone(((i$1 < 0 || i$1 >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + i$1]), field);
			name$1 = fi.name;
			advance = 1;
			while ((i$1 + advance >> 0) < fields.$length) {
				fj = $clone((x$2 = i$1 + advance >> 0, ((x$2 < 0 || x$2 >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + x$2])), field);
				if (!(fj.name === name$1)) {
					break;
				}
				advance = advance + (1) >> 0;
			}
			if (advance === 1) {
				out = $append(out, fi);
				i$1 = i$1 + (advance) >> 0;
				continue;
			}
			_tuple$1 = dominantField($subslice(fields, i$1, (i$1 + advance >> 0))); dominant = $clone(_tuple$1[0], field); ok = _tuple$1[1];
			if (ok) {
				out = $append(out, dominant);
			}
			i$1 = i$1 + (advance) >> 0;
		}
		fields = out;
		sort.Sort($subslice(new byIndex(fields.$array), fields.$offset, fields.$offset + fields.$length));
		return fields;
	};
	dominantField = function(fields) {
		var _i, _ref, f, i, length, tagged;
		length = ((0 < 0 || 0 >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + 0]).index.$length;
		tagged = -1;
		_ref = fields;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			f = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), field);
			if (f.index.$length > length) {
				fields = $subslice(fields, 0, i);
				break;
			}
			if (f.tag) {
				if (tagged >= 0) {
					return [new field.ptr("", sliceType$1.nil, $throwNilPointerError, false, sliceType$4.nil, $ifaceNil, false, false), false];
				}
				tagged = i;
			}
			_i++;
		}
		if (tagged >= 0) {
			return [((tagged < 0 || tagged >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + tagged]), true];
		}
		if (fields.$length > 1) {
			return [new field.ptr("", sliceType$1.nil, $throwNilPointerError, false, sliceType$4.nil, $ifaceNil, false, false), false];
		}
		return [((0 < 0 || 0 >= fields.$length) ? $throwRuntimeError("index out of range") : fields.$array[fields.$offset + 0]), true];
	};
	cachedTypeFields = function(t) {
		var _entry, _key, _key$1, _map, f;
		fieldCache.RWMutex.RLock();
		f = (_entry = fieldCache.m[t.$key()], _entry !== undefined ? _entry.v : sliceType.nil);
		fieldCache.RWMutex.RUnlock();
		if (!(f === sliceType.nil)) {
			return f;
		}
		f = typeFields(t);
		if (f === sliceType.nil) {
			f = new sliceType([]);
		}
		fieldCache.RWMutex.Lock();
		if (fieldCache.m === false) {
			fieldCache.m = (_map = new $Map(), _map);
		}
		_key$1 = t; (fieldCache.m || $throwRuntimeError("assignment to entry in nil map"))[_key$1.$key()] = { k: _key$1, v: f };
		fieldCache.RWMutex.Unlock();
		return f;
	};
	foldFunc = function(s) {
		var _i, _ref, b, nonLetter, special, upper;
		nonLetter = false;
		special = false;
		_ref = s;
		_i = 0;
		while (_i < _ref.$length) {
			b = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (b >= 128) {
				return bytes.EqualFold;
			}
			upper = (b & 223) >>> 0;
			if (upper < 65 || upper > 90) {
				nonLetter = true;
			} else if ((upper === 75) || (upper === 83)) {
				special = true;
			}
			_i++;
		}
		if (special) {
			return equalFoldRight;
		}
		if (nonLetter) {
			return asciiEqualFold;
		}
		return simpleLetterEqualFold;
	};
	equalFoldRight = function(s, t) {
		var _i, _ref, _ref$1, _tuple, sb, sbUpper, size, tb, tr;
		_ref = s;
		_i = 0;
		while (_i < _ref.$length) {
			sb = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (t.$length === 0) {
				return false;
			}
			tb = ((0 < 0 || 0 >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + 0]);
			if (tb < 128) {
				if (!((sb === tb))) {
					sbUpper = (sb & 223) >>> 0;
					if (65 <= sbUpper && sbUpper <= 90) {
						if (!((sbUpper === ((tb & 223) >>> 0)))) {
							return false;
						}
					} else {
						return false;
					}
				}
				t = $subslice(t, 1);
				_i++;
				continue;
			}
			_tuple = utf8.DecodeRune(t); tr = _tuple[0]; size = _tuple[1];
			_ref$1 = sb;
			if (_ref$1 === 115 || _ref$1 === 83) {
				if (!((tr === 383))) {
					return false;
				}
			} else if (_ref$1 === 107 || _ref$1 === 75) {
				if (!((tr === 8490))) {
					return false;
				}
			} else {
				return false;
			}
			t = $subslice(t, size);
			_i++;
		}
		if (t.$length > 0) {
			return false;
		}
		return true;
	};
	asciiEqualFold = function(s, t) {
		var _i, _ref, i, sb, tb;
		if (!((s.$length === t.$length))) {
			return false;
		}
		_ref = s;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			sb = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			tb = ((i < 0 || i >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + i]);
			if (sb === tb) {
				_i++;
				continue;
			}
			if ((97 <= sb && sb <= 122) || (65 <= sb && sb <= 90)) {
				if (!((((sb & 223) >>> 0) === ((tb & 223) >>> 0)))) {
					return false;
				}
			} else {
				return false;
			}
			_i++;
		}
		return true;
	};
	simpleLetterEqualFold = function(s, t) {
		var _i, _ref, b, i;
		if (!((s.$length === t.$length))) {
			return false;
		}
		_ref = s;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			b = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (!((((b & 223) >>> 0) === ((((i < 0 || i >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + i]) & 223) >>> 0)))) {
				return false;
			}
			_i++;
		}
		return true;
	};
	checkValid = function(data, scan) {
		var _i, _ref, c, x, x$1;
		scan.reset();
		_ref = data;
		_i = 0;
		while (_i < _ref.$length) {
			c = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			scan.bytes = (x = scan.bytes, x$1 = new $Int64(0, 1), new $Int64(x.$high + x$1.$high, x.$low + x$1.$low));
			if (scan.step(scan, (c >> 0)) === 11) {
				return scan.err;
			}
			_i++;
		}
		if (scan.eof() === 11) {
			return scan.err;
		}
		return $ifaceNil;
	};
	nextValue = function(data, scan) {
		var _i, _ref, _ref$1, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, c, err = $ifaceNil, i, rest = sliceType$1.nil, v, value = sliceType$1.nil;
		scan.reset();
		_ref = data;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			c = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			v = scan.step(scan, (c >> 0));
			if (v >= 10) {
				_ref$1 = v;
				if (_ref$1 === 11) {
					_tmp = sliceType$1.nil; _tmp$1 = sliceType$1.nil; _tmp$2 = scan.err; value = _tmp; rest = _tmp$1; err = _tmp$2;
					return [value, rest, err];
				} else if (_ref$1 === 10) {
					_tmp$3 = $subslice(data, 0, i); _tmp$4 = $subslice(data, i); _tmp$5 = $ifaceNil; value = _tmp$3; rest = _tmp$4; err = _tmp$5;
					return [value, rest, err];
				}
			}
			_i++;
		}
		if (scan.eof() === 11) {
			_tmp$6 = sliceType$1.nil; _tmp$7 = sliceType$1.nil; _tmp$8 = scan.err; value = _tmp$6; rest = _tmp$7; err = _tmp$8;
			return [value, rest, err];
		}
		_tmp$9 = data; _tmp$10 = sliceType$1.nil; _tmp$11 = $ifaceNil; value = _tmp$9; rest = _tmp$10; err = _tmp$11;
		return [value, rest, err];
	};
	SyntaxError.ptr.prototype.Error = function() {
		var e;
		e = this;
		return e.msg;
	};
	SyntaxError.prototype.Error = function() { return this.$val.Error(); };
	scanner.ptr.prototype.reset = function() {
		var s;
		s = this;
		s.step = stateBeginValue;
		s.parseState = $subslice(s.parseState, 0, 0);
		s.err = $ifaceNil;
		s.redo = false;
		s.endTop = false;
	};
	scanner.prototype.reset = function() { return this.$val.reset(); };
	scanner.ptr.prototype.eof = function() {
		var s;
		s = this;
		if (!($interfaceIsEqual(s.err, $ifaceNil))) {
			return 11;
		}
		if (s.endTop) {
			return 10;
		}
		s.step(s, 32);
		if (s.endTop) {
			return 10;
		}
		if ($interfaceIsEqual(s.err, $ifaceNil)) {
			s.err = new SyntaxError.ptr("unexpected end of JSON input", s.bytes);
		}
		return 11;
	};
	scanner.prototype.eof = function() { return this.$val.eof(); };
	scanner.ptr.prototype.pushParseState = function(p) {
		var s;
		s = this;
		s.parseState = $append(s.parseState, p);
	};
	scanner.prototype.pushParseState = function(p) { return this.$val.pushParseState(p); };
	scanner.ptr.prototype.popParseState = function() {
		var n, s;
		s = this;
		n = s.parseState.$length - 1 >> 0;
		s.parseState = $subslice(s.parseState, 0, n);
		s.redo = false;
		if (n === 0) {
			s.step = stateEndTop;
			s.endTop = true;
		} else {
			s.step = stateEndValue;
		}
	};
	scanner.prototype.popParseState = function() { return this.$val.popParseState(); };
	isSpace = function(c) {
		return (c === 32) || (c === 9) || (c === 13) || (c === 10);
	};
	stateBeginValueOrEmpty = function(s, c) {
		if (c <= 32 && isSpace((c >> 0))) {
			return 9;
		}
		if (c === 93) {
			return stateEndValue(s, c);
		}
		return stateBeginValue(s, c);
	};
	stateBeginValue = function(s, c) {
		var _ref;
		if (c <= 32 && isSpace((c >> 0))) {
			return 9;
		}
		_ref = c;
		if (_ref === 123) {
			s.step = stateBeginStringOrEmpty;
			s.pushParseState(0);
			return 2;
		} else if (_ref === 91) {
			s.step = stateBeginValueOrEmpty;
			s.pushParseState(2);
			return 6;
		} else if (_ref === 34) {
			s.step = stateInString;
			return 1;
		} else if (_ref === 45) {
			s.step = stateNeg;
			return 1;
		} else if (_ref === 48) {
			s.step = state0;
			return 1;
		} else if (_ref === 116) {
			s.step = stateT;
			return 1;
		} else if (_ref === 102) {
			s.step = stateF;
			return 1;
		} else if (_ref === 110) {
			s.step = stateN;
			return 1;
		}
		if (49 <= c && c <= 57) {
			s.step = state1;
			return 1;
		}
		return s.error(c, "looking for beginning of value");
	};
	stateBeginStringOrEmpty = function(s, c) {
		var n, x, x$1;
		if (c <= 32 && isSpace((c >> 0))) {
			return 9;
		}
		if (c === 125) {
			n = s.parseState.$length;
			(x = s.parseState, x$1 = n - 1 >> 0, (x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1] = 1);
			return stateEndValue(s, c);
		}
		return stateBeginString(s, c);
	};
	stateBeginString = function(s, c) {
		if (c <= 32 && isSpace((c >> 0))) {
			return 9;
		}
		if (c === 34) {
			s.step = stateInString;
			return 1;
		}
		return s.error(c, "looking for beginning of object key string");
	};
	stateEndValue = function(s, c) {
		var _ref, n, ps, x, x$1, x$2, x$3, x$4, x$5;
		n = s.parseState.$length;
		if (n === 0) {
			s.step = stateEndTop;
			s.endTop = true;
			return stateEndTop(s, c);
		}
		if (c <= 32 && isSpace((c >> 0))) {
			s.step = stateEndValue;
			return 9;
		}
		ps = (x = s.parseState, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		_ref = ps;
		if (_ref === 0) {
			if (c === 58) {
				(x$2 = s.parseState, x$3 = n - 1 >> 0, (x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3] = 1);
				s.step = stateBeginValue;
				return 3;
			}
			return s.error(c, "after object key");
		} else if (_ref === 1) {
			if (c === 44) {
				(x$4 = s.parseState, x$5 = n - 1 >> 0, (x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5] = 0);
				s.step = stateBeginString;
				return 4;
			}
			if (c === 125) {
				s.popParseState();
				return 5;
			}
			return s.error(c, "after object key:value pair");
		} else if (_ref === 2) {
			if (c === 44) {
				s.step = stateBeginValue;
				return 7;
			}
			if (c === 93) {
				s.popParseState();
				return 8;
			}
			return s.error(c, "after array element");
		}
		return s.error(c, "");
	};
	stateEndTop = function(s, c) {
		if (!((c === 32)) && !((c === 9)) && !((c === 13)) && !((c === 10))) {
			s.error(c, "after top-level value");
		}
		return 10;
	};
	stateInString = function(s, c) {
		if (c === 34) {
			s.step = stateEndValue;
			return 0;
		}
		if (c === 92) {
			s.step = stateInStringEsc;
			return 0;
		}
		if (c < 32) {
			return s.error(c, "in string literal");
		}
		return 0;
	};
	stateInStringEsc = function(s, c) {
		var _ref;
		_ref = c;
		if (_ref === 98 || _ref === 102 || _ref === 110 || _ref === 114 || _ref === 116 || _ref === 92 || _ref === 47 || _ref === 34) {
			s.step = stateInString;
			return 0;
		}
		if (c === 117) {
			s.step = stateInStringEscU;
			return 0;
		}
		return s.error(c, "in string escape code");
	};
	stateInStringEscU = function(s, c) {
		if (48 <= c && c <= 57 || 97 <= c && c <= 102 || 65 <= c && c <= 70) {
			s.step = stateInStringEscU1;
			return 0;
		}
		return s.error(c, "in \\u hexadecimal character escape");
	};
	stateInStringEscU1 = function(s, c) {
		if (48 <= c && c <= 57 || 97 <= c && c <= 102 || 65 <= c && c <= 70) {
			s.step = stateInStringEscU12;
			return 0;
		}
		return s.error(c, "in \\u hexadecimal character escape");
	};
	stateInStringEscU12 = function(s, c) {
		if (48 <= c && c <= 57 || 97 <= c && c <= 102 || 65 <= c && c <= 70) {
			s.step = stateInStringEscU123;
			return 0;
		}
		return s.error(c, "in \\u hexadecimal character escape");
	};
	stateInStringEscU123 = function(s, c) {
		if (48 <= c && c <= 57 || 97 <= c && c <= 102 || 65 <= c && c <= 70) {
			s.step = stateInString;
			return 0;
		}
		return s.error(c, "in \\u hexadecimal character escape");
	};
	stateNeg = function(s, c) {
		if (c === 48) {
			s.step = state0;
			return 0;
		}
		if (49 <= c && c <= 57) {
			s.step = state1;
			return 0;
		}
		return s.error(c, "in numeric literal");
	};
	state1 = function(s, c) {
		if (48 <= c && c <= 57) {
			s.step = state1;
			return 0;
		}
		return state0(s, c);
	};
	state0 = function(s, c) {
		if (c === 46) {
			s.step = stateDot;
			return 0;
		}
		if ((c === 101) || (c === 69)) {
			s.step = stateE;
			return 0;
		}
		return stateEndValue(s, c);
	};
	stateDot = function(s, c) {
		if (48 <= c && c <= 57) {
			s.step = stateDot0;
			return 0;
		}
		return s.error(c, "after decimal point in numeric literal");
	};
	stateDot0 = function(s, c) {
		if (48 <= c && c <= 57) {
			s.step = stateDot0;
			return 0;
		}
		if ((c === 101) || (c === 69)) {
			s.step = stateE;
			return 0;
		}
		return stateEndValue(s, c);
	};
	stateE = function(s, c) {
		if (c === 43) {
			s.step = stateESign;
			return 0;
		}
		if (c === 45) {
			s.step = stateESign;
			return 0;
		}
		return stateESign(s, c);
	};
	stateESign = function(s, c) {
		if (48 <= c && c <= 57) {
			s.step = stateE0;
			return 0;
		}
		return s.error(c, "in exponent of numeric literal");
	};
	stateE0 = function(s, c) {
		if (48 <= c && c <= 57) {
			s.step = stateE0;
			return 0;
		}
		return stateEndValue(s, c);
	};
	stateT = function(s, c) {
		if (c === 114) {
			s.step = stateTr;
			return 0;
		}
		return s.error(c, "in literal true (expecting 'r')");
	};
	stateTr = function(s, c) {
		if (c === 117) {
			s.step = stateTru;
			return 0;
		}
		return s.error(c, "in literal true (expecting 'u')");
	};
	stateTru = function(s, c) {
		if (c === 101) {
			s.step = stateEndValue;
			return 0;
		}
		return s.error(c, "in literal true (expecting 'e')");
	};
	stateF = function(s, c) {
		if (c === 97) {
			s.step = stateFa;
			return 0;
		}
		return s.error(c, "in literal false (expecting 'a')");
	};
	stateFa = function(s, c) {
		if (c === 108) {
			s.step = stateFal;
			return 0;
		}
		return s.error(c, "in literal false (expecting 'l')");
	};
	stateFal = function(s, c) {
		if (c === 115) {
			s.step = stateFals;
			return 0;
		}
		return s.error(c, "in literal false (expecting 's')");
	};
	stateFals = function(s, c) {
		if (c === 101) {
			s.step = stateEndValue;
			return 0;
		}
		return s.error(c, "in literal false (expecting 'e')");
	};
	stateN = function(s, c) {
		if (c === 117) {
			s.step = stateNu;
			return 0;
		}
		return s.error(c, "in literal null (expecting 'u')");
	};
	stateNu = function(s, c) {
		if (c === 108) {
			s.step = stateNul;
			return 0;
		}
		return s.error(c, "in literal null (expecting 'l')");
	};
	stateNul = function(s, c) {
		if (c === 108) {
			s.step = stateEndValue;
			return 0;
		}
		return s.error(c, "in literal null (expecting 'l')");
	};
	stateError = function(s, c) {
		return 11;
	};
	scanner.ptr.prototype.error = function(c, context) {
		var s;
		s = this;
		s.step = stateError;
		s.err = new SyntaxError.ptr("invalid character " + quoteChar(c) + " " + context, s.bytes);
		return 11;
	};
	scanner.prototype.error = function(c, context) { return this.$val.error(c, context); };
	quoteChar = function(c) {
		var s;
		if (c === 39) {
			return "'\\''";
		}
		if (c === 34) {
			return "'\"'";
		}
		s = strconv.Quote($encodeRune(c));
		return "'" + s.substring(1, (s.length - 1 >> 0)) + "'";
	};
	scanner.ptr.prototype.undo = function(scanCode) {
		var s;
		s = this;
		if (s.redo) {
			$panic(new $String("json: invalid use of scanner"));
		}
		s.redoCode = scanCode;
		s.redoState = s.step;
		s.step = stateRedo;
		s.redo = true;
	};
	scanner.prototype.undo = function(scanCode) { return this.$val.undo(scanCode); };
	stateRedo = function(s, c) {
		s.redo = false;
		s.step = s.redoState;
		return s.redoCode;
	};
	parseTag = function(tag) {
		var idx;
		idx = strings.Index(tag, ",");
		if (!((idx === -1))) {
			return [tag.substring(0, idx), tag.substring((idx + 1 >> 0))];
		}
		return [tag, ""];
	};
	tagOptions.prototype.Contains = function(optionName) {
		var _tmp, _tmp$1, i, next, o, s;
		o = this.$val;
		if (o.length === 0) {
			return false;
		}
		s = o;
		while (!(s === "")) {
			next = "";
			i = strings.Index(s, ",");
			if (i >= 0) {
				_tmp = s.substring(0, i); _tmp$1 = s.substring((i + 1 >> 0)); s = _tmp; next = _tmp$1;
			}
			if (s === optionName) {
				return true;
			}
			s = next;
		}
		return false;
	};
	$ptrType(tagOptions).prototype.Contains = function(optionName) { return new tagOptions(this.$get()).Contains(optionName); };
	ptrType$6.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$8.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	Number.methods = [{prop: "Float64", name: "Float64", pkg: "", type: $funcType([], [$Float64, $error], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64, $error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$9.methods = [{prop: "Float64", name: "Float64", pkg: "", type: $funcType([], [$Float64, $error], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64, $error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$10.methods = [{prop: "array", name: "array", pkg: "encoding/json", type: $funcType([reflect.Value], [], false)}, {prop: "arrayInterface", name: "arrayInterface", pkg: "encoding/json", type: $funcType([], [sliceType$2], false)}, {prop: "convertNumber", name: "convertNumber", pkg: "encoding/json", type: $funcType([$String], [$emptyInterface, $error], false)}, {prop: "error", name: "error", pkg: "encoding/json", type: $funcType([$error], [], false)}, {prop: "indirect", name: "indirect", pkg: "encoding/json", type: $funcType([reflect.Value, $Bool], [Unmarshaler, encoding.TextUnmarshaler, reflect.Value], false)}, {prop: "init", name: "init", pkg: "encoding/json", type: $funcType([sliceType$1], [ptrType$10], false)}, {prop: "literal", name: "literal", pkg: "encoding/json", type: $funcType([reflect.Value], [], false)}, {prop: "literalInterface", name: "literalInterface", pkg: "encoding/json", type: $funcType([], [$emptyInterface], false)}, {prop: "literalStore", name: "literalStore", pkg: "encoding/json", type: $funcType([sliceType$1, reflect.Value, $Bool], [], false)}, {prop: "next", name: "next", pkg: "encoding/json", type: $funcType([], [sliceType$1], false)}, {prop: "object", name: "object", pkg: "encoding/json", type: $funcType([reflect.Value], [], false)}, {prop: "objectInterface", name: "objectInterface", pkg: "encoding/json", type: $funcType([], [mapType$2], false)}, {prop: "saveError", name: "saveError", pkg: "encoding/json", type: $funcType([$error], [], false)}, {prop: "scanWhile", name: "scanWhile", pkg: "encoding/json", type: $funcType([$Int], [$Int], false)}, {prop: "unmarshal", name: "unmarshal", pkg: "encoding/json", type: $funcType([$emptyInterface], [$error], false)}, {prop: "value", name: "value", pkg: "encoding/json", type: $funcType([reflect.Value], [], false)}, {prop: "valueInterface", name: "valueInterface", pkg: "encoding/json", type: $funcType([], [$emptyInterface], false)}, {prop: "valueQuoted", name: "valueQuoted", pkg: "encoding/json", type: $funcType([], [$emptyInterface], false)}];
	byName.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$23.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	byIndex.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$24.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$25.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$26.methods = [{prop: "eof", name: "eof", pkg: "encoding/json", type: $funcType([], [$Int], false)}, {prop: "error", name: "error", pkg: "encoding/json", type: $funcType([$Int, $String], [$Int], false)}, {prop: "popParseState", name: "popParseState", pkg: "encoding/json", type: $funcType([], [], false)}, {prop: "pushParseState", name: "pushParseState", pkg: "encoding/json", type: $funcType([$Int], [], false)}, {prop: "reset", name: "reset", pkg: "encoding/json", type: $funcType([], [], false)}, {prop: "undo", name: "undo", pkg: "encoding/json", type: $funcType([$Int], [], false)}];
	tagOptions.methods = [{prop: "Contains", name: "Contains", pkg: "", type: $funcType([$String], [$Bool], false)}];
	ptrType$29.methods = [{prop: "Contains", name: "Contains", pkg: "", type: $funcType([$String], [$Bool], false)}];
	Unmarshaler.init([{prop: "UnmarshalJSON", name: "UnmarshalJSON", pkg: "", type: $funcType([sliceType$1], [$error], false)}]);
	UnmarshalTypeError.init([{prop: "Value", name: "Value", pkg: "", type: $String, tag: ""}, {prop: "Type", name: "Type", pkg: "", type: reflect.Type, tag: ""}]);
	InvalidUnmarshalError.init([{prop: "Type", name: "Type", pkg: "", type: reflect.Type, tag: ""}]);
	decodeState.init([{prop: "data", name: "data", pkg: "encoding/json", type: sliceType$1, tag: ""}, {prop: "off", name: "off", pkg: "encoding/json", type: $Int, tag: ""}, {prop: "scan", name: "scan", pkg: "encoding/json", type: scanner, tag: ""}, {prop: "nextscan", name: "nextscan", pkg: "encoding/json", type: scanner, tag: ""}, {prop: "savedError", name: "savedError", pkg: "encoding/json", type: $error, tag: ""}, {prop: "useNumber", name: "useNumber", pkg: "encoding/json", type: $Bool, tag: ""}]);
	unquotedValue.init([]);
	Marshaler.init([{prop: "MarshalJSON", name: "MarshalJSON", pkg: "", type: $funcType([], [sliceType$1, $error], false)}]);
	field.init([{prop: "name", name: "name", pkg: "encoding/json", type: $String, tag: ""}, {prop: "nameBytes", name: "nameBytes", pkg: "encoding/json", type: sliceType$1, tag: ""}, {prop: "equalFold", name: "equalFold", pkg: "encoding/json", type: funcType, tag: ""}, {prop: "tag", name: "tag", pkg: "encoding/json", type: $Bool, tag: ""}, {prop: "index", name: "index", pkg: "encoding/json", type: sliceType$4, tag: ""}, {prop: "typ", name: "typ", pkg: "encoding/json", type: reflect.Type, tag: ""}, {prop: "omitEmpty", name: "omitEmpty", pkg: "encoding/json", type: $Bool, tag: ""}, {prop: "quoted", name: "quoted", pkg: "encoding/json", type: $Bool, tag: ""}]);
	byName.init(field);
	byIndex.init(field);
	SyntaxError.init([{prop: "msg", name: "msg", pkg: "encoding/json", type: $String, tag: ""}, {prop: "Offset", name: "Offset", pkg: "", type: $Int64, tag: ""}]);
	scanner.init([{prop: "step", name: "step", pkg: "encoding/json", type: funcType$1, tag: ""}, {prop: "endTop", name: "endTop", pkg: "encoding/json", type: $Bool, tag: ""}, {prop: "parseState", name: "parseState", pkg: "encoding/json", type: sliceType$4, tag: ""}, {prop: "err", name: "err", pkg: "encoding/json", type: $error, tag: ""}, {prop: "redo", name: "redo", pkg: "encoding/json", type: $Bool, tag: ""}, {prop: "redoCode", name: "redoCode", pkg: "encoding/json", type: $Int, tag: ""}, {prop: "redoState", name: "redoState", pkg: "encoding/json", type: funcType$1, tag: ""}, {prop: "bytes", name: "bytes", pkg: "encoding/json", type: $Int64, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_json = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = encoding.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = base64.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = errors.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = fmt.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = nosync.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = math.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		$r = reflect.$init($BLOCKING); /* */ $s = 9; case 9: if ($r && $r.$blocking) { $r = $r(); }
		$r = runtime.$init($BLOCKING); /* */ $s = 10; case 10: if ($r && $r.$blocking) { $r = $r(); }
		$r = sort.$init($BLOCKING); /* */ $s = 11; case 11: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 12; case 12: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 13; case 13: if ($r && $r.$blocking) { $r = $r(); }
		$r = unicode.$init($BLOCKING); /* */ $s = 14; case 14: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf16.$init($BLOCKING); /* */ $s = 15; case 15: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 16; case 16: if ($r && $r.$blocking) { $r = $r(); }
		fieldCache = new structType$1.ptr();
		errPhase = errors.New("JSON decoder out of sync - data changing underfoot?");
		nullLiteral = new sliceType$1($stringToBytes("null"));
		numberType = reflect.TypeOf(new Number(""));
		byteSliceType = reflect.TypeOf(sliceType$1.nil);
		marshalerType = reflect.TypeOf($newDataPointer($ifaceNil, ptrType)).Elem();
		textMarshalerType = reflect.TypeOf($newDataPointer($ifaceNil, ptrType$1)).Elem();
		/* */ } return; } }; $init_json.$blocking = true; return $init_json;
	};
	return $pkg;
})();
$packages["honnef.co/go/js/util"] = (function() {
	var $pkg = {}, js, EventTarget, sliceType$1, funcType, ptrType$1;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	EventTarget = $pkg.EventTarget = $newType(0, $kindStruct, "util.EventTarget", "EventTarget", "honnef.co/go/js/util", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
		sliceType$1 = $sliceType($emptyInterface);
		funcType = $funcType([js.Object], [], false);
		ptrType$1 = $ptrType(EventTarget);
	EventTarget.ptr.prototype.AddEventListener = function(typ, useCapture, listener) {
		var t;
		t = $clone(this, EventTarget);
		t.Object.addEventListener($externalize(typ, $String), $externalize(listener, funcType), $externalize(useCapture, $Bool));
	};
	EventTarget.prototype.AddEventListener = function(typ, useCapture, listener) { return this.$val.AddEventListener(typ, useCapture, listener); };
	EventTarget.ptr.prototype.RemoveEventListener = function(typ, useCapture, listener) {
		var t;
		t = $clone(this, EventTarget);
		t.Object.removeEventListener($externalize(typ, $String), $externalize(listener, funcType), $externalize(useCapture, $Bool));
	};
	EventTarget.prototype.RemoveEventListener = function(typ, useCapture, listener) { return this.$val.RemoveEventListener(typ, useCapture, listener); };
	EventTarget.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [js.Object], true)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$1.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType$1], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType$1], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType$1], [js.Object], true)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	EventTarget.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_util = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_util.$blocking = true; return $init_util;
	};
	return $pkg;
})();
$packages["honnef.co/go/js/xhr"] = (function() {
	var $pkg = {}, errors, js, util, Request, Upload, chanType, funcType, sliceType, ptrType, ptrType$1, NewRequest;
	errors = $packages["errors"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	util = $packages["honnef.co/go/js/util"];
	Request = $pkg.Request = $newType(0, $kindStruct, "xhr.Request", "Request", "honnef.co/go/js/xhr", function(Object_, EventTarget_, ReadyState_, Response_, ResponseText_, ResponseType_, ResponseXML_, Status_, StatusText_, Timeout_, WithCredentials_, ch_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.EventTarget = EventTarget_ !== undefined ? EventTarget_ : new util.EventTarget.ptr();
		this.ReadyState = ReadyState_ !== undefined ? ReadyState_ : 0;
		this.Response = Response_ !== undefined ? Response_ : null;
		this.ResponseText = ResponseText_ !== undefined ? ResponseText_ : "";
		this.ResponseType = ResponseType_ !== undefined ? ResponseType_ : "";
		this.ResponseXML = ResponseXML_ !== undefined ? ResponseXML_ : null;
		this.Status = Status_ !== undefined ? Status_ : 0;
		this.StatusText = StatusText_ !== undefined ? StatusText_ : "";
		this.Timeout = Timeout_ !== undefined ? Timeout_ : 0;
		this.WithCredentials = WithCredentials_ !== undefined ? WithCredentials_ : false;
		this.ch = ch_ !== undefined ? ch_ : chanType.nil;
	});
	Upload = $pkg.Upload = $newType(0, $kindStruct, "xhr.Upload", "Upload", "honnef.co/go/js/xhr", function(Object_, EventTarget_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.EventTarget = EventTarget_ !== undefined ? EventTarget_ : new util.EventTarget.ptr();
	});
		chanType = $chanType($error, false, false);
		funcType = $funcType([js.Object], [], false);
		sliceType = $sliceType($emptyInterface);
		ptrType = $ptrType(Upload);
		ptrType$1 = $ptrType(Request);
	Request.ptr.prototype.Upload = function() {
		var o, r;
		r = this;
		o = r.Object.upload;
		return new Upload.ptr(o, new util.EventTarget.ptr(o));
	};
	Request.prototype.Upload = function() { return this.$val.Upload(); };
	NewRequest = $pkg.NewRequest = function(method, url) {
		var o, r;
		o = new ($global.XMLHttpRequest)();
		r = new Request.ptr(o, new util.EventTarget.ptr(o), 0, null, "", "", null, 0, "", 0, false, chanType.nil);
		r.Object.open($externalize(method, $String), $externalize(url, $String), $externalize(true, $Bool));
		return r;
	};
	Request.ptr.prototype.ResponseHeaders = function() {
		var r;
		r = this;
		return $internalize(r.Object.getAllResponseHeaders(), $String);
	};
	Request.prototype.ResponseHeaders = function() { return this.$val.ResponseHeaders(); };
	Request.ptr.prototype.ResponseHeader = function(name) {
		var r, value;
		r = this;
		value = r.Object.getResponseHeader($externalize(name, $String));
		if (value === null) {
			return "";
		}
		return $internalize(value, $String);
	};
	Request.prototype.ResponseHeader = function(name) { return this.$val.ResponseHeader(name); };
	Request.ptr.prototype.Abort = function() {
		var _selection, r;
		r = this;
		if (r.ch === chanType.nil) {
			return;
		}
		r.Object.abort();
		_selection = $select([[r.ch, $pkg.ErrAborted], []]);
	};
	Request.prototype.Abort = function() { return this.$val.Abort(); };
	Request.ptr.prototype.OverrideMimeType = function(mimetype) {
		var r;
		r = this;
		r.Object.overrideMimeType($externalize(mimetype, $String));
	};
	Request.prototype.OverrideMimeType = function(mimetype) { return this.$val.OverrideMimeType(mimetype); };
	Request.ptr.prototype.Send = function(data, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, r, val;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_Send = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		if (!(r.ch === chanType.nil)) {
			$panic(new $String("must not use a Request for multiple requests"));
		}
		r.ch = new chanType(1);
		r.EventTarget.AddEventListener("load", false, (function(param) {
			$go((function($b) {
				var $args = arguments, $r, $s = 0, $this = this;
				/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
				$r = $send(r.ch, $ifaceNil, $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
				/* */ case -1: } return; } }; $f.$blocking = true; return $f;
			}), []);
		}));
		r.EventTarget.AddEventListener("error", false, (function(o) {
			$go((function($b) {
				var $args = arguments, $r, $s = 0, $this = this;
				/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
				$r = $send(r.ch, $pkg.ErrFailure, $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
				/* */ case -1: } return; } }; $f.$blocking = true; return $f;
			}), []);
		}));
		r.EventTarget.AddEventListener("timeout", false, (function(param) {
			$go((function($b) {
				var $args = arguments, $r, $s = 0, $this = this;
				/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
				$r = $send(r.ch, $pkg.ErrTimeout, $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
				/* */ case -1: } return; } }; $f.$blocking = true; return $f;
			}), []);
		}));
		r.Object.send($externalize(data, $emptyInterface));
		_r = $recv(r.ch, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		val = _r[0];
		return val;
		/* */ case -1: } return; } }; $blocking_Send.$blocking = true; return $blocking_Send;
	};
	Request.prototype.Send = function(data, $b) { return this.$val.Send(data, $b); };
	Request.ptr.prototype.SetRequestHeader = function(header, value) {
		var r;
		r = this;
		r.Object.setRequestHeader($externalize(header, $String), $externalize(value, $String));
	};
	Request.prototype.SetRequestHeader = function(header, value) { return this.$val.SetRequestHeader(header, value); };
	Request.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$1.methods = [{prop: "Abort", name: "Abort", pkg: "", type: $funcType([], [], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "OverrideMimeType", name: "OverrideMimeType", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "ResponseHeader", name: "ResponseHeader", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "ResponseHeaders", name: "ResponseHeaders", pkg: "", type: $funcType([], [$String], false)}, {prop: "Send", name: "Send", pkg: "", type: $funcType([$emptyInterface], [$error], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetRequestHeader", name: "SetRequestHeader", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Upload", name: "Upload", pkg: "", type: $funcType([], [ptrType], false)}];
	Upload.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Request.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "EventTarget", name: "", pkg: "", type: util.EventTarget, tag: ""}, {prop: "ReadyState", name: "ReadyState", pkg: "", type: $Int, tag: "js:\"readyState\""}, {prop: "Response", name: "Response", pkg: "", type: js.Object, tag: "js:\"response\""}, {prop: "ResponseText", name: "ResponseText", pkg: "", type: $String, tag: "js:\"responseText\""}, {prop: "ResponseType", name: "ResponseType", pkg: "", type: $String, tag: "js:\"responseType\""}, {prop: "ResponseXML", name: "ResponseXML", pkg: "", type: js.Object, tag: "js:\"responseXML\""}, {prop: "Status", name: "Status", pkg: "", type: $Int, tag: "js:\"status\""}, {prop: "StatusText", name: "StatusText", pkg: "", type: $String, tag: "js:\"statusText\""}, {prop: "Timeout", name: "Timeout", pkg: "", type: $Int, tag: "js:\"timeout\""}, {prop: "WithCredentials", name: "WithCredentials", pkg: "", type: $Bool, tag: "js:\"withCredentials\""}, {prop: "ch", name: "ch", pkg: "honnef.co/go/js/xhr", type: chanType, tag: ""}]);
	Upload.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "EventTarget", name: "", pkg: "", type: util.EventTarget, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_xhr = function() { while (true) { switch ($s) { case 0:
		$r = errors.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = util.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$pkg.ErrAborted = errors.New("request aborted");
		$pkg.ErrTimeout = errors.New("request timed out");
		$pkg.ErrFailure = errors.New("send failed");
		/* */ } return; } }; $init_xhr.$blocking = true; return $init_xhr;
	};
	return $pkg;
})();
$packages["net/url"] = (function() {
	var $pkg = {}, bytes, errors, sort, strconv, strings, sliceType, shouldEscape, QueryEscape, escape;
	bytes = $packages["bytes"];
	errors = $packages["errors"];
	sort = $packages["sort"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
		sliceType = $sliceType($Uint8);
	shouldEscape = function(c, mode) {
		var _ref, _ref$1;
		if (65 <= c && c <= 90 || 97 <= c && c <= 122 || 48 <= c && c <= 57) {
			return false;
		}
		_ref = c;
		if (_ref === 45 || _ref === 95 || _ref === 46 || _ref === 126) {
			return false;
		} else if (_ref === 36 || _ref === 38 || _ref === 43 || _ref === 44 || _ref === 47 || _ref === 58 || _ref === 59 || _ref === 61 || _ref === 63 || _ref === 64) {
			_ref$1 = mode;
			if (_ref$1 === 1) {
				return c === 63;
			} else if (_ref$1 === 2) {
				return (c === 64) || (c === 47) || (c === 63) || (c === 58);
			} else if (_ref$1 === 3) {
				return true;
			} else if (_ref$1 === 4) {
				return false;
			}
		}
		return true;
	};
	QueryEscape = $pkg.QueryEscape = function(s) {
		return escape(s, 3);
	};
	escape = function(s, mode) {
		var _tmp, _tmp$1, c, c$1, hexCount, i, i$1, j, spaceCount, t, x, x$1;
		_tmp = 0; _tmp$1 = 0; spaceCount = _tmp; hexCount = _tmp$1;
		i = 0;
		while (i < s.length) {
			c = s.charCodeAt(i);
			if (shouldEscape(c, mode)) {
				if ((c === 32) && (mode === 3)) {
					spaceCount = spaceCount + (1) >> 0;
				} else {
					hexCount = hexCount + (1) >> 0;
				}
			}
			i = i + (1) >> 0;
		}
		if ((spaceCount === 0) && (hexCount === 0)) {
			return s;
		}
		t = $makeSlice(sliceType, (s.length + (2 * hexCount >> 0) >> 0));
		j = 0;
		i$1 = 0;
		while (i$1 < s.length) {
			c$1 = s.charCodeAt(i$1);
			if ((c$1 === 32) && (mode === 3)) {
				(j < 0 || j >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + j] = 43;
				j = j + (1) >> 0;
			} else if (shouldEscape(c$1, mode)) {
				(j < 0 || j >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + j] = 37;
				(x = j + 1 >> 0, (x < 0 || x >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + x] = "0123456789ABCDEF".charCodeAt((c$1 >>> 4 << 24 >>> 24)));
				(x$1 = j + 2 >> 0, (x$1 < 0 || x$1 >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + x$1] = "0123456789ABCDEF".charCodeAt(((c$1 & 15) >>> 0)));
				j = j + (3) >> 0;
			} else {
				(j < 0 || j >= t.$length) ? $throwRuntimeError("index out of range") : t.$array[t.$offset + j] = s.charCodeAt(i$1);
				j = j + (1) >> 0;
			}
			i$1 = i$1 + (1) >> 0;
		}
		return $bytesToString(t);
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_url = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = errors.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = sort.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_url.$blocking = true; return $init_url;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/humble/model"] = (function() {
	var $pkg = {}, json, fmt, xhr, url, reflect, strconv, Model, sliceType, sliceType$1, Read, ReadAll, Delete, Create;
	json = $packages["encoding/json"];
	fmt = $packages["fmt"];
	xhr = $packages["honnef.co/go/js/xhr"];
	url = $packages["net/url"];
	reflect = $packages["reflect"];
	strconv = $packages["strconv"];
	Model = $pkg.Model = $newType(8, $kindInterface, "model.Model", "Model", "github.com/fabioberger/humble/model", null);
		sliceType = $sliceType($emptyInterface);
		sliceType$1 = $sliceType($Uint8);
	Read = $pkg.Read = function(model, id, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, modelType, newModel, newModelInterface, newModelVal, req, urlRoot;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_Read = function() { s: while (true) { switch ($s) { case 0:
		modelType = reflect.TypeOf(model).Elem();
		newModelVal = reflect.New(modelType);
		newModelInterface = newModelVal.Interface();
		newModel = $assertType(newModelInterface, Model);
		urlRoot = newModel.RootURL() + "/" + strconv.Itoa(id);
		req = xhr.NewRequest("GET", urlRoot);
		req.Object.timeout = 1000;
		req.Object.responseType = $externalize("text", $String);
		req.Object.withCredentials = $externalize(true, $Bool);
		_r = req.Send($ifaceNil, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Something went wrong with GET request to %s. %s", new sliceType([new $String(urlRoot), new $String(err.Error())]));
		}
		err = json.Unmarshal(new sliceType$1($stringToBytes($internalize(req.Object.response, $String))), model);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Failed to unmarshal response into object, with Error: %s.\nResponse was: %s", new sliceType([err, new $String($internalize(req.Object.response, $String))]));
		}
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_Read.$blocking = true; return $blocking_Read;
	};
	ReadAll = $pkg.ReadAll = function(models, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, modelType, modelTypePtr, modelsType, newModel, newModelInterface, newModelVal, req, urlRoot;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_ReadAll = function() { s: while (true) { switch ($s) { case 0:
		modelsType = reflect.TypeOf(models).Elem();
		modelTypePtr = modelsType.Elem();
		modelType = modelTypePtr.Elem();
		newModelVal = reflect.New(modelType);
		newModelInterface = newModelVal.Interface();
		newModel = $assertType(newModelInterface, Model);
		urlRoot = newModel.RootURL();
		req = xhr.NewRequest("GET", urlRoot);
		req.Object.timeout = 1000;
		req.Object.responseType = $externalize("text", $String);
		req.Object.withCredentials = $externalize(true, $Bool);
		_r = req.Send($ifaceNil, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Something went wrong with GET request to %s. %s", new sliceType([new $String(urlRoot), new $String(err.Error())]));
		}
		err = json.Unmarshal(new sliceType$1($stringToBytes($internalize(req.Object.response, $String))), models);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Failed to unmarshal response into object, with Error: %s.\nResponse was: %s", new sliceType([err, new $String($internalize(req.Object.response, $String))]));
		}
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_ReadAll.$blocking = true; return $blocking_ReadAll;
	};
	Delete = $pkg.Delete = function(model, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, fullURL, req;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_Delete = function() { s: while (true) { switch ($s) { case 0:
		fullURL = model.RootURL() + "/" + model.GetId();
		req = xhr.NewRequest("DELETE", fullURL);
		req.Object.timeout = 1000;
		req.Object.responseType = $externalize("text", $String);
		req.Object.withCredentials = $externalize(true, $Bool);
		_r = req.Send($ifaceNil, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Something went wrong with DELETE request to %s. %s", new sliceType([new $String(fullURL), new $String(err.Error())]));
		}
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_Delete.$blocking = true; return $blocking_Delete;
	};
	Create = $pkg.Create = function(model, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, bodyString, err, field, fieldName, fullURL, i, modelVal, modelValPtr, modelValType, req, value;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_Create = function() { s: while (true) { switch ($s) { case 0:
		fullURL = model.RootURL();
		bodyString = "";
		modelValPtr = reflect.ValueOf(model);
		modelVal = modelValPtr.Elem();
		modelValType = modelVal.Type();
		i = 0;
		while (i < modelValType.NumField()) {
			field = modelVal.Field(i);
			fieldName = modelValType.Field(i).Name;
			value = fmt.Sprint(new sliceType([field.Interface()]));
			bodyString = bodyString + (fieldName + "=" + url.QueryEscape(value));
			if (!((i === (modelValType.NumField() - 1 >> 0)))) {
				bodyString = bodyString + ("&");
			}
			i = i + (1) >> 0;
		}
		req = xhr.NewRequest("POST", fullURL);
		req.Object.timeout = 1000;
		req.Object.responseType = $externalize("text", $String);
		req.SetRequestHeader("Content-Type", "application/x-www-form-urlencoded");
		req.Object.withCredentials = $externalize(true, $Bool);
		_r = req.Send(new $String(bodyString), $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		err = json.Unmarshal(new sliceType$1($stringToBytes($internalize(req.Object.response, $String))), model);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return fmt.Errorf("Failed to unmarshal response into object, with Error: %s.\nResponse was: %s", new sliceType([err, new $String($internalize(req.Object.response, $String))]));
		}
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_Create.$blocking = true; return $blocking_Create;
	};
	Model.init([{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "RootURL", name: "RootURL", pkg: "", type: $funcType([], [$String], false)}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_model = function() { while (true) { switch ($s) { case 0:
		$r = json.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = fmt.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = xhr.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = url.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = reflect.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_model.$blocking = true; return $init_model;
	};
	return $pkg;
})();
$packages["honnef.co/go/js/console"] = (function() {
	var $pkg = {}, bytes, js, sliceType, c, Error, Log, Warn;
	bytes = $packages["bytes"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
		sliceType = $sliceType($emptyInterface);
	Error = $pkg.Error = function(objs) {
		var obj;
		(obj = c, obj.error.apply(obj, $externalize(objs, sliceType)));
	};
	Log = $pkg.Log = function(objs) {
		var obj;
		(obj = c, obj.log.apply(obj, $externalize(objs, sliceType)));
	};
	Warn = $pkg.Warn = function(objs) {
		var obj;
		(obj = c, obj.warn.apply(obj, $externalize(objs, sliceType)));
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_console = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		c = $global.console;
		/* */ } return; } }; $init_console.$blocking = true; return $init_console;
	};
	return $pkg;
})();
$packages["regexp/syntax"] = (function() {
	var $pkg = {}, bytes, sort, strconv, strings, unicode, utf8, patchList, frag, compiler, Error, ErrorCode, Flags, parser, charGroup, ranges, Prog, InstOp, EmptyOp, Inst, Regexp, Op, sliceType, sliceType$1, sliceType$2, sliceType$3, ptrType, sliceType$4, arrayType, arrayType$1, ptrType$1, ptrType$2, ptrType$3, ptrType$4, ptrType$5, ptrType$6, ptrType$7, ptrType$8, ptrType$9, sliceType$5, ptrType$10, ptrType$11, anyRuneNotNL, anyRune, anyTable, code1, code2, code3, perlGroup, code4, code5, code6, code7, code8, code9, code10, code11, code12, code13, code14, code15, code16, code17, posixGroup, instOpNames, _map, _key, _map$1, _key$1, Compile, minFoldRune, repeatIsValid, cleanAlt, literalRegexp, Parse, isValidCaptureName, isCharClass, matchRune, mergeCharClass, unicodeTable, cleanClass, appendLiteral, appendRange, appendFoldedRange, appendClass, appendFoldedClass, appendNegatedClass, appendTable, appendNegatedTable, negateClass, checkUTF8, nextRune, isalnum, unhex, EmptyOpContext, IsWordChar, wordRune, bw, dumpProg, u32, dumpInst, writeRegexp, escape, simplify1;
	bytes = $packages["bytes"];
	sort = $packages["sort"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
	unicode = $packages["unicode"];
	utf8 = $packages["unicode/utf8"];
	patchList = $pkg.patchList = $newType(4, $kindUint32, "syntax.patchList", "patchList", "regexp/syntax", null);
	frag = $pkg.frag = $newType(0, $kindStruct, "syntax.frag", "frag", "regexp/syntax", function(i_, out_) {
		this.$val = this;
		this.i = i_ !== undefined ? i_ : 0;
		this.out = out_ !== undefined ? out_ : 0;
	});
	compiler = $pkg.compiler = $newType(0, $kindStruct, "syntax.compiler", "compiler", "regexp/syntax", function(p_) {
		this.$val = this;
		this.p = p_ !== undefined ? p_ : ptrType$3.nil;
	});
	Error = $pkg.Error = $newType(0, $kindStruct, "syntax.Error", "Error", "regexp/syntax", function(Code_, Expr_) {
		this.$val = this;
		this.Code = Code_ !== undefined ? Code_ : "";
		this.Expr = Expr_ !== undefined ? Expr_ : "";
	});
	ErrorCode = $pkg.ErrorCode = $newType(8, $kindString, "syntax.ErrorCode", "ErrorCode", "regexp/syntax", null);
	Flags = $pkg.Flags = $newType(2, $kindUint16, "syntax.Flags", "Flags", "regexp/syntax", null);
	parser = $pkg.parser = $newType(0, $kindStruct, "syntax.parser", "parser", "regexp/syntax", function(flags_, stack_, free_, numCap_, wholeRegexp_, tmpClass_) {
		this.$val = this;
		this.flags = flags_ !== undefined ? flags_ : 0;
		this.stack = stack_ !== undefined ? stack_ : sliceType$4.nil;
		this.free = free_ !== undefined ? free_ : ptrType.nil;
		this.numCap = numCap_ !== undefined ? numCap_ : 0;
		this.wholeRegexp = wholeRegexp_ !== undefined ? wholeRegexp_ : "";
		this.tmpClass = tmpClass_ !== undefined ? tmpClass_ : sliceType.nil;
	});
	charGroup = $pkg.charGroup = $newType(0, $kindStruct, "syntax.charGroup", "charGroup", "regexp/syntax", function(sign_, class$1_) {
		this.$val = this;
		this.sign = sign_ !== undefined ? sign_ : 0;
		this.class$1 = class$1_ !== undefined ? class$1_ : sliceType.nil;
	});
	ranges = $pkg.ranges = $newType(0, $kindStruct, "syntax.ranges", "ranges", "regexp/syntax", function(p_) {
		this.$val = this;
		this.p = p_ !== undefined ? p_ : ptrType$1.nil;
	});
	Prog = $pkg.Prog = $newType(0, $kindStruct, "syntax.Prog", "Prog", "regexp/syntax", function(Inst_, Start_, NumCap_) {
		this.$val = this;
		this.Inst = Inst_ !== undefined ? Inst_ : sliceType$5.nil;
		this.Start = Start_ !== undefined ? Start_ : 0;
		this.NumCap = NumCap_ !== undefined ? NumCap_ : 0;
	});
	InstOp = $pkg.InstOp = $newType(1, $kindUint8, "syntax.InstOp", "InstOp", "regexp/syntax", null);
	EmptyOp = $pkg.EmptyOp = $newType(1, $kindUint8, "syntax.EmptyOp", "EmptyOp", "regexp/syntax", null);
	Inst = $pkg.Inst = $newType(0, $kindStruct, "syntax.Inst", "Inst", "regexp/syntax", function(Op_, Out_, Arg_, Rune_) {
		this.$val = this;
		this.Op = Op_ !== undefined ? Op_ : 0;
		this.Out = Out_ !== undefined ? Out_ : 0;
		this.Arg = Arg_ !== undefined ? Arg_ : 0;
		this.Rune = Rune_ !== undefined ? Rune_ : sliceType.nil;
	});
	Regexp = $pkg.Regexp = $newType(0, $kindStruct, "syntax.Regexp", "Regexp", "regexp/syntax", function(Op_, Flags_, Sub_, Sub0_, Rune_, Rune0_, Min_, Max_, Cap_, Name_) {
		this.$val = this;
		this.Op = Op_ !== undefined ? Op_ : 0;
		this.Flags = Flags_ !== undefined ? Flags_ : 0;
		this.Sub = Sub_ !== undefined ? Sub_ : sliceType$4.nil;
		this.Sub0 = Sub0_ !== undefined ? Sub0_ : arrayType.zero();
		this.Rune = Rune_ !== undefined ? Rune_ : sliceType.nil;
		this.Rune0 = Rune0_ !== undefined ? Rune0_ : arrayType$1.zero();
		this.Min = Min_ !== undefined ? Min_ : 0;
		this.Max = Max_ !== undefined ? Max_ : 0;
		this.Cap = Cap_ !== undefined ? Cap_ : 0;
		this.Name = Name_ !== undefined ? Name_ : "";
	});
	Op = $pkg.Op = $newType(1, $kindUint8, "syntax.Op", "Op", "regexp/syntax", null);
		sliceType = $sliceType($Int32);
		sliceType$1 = $sliceType(unicode.Range16);
		sliceType$2 = $sliceType(unicode.Range32);
		sliceType$3 = $sliceType($String);
		ptrType = $ptrType(Regexp);
		sliceType$4 = $sliceType(ptrType);
		arrayType = $arrayType(ptrType, 1);
		arrayType$1 = $arrayType($Int32, 2);
		ptrType$1 = $ptrType(sliceType);
		ptrType$2 = $ptrType(unicode.RangeTable);
		ptrType$3 = $ptrType(Prog);
		ptrType$4 = $ptrType(patchList);
		ptrType$5 = $ptrType(compiler);
		ptrType$6 = $ptrType(Error);
		ptrType$7 = $ptrType(ErrorCode);
		ptrType$8 = $ptrType(parser);
		ptrType$9 = $ptrType(ranges);
		sliceType$5 = $sliceType(Inst);
		ptrType$10 = $ptrType(Inst);
		ptrType$11 = $ptrType(InstOp);
	patchList.prototype.next = function(p) {
		var i, l, x, x$1;
		l = this.$val;
		i = (x = p.Inst, x$1 = l >>> 1 >>> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (((l & 1) >>> 0) === 0) {
			return (i.Out >>> 0);
		}
		return (i.Arg >>> 0);
	};
	$ptrType(patchList).prototype.next = function(p) { return new patchList(this.$get()).next(p); };
	patchList.prototype.patch = function(p, val) {
		var i, l, x, x$1;
		l = this.$val;
		while (!((l === 0))) {
			i = (x = p.Inst, x$1 = l >>> 1 >>> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
			if (((l & 1) >>> 0) === 0) {
				l = (i.Out >>> 0);
				i.Out = val;
			} else {
				l = (i.Arg >>> 0);
				i.Arg = val;
			}
		}
	};
	$ptrType(patchList).prototype.patch = function(p, val) { return new patchList(this.$get()).patch(p, val); };
	patchList.prototype.append = function(p, l2) {
		var i, l1, last, next, x, x$1;
		l1 = this.$val;
		if (l1 === 0) {
			return l2;
		}
		if (l2 === 0) {
			return l1;
		}
		last = l1;
		while (true) {
			next = new patchList(last).next(p);
			if (next === 0) {
				break;
			}
			last = next;
		}
		i = (x = p.Inst, x$1 = last >>> 1 >>> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (((last & 1) >>> 0) === 0) {
			i.Out = (l2 >>> 0);
		} else {
			i.Arg = (l2 >>> 0);
		}
		return l1;
	};
	$ptrType(patchList).prototype.append = function(p, l2) { return new patchList(this.$get()).append(p, l2); };
	Compile = $pkg.Compile = function(re) {
		var c, f;
		c = $clone(new compiler.ptr(), compiler);
		c.init();
		f = $clone(c.compile(re), frag);
		new patchList(f.out).patch(c.p, c.inst(4).i);
		c.p.Start = (f.i >> 0);
		return [c.p, $ifaceNil];
	};
	compiler.ptr.prototype.init = function() {
		var c;
		c = this;
		c.p = new Prog.ptr();
		c.p.NumCap = 2;
		c.inst(5);
	};
	compiler.prototype.init = function() { return this.$val.init(); };
	compiler.ptr.prototype.compile = function(re) {
		var _i, _i$1, _i$2, _ref, _ref$1, _ref$2, _ref$3, bra, c, f, f$1, f$2, f1, i, j, ket, sub, sub$1, sub$2, x, x$1, x$2, x$3;
		c = this;
		_ref = re.Op;
		if (_ref === 1) {
			return c.fail();
		} else if (_ref === 2) {
			return c.nop();
		} else if (_ref === 3) {
			if (re.Rune.$length === 0) {
				return c.nop();
			}
			f = $clone(new frag.ptr(), frag);
			_ref$1 = re.Rune;
			_i = 0;
			while (_i < _ref$1.$length) {
				j = _i;
				f1 = $clone(c.rune($subslice(re.Rune, j, (j + 1 >> 0)), re.Flags), frag);
				if (j === 0) {
					$copy(f, f1, frag);
				} else {
					$copy(f, c.cat(f, f1), frag);
				}
				_i++;
			}
			return f;
		} else if (_ref === 4) {
			return c.rune(re.Rune, re.Flags);
		} else if (_ref === 5) {
			return c.rune(anyRuneNotNL, 0);
		} else if (_ref === 6) {
			return c.rune(anyRune, 0);
		} else if (_ref === 7) {
			return c.empty(1);
		} else if (_ref === 8) {
			return c.empty(2);
		} else if (_ref === 9) {
			return c.empty(4);
		} else if (_ref === 10) {
			return c.empty(8);
		} else if (_ref === 11) {
			return c.empty(16);
		} else if (_ref === 12) {
			return c.empty(32);
		} else if (_ref === 13) {
			bra = $clone(c.cap(((re.Cap << 1 >> 0) >>> 0)), frag);
			sub = $clone(c.compile((x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]))), frag);
			ket = $clone(c.cap((((re.Cap << 1 >> 0) | 1) >>> 0)), frag);
			return c.cat(c.cat(bra, sub), ket);
		} else if (_ref === 14) {
			return c.star(c.compile((x$1 = re.Sub, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0]))), !((((re.Flags & 32) >>> 0) === 0)));
		} else if (_ref === 15) {
			return c.plus(c.compile((x$2 = re.Sub, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0]))), !((((re.Flags & 32) >>> 0) === 0)));
		} else if (_ref === 16) {
			return c.quest(c.compile((x$3 = re.Sub, ((0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0]))), !((((re.Flags & 32) >>> 0) === 0)));
		} else if (_ref === 18) {
			if (re.Sub.$length === 0) {
				return c.nop();
			}
			f$1 = $clone(new frag.ptr(), frag);
			_ref$2 = re.Sub;
			_i$1 = 0;
			while (_i$1 < _ref$2.$length) {
				i = _i$1;
				sub$1 = ((_i$1 < 0 || _i$1 >= _ref$2.$length) ? $throwRuntimeError("index out of range") : _ref$2.$array[_ref$2.$offset + _i$1]);
				if (i === 0) {
					$copy(f$1, c.compile(sub$1), frag);
				} else {
					$copy(f$1, c.cat(f$1, c.compile(sub$1)), frag);
				}
				_i$1++;
			}
			return f$1;
		} else if (_ref === 19) {
			f$2 = $clone(new frag.ptr(), frag);
			_ref$3 = re.Sub;
			_i$2 = 0;
			while (_i$2 < _ref$3.$length) {
				sub$2 = ((_i$2 < 0 || _i$2 >= _ref$3.$length) ? $throwRuntimeError("index out of range") : _ref$3.$array[_ref$3.$offset + _i$2]);
				$copy(f$2, c.alt(f$2, c.compile(sub$2)), frag);
				_i$2++;
			}
			return f$2;
		}
		$panic(new $String("regexp: unhandled case in compile"));
	};
	compiler.prototype.compile = function(re) { return this.$val.compile(re); };
	compiler.ptr.prototype.inst = function(op) {
		var c, f;
		c = this;
		f = new frag.ptr((c.p.Inst.$length >>> 0), 0);
		c.p.Inst = $append(c.p.Inst, new Inst.ptr(op, 0, 0, sliceType.nil));
		return f;
	};
	compiler.prototype.inst = function(op) { return this.$val.inst(op); };
	compiler.ptr.prototype.nop = function() {
		var c, f;
		c = this;
		f = $clone(c.inst(6), frag);
		f.out = ((f.i << 1 >>> 0) >>> 0);
		return f;
	};
	compiler.prototype.nop = function() { return this.$val.nop(); };
	compiler.ptr.prototype.fail = function() {
		var c;
		c = this;
		return new frag.ptr(0, 0);
	};
	compiler.prototype.fail = function() { return this.$val.fail(); };
	compiler.ptr.prototype.cap = function(arg) {
		var c, f, x, x$1;
		c = this;
		f = $clone(c.inst(2), frag);
		f.out = ((f.i << 1 >>> 0) >>> 0);
		(x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Arg = arg;
		if (c.p.NumCap < ((arg >> 0) + 1 >> 0)) {
			c.p.NumCap = (arg >> 0) + 1 >> 0;
		}
		return f;
	};
	compiler.prototype.cap = function(arg) { return this.$val.cap(arg); };
	compiler.ptr.prototype.cat = function(f1, f2) {
		var c;
		c = this;
		f2 = $clone(f2, frag);
		f1 = $clone(f1, frag);
		if ((f1.i === 0) || (f2.i === 0)) {
			return new frag.ptr(0, 0);
		}
		new patchList(f1.out).patch(c.p, f2.i);
		return new frag.ptr(f1.i, f2.out);
	};
	compiler.prototype.cat = function(f1, f2) { return this.$val.cat(f1, f2); };
	compiler.ptr.prototype.alt = function(f1, f2) {
		var c, f, i, x, x$1;
		c = this;
		f2 = $clone(f2, frag);
		f1 = $clone(f1, frag);
		if (f1.i === 0) {
			return f2;
		}
		if (f2.i === 0) {
			return f1;
		}
		f = $clone(c.inst(0), frag);
		i = (x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		i.Out = f1.i;
		i.Arg = f2.i;
		f.out = new patchList(f1.out).append(c.p, f2.out);
		return f;
	};
	compiler.prototype.alt = function(f1, f2) { return this.$val.alt(f1, f2); };
	compiler.ptr.prototype.quest = function(f1, nongreedy) {
		var c, f, i, x, x$1;
		c = this;
		f1 = $clone(f1, frag);
		f = $clone(c.inst(0), frag);
		i = (x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (nongreedy) {
			i.Arg = f1.i;
			f.out = ((f.i << 1 >>> 0) >>> 0);
		} else {
			i.Out = f1.i;
			f.out = ((((f.i << 1 >>> 0) | 1) >>> 0) >>> 0);
		}
		f.out = new patchList(f.out).append(c.p, f1.out);
		return f;
	};
	compiler.prototype.quest = function(f1, nongreedy) { return this.$val.quest(f1, nongreedy); };
	compiler.ptr.prototype.star = function(f1, nongreedy) {
		var c, f, i, x, x$1;
		c = this;
		f1 = $clone(f1, frag);
		f = $clone(c.inst(0), frag);
		i = (x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (nongreedy) {
			i.Arg = f1.i;
			f.out = ((f.i << 1 >>> 0) >>> 0);
		} else {
			i.Out = f1.i;
			f.out = ((((f.i << 1 >>> 0) | 1) >>> 0) >>> 0);
		}
		new patchList(f1.out).patch(c.p, f.i);
		return f;
	};
	compiler.prototype.star = function(f1, nongreedy) { return this.$val.star(f1, nongreedy); };
	compiler.ptr.prototype.plus = function(f1, nongreedy) {
		var c;
		c = this;
		f1 = $clone(f1, frag);
		return new frag.ptr(f1.i, c.star(f1, nongreedy).out);
	};
	compiler.prototype.plus = function(f1, nongreedy) { return this.$val.plus(f1, nongreedy); };
	compiler.ptr.prototype.empty = function(op) {
		var c, f, x, x$1;
		c = this;
		f = $clone(c.inst(3), frag);
		(x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Arg = (op >>> 0);
		f.out = ((f.i << 1 >>> 0) >>> 0);
		return f;
	};
	compiler.prototype.empty = function(op) { return this.$val.empty(op); };
	compiler.ptr.prototype.rune = function(r, flags) {
		var c, f, i, x, x$1;
		c = this;
		f = $clone(c.inst(7), frag);
		i = (x = c.p.Inst, x$1 = f.i, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		i.Rune = r;
		flags = (flags & (1)) >>> 0;
		if (!((r.$length === 1)) || (unicode.SimpleFold(((0 < 0 || 0 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 0])) === ((0 < 0 || 0 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 0]))) {
			flags = flags & ~(1);
		}
		i.Arg = (flags >>> 0);
		f.out = ((f.i << 1 >>> 0) >>> 0);
		if ((((flags & 1) >>> 0) === 0) && ((r.$length === 1) || (r.$length === 2) && (((0 < 0 || 0 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 0]) === ((1 < 0 || 1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 1])))) {
			i.Op = 8;
		} else if ((r.$length === 2) && (((0 < 0 || 0 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 0]) === 0) && (((1 < 0 || 1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 1]) === 1114111)) {
			i.Op = 9;
		} else if ((r.$length === 4) && (((0 < 0 || 0 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 0]) === 0) && (((1 < 0 || 1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 1]) === 9) && (((2 < 0 || 2 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 2]) === 11) && (((3 < 0 || 3 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + 3]) === 1114111)) {
			i.Op = 10;
		}
		return f;
	};
	compiler.prototype.rune = function(r, flags) { return this.$val.rune(r, flags); };
	Error.ptr.prototype.Error = function() {
		var e;
		e = this;
		return "error parsing regexp: " + new ErrorCode(e.Code).String() + ": `" + e.Expr + "`";
	};
	Error.prototype.Error = function() { return this.$val.Error(); };
	ErrorCode.prototype.String = function() {
		var e;
		e = this.$val;
		return e;
	};
	$ptrType(ErrorCode).prototype.String = function() { return new ErrorCode(this.$get()).String(); };
	parser.ptr.prototype.newRegexp = function(op) {
		var p, re;
		p = this;
		re = p.free;
		if (!(re === ptrType.nil)) {
			p.free = re.Sub0[0];
			$copy(re, new Regexp.ptr(0, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, ""), Regexp);
		} else {
			re = new Regexp.ptr();
		}
		re.Op = op;
		return re;
	};
	parser.prototype.newRegexp = function(op) { return this.$val.newRegexp(op); };
	parser.ptr.prototype.reuse = function(re) {
		var p;
		p = this;
		re.Sub0[0] = p.free;
		p.free = re;
	};
	parser.prototype.reuse = function(re) { return this.$val.reuse(re); };
	parser.ptr.prototype.push = function(re) {
		var p, x, x$1, x$10, x$11, x$12, x$13, x$14, x$15, x$16, x$17, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		p = this;
		if ((re.Op === 4) && (re.Rune.$length === 2) && ((x = re.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])) === (x$1 = re.Rune, ((1 < 0 || 1 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 1])))) {
			if (p.maybeConcat((x$16 = re.Rune, ((0 < 0 || 0 >= x$16.$length) ? $throwRuntimeError("index out of range") : x$16.$array[x$16.$offset + 0])), p.flags & ~1)) {
				return ptrType.nil;
			}
			re.Op = 3;
			re.Rune = $subslice(re.Rune, 0, 1);
			re.Flags = p.flags & ~1;
		} else if ((re.Op === 4) && (re.Rune.$length === 4) && ((x$2 = re.Rune, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0])) === (x$3 = re.Rune, ((1 < 0 || 1 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 1]))) && ((x$4 = re.Rune, ((2 < 0 || 2 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 2])) === (x$5 = re.Rune, ((3 < 0 || 3 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 3]))) && (unicode.SimpleFold((x$6 = re.Rune, ((0 < 0 || 0 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + 0]))) === (x$7 = re.Rune, ((2 < 0 || 2 >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + 2]))) && (unicode.SimpleFold((x$8 = re.Rune, ((2 < 0 || 2 >= x$8.$length) ? $throwRuntimeError("index out of range") : x$8.$array[x$8.$offset + 2]))) === (x$9 = re.Rune, ((0 < 0 || 0 >= x$9.$length) ? $throwRuntimeError("index out of range") : x$9.$array[x$9.$offset + 0]))) || (re.Op === 4) && (re.Rune.$length === 2) && (((x$10 = re.Rune, ((0 < 0 || 0 >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + 0])) + 1 >> 0) === (x$11 = re.Rune, ((1 < 0 || 1 >= x$11.$length) ? $throwRuntimeError("index out of range") : x$11.$array[x$11.$offset + 1]))) && (unicode.SimpleFold((x$12 = re.Rune, ((0 < 0 || 0 >= x$12.$length) ? $throwRuntimeError("index out of range") : x$12.$array[x$12.$offset + 0]))) === (x$13 = re.Rune, ((1 < 0 || 1 >= x$13.$length) ? $throwRuntimeError("index out of range") : x$13.$array[x$13.$offset + 1]))) && (unicode.SimpleFold((x$14 = re.Rune, ((1 < 0 || 1 >= x$14.$length) ? $throwRuntimeError("index out of range") : x$14.$array[x$14.$offset + 1]))) === (x$15 = re.Rune, ((0 < 0 || 0 >= x$15.$length) ? $throwRuntimeError("index out of range") : x$15.$array[x$15.$offset + 0])))) {
			if (p.maybeConcat((x$17 = re.Rune, ((0 < 0 || 0 >= x$17.$length) ? $throwRuntimeError("index out of range") : x$17.$array[x$17.$offset + 0])), (p.flags | 1) >>> 0)) {
				return ptrType.nil;
			}
			re.Op = 3;
			re.Rune = $subslice(re.Rune, 0, 1);
			re.Flags = (p.flags | 1) >>> 0;
		} else {
			p.maybeConcat(-1, 0);
		}
		p.stack = $append(p.stack, re);
		return re;
	};
	parser.prototype.push = function(re) { return this.$val.push(re); };
	parser.ptr.prototype.maybeConcat = function(r, flags) {
		var n, p, re1, re2, x, x$1, x$2, x$3, x$4;
		p = this;
		n = p.stack.$length;
		if (n < 2) {
			return false;
		}
		re1 = (x = p.stack, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		re2 = (x$2 = p.stack, x$3 = n - 2 >> 0, ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3]));
		if (!((re1.Op === 3)) || !((re2.Op === 3)) || !((((re1.Flags & 1) >>> 0) === ((re2.Flags & 1) >>> 0)))) {
			return false;
		}
		re2.Rune = $appendSlice(re2.Rune, re1.Rune);
		if (r >= 0) {
			re1.Rune = $subslice(new sliceType(re1.Rune0), 0, 1);
			(x$4 = re1.Rune, (0 < 0 || 0 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 0] = r);
			re1.Flags = flags;
			return true;
		}
		p.stack = $subslice(p.stack, 0, (n - 1 >> 0));
		p.reuse(re1);
		return false;
	};
	parser.prototype.maybeConcat = function(r, flags) { return this.$val.maybeConcat(r, flags); };
	parser.ptr.prototype.newLiteral = function(r, flags) {
		var p, re;
		p = this;
		re = p.newRegexp(3);
		re.Flags = flags;
		if (!((((flags & 1) >>> 0) === 0))) {
			r = minFoldRune(r);
		}
		re.Rune0[0] = r;
		re.Rune = $subslice(new sliceType(re.Rune0), 0, 1);
		return re;
	};
	parser.prototype.newLiteral = function(r, flags) { return this.$val.newLiteral(r, flags); };
	minFoldRune = function(r) {
		var min, r0;
		if (r < 65 || r > 71903) {
			return r;
		}
		min = r;
		r0 = r;
		r = unicode.SimpleFold(r);
		while (!((r === r0))) {
			if (min > r) {
				min = r;
			}
			r = unicode.SimpleFold(r);
		}
		return min;
	};
	parser.ptr.prototype.literal = function(r) {
		var p;
		p = this;
		p.push(p.newLiteral(r, p.flags));
	};
	parser.prototype.literal = function(r) { return this.$val.literal(r); };
	parser.ptr.prototype.op = function(op) {
		var p, re;
		p = this;
		re = p.newRegexp(op);
		re.Flags = p.flags;
		return p.push(re);
	};
	parser.prototype.op = function(op) { return this.$val.op(op); };
	parser.ptr.prototype.repeat = function(op, min, max, before, after, lastRepeat) {
		var flags, n, p, re, sub, x, x$1, x$2, x$3, x$4;
		p = this;
		flags = p.flags;
		if (!((((p.flags & 64) >>> 0) === 0))) {
			if (after.length > 0 && (after.charCodeAt(0) === 63)) {
				after = after.substring(1);
				flags = (flags ^ (32)) << 16 >>> 16;
			}
			if (!(lastRepeat === "")) {
				return ["", new Error.ptr("invalid nested repetition operator", lastRepeat.substring(0, (lastRepeat.length - after.length >> 0)))];
			}
		}
		n = p.stack.$length;
		if (n === 0) {
			return ["", new Error.ptr("missing argument to repetition operator", before.substring(0, (before.length - after.length >> 0)))];
		}
		sub = (x = p.stack, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (sub.Op >= 128) {
			return ["", new Error.ptr("missing argument to repetition operator", before.substring(0, (before.length - after.length >> 0)))];
		}
		re = p.newRegexp(op);
		re.Min = min;
		re.Max = max;
		re.Flags = flags;
		re.Sub = $subslice(new sliceType$4(re.Sub0), 0, 1);
		(x$2 = re.Sub, (0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0] = sub);
		(x$3 = p.stack, x$4 = n - 1 >> 0, (x$4 < 0 || x$4 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + x$4] = re);
		if ((op === 17) && (min >= 2 || max >= 2) && !repeatIsValid(re, 1000)) {
			return ["", new Error.ptr("invalid repeat count", before.substring(0, (before.length - after.length >> 0)))];
		}
		return [after, $ifaceNil];
	};
	parser.prototype.repeat = function(op, min, max, before, after, lastRepeat) { return this.$val.repeat(op, min, max, before, after, lastRepeat); };
	repeatIsValid = function(re, n) {
		var _i, _q, _ref, m, sub;
		if (re.Op === 17) {
			m = re.Max;
			if (m === 0) {
				return true;
			}
			if (m < 0) {
				m = re.Min;
			}
			if (m > n) {
				return false;
			}
			if (m > 0) {
				n = (_q = n / (m), (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
			}
		}
		_ref = re.Sub;
		_i = 0;
		while (_i < _ref.$length) {
			sub = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (!repeatIsValid(sub, n)) {
				return false;
			}
			_i++;
		}
		return true;
	};
	parser.ptr.prototype.concat = function() {
		var i, p, subs, x, x$1;
		p = this;
		p.maybeConcat(-1, 0);
		i = p.stack.$length;
		while (i > 0 && (x = p.stack, x$1 = i - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Op < 128) {
			i = i - (1) >> 0;
		}
		subs = $subslice(p.stack, i);
		p.stack = $subslice(p.stack, 0, i);
		if (subs.$length === 0) {
			return p.push(p.newRegexp(2));
		}
		return p.push(p.collapse(subs, 18));
	};
	parser.prototype.concat = function() { return this.$val.concat(); };
	parser.ptr.prototype.alternate = function() {
		var i, p, subs, x, x$1, x$2;
		p = this;
		i = p.stack.$length;
		while (i > 0 && (x = p.stack, x$1 = i - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Op < 128) {
			i = i - (1) >> 0;
		}
		subs = $subslice(p.stack, i);
		p.stack = $subslice(p.stack, 0, i);
		if (subs.$length > 0) {
			cleanAlt((x$2 = subs.$length - 1 >> 0, ((x$2 < 0 || x$2 >= subs.$length) ? $throwRuntimeError("index out of range") : subs.$array[subs.$offset + x$2])));
		}
		if (subs.$length === 0) {
			return p.push(p.newRegexp(1));
		}
		return p.push(p.collapse(subs, 19));
	};
	parser.prototype.alternate = function() { return this.$val.alternate(); };
	cleanAlt = function(re) {
		var _ref, x, x$1, x$2, x$3, x$4, x$5;
		_ref = re.Op;
		if (_ref === 4) {
			re.Rune = cleanClass(new ptrType$1(function() { return this.$target.Rune; }, function($v) { this.$target.Rune = $v; }, re));
			if ((re.Rune.$length === 2) && ((x = re.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])) === 0) && ((x$1 = re.Rune, ((1 < 0 || 1 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 1])) === 1114111)) {
				re.Rune = sliceType.nil;
				re.Op = 6;
				return;
			}
			if ((re.Rune.$length === 4) && ((x$2 = re.Rune, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0])) === 0) && ((x$3 = re.Rune, ((1 < 0 || 1 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 1])) === 9) && ((x$4 = re.Rune, ((2 < 0 || 2 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 2])) === 11) && ((x$5 = re.Rune, ((3 < 0 || 3 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 3])) === 1114111)) {
				re.Rune = sliceType.nil;
				re.Op = 5;
				return;
			}
			if ((re.Rune.$capacity - re.Rune.$length >> 0) > 100) {
				re.Rune = $appendSlice($subslice(new sliceType(re.Rune0), 0, 0), re.Rune);
			}
		}
	};
	parser.ptr.prototype.collapse = function(subs, op) {
		var _i, _ref, old, p, re, sub, x;
		p = this;
		if (subs.$length === 1) {
			return ((0 < 0 || 0 >= subs.$length) ? $throwRuntimeError("index out of range") : subs.$array[subs.$offset + 0]);
		}
		re = p.newRegexp(op);
		re.Sub = $subslice(new sliceType$4(re.Sub0), 0, 0);
		_ref = subs;
		_i = 0;
		while (_i < _ref.$length) {
			sub = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (sub.Op === op) {
				re.Sub = $appendSlice(re.Sub, sub.Sub);
				p.reuse(sub);
			} else {
				re.Sub = $append(re.Sub, sub);
			}
			_i++;
		}
		if (op === 19) {
			re.Sub = p.factor(re.Sub, re.Flags);
			if (re.Sub.$length === 1) {
				old = re;
				re = (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
				p.reuse(old);
			}
		}
		return re;
	};
	parser.prototype.collapse = function(subs, op) { return this.$val.collapse(subs, op); };
	parser.ptr.prototype.factor = function(sub, flags) {
		var _i, _ref, _tmp, _tmp$1, _tuple, first, i, i$1, i$2, i$3, ifirst, iflags, istr, j, j$1, j$2, j$3, max, out, p, prefix, prefix$1, re, re$1, reuse, same, start, str, strflags, suffix, suffix$1, x;
		p = this;
		if (sub.$length < 2) {
			return sub;
		}
		str = sliceType.nil;
		strflags = 0;
		start = 0;
		out = $subslice(sub, 0, 0);
		i = 0;
		while (i <= sub.$length) {
			istr = sliceType.nil;
			iflags = 0;
			if (i < sub.$length) {
				_tuple = p.leadingString(((i < 0 || i >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i])); istr = _tuple[0]; iflags = _tuple[1];
				if (iflags === strflags) {
					same = 0;
					while (same < str.$length && same < istr.$length && (((same < 0 || same >= str.$length) ? $throwRuntimeError("index out of range") : str.$array[str.$offset + same]) === ((same < 0 || same >= istr.$length) ? $throwRuntimeError("index out of range") : istr.$array[istr.$offset + same]))) {
						same = same + (1) >> 0;
					}
					if (same > 0) {
						str = $subslice(str, 0, same);
						i = i + (1) >> 0;
						continue;
					}
				}
			}
			if (i === start) {
			} else if (i === (start + 1 >> 0)) {
				out = $append(out, ((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]));
			} else {
				prefix = p.newRegexp(3);
				prefix.Flags = strflags;
				prefix.Rune = $appendSlice($subslice(prefix.Rune, 0, 0), str);
				j = start;
				while (j < i) {
					(j < 0 || j >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j] = p.removeLeadingString(((j < 0 || j >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j]), str.$length);
					j = j + (1) >> 0;
				}
				suffix = p.collapse($subslice(sub, start, i), 19);
				re = p.newRegexp(18);
				re.Sub = $append($subslice(re.Sub, 0, 0), prefix, suffix);
				out = $append(out, re);
			}
			start = i;
			str = istr;
			strflags = iflags;
			i = i + (1) >> 0;
		}
		sub = out;
		start = 0;
		out = $subslice(sub, 0, 0);
		first = ptrType.nil;
		i$1 = 0;
		while (i$1 <= sub.$length) {
			ifirst = ptrType.nil;
			if (i$1 < sub.$length) {
				ifirst = p.leadingRegexp(((i$1 < 0 || i$1 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i$1]));
				if (!(first === ptrType.nil) && first.Equal(ifirst)) {
					i$1 = i$1 + (1) >> 0;
					continue;
				}
			}
			if (i$1 === start) {
			} else if (i$1 === (start + 1 >> 0)) {
				out = $append(out, ((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]));
			} else {
				prefix$1 = first;
				j$1 = start;
				while (j$1 < i$1) {
					reuse = !((j$1 === start));
					(j$1 < 0 || j$1 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$1] = p.removeLeadingRegexp(((j$1 < 0 || j$1 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$1]), reuse);
					j$1 = j$1 + (1) >> 0;
				}
				suffix$1 = p.collapse($subslice(sub, start, i$1), 19);
				re$1 = p.newRegexp(18);
				re$1.Sub = $append($subslice(re$1.Sub, 0, 0), prefix$1, suffix$1);
				out = $append(out, re$1);
			}
			start = i$1;
			first = ifirst;
			i$1 = i$1 + (1) >> 0;
		}
		sub = out;
		start = 0;
		out = $subslice(sub, 0, 0);
		i$2 = 0;
		while (i$2 <= sub.$length) {
			if (i$2 < sub.$length && isCharClass(((i$2 < 0 || i$2 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i$2]))) {
				i$2 = i$2 + (1) >> 0;
				continue;
			}
			if (i$2 === start) {
			} else if (i$2 === (start + 1 >> 0)) {
				out = $append(out, ((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]));
			} else {
				max = start;
				j$2 = start + 1 >> 0;
				while (j$2 < i$2) {
					if (((max < 0 || max >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + max]).Op < ((j$2 < 0 || j$2 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$2]).Op || (((max < 0 || max >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + max]).Op === ((j$2 < 0 || j$2 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$2]).Op) && ((max < 0 || max >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + max]).Rune.$length < ((j$2 < 0 || j$2 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$2]).Rune.$length) {
						max = j$2;
					}
					j$2 = j$2 + (1) >> 0;
				}
				_tmp = ((max < 0 || max >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + max]); _tmp$1 = ((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]); (start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start] = _tmp; (max < 0 || max >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + max] = _tmp$1;
				j$3 = start + 1 >> 0;
				while (j$3 < i$2) {
					mergeCharClass(((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]), ((j$3 < 0 || j$3 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$3]));
					p.reuse(((j$3 < 0 || j$3 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + j$3]));
					j$3 = j$3 + (1) >> 0;
				}
				cleanAlt(((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]));
				out = $append(out, ((start < 0 || start >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + start]));
			}
			if (i$2 < sub.$length) {
				out = $append(out, ((i$2 < 0 || i$2 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i$2]));
			}
			start = i$2 + 1 >> 0;
			i$2 = i$2 + (1) >> 0;
		}
		sub = out;
		start = 0;
		out = $subslice(sub, 0, 0);
		_ref = sub;
		_i = 0;
		while (_i < _ref.$length) {
			i$3 = _i;
			if ((i$3 + 1 >> 0) < sub.$length && (((i$3 < 0 || i$3 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i$3]).Op === 2) && ((x = i$3 + 1 >> 0, ((x < 0 || x >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + x])).Op === 2)) {
				_i++;
				continue;
			}
			out = $append(out, ((i$3 < 0 || i$3 >= sub.$length) ? $throwRuntimeError("index out of range") : sub.$array[sub.$offset + i$3]));
			_i++;
		}
		sub = out;
		return sub;
	};
	parser.prototype.factor = function(sub, flags) { return this.$val.factor(sub, flags); };
	parser.ptr.prototype.leadingString = function(re) {
		var p, x;
		p = this;
		if ((re.Op === 18) && re.Sub.$length > 0) {
			re = (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
		}
		if (!((re.Op === 3))) {
			return [sliceType.nil, 0];
		}
		return [re.Rune, (re.Flags & 1) >>> 0];
	};
	parser.prototype.leadingString = function(re) { return this.$val.leadingString(re); };
	parser.ptr.prototype.removeLeadingString = function(re, n) {
		var _ref, old, p, sub, x, x$1, x$2;
		p = this;
		if ((re.Op === 18) && re.Sub.$length > 0) {
			sub = (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
			sub = p.removeLeadingString(sub, n);
			(x$1 = re.Sub, (0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0] = sub);
			if (sub.Op === 2) {
				p.reuse(sub);
				_ref = re.Sub.$length;
				if (_ref === 0 || _ref === 1) {
					re.Op = 2;
					re.Sub = sliceType$4.nil;
				} else if (_ref === 2) {
					old = re;
					re = (x$2 = re.Sub, ((1 < 0 || 1 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 1]));
					p.reuse(old);
				} else {
					$copySlice(re.Sub, $subslice(re.Sub, 1));
					re.Sub = $subslice(re.Sub, 0, (re.Sub.$length - 1 >> 0));
				}
			}
			return re;
		}
		if (re.Op === 3) {
			re.Rune = $subslice(re.Rune, 0, $copySlice(re.Rune, $subslice(re.Rune, n)));
			if (re.Rune.$length === 0) {
				re.Op = 2;
			}
		}
		return re;
	};
	parser.prototype.removeLeadingString = function(re, n) { return this.$val.removeLeadingString(re, n); };
	parser.ptr.prototype.leadingRegexp = function(re) {
		var p, sub, x;
		p = this;
		if (re.Op === 2) {
			return ptrType.nil;
		}
		if ((re.Op === 18) && re.Sub.$length > 0) {
			sub = (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]));
			if (sub.Op === 2) {
				return ptrType.nil;
			}
			return sub;
		}
		return re;
	};
	parser.prototype.leadingRegexp = function(re) { return this.$val.leadingRegexp(re); };
	parser.ptr.prototype.removeLeadingRegexp = function(re, reuse) {
		var _ref, old, p, x, x$1;
		p = this;
		if ((re.Op === 18) && re.Sub.$length > 0) {
			if (reuse) {
				p.reuse((x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])));
			}
			re.Sub = $subslice(re.Sub, 0, $copySlice(re.Sub, $subslice(re.Sub, 1)));
			_ref = re.Sub.$length;
			if (_ref === 0) {
				re.Op = 2;
				re.Sub = sliceType$4.nil;
			} else if (_ref === 1) {
				old = re;
				re = (x$1 = re.Sub, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0]));
				p.reuse(old);
			}
			return re;
		}
		if (reuse) {
			p.reuse(re);
		}
		return p.newRegexp(2);
	};
	parser.prototype.removeLeadingRegexp = function(re, reuse) { return this.$val.removeLeadingRegexp(re, reuse); };
	literalRegexp = function(s, flags) {
		var _i, _ref, _rune, c, re;
		re = new Regexp.ptr(3, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
		re.Flags = flags;
		re.Rune = $subslice(new sliceType(re.Rune0), 0, 0);
		_ref = s;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			c = _rune[0];
			if (re.Rune.$length >= re.Rune.$capacity) {
				re.Rune = new sliceType($stringToRunes(s));
				break;
			}
			re.Rune = $append(re.Rune, c);
			_i += _rune[1];
		}
		return re;
	};
	Parse = $pkg.Parse = function(s, flags) {
		var _lhs, _ref, _ref$1, _ref$2, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, _tuple$5, _tuple$6, _tuple$7, _tuple$8, after, after$1, before, before$1, c, err, err$1, err$2, i, lastRepeat, lit, max, min, n, ok, op, p, r, r$1, re, repeat, rest, rest$1, t, x;
		if (!((((flags & 2) >>> 0) === 0))) {
			err = checkUTF8(s);
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return [ptrType.nil, err];
			}
			return [literalRegexp(s, flags), $ifaceNil];
		}
		p = $clone(new parser.ptr(), parser);
		err$1 = $ifaceNil;
		c = 0;
		op = 0;
		lastRepeat = "";
		p.flags = flags;
		p.wholeRegexp = s;
		t = s;
		while (!(t === "")) {
			repeat = "";
			_ref = t.charCodeAt(0);
			BigSwitch:
			switch (0) { default: if (_ref === 40) {
				if (!((((p.flags & 64) >>> 0) === 0)) && t.length >= 2 && (t.charCodeAt(1) === 63)) {
					_tuple = p.parsePerlFlags(t); t = _tuple[0]; err$1 = _tuple[1];
					if (!($interfaceIsEqual(err$1, $ifaceNil))) {
						return [ptrType.nil, err$1];
					}
					break;
				}
				p.numCap = p.numCap + (1) >> 0;
				p.op(128).Cap = p.numCap;
				t = t.substring(1);
			} else if (_ref === 124) {
				err$1 = p.parseVerticalBar();
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				t = t.substring(1);
			} else if (_ref === 41) {
				err$1 = p.parseRightParen();
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				t = t.substring(1);
			} else if (_ref === 94) {
				if (!((((p.flags & 16) >>> 0) === 0))) {
					p.op(9);
				} else {
					p.op(7);
				}
				t = t.substring(1);
			} else if (_ref === 36) {
				if (!((((p.flags & 16) >>> 0) === 0))) {
					_lhs = p.op(10); _lhs.Flags = (_lhs.Flags | (256)) >>> 0;
				} else {
					p.op(8);
				}
				t = t.substring(1);
			} else if (_ref === 46) {
				if (!((((p.flags & 8) >>> 0) === 0))) {
					p.op(6);
				} else {
					p.op(5);
				}
				t = t.substring(1);
			} else if (_ref === 91) {
				_tuple$1 = p.parseClass(t); t = _tuple$1[0]; err$1 = _tuple$1[1];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
			} else if (_ref === 42 || _ref === 43 || _ref === 63) {
				before = t;
				_ref$1 = t.charCodeAt(0);
				if (_ref$1 === 42) {
					op = 14;
				} else if (_ref$1 === 43) {
					op = 15;
				} else if (_ref$1 === 63) {
					op = 16;
				}
				after = t.substring(1);
				_tuple$2 = p.repeat(op, 0, 0, before, after, lastRepeat); after = _tuple$2[0]; err$1 = _tuple$2[1];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				repeat = before;
				t = after;
			} else if (_ref === 123) {
				op = 17;
				before$1 = t;
				_tuple$3 = p.parseRepeat(t); min = _tuple$3[0]; max = _tuple$3[1]; after$1 = _tuple$3[2]; ok = _tuple$3[3];
				if (!ok) {
					p.literal(123);
					t = t.substring(1);
					break;
				}
				if (min < 0 || min > 1000 || max > 1000 || max >= 0 && min > max) {
					return [ptrType.nil, new Error.ptr("invalid repeat count", before$1.substring(0, (before$1.length - after$1.length >> 0)))];
				}
				_tuple$4 = p.repeat(op, min, max, before$1, after$1, lastRepeat); after$1 = _tuple$4[0]; err$1 = _tuple$4[1];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				repeat = before$1;
				t = after$1;
			} else if (_ref === 92) {
				if (!((((p.flags & 64) >>> 0) === 0)) && t.length >= 2) {
					_ref$2 = t.charCodeAt(1);
					if (_ref$2 === 65) {
						p.op(9);
						t = t.substring(2);
						break BigSwitch;
					} else if (_ref$2 === 98) {
						p.op(11);
						t = t.substring(2);
						break BigSwitch;
					} else if (_ref$2 === 66) {
						p.op(12);
						t = t.substring(2);
						break BigSwitch;
					} else if (_ref$2 === 67) {
						return [ptrType.nil, new Error.ptr("invalid escape sequence", t.substring(0, 2))];
					} else if (_ref$2 === 81) {
						lit = "";
						i = strings.Index(t, "\\E");
						if (i < 0) {
							lit = t.substring(2);
							t = "";
						} else {
							lit = t.substring(2, i);
							t = t.substring((i + 2 >> 0));
						}
						p.push(literalRegexp(lit, p.flags));
						break BigSwitch;
					} else if (_ref$2 === 122) {
						p.op(10);
						t = t.substring(2);
						break BigSwitch;
					}
				}
				re = p.newRegexp(4);
				re.Flags = p.flags;
				if (t.length >= 2 && ((t.charCodeAt(1) === 112) || (t.charCodeAt(1) === 80))) {
					_tuple$5 = p.parseUnicodeClass(t, $subslice(new sliceType(re.Rune0), 0, 0)); r = _tuple$5[0]; rest = _tuple$5[1]; err$2 = _tuple$5[2];
					if (!($interfaceIsEqual(err$2, $ifaceNil))) {
						return [ptrType.nil, err$2];
					}
					if (!(r === sliceType.nil)) {
						re.Rune = r;
						t = rest;
						p.push(re);
						break BigSwitch;
					}
				}
				_tuple$6 = p.parsePerlClassEscape(t, $subslice(new sliceType(re.Rune0), 0, 0)); r$1 = _tuple$6[0]; rest$1 = _tuple$6[1];
				if (!(r$1 === sliceType.nil)) {
					re.Rune = r$1;
					t = rest$1;
					p.push(re);
					break BigSwitch;
				}
				p.reuse(re);
				_tuple$7 = p.parseEscape(t); c = _tuple$7[0]; t = _tuple$7[1]; err$1 = _tuple$7[2];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				p.literal(c);
			} else {
				_tuple$8 = nextRune(t); c = _tuple$8[0]; t = _tuple$8[1]; err$1 = _tuple$8[2];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					return [ptrType.nil, err$1];
				}
				p.literal(c);
			} }
			lastRepeat = repeat;
		}
		p.concat();
		if (p.swapVerticalBar()) {
			p.stack = $subslice(p.stack, 0, (p.stack.$length - 1 >> 0));
		}
		p.alternate();
		n = p.stack.$length;
		if (!((n === 1))) {
			return [ptrType.nil, new Error.ptr("missing closing )", s)];
		}
		return [(x = p.stack, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])), $ifaceNil];
	};
	parser.ptr.prototype.parseRepeat = function(s) {
		var _tuple, _tuple$1, max = 0, min = 0, ok = false, ok1, p, rest = "";
		p = this;
		if (s === "" || !((s.charCodeAt(0) === 123))) {
			return [min, max, rest, ok];
		}
		s = s.substring(1);
		ok1 = false;
		_tuple = p.parseInt(s); min = _tuple[0]; s = _tuple[1]; ok1 = _tuple[2];
		if (!ok1) {
			return [min, max, rest, ok];
		}
		if (s === "") {
			return [min, max, rest, ok];
		}
		if (!((s.charCodeAt(0) === 44))) {
			max = min;
		} else {
			s = s.substring(1);
			if (s === "") {
				return [min, max, rest, ok];
			}
			if (s.charCodeAt(0) === 125) {
				max = -1;
			} else {
				_tuple$1 = p.parseInt(s); max = _tuple$1[0]; s = _tuple$1[1]; ok1 = _tuple$1[2];
				if (!ok1) {
					return [min, max, rest, ok];
				} else if (max < 0) {
					min = -1;
				}
			}
		}
		if (s === "" || !((s.charCodeAt(0) === 125))) {
			return [min, max, rest, ok];
		}
		rest = s.substring(1);
		ok = true;
		return [min, max, rest, ok];
	};
	parser.prototype.parseRepeat = function(s) { return this.$val.parseRepeat(s); };
	parser.ptr.prototype.parsePerlFlags = function(s) {
		var _ref, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, c, capture, end, err = $ifaceNil, flags, name, p, re, rest = "", sawFlag, sign, t;
		p = this;
		t = s;
		if (t.length > 4 && (t.charCodeAt(2) === 80) && (t.charCodeAt(3) === 60)) {
			end = strings.IndexRune(t, 62);
			if (end < 0) {
				err = checkUTF8(t);
				if (!($interfaceIsEqual(err, $ifaceNil))) {
					_tmp = ""; _tmp$1 = err; rest = _tmp; err = _tmp$1;
					return [rest, err];
				}
				_tmp$2 = ""; _tmp$3 = new Error.ptr("invalid named capture", s); rest = _tmp$2; err = _tmp$3;
				return [rest, err];
			}
			capture = t.substring(0, (end + 1 >> 0));
			name = t.substring(4, end);
			err = checkUTF8(name);
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				_tmp$4 = ""; _tmp$5 = err; rest = _tmp$4; err = _tmp$5;
				return [rest, err];
			}
			if (!isValidCaptureName(name)) {
				_tmp$6 = ""; _tmp$7 = new Error.ptr("invalid named capture", capture); rest = _tmp$6; err = _tmp$7;
				return [rest, err];
			}
			p.numCap = p.numCap + (1) >> 0;
			re = p.op(128);
			re.Cap = p.numCap;
			re.Name = name;
			_tmp$8 = t.substring((end + 1 >> 0)); _tmp$9 = $ifaceNil; rest = _tmp$8; err = _tmp$9;
			return [rest, err];
		}
		c = 0;
		t = t.substring(2);
		flags = p.flags;
		sign = 1;
		sawFlag = false;
		Loop:
		while (!(t === "")) {
			_tuple = nextRune(t); c = _tuple[0]; t = _tuple[1]; err = _tuple[2];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				_tmp$10 = ""; _tmp$11 = err; rest = _tmp$10; err = _tmp$11;
				return [rest, err];
			}
			_ref = c;
			if (_ref === 105) {
				flags = (flags | (1)) >>> 0;
				sawFlag = true;
			} else if (_ref === 109) {
				flags = flags & ~(16);
				sawFlag = true;
			} else if (_ref === 115) {
				flags = (flags | (8)) >>> 0;
				sawFlag = true;
			} else if (_ref === 85) {
				flags = (flags | (32)) >>> 0;
				sawFlag = true;
			} else if (_ref === 45) {
				if (sign < 0) {
					break Loop;
				}
				sign = -1;
				flags = ~flags << 16 >>> 16;
				sawFlag = false;
			} else if (_ref === 58 || _ref === 41) {
				if (sign < 0) {
					if (!sawFlag) {
						break Loop;
					}
					flags = ~flags << 16 >>> 16;
				}
				if (c === 58) {
					p.op(128);
				}
				p.flags = flags;
				_tmp$12 = t; _tmp$13 = $ifaceNil; rest = _tmp$12; err = _tmp$13;
				return [rest, err];
			} else {
				break Loop;
			}
		}
		_tmp$14 = ""; _tmp$15 = new Error.ptr("invalid or unsupported Perl syntax", s.substring(0, (s.length - t.length >> 0))); rest = _tmp$14; err = _tmp$15;
		return [rest, err];
	};
	parser.prototype.parsePerlFlags = function(s) { return this.$val.parsePerlFlags(s); };
	isValidCaptureName = function(name) {
		var _i, _ref, _rune, c;
		if (name === "") {
			return false;
		}
		_ref = name;
		_i = 0;
		while (_i < _ref.length) {
			_rune = $decodeRune(_ref, _i);
			c = _rune[0];
			if (!((c === 95)) && !isalnum(c)) {
				return false;
			}
			_i += _rune[1];
		}
		return true;
	};
	parser.ptr.prototype.parseInt = function(s) {
		var i, n = 0, ok = false, p, rest = "", t;
		p = this;
		if (s === "" || s.charCodeAt(0) < 48 || 57 < s.charCodeAt(0)) {
			return [n, rest, ok];
		}
		if (s.length >= 2 && (s.charCodeAt(0) === 48) && 48 <= s.charCodeAt(1) && s.charCodeAt(1) <= 57) {
			return [n, rest, ok];
		}
		t = s;
		while (!(s === "") && 48 <= s.charCodeAt(0) && s.charCodeAt(0) <= 57) {
			s = s.substring(1);
		}
		rest = s;
		ok = true;
		t = t.substring(0, (t.length - s.length >> 0));
		i = 0;
		while (i < t.length) {
			if (n >= 100000000) {
				n = -1;
				break;
			}
			n = ((n * 10 >> 0) + (t.charCodeAt(i) >> 0) >> 0) - 48 >> 0;
			i = i + (1) >> 0;
		}
		return [n, rest, ok];
	};
	parser.prototype.parseInt = function(s) { return this.$val.parseInt(s); };
	isCharClass = function(re) {
		return (re.Op === 3) && (re.Rune.$length === 1) || (re.Op === 4) || (re.Op === 5) || (re.Op === 6);
	};
	matchRune = function(re, r) {
		var _ref, i, x, x$1, x$2, x$3;
		_ref = re.Op;
		if (_ref === 3) {
			return (re.Rune.$length === 1) && ((x = re.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])) === r);
		} else if (_ref === 4) {
			i = 0;
			while (i < re.Rune.$length) {
				if ((x$1 = re.Rune, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i])) <= r && r <= (x$2 = re.Rune, x$3 = i + 1 >> 0, ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3]))) {
					return true;
				}
				i = i + (2) >> 0;
			}
			return false;
		} else if (_ref === 5) {
			return !((r === 10));
		} else if (_ref === 6) {
			return true;
		}
		return false;
	};
	parser.ptr.prototype.parseVerticalBar = function() {
		var p;
		p = this;
		p.concat();
		if (!p.swapVerticalBar()) {
			p.op(129);
		}
		return $ifaceNil;
	};
	parser.prototype.parseVerticalBar = function() { return this.$val.parseVerticalBar(); };
	mergeCharClass = function(dst, src) {
		var _ref, x, x$1, x$2, x$3, x$4;
		_ref = dst.Op;
		switch (0) { default: if (_ref === 6) {
		} else if (_ref === 5) {
			if (matchRune(src, 10)) {
				dst.Op = 6;
			}
		} else if (_ref === 4) {
			if (src.Op === 3) {
				dst.Rune = appendLiteral(dst.Rune, (x = src.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])), src.Flags);
			} else {
				dst.Rune = appendClass(dst.Rune, src.Rune);
			}
		} else if (_ref === 3) {
			if (((x$1 = src.Rune, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0])) === (x$2 = dst.Rune, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0]))) && (src.Flags === dst.Flags)) {
				break;
			}
			dst.Op = 4;
			dst.Rune = appendLiteral($subslice(dst.Rune, 0, 0), (x$3 = dst.Rune, ((0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0])), dst.Flags);
			dst.Rune = appendLiteral(dst.Rune, (x$4 = src.Rune, ((0 < 0 || 0 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 0])), src.Flags);
		} }
	};
	parser.ptr.prototype.swapVerticalBar = function() {
		var _tmp, _tmp$1, n, p, re1, re1$1, re2, re3, x, x$1, x$10, x$11, x$12, x$13, x$14, x$15, x$16, x$17, x$18, x$19, x$2, x$20, x$21, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		p = this;
		n = p.stack.$length;
		if (n >= 3 && ((x = p.stack, x$1 = n - 2 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Op === 129) && isCharClass((x$2 = p.stack, x$3 = n - 1 >> 0, ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3]))) && isCharClass((x$4 = p.stack, x$5 = n - 3 >> 0, ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5])))) {
			re1 = (x$6 = p.stack, x$7 = n - 1 >> 0, ((x$7 < 0 || x$7 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + x$7]));
			re3 = (x$8 = p.stack, x$9 = n - 3 >> 0, ((x$9 < 0 || x$9 >= x$8.$length) ? $throwRuntimeError("index out of range") : x$8.$array[x$8.$offset + x$9]));
			if (re1.Op > re3.Op) {
				_tmp = re3; _tmp$1 = re1; re1 = _tmp; re3 = _tmp$1;
				(x$10 = p.stack, x$11 = n - 3 >> 0, (x$11 < 0 || x$11 >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + x$11] = re3);
			}
			mergeCharClass(re3, re1);
			p.reuse(re1);
			p.stack = $subslice(p.stack, 0, (n - 1 >> 0));
			return true;
		}
		if (n >= 2) {
			re1$1 = (x$12 = p.stack, x$13 = n - 1 >> 0, ((x$13 < 0 || x$13 >= x$12.$length) ? $throwRuntimeError("index out of range") : x$12.$array[x$12.$offset + x$13]));
			re2 = (x$14 = p.stack, x$15 = n - 2 >> 0, ((x$15 < 0 || x$15 >= x$14.$length) ? $throwRuntimeError("index out of range") : x$14.$array[x$14.$offset + x$15]));
			if (re2.Op === 129) {
				if (n >= 3) {
					cleanAlt((x$16 = p.stack, x$17 = n - 3 >> 0, ((x$17 < 0 || x$17 >= x$16.$length) ? $throwRuntimeError("index out of range") : x$16.$array[x$16.$offset + x$17])));
				}
				(x$18 = p.stack, x$19 = n - 2 >> 0, (x$19 < 0 || x$19 >= x$18.$length) ? $throwRuntimeError("index out of range") : x$18.$array[x$18.$offset + x$19] = re1$1);
				(x$20 = p.stack, x$21 = n - 1 >> 0, (x$21 < 0 || x$21 >= x$20.$length) ? $throwRuntimeError("index out of range") : x$20.$array[x$20.$offset + x$21] = re2);
				return true;
			}
		}
		return false;
	};
	parser.prototype.swapVerticalBar = function() { return this.$val.swapVerticalBar(); };
	parser.ptr.prototype.parseRightParen = function() {
		var n, p, re1, re2, x, x$1, x$2, x$3, x$4;
		p = this;
		p.concat();
		if (p.swapVerticalBar()) {
			p.stack = $subslice(p.stack, 0, (p.stack.$length - 1 >> 0));
		}
		p.alternate();
		n = p.stack.$length;
		if (n < 2) {
			return new Error.ptr("unexpected )", p.wholeRegexp);
		}
		re1 = (x = p.stack, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		re2 = (x$2 = p.stack, x$3 = n - 2 >> 0, ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3]));
		p.stack = $subslice(p.stack, 0, (n - 2 >> 0));
		if (!((re2.Op === 128))) {
			return new Error.ptr("unexpected )", p.wholeRegexp);
		}
		p.flags = re2.Flags;
		if (re2.Cap === 0) {
			p.push(re1);
		} else {
			re2.Op = 13;
			re2.Sub = $subslice(new sliceType$4(re2.Sub0), 0, 1);
			(x$4 = re2.Sub, (0 < 0 || 0 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 0] = re1);
			p.push(re2);
		}
		return $ifaceNil;
	};
	parser.prototype.parseRightParen = function() { return this.$val.parseRightParen(); };
	parser.ptr.prototype.parseEscape = function(s) {
		var _ref, _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$22, _tmp$23, _tmp$24, _tmp$25, _tmp$26, _tmp$27, _tmp$28, _tmp$29, _tmp$3, _tmp$30, _tmp$31, _tmp$32, _tmp$33, _tmp$34, _tmp$35, _tmp$36, _tmp$37, _tmp$38, _tmp$39, _tmp$4, _tmp$40, _tmp$41, _tmp$42, _tmp$43, _tmp$44, _tmp$45, _tmp$46, _tmp$47, _tmp$48, _tmp$49, _tmp$5, _tmp$50, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, _tuple$2, _tuple$3, c, err = $ifaceNil, i, nhex, p, r = 0, rest = "", t, v, x, y;
		p = this;
		t = s.substring(1);
		if (t === "") {
			_tmp = 0; _tmp$1 = ""; _tmp$2 = new Error.ptr("trailing backslash at end of expression", ""); r = _tmp; rest = _tmp$1; err = _tmp$2;
			return [r, rest, err];
		}
		_tuple = nextRune(t); c = _tuple[0]; t = _tuple[1]; err = _tuple[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp$3 = 0; _tmp$4 = ""; _tmp$5 = err; r = _tmp$3; rest = _tmp$4; err = _tmp$5;
			return [r, rest, err];
		}
		_ref = c;
		Switch:
		switch (0) { default: if (_ref === 49 || _ref === 50 || _ref === 51 || _ref === 52 || _ref === 53 || _ref === 54 || _ref === 55) {
			if (t === "" || t.charCodeAt(0) < 48 || t.charCodeAt(0) > 55) {
				break;
			}
			r = c - 48 >> 0;
			i = 1;
			while (i < 3) {
				if (t === "" || t.charCodeAt(0) < 48 || t.charCodeAt(0) > 55) {
					break;
				}
				r = (((((r >>> 16 << 16) * 8 >> 0) + (r << 16 >>> 16) * 8) >> 0) + (t.charCodeAt(0) >> 0) >> 0) - 48 >> 0;
				t = t.substring(1);
				i = i + (1) >> 0;
			}
			_tmp$6 = r; _tmp$7 = t; _tmp$8 = $ifaceNil; r = _tmp$6; rest = _tmp$7; err = _tmp$8;
			return [r, rest, err];
		} else if (_ref === 48) {
			r = c - 48 >> 0;
			i = 1;
			while (i < 3) {
				if (t === "" || t.charCodeAt(0) < 48 || t.charCodeAt(0) > 55) {
					break;
				}
				r = (((((r >>> 16 << 16) * 8 >> 0) + (r << 16 >>> 16) * 8) >> 0) + (t.charCodeAt(0) >> 0) >> 0) - 48 >> 0;
				t = t.substring(1);
				i = i + (1) >> 0;
			}
			_tmp$9 = r; _tmp$10 = t; _tmp$11 = $ifaceNil; r = _tmp$9; rest = _tmp$10; err = _tmp$11;
			return [r, rest, err];
		} else if (_ref === 120) {
			if (t === "") {
				break;
			}
			_tuple$1 = nextRune(t); c = _tuple$1[0]; t = _tuple$1[1]; err = _tuple$1[2];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				_tmp$12 = 0; _tmp$13 = ""; _tmp$14 = err; r = _tmp$12; rest = _tmp$13; err = _tmp$14;
				return [r, rest, err];
			}
			if (c === 123) {
				nhex = 0;
				r = 0;
				while (true) {
					if (t === "") {
						break Switch;
					}
					_tuple$2 = nextRune(t); c = _tuple$2[0]; t = _tuple$2[1]; err = _tuple$2[2];
					if (!($interfaceIsEqual(err, $ifaceNil))) {
						_tmp$15 = 0; _tmp$16 = ""; _tmp$17 = err; r = _tmp$15; rest = _tmp$16; err = _tmp$17;
						return [r, rest, err];
					}
					if (c === 125) {
						break;
					}
					v = unhex(c);
					if (v < 0) {
						break Switch;
					}
					r = ((((r >>> 16 << 16) * 16 >> 0) + (r << 16 >>> 16) * 16) >> 0) + v >> 0;
					if (r > 1114111) {
						break Switch;
					}
					nhex = nhex + (1) >> 0;
				}
				if (nhex === 0) {
					break Switch;
				}
				_tmp$18 = r; _tmp$19 = t; _tmp$20 = $ifaceNil; r = _tmp$18; rest = _tmp$19; err = _tmp$20;
				return [r, rest, err];
			}
			x = unhex(c);
			_tuple$3 = nextRune(t); c = _tuple$3[0]; t = _tuple$3[1]; err = _tuple$3[2];
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				_tmp$21 = 0; _tmp$22 = ""; _tmp$23 = err; r = _tmp$21; rest = _tmp$22; err = _tmp$23;
				return [r, rest, err];
			}
			y = unhex(c);
			if (x < 0 || y < 0) {
				break;
			}
			_tmp$24 = ((((x >>> 16 << 16) * 16 >> 0) + (x << 16 >>> 16) * 16) >> 0) + y >> 0; _tmp$25 = t; _tmp$26 = $ifaceNil; r = _tmp$24; rest = _tmp$25; err = _tmp$26;
			return [r, rest, err];
		} else if (_ref === 97) {
			_tmp$27 = 7; _tmp$28 = t; _tmp$29 = err; r = _tmp$27; rest = _tmp$28; err = _tmp$29;
			return [r, rest, err];
		} else if (_ref === 102) {
			_tmp$30 = 12; _tmp$31 = t; _tmp$32 = err; r = _tmp$30; rest = _tmp$31; err = _tmp$32;
			return [r, rest, err];
		} else if (_ref === 110) {
			_tmp$33 = 10; _tmp$34 = t; _tmp$35 = err; r = _tmp$33; rest = _tmp$34; err = _tmp$35;
			return [r, rest, err];
		} else if (_ref === 114) {
			_tmp$36 = 13; _tmp$37 = t; _tmp$38 = err; r = _tmp$36; rest = _tmp$37; err = _tmp$38;
			return [r, rest, err];
		} else if (_ref === 116) {
			_tmp$39 = 9; _tmp$40 = t; _tmp$41 = err; r = _tmp$39; rest = _tmp$40; err = _tmp$41;
			return [r, rest, err];
		} else if (_ref === 118) {
			_tmp$42 = 11; _tmp$43 = t; _tmp$44 = err; r = _tmp$42; rest = _tmp$43; err = _tmp$44;
			return [r, rest, err];
		} else {
			if (c < 128 && !isalnum(c)) {
				_tmp$45 = c; _tmp$46 = t; _tmp$47 = $ifaceNil; r = _tmp$45; rest = _tmp$46; err = _tmp$47;
				return [r, rest, err];
			}
		} }
		_tmp$48 = 0; _tmp$49 = ""; _tmp$50 = new Error.ptr("invalid escape sequence", s.substring(0, (s.length - t.length >> 0))); r = _tmp$48; rest = _tmp$49; err = _tmp$50;
		return [r, rest, err];
	};
	parser.prototype.parseEscape = function(s) { return this.$val.parseEscape(s); };
	parser.ptr.prototype.parseClassChar = function(s, wholeClass) {
		var _tmp, _tmp$1, _tmp$2, _tuple, _tuple$1, err = $ifaceNil, p, r = 0, rest = "";
		p = this;
		if (s === "") {
			_tmp = 0; _tmp$1 = ""; _tmp$2 = new Error.ptr("missing closing ]", wholeClass); r = _tmp; rest = _tmp$1; err = _tmp$2;
			return [r, rest, err];
		}
		if (s.charCodeAt(0) === 92) {
			_tuple = p.parseEscape(s); r = _tuple[0]; rest = _tuple[1]; err = _tuple[2];
			return [r, rest, err];
		}
		_tuple$1 = nextRune(s); r = _tuple$1[0]; rest = _tuple$1[1]; err = _tuple$1[2];
		return [r, rest, err];
	};
	parser.prototype.parseClassChar = function(s, wholeClass) { return this.$val.parseClassChar(s, wholeClass); };
	parser.ptr.prototype.parsePerlClassEscape = function(s, r) {
		var _entry, _tmp, _tmp$1, g, out = sliceType.nil, p, rest = "";
		p = this;
		if ((((p.flags & 64) >>> 0) === 0) || s.length < 2 || !((s.charCodeAt(0) === 92))) {
			return [out, rest];
		}
		g = $clone((_entry = perlGroup[s.substring(0, 2)], _entry !== undefined ? _entry.v : new charGroup.ptr()), charGroup);
		if (g.sign === 0) {
			return [out, rest];
		}
		_tmp = p.appendGroup(r, g); _tmp$1 = s.substring(2); out = _tmp; rest = _tmp$1;
		return [out, rest];
	};
	parser.prototype.parsePerlClassEscape = function(s, r) { return this.$val.parsePerlClassEscape(s, r); };
	parser.ptr.prototype.parseNamedClass = function(s, r) {
		var _entry, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, err = $ifaceNil, g, i, name, out = sliceType.nil, p, rest = "";
		p = this;
		if (s.length < 2 || !((s.charCodeAt(0) === 91)) || !((s.charCodeAt(1) === 58))) {
			return [out, rest, err];
		}
		i = strings.Index(s.substring(2), ":]");
		if (i < 0) {
			return [out, rest, err];
		}
		i = i + (2) >> 0;
		_tmp = s.substring(0, (i + 2 >> 0)); _tmp$1 = s.substring((i + 2 >> 0)); name = _tmp; s = _tmp$1;
		g = $clone((_entry = posixGroup[name], _entry !== undefined ? _entry.v : new charGroup.ptr()), charGroup);
		if (g.sign === 0) {
			_tmp$2 = sliceType.nil; _tmp$3 = ""; _tmp$4 = new Error.ptr("invalid character class range", name); out = _tmp$2; rest = _tmp$3; err = _tmp$4;
			return [out, rest, err];
		}
		_tmp$5 = p.appendGroup(r, g); _tmp$6 = s; _tmp$7 = $ifaceNil; out = _tmp$5; rest = _tmp$6; err = _tmp$7;
		return [out, rest, err];
	};
	parser.prototype.parseNamedClass = function(s, r) { return this.$val.parseNamedClass(s, r); };
	parser.ptr.prototype.appendGroup = function(r, g) {
		var p, tmp;
		p = this;
		g = $clone(g, charGroup);
		if (((p.flags & 1) >>> 0) === 0) {
			if (g.sign < 0) {
				r = appendNegatedClass(r, g.class$1);
			} else {
				r = appendClass(r, g.class$1);
			}
		} else {
			tmp = $subslice(p.tmpClass, 0, 0);
			tmp = appendFoldedClass(tmp, g.class$1);
			p.tmpClass = tmp;
			tmp = cleanClass(new ptrType$1(function() { return this.$target.tmpClass; }, function($v) { this.$target.tmpClass = $v; }, p));
			if (g.sign < 0) {
				r = appendNegatedClass(r, tmp);
			} else {
				r = appendClass(r, tmp);
			}
		}
		return r;
	};
	parser.prototype.appendGroup = function(r, g) { return this.$val.appendGroup(r, g); };
	unicodeTable = function(name) {
		var _entry, _entry$1, _entry$2, _entry$3, t, t$1;
		if (name === "Any") {
			return [anyTable, anyTable];
		}
		t = (_entry = unicode.Categories[name], _entry !== undefined ? _entry.v : ptrType$2.nil);
		if (!(t === ptrType$2.nil)) {
			return [t, (_entry$1 = unicode.FoldCategory[name], _entry$1 !== undefined ? _entry$1.v : ptrType$2.nil)];
		}
		t$1 = (_entry$2 = unicode.Scripts[name], _entry$2 !== undefined ? _entry$2.v : ptrType$2.nil);
		if (!(t$1 === ptrType$2.nil)) {
			return [t$1, (_entry$3 = unicode.FoldScript[name], _entry$3 !== undefined ? _entry$3.v : ptrType$2.nil)];
		}
		return [ptrType$2.nil, ptrType$2.nil];
	};
	parser.ptr.prototype.parseUnicodeClass = function(s, r) {
		var _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, c, end, err = $ifaceNil, fold, name, out = sliceType.nil, p, rest = "", seq, sign, t, tab, tmp;
		p = this;
		if ((((p.flags & 128) >>> 0) === 0) || s.length < 2 || !((s.charCodeAt(0) === 92)) || !((s.charCodeAt(1) === 112)) && !((s.charCodeAt(1) === 80))) {
			return [out, rest, err];
		}
		sign = 1;
		if (s.charCodeAt(1) === 80) {
			sign = -1;
		}
		t = s.substring(2);
		_tuple = nextRune(t); c = _tuple[0]; t = _tuple[1]; err = _tuple[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [out, rest, err];
		}
		_tmp = ""; _tmp$1 = ""; seq = _tmp; name = _tmp$1;
		if (!((c === 123))) {
			seq = s.substring(0, (s.length - t.length >> 0));
			name = seq.substring(2);
		} else {
			end = strings.IndexRune(s, 125);
			if (end < 0) {
				err = checkUTF8(s);
				if (!($interfaceIsEqual(err, $ifaceNil))) {
					return [out, rest, err];
				}
				_tmp$2 = sliceType.nil; _tmp$3 = ""; _tmp$4 = new Error.ptr("invalid character class range", s); out = _tmp$2; rest = _tmp$3; err = _tmp$4;
				return [out, rest, err];
			}
			_tmp$5 = s.substring(0, (end + 1 >> 0)); _tmp$6 = s.substring((end + 1 >> 0)); seq = _tmp$5; t = _tmp$6;
			name = s.substring(3, end);
			err = checkUTF8(name);
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return [out, rest, err];
			}
		}
		if (!(name === "") && (name.charCodeAt(0) === 94)) {
			sign = -sign;
			name = name.substring(1);
		}
		_tuple$1 = unicodeTable(name); tab = _tuple$1[0]; fold = _tuple$1[1];
		if (tab === ptrType$2.nil) {
			_tmp$7 = sliceType.nil; _tmp$8 = ""; _tmp$9 = new Error.ptr("invalid character class range", seq); out = _tmp$7; rest = _tmp$8; err = _tmp$9;
			return [out, rest, err];
		}
		if ((((p.flags & 1) >>> 0) === 0) || fold === ptrType$2.nil) {
			if (sign > 0) {
				r = appendTable(r, tab);
			} else {
				r = appendNegatedTable(r, tab);
			}
		} else {
			tmp = $subslice(p.tmpClass, 0, 0);
			tmp = appendTable(tmp, tab);
			tmp = appendTable(tmp, fold);
			p.tmpClass = tmp;
			tmp = cleanClass(new ptrType$1(function() { return this.$target.tmpClass; }, function($v) { this.$target.tmpClass = $v; }, p));
			if (sign > 0) {
				r = appendClass(r, tmp);
			} else {
				r = appendNegatedClass(r, tmp);
			}
		}
		_tmp$10 = r; _tmp$11 = t; _tmp$12 = $ifaceNil; out = _tmp$10; rest = _tmp$11; err = _tmp$12;
		return [out, rest, err];
	};
	parser.prototype.parseUnicodeClass = function(s, r) { return this.$val.parseUnicodeClass(s, r); };
	parser.ptr.prototype.parseClass = function(s) {
		var _tmp, _tmp$1, _tmp$10, _tmp$11, _tmp$12, _tmp$13, _tmp$14, _tmp$15, _tmp$16, _tmp$17, _tmp$18, _tmp$19, _tmp$2, _tmp$20, _tmp$21, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, _tuple$5, class$1, err = $ifaceNil, err$1, err$2, first, hi, lo, nclass, nclass$1, nclass$2, nt, nt$1, nt$2, p, re, rest = "", rng, sign, size, t;
		p = this;
		t = s.substring(1);
		re = p.newRegexp(4);
		re.Flags = p.flags;
		re.Rune = $subslice(new sliceType(re.Rune0), 0, 0);
		sign = 1;
		if (!(t === "") && (t.charCodeAt(0) === 94)) {
			sign = -1;
			t = t.substring(1);
			if (((p.flags & 4) >>> 0) === 0) {
				re.Rune = $append(re.Rune, 10, 10);
			}
		}
		class$1 = re.Rune;
		first = true;
		while (t === "" || !((t.charCodeAt(0) === 93)) || first) {
			if (!(t === "") && (t.charCodeAt(0) === 45) && (((p.flags & 64) >>> 0) === 0) && !first && ((t.length === 1) || !((t.charCodeAt(1) === 93)))) {
				_tuple = utf8.DecodeRuneInString(t.substring(1)); size = _tuple[1];
				_tmp = ""; _tmp$1 = new Error.ptr("invalid character class range", t.substring(0, (1 + size >> 0))); rest = _tmp; err = _tmp$1;
				return [rest, err];
			}
			first = false;
			if (t.length > 2 && (t.charCodeAt(0) === 91) && (t.charCodeAt(1) === 58)) {
				_tuple$1 = p.parseNamedClass(t, class$1); nclass = _tuple$1[0]; nt = _tuple$1[1]; err$1 = _tuple$1[2];
				if (!($interfaceIsEqual(err$1, $ifaceNil))) {
					_tmp$2 = ""; _tmp$3 = err$1; rest = _tmp$2; err = _tmp$3;
					return [rest, err];
				}
				if (!(nclass === sliceType.nil)) {
					_tmp$4 = nclass; _tmp$5 = nt; class$1 = _tmp$4; t = _tmp$5;
					continue;
				}
			}
			_tuple$2 = p.parseUnicodeClass(t, class$1); nclass$1 = _tuple$2[0]; nt$1 = _tuple$2[1]; err$2 = _tuple$2[2];
			if (!($interfaceIsEqual(err$2, $ifaceNil))) {
				_tmp$6 = ""; _tmp$7 = err$2; rest = _tmp$6; err = _tmp$7;
				return [rest, err];
			}
			if (!(nclass$1 === sliceType.nil)) {
				_tmp$8 = nclass$1; _tmp$9 = nt$1; class$1 = _tmp$8; t = _tmp$9;
				continue;
			}
			_tuple$3 = p.parsePerlClassEscape(t, class$1); nclass$2 = _tuple$3[0]; nt$2 = _tuple$3[1];
			if (!(nclass$2 === sliceType.nil)) {
				_tmp$10 = nclass$2; _tmp$11 = nt$2; class$1 = _tmp$10; t = _tmp$11;
				continue;
			}
			rng = t;
			_tmp$12 = 0; _tmp$13 = 0; lo = _tmp$12; hi = _tmp$13;
			_tuple$4 = p.parseClassChar(t, s); lo = _tuple$4[0]; t = _tuple$4[1]; err$2 = _tuple$4[2];
			if (!($interfaceIsEqual(err$2, $ifaceNil))) {
				_tmp$14 = ""; _tmp$15 = err$2; rest = _tmp$14; err = _tmp$15;
				return [rest, err];
			}
			hi = lo;
			if (t.length >= 2 && (t.charCodeAt(0) === 45) && !((t.charCodeAt(1) === 93))) {
				t = t.substring(1);
				_tuple$5 = p.parseClassChar(t, s); hi = _tuple$5[0]; t = _tuple$5[1]; err$2 = _tuple$5[2];
				if (!($interfaceIsEqual(err$2, $ifaceNil))) {
					_tmp$16 = ""; _tmp$17 = err$2; rest = _tmp$16; err = _tmp$17;
					return [rest, err];
				}
				if (hi < lo) {
					rng = rng.substring(0, (rng.length - t.length >> 0));
					_tmp$18 = ""; _tmp$19 = new Error.ptr("invalid character class range", rng); rest = _tmp$18; err = _tmp$19;
					return [rest, err];
				}
			}
			if (((p.flags & 1) >>> 0) === 0) {
				class$1 = appendRange(class$1, lo, hi);
			} else {
				class$1 = appendFoldedRange(class$1, lo, hi);
			}
		}
		t = t.substring(1);
		re.Rune = class$1;
		class$1 = cleanClass(new ptrType$1(function() { return this.$target.Rune; }, function($v) { this.$target.Rune = $v; }, re));
		if (sign < 0) {
			class$1 = negateClass(class$1);
		}
		re.Rune = class$1;
		p.push(re);
		_tmp$20 = t; _tmp$21 = $ifaceNil; rest = _tmp$20; err = _tmp$21;
		return [rest, err];
	};
	parser.prototype.parseClass = function(s) { return this.$val.parseClass(s); };
	cleanClass = function(rp) {
		var _tmp, _tmp$1, hi, i, lo, r, w, x, x$1, x$2, x$3, x$4, x$5;
		sort.Sort((x = new ranges.ptr(rp), new x.constructor.elem(x)));
		r = rp.$get();
		if (r.$length < 2) {
			return r;
		}
		w = 2;
		i = 2;
		while (i < r.$length) {
			_tmp = ((i < 0 || i >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + i]); _tmp$1 = (x$1 = i + 1 >> 0, ((x$1 < 0 || x$1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$1])); lo = _tmp; hi = _tmp$1;
			if (lo <= ((x$2 = w - 1 >> 0, ((x$2 < 0 || x$2 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$2])) + 1 >> 0)) {
				if (hi > (x$3 = w - 1 >> 0, ((x$3 < 0 || x$3 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$3]))) {
					(x$4 = w - 1 >> 0, (x$4 < 0 || x$4 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$4] = hi);
				}
				i = i + (2) >> 0;
				continue;
			}
			(w < 0 || w >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + w] = lo;
			(x$5 = w + 1 >> 0, (x$5 < 0 || x$5 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$5] = hi);
			w = w + (2) >> 0;
			i = i + (2) >> 0;
		}
		return $subslice(r, 0, w);
	};
	appendLiteral = function(r, x, flags) {
		if (!((((flags & 1) >>> 0) === 0))) {
			return appendFoldedRange(r, x, x);
		}
		return appendRange(r, x, x);
	};
	appendRange = function(r, lo, hi) {
		var _tmp, _tmp$1, i, n, rhi, rlo, x, x$1, x$2, x$3;
		n = r.$length;
		i = 2;
		while (i <= 4) {
			if (n >= i) {
				_tmp = (x = n - i >> 0, ((x < 0 || x >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x])); _tmp$1 = (x$1 = (n - i >> 0) + 1 >> 0, ((x$1 < 0 || x$1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$1])); rlo = _tmp; rhi = _tmp$1;
				if (lo <= (rhi + 1 >> 0) && rlo <= (hi + 1 >> 0)) {
					if (lo < rlo) {
						(x$2 = n - i >> 0, (x$2 < 0 || x$2 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$2] = lo);
					}
					if (hi > rhi) {
						(x$3 = (n - i >> 0) + 1 >> 0, (x$3 < 0 || x$3 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$3] = hi);
					}
					return r;
				}
			}
			i = i + (2) >> 0;
		}
		return $append(r, lo, hi);
	};
	appendFoldedRange = function(r, lo, hi) {
		var c, f;
		if (lo <= 65 && hi >= 71903) {
			return appendRange(r, lo, hi);
		}
		if (hi < 65 || lo > 71903) {
			return appendRange(r, lo, hi);
		}
		if (lo < 65) {
			r = appendRange(r, lo, 64);
			lo = 65;
		}
		if (hi > 71903) {
			r = appendRange(r, 71904, hi);
			hi = 71903;
		}
		c = lo;
		while (c <= hi) {
			r = appendRange(r, c, c);
			f = unicode.SimpleFold(c);
			while (!((f === c))) {
				r = appendRange(r, f, f);
				f = unicode.SimpleFold(f);
			}
			c = c + (1) >> 0;
		}
		return r;
	};
	appendClass = function(r, x) {
		var i, x$1;
		i = 0;
		while (i < x.$length) {
			r = appendRange(r, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), (x$1 = i + 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])));
			i = i + (2) >> 0;
		}
		return r;
	};
	appendFoldedClass = function(r, x) {
		var i, x$1;
		i = 0;
		while (i < x.$length) {
			r = appendFoldedRange(r, ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]), (x$1 = i + 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])));
			i = i + (2) >> 0;
		}
		return r;
	};
	appendNegatedClass = function(r, x) {
		var _tmp, _tmp$1, hi, i, lo, nextLo, x$1;
		nextLo = 0;
		i = 0;
		while (i < x.$length) {
			_tmp = ((i < 0 || i >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i]); _tmp$1 = (x$1 = i + 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])); lo = _tmp; hi = _tmp$1;
			if (nextLo <= (lo - 1 >> 0)) {
				r = appendRange(r, nextLo, lo - 1 >> 0);
			}
			nextLo = hi + 1 >> 0;
			i = i + (2) >> 0;
		}
		if (nextLo <= 1114111) {
			r = appendRange(r, nextLo, 1114111);
		}
		return r;
	};
	appendTable = function(r, x) {
		var _i, _i$1, _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, c, c$1, hi, hi$1, lo, lo$1, stride, stride$1, xr, xr$1;
		_ref = x.R16;
		_i = 0;
		while (_i < _ref.$length) {
			xr = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), unicode.Range16);
			_tmp = (xr.Lo >> 0); _tmp$1 = (xr.Hi >> 0); _tmp$2 = (xr.Stride >> 0); lo = _tmp; hi = _tmp$1; stride = _tmp$2;
			if (stride === 1) {
				r = appendRange(r, lo, hi);
				_i++;
				continue;
			}
			c = lo;
			while (c <= hi) {
				r = appendRange(r, c, c);
				c = c + (stride) >> 0;
			}
			_i++;
		}
		_ref$1 = x.R32;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			xr$1 = $clone(((_i$1 < 0 || _i$1 >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i$1]), unicode.Range32);
			_tmp$3 = (xr$1.Lo >> 0); _tmp$4 = (xr$1.Hi >> 0); _tmp$5 = (xr$1.Stride >> 0); lo$1 = _tmp$3; hi$1 = _tmp$4; stride$1 = _tmp$5;
			if (stride$1 === 1) {
				r = appendRange(r, lo$1, hi$1);
				_i$1++;
				continue;
			}
			c$1 = lo$1;
			while (c$1 <= hi$1) {
				r = appendRange(r, c$1, c$1);
				c$1 = c$1 + (stride$1) >> 0;
			}
			_i$1++;
		}
		return r;
	};
	appendNegatedTable = function(r, x) {
		var _i, _i$1, _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, c, c$1, hi, hi$1, lo, lo$1, nextLo, stride, stride$1, xr, xr$1;
		nextLo = 0;
		_ref = x.R16;
		_i = 0;
		while (_i < _ref.$length) {
			xr = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), unicode.Range16);
			_tmp = (xr.Lo >> 0); _tmp$1 = (xr.Hi >> 0); _tmp$2 = (xr.Stride >> 0); lo = _tmp; hi = _tmp$1; stride = _tmp$2;
			if (stride === 1) {
				if (nextLo <= (lo - 1 >> 0)) {
					r = appendRange(r, nextLo, lo - 1 >> 0);
				}
				nextLo = hi + 1 >> 0;
				_i++;
				continue;
			}
			c = lo;
			while (c <= hi) {
				if (nextLo <= (c - 1 >> 0)) {
					r = appendRange(r, nextLo, c - 1 >> 0);
				}
				nextLo = c + 1 >> 0;
				c = c + (stride) >> 0;
			}
			_i++;
		}
		_ref$1 = x.R32;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			xr$1 = $clone(((_i$1 < 0 || _i$1 >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i$1]), unicode.Range32);
			_tmp$3 = (xr$1.Lo >> 0); _tmp$4 = (xr$1.Hi >> 0); _tmp$5 = (xr$1.Stride >> 0); lo$1 = _tmp$3; hi$1 = _tmp$4; stride$1 = _tmp$5;
			if (stride$1 === 1) {
				if (nextLo <= (lo$1 - 1 >> 0)) {
					r = appendRange(r, nextLo, lo$1 - 1 >> 0);
				}
				nextLo = hi$1 + 1 >> 0;
				_i$1++;
				continue;
			}
			c$1 = lo$1;
			while (c$1 <= hi$1) {
				if (nextLo <= (c$1 - 1 >> 0)) {
					r = appendRange(r, nextLo, c$1 - 1 >> 0);
				}
				nextLo = c$1 + 1 >> 0;
				c$1 = c$1 + (stride$1) >> 0;
			}
			_i$1++;
		}
		if (nextLo <= 1114111) {
			r = appendRange(r, nextLo, 1114111);
		}
		return r;
	};
	negateClass = function(r) {
		var _tmp, _tmp$1, hi, i, lo, nextLo, w, x, x$1;
		nextLo = 0;
		w = 0;
		i = 0;
		while (i < r.$length) {
			_tmp = ((i < 0 || i >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + i]); _tmp$1 = (x = i + 1 >> 0, ((x < 0 || x >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x])); lo = _tmp; hi = _tmp$1;
			if (nextLo <= (lo - 1 >> 0)) {
				(w < 0 || w >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + w] = nextLo;
				(x$1 = w + 1 >> 0, (x$1 < 0 || x$1 >= r.$length) ? $throwRuntimeError("index out of range") : r.$array[r.$offset + x$1] = lo - 1 >> 0);
				w = w + (2) >> 0;
			}
			nextLo = hi + 1 >> 0;
			i = i + (2) >> 0;
		}
		r = $subslice(r, 0, w);
		if (nextLo <= 1114111) {
			r = $append(r, nextLo, 1114111);
		}
		return r;
	};
	ranges.ptr.prototype.Less = function(i, j) {
		var p, ra, x, x$1;
		ra = $clone(this, ranges);
		p = ra.p.$get();
		i = i * (2) >> 0;
		j = j * (2) >> 0;
		return ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]) < ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]) || (((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]) === ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j])) && (x = i + 1 >> 0, ((x < 0 || x >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x])) > (x$1 = j + 1 >> 0, ((x$1 < 0 || x$1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x$1]));
	};
	ranges.prototype.Less = function(i, j) { return this.$val.Less(i, j); };
	ranges.ptr.prototype.Len = function() {
		var _q, ra;
		ra = $clone(this, ranges);
		return (_q = ra.p.$get().$length / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
	};
	ranges.prototype.Len = function() { return this.$val.Len(); };
	ranges.ptr.prototype.Swap = function(i, j) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, p, ra, x, x$1, x$2, x$3;
		ra = $clone(this, ranges);
		p = ra.p.$get();
		i = i * (2) >> 0;
		j = j * (2) >> 0;
		_tmp = ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]); _tmp$1 = (x = j + 1 >> 0, ((x < 0 || x >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x])); _tmp$2 = ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]); _tmp$3 = (x$1 = i + 1 >> 0, ((x$1 < 0 || x$1 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x$1])); (i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i] = _tmp; (x$2 = i + 1 >> 0, (x$2 < 0 || x$2 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x$2] = _tmp$1); (j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j] = _tmp$2; (x$3 = j + 1 >> 0, (x$3 < 0 || x$3 >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + x$3] = _tmp$3);
	};
	ranges.prototype.Swap = function(i, j) { return this.$val.Swap(i, j); };
	checkUTF8 = function(s) {
		var _tuple, rune, size;
		while (!(s === "")) {
			_tuple = utf8.DecodeRuneInString(s); rune = _tuple[0]; size = _tuple[1];
			if ((rune === 65533) && (size === 1)) {
				return new Error.ptr("invalid UTF-8", s);
			}
			s = s.substring(size);
		}
		return $ifaceNil;
	};
	nextRune = function(s) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, c = 0, err = $ifaceNil, size, t = "";
		_tuple = utf8.DecodeRuneInString(s); c = _tuple[0]; size = _tuple[1];
		if ((c === 65533) && (size === 1)) {
			_tmp = 0; _tmp$1 = ""; _tmp$2 = new Error.ptr("invalid UTF-8", s); c = _tmp; t = _tmp$1; err = _tmp$2;
			return [c, t, err];
		}
		_tmp$3 = c; _tmp$4 = s.substring(size); _tmp$5 = $ifaceNil; c = _tmp$3; t = _tmp$4; err = _tmp$5;
		return [c, t, err];
	};
	isalnum = function(c) {
		return 48 <= c && c <= 57 || 65 <= c && c <= 90 || 97 <= c && c <= 122;
	};
	unhex = function(c) {
		if (48 <= c && c <= 57) {
			return c - 48 >> 0;
		}
		if (97 <= c && c <= 102) {
			return (c - 97 >> 0) + 10 >> 0;
		}
		if (65 <= c && c <= 70) {
			return (c - 65 >> 0) + 10 >> 0;
		}
		return -1;
	};
	InstOp.prototype.String = function() {
		var i;
		i = this.$val;
		if ((i >>> 0) >= (instOpNames.$length >>> 0)) {
			return "";
		}
		return ((i < 0 || i >= instOpNames.$length) ? $throwRuntimeError("index out of range") : instOpNames.$array[instOpNames.$offset + i]);
	};
	$ptrType(InstOp).prototype.String = function() { return new InstOp(this.$get()).String(); };
	EmptyOpContext = $pkg.EmptyOpContext = function(r1, r2) {
		var boundary, op;
		op = 32;
		boundary = 0;
		if (IsWordChar(r1)) {
			boundary = 1;
		} else if (r1 === 10) {
			op = (op | (1)) >>> 0;
		} else if (r1 < 0) {
			op = (op | (5)) >>> 0;
		}
		if (IsWordChar(r2)) {
			boundary = (boundary ^ (1)) << 24 >>> 24;
		} else if (r2 === 10) {
			op = (op | (2)) >>> 0;
		} else if (r2 < 0) {
			op = (op | (10)) >>> 0;
		}
		if (!((boundary === 0))) {
			op = (op ^ (48)) << 24 >>> 24;
		}
		return op;
	};
	IsWordChar = $pkg.IsWordChar = function(r) {
		return 65 <= r && r <= 90 || 97 <= r && r <= 122 || 48 <= r && r <= 57 || (r === 95);
	};
	Prog.ptr.prototype.String = function() {
		var b, p;
		p = this;
		b = $clone(new bytes.Buffer.ptr(), bytes.Buffer);
		dumpProg(b, p);
		return b.String();
	};
	Prog.prototype.String = function() { return this.$val.String(); };
	Prog.ptr.prototype.skipNop = function(pc) {
		var i, p, x, x$1;
		p = this;
		i = (x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc]));
		while ((i.Op === 6) || (i.Op === 2)) {
			pc = i.Out;
			i = (x$1 = p.Inst, ((pc < 0 || pc >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + pc]));
		}
		return [i, pc];
	};
	Prog.prototype.skipNop = function(pc) { return this.$val.skipNop(pc); };
	Inst.ptr.prototype.op = function() {
		var _ref, i, op;
		i = this;
		op = i.Op;
		_ref = op;
		if (_ref === 8 || _ref === 9 || _ref === 10) {
			op = 7;
		}
		return op;
	};
	Inst.prototype.op = function() { return this.$val.op(); };
	Prog.ptr.prototype.Prefix = function() {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, _tuple$1, buf, complete = false, i, p, prefix = "", x;
		p = this;
		_tuple = p.skipNop((p.Start >>> 0)); i = _tuple[0];
		if (!((i.op() === 7)) || !((i.Rune.$length === 1))) {
			_tmp = ""; _tmp$1 = i.Op === 4; prefix = _tmp; complete = _tmp$1;
			return [prefix, complete];
		}
		buf = $clone(new bytes.Buffer.ptr(), bytes.Buffer);
		while ((i.op() === 7) && (i.Rune.$length === 1) && ((((i.Arg << 16 >>> 16) & 1) >>> 0) === 0)) {
			buf.WriteRune((x = i.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])));
			_tuple$1 = p.skipNop(i.Out); i = _tuple$1[0];
		}
		_tmp$2 = buf.String(); _tmp$3 = i.Op === 4; prefix = _tmp$2; complete = _tmp$3;
		return [prefix, complete];
	};
	Prog.prototype.Prefix = function() { return this.$val.Prefix(); };
	Prog.ptr.prototype.StartCond = function() {
		var _ref, flag, i, p, pc, x, x$1;
		p = this;
		flag = 0;
		pc = (p.Start >>> 0);
		i = (x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc]));
		Loop:
		while (true) {
			_ref = i.Op;
			if (_ref === 3) {
				flag = (flag | ((i.Arg << 24 >>> 24))) >>> 0;
			} else if (_ref === 5) {
				return 255;
			} else if (_ref === 2 || _ref === 6) {
			} else {
				break Loop;
			}
			pc = i.Out;
			i = (x$1 = p.Inst, ((pc < 0 || pc >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + pc]));
		}
		return flag;
	};
	Prog.prototype.StartCond = function() { return this.$val.StartCond(); };
	Inst.ptr.prototype.MatchRune = function(r) {
		var i;
		i = this;
		return !((i.MatchRunePos(r) === -1));
	};
	Inst.prototype.MatchRune = function(r) { return this.$val.MatchRune(r); };
	Inst.ptr.prototype.MatchRunePos = function(r) {
		var _q, _q$1, _q$2, c, hi, i, j, lo, m, r0, r1, rune, x, x$1, x$2;
		i = this;
		rune = i.Rune;
		if (rune.$length === 1) {
			r0 = ((0 < 0 || 0 >= rune.$length) ? $throwRuntimeError("index out of range") : rune.$array[rune.$offset + 0]);
			if (r === r0) {
				return 0;
			}
			if (!(((((i.Arg << 16 >>> 16) & 1) >>> 0) === 0))) {
				r1 = unicode.SimpleFold(r0);
				while (!((r1 === r0))) {
					if (r === r1) {
						return 0;
					}
					r1 = unicode.SimpleFold(r1);
				}
			}
			return -1;
		}
		j = 0;
		while (j < rune.$length && j <= 8) {
			if (r < ((j < 0 || j >= rune.$length) ? $throwRuntimeError("index out of range") : rune.$array[rune.$offset + j])) {
				return -1;
			}
			if (r <= (x = j + 1 >> 0, ((x < 0 || x >= rune.$length) ? $throwRuntimeError("index out of range") : rune.$array[rune.$offset + x]))) {
				return (_q = j / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
			}
			j = j + (2) >> 0;
		}
		lo = 0;
		hi = (_q$1 = rune.$length / 2, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
		while (lo < hi) {
			m = lo + (_q$2 = ((hi - lo >> 0)) / 2, (_q$2 === _q$2 && _q$2 !== 1/0 && _q$2 !== -1/0) ? _q$2 >> 0 : $throwRuntimeError("integer divide by zero")) >> 0;
			c = (x$1 = 2 * m >> 0, ((x$1 < 0 || x$1 >= rune.$length) ? $throwRuntimeError("index out of range") : rune.$array[rune.$offset + x$1]));
			if (c <= r) {
				if (r <= (x$2 = (2 * m >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= rune.$length) ? $throwRuntimeError("index out of range") : rune.$array[rune.$offset + x$2]))) {
					return m;
				}
				lo = m + 1 >> 0;
			} else {
				hi = m;
			}
		}
		return -1;
	};
	Inst.prototype.MatchRunePos = function(r) { return this.$val.MatchRunePos(r); };
	wordRune = function(r) {
		return (r === 95) || (65 <= r && r <= 90) || (97 <= r && r <= 122) || (48 <= r && r <= 57);
	};
	Inst.ptr.prototype.MatchEmptyWidth = function(before, after) {
		var _ref, i;
		i = this;
		_ref = (i.Arg << 24 >>> 24);
		if (_ref === 1) {
			return (before === 10) || (before === -1);
		} else if (_ref === 2) {
			return (after === 10) || (after === -1);
		} else if (_ref === 4) {
			return before === -1;
		} else if (_ref === 8) {
			return after === -1;
		} else if (_ref === 16) {
			return !(wordRune(before) === wordRune(after));
		} else if (_ref === 32) {
			return wordRune(before) === wordRune(after);
		}
		$panic(new $String("unknown empty width arg"));
	};
	Inst.prototype.MatchEmptyWidth = function(before, after) { return this.$val.MatchEmptyWidth(before, after); };
	Inst.ptr.prototype.String = function() {
		var b, i;
		i = this;
		b = $clone(new bytes.Buffer.ptr(), bytes.Buffer);
		dumpInst(b, i);
		return b.String();
	};
	Inst.prototype.String = function() { return this.$val.String(); };
	bw = function(b, args) {
		var _i, _ref, s;
		_ref = args;
		_i = 0;
		while (_i < _ref.$length) {
			s = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			b.WriteString(s);
			_i++;
		}
	};
	dumpProg = function(b, p) {
		var _i, _ref, i, j, pc, x;
		_ref = p.Inst;
		_i = 0;
		while (_i < _ref.$length) {
			j = _i;
			i = (x = p.Inst, ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]));
			pc = strconv.Itoa(j);
			if (pc.length < 3) {
				b.WriteString("   ".substring(pc.length));
			}
			if (j === p.Start) {
				pc = pc + ("*");
			}
			bw(b, new sliceType$3([pc, "\t"]));
			dumpInst(b, i);
			bw(b, new sliceType$3(["\n"]));
			_i++;
		}
	};
	u32 = function(i) {
		return strconv.FormatUint(new $Uint64(0, i), 10);
	};
	dumpInst = function(b, i) {
		var _ref;
		_ref = i.Op;
		if (_ref === 0) {
			bw(b, new sliceType$3(["alt -> ", u32(i.Out), ", ", u32(i.Arg)]));
		} else if (_ref === 1) {
			bw(b, new sliceType$3(["altmatch -> ", u32(i.Out), ", ", u32(i.Arg)]));
		} else if (_ref === 2) {
			bw(b, new sliceType$3(["cap ", u32(i.Arg), " -> ", u32(i.Out)]));
		} else if (_ref === 3) {
			bw(b, new sliceType$3(["empty ", u32(i.Arg), " -> ", u32(i.Out)]));
		} else if (_ref === 4) {
			bw(b, new sliceType$3(["match"]));
		} else if (_ref === 5) {
			bw(b, new sliceType$3(["fail"]));
		} else if (_ref === 6) {
			bw(b, new sliceType$3(["nop -> ", u32(i.Out)]));
		} else if (_ref === 7) {
			if (i.Rune === sliceType.nil) {
				bw(b, new sliceType$3(["rune <nil>"]));
			}
			bw(b, new sliceType$3(["rune ", strconv.QuoteToASCII($runesToString(i.Rune))]));
			if (!(((((i.Arg << 16 >>> 16) & 1) >>> 0) === 0))) {
				bw(b, new sliceType$3(["/i"]));
			}
			bw(b, new sliceType$3([" -> ", u32(i.Out)]));
		} else if (_ref === 8) {
			bw(b, new sliceType$3(["rune1 ", strconv.QuoteToASCII($runesToString(i.Rune)), " -> ", u32(i.Out)]));
		} else if (_ref === 9) {
			bw(b, new sliceType$3(["any -> ", u32(i.Out)]));
		} else if (_ref === 10) {
			bw(b, new sliceType$3(["anynotnl -> ", u32(i.Out)]));
		}
	};
	Regexp.ptr.prototype.Equal = function(y) {
		var _i, _i$1, _ref, _ref$1, _ref$2, i, i$1, r, sub, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8;
		x = this;
		if (x === ptrType.nil || y === ptrType.nil) {
			return x === y;
		}
		if (!((x.Op === y.Op))) {
			return false;
		}
		_ref = x.Op;
		if (_ref === 10) {
			if (!((((x.Flags & 256) >>> 0) === ((y.Flags & 256) >>> 0)))) {
				return false;
			}
		} else if (_ref === 3 || _ref === 4) {
			if (!((x.Rune.$length === y.Rune.$length))) {
				return false;
			}
			_ref$1 = x.Rune;
			_i = 0;
			while (_i < _ref$1.$length) {
				i = _i;
				r = ((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]);
				if (!((r === (x$1 = y.Rune, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i]))))) {
					return false;
				}
				_i++;
			}
		} else if (_ref === 19 || _ref === 18) {
			if (!((x.Sub.$length === y.Sub.$length))) {
				return false;
			}
			_ref$2 = x.Sub;
			_i$1 = 0;
			while (_i$1 < _ref$2.$length) {
				i$1 = _i$1;
				sub = ((_i$1 < 0 || _i$1 >= _ref$2.$length) ? $throwRuntimeError("index out of range") : _ref$2.$array[_ref$2.$offset + _i$1]);
				if (!sub.Equal((x$2 = y.Sub, ((i$1 < 0 || i$1 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + i$1])))) {
					return false;
				}
				_i$1++;
			}
		} else if (_ref === 14 || _ref === 15 || _ref === 16) {
			if (!((((x.Flags & 32) >>> 0) === ((y.Flags & 32) >>> 0))) || !(x$3 = x.Sub, ((0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0])).Equal((x$4 = y.Sub, ((0 < 0 || 0 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 0])))) {
				return false;
			}
		} else if (_ref === 17) {
			if (!((((x.Flags & 32) >>> 0) === ((y.Flags & 32) >>> 0))) || !((x.Min === y.Min)) || !((x.Max === y.Max)) || !(x$5 = x.Sub, ((0 < 0 || 0 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 0])).Equal((x$6 = y.Sub, ((0 < 0 || 0 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + 0])))) {
				return false;
			}
		} else if (_ref === 13) {
			if (!((x.Cap === y.Cap)) || !(x.Name === y.Name) || !(x$7 = x.Sub, ((0 < 0 || 0 >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + 0])).Equal((x$8 = y.Sub, ((0 < 0 || 0 >= x$8.$length) ? $throwRuntimeError("index out of range") : x$8.$array[x$8.$offset + 0])))) {
				return false;
			}
		}
		return true;
	};
	Regexp.prototype.Equal = function(y) { return this.$val.Equal(y); };
	writeRegexp = function(b, re) {
		var _i, _i$1, _i$2, _r, _ref, _ref$1, _ref$2, _ref$3, _ref$4, _tmp, _tmp$1, _tmp$2, _tmp$3, hi, hi$1, i, i$1, i$2, lo, lo$1, r, sub, sub$1, sub$2, x, x$1, x$10, x$11, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		_ref = re.Op;
		switch (0) { default: if (_ref === 1) {
			b.WriteString("[^\\x00-\\x{10FFFF}]");
		} else if (_ref === 2) {
			b.WriteString("(?:)");
		} else if (_ref === 3) {
			if (!((((re.Flags & 1) >>> 0) === 0))) {
				b.WriteString("(?i:");
			}
			_ref$1 = re.Rune;
			_i = 0;
			while (_i < _ref$1.$length) {
				r = ((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]);
				escape(b, r, false);
				_i++;
			}
			if (!((((re.Flags & 1) >>> 0) === 0))) {
				b.WriteString(")");
			}
		} else if (_ref === 4) {
			if (!(((_r = re.Rune.$length % 2, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) === 0))) {
				b.WriteString("[invalid char class]");
				break;
			}
			b.WriteRune(91);
			if (re.Rune.$length === 0) {
				b.WriteString("^\\x00-\\x{10FFFF}");
			} else if (((x = re.Rune, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])) === 0) && ((x$1 = re.Rune, x$2 = re.Rune.$length - 1 >> 0, ((x$2 < 0 || x$2 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + x$2])) === 1114111)) {
				b.WriteRune(94);
				i = 1;
				while (i < (re.Rune.$length - 1 >> 0)) {
					_tmp = (x$3 = re.Rune, ((i < 0 || i >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + i])) + 1 >> 0; _tmp$1 = (x$4 = re.Rune, x$5 = i + 1 >> 0, ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5])) - 1 >> 0; lo = _tmp; hi = _tmp$1;
					escape(b, lo, lo === 45);
					if (!((lo === hi))) {
						b.WriteRune(45);
						escape(b, hi, hi === 45);
					}
					i = i + (2) >> 0;
				}
			} else {
				i$1 = 0;
				while (i$1 < re.Rune.$length) {
					_tmp$2 = (x$6 = re.Rune, ((i$1 < 0 || i$1 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + i$1])); _tmp$3 = (x$7 = re.Rune, x$8 = i$1 + 1 >> 0, ((x$8 < 0 || x$8 >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + x$8])); lo$1 = _tmp$2; hi$1 = _tmp$3;
					escape(b, lo$1, lo$1 === 45);
					if (!((lo$1 === hi$1))) {
						b.WriteRune(45);
						escape(b, hi$1, hi$1 === 45);
					}
					i$1 = i$1 + (2) >> 0;
				}
			}
			b.WriteRune(93);
		} else if (_ref === 5) {
			b.WriteString("(?-s:.)");
		} else if (_ref === 6) {
			b.WriteString("(?s:.)");
		} else if (_ref === 7) {
			b.WriteRune(94);
		} else if (_ref === 8) {
			b.WriteRune(36);
		} else if (_ref === 9) {
			b.WriteString("\\A");
		} else if (_ref === 10) {
			if (!((((re.Flags & 256) >>> 0) === 0))) {
				b.WriteString("(?-m:$)");
			} else {
				b.WriteString("\\z");
			}
		} else if (_ref === 11) {
			b.WriteString("\\b");
		} else if (_ref === 12) {
			b.WriteString("\\B");
		} else if (_ref === 13) {
			if (!(re.Name === "")) {
				b.WriteString("(?P<");
				b.WriteString(re.Name);
				b.WriteRune(62);
			} else {
				b.WriteRune(40);
			}
			if (!(((x$9 = re.Sub, ((0 < 0 || 0 >= x$9.$length) ? $throwRuntimeError("index out of range") : x$9.$array[x$9.$offset + 0])).Op === 2))) {
				writeRegexp(b, (x$10 = re.Sub, ((0 < 0 || 0 >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + 0])));
			}
			b.WriteRune(41);
		} else if (_ref === 14 || _ref === 15 || _ref === 16 || _ref === 17) {
			sub = (x$11 = re.Sub, ((0 < 0 || 0 >= x$11.$length) ? $throwRuntimeError("index out of range") : x$11.$array[x$11.$offset + 0]));
			if (sub.Op > 13 || (sub.Op === 3) && sub.Rune.$length > 1) {
				b.WriteString("(?:");
				writeRegexp(b, sub);
				b.WriteString(")");
			} else {
				writeRegexp(b, sub);
			}
			_ref$2 = re.Op;
			if (_ref$2 === 14) {
				b.WriteRune(42);
			} else if (_ref$2 === 15) {
				b.WriteRune(43);
			} else if (_ref$2 === 16) {
				b.WriteRune(63);
			} else if (_ref$2 === 17) {
				b.WriteRune(123);
				b.WriteString(strconv.Itoa(re.Min));
				if (!((re.Max === re.Min))) {
					b.WriteRune(44);
					if (re.Max >= 0) {
						b.WriteString(strconv.Itoa(re.Max));
					}
				}
				b.WriteRune(125);
			}
			if (!((((re.Flags & 32) >>> 0) === 0))) {
				b.WriteRune(63);
			}
		} else if (_ref === 18) {
			_ref$3 = re.Sub;
			_i$1 = 0;
			while (_i$1 < _ref$3.$length) {
				sub$1 = ((_i$1 < 0 || _i$1 >= _ref$3.$length) ? $throwRuntimeError("index out of range") : _ref$3.$array[_ref$3.$offset + _i$1]);
				if (sub$1.Op === 19) {
					b.WriteString("(?:");
					writeRegexp(b, sub$1);
					b.WriteString(")");
				} else {
					writeRegexp(b, sub$1);
				}
				_i$1++;
			}
		} else if (_ref === 19) {
			_ref$4 = re.Sub;
			_i$2 = 0;
			while (_i$2 < _ref$4.$length) {
				i$2 = _i$2;
				sub$2 = ((_i$2 < 0 || _i$2 >= _ref$4.$length) ? $throwRuntimeError("index out of range") : _ref$4.$array[_ref$4.$offset + _i$2]);
				if (i$2 > 0) {
					b.WriteRune(124);
				}
				writeRegexp(b, sub$2);
				_i$2++;
			}
		} else {
			b.WriteString("<invalid op" + strconv.Itoa((re.Op >> 0)) + ">");
		} }
	};
	Regexp.ptr.prototype.String = function() {
		var b, re;
		re = this;
		b = $clone(new bytes.Buffer.ptr(), bytes.Buffer);
		writeRegexp(b, re);
		return b.String();
	};
	Regexp.prototype.String = function() { return this.$val.String(); };
	escape = function(b, r, force) {
		var _ref, s;
		if (unicode.IsPrint(r)) {
			if (strings.IndexRune("\\.+*?()|[]{}^$", r) >= 0 || force) {
				b.WriteRune(92);
			}
			b.WriteRune(r);
			return;
		}
		_ref = r;
		switch (0) { default: if (_ref === 7) {
			b.WriteString("\\a");
		} else if (_ref === 12) {
			b.WriteString("\\f");
		} else if (_ref === 10) {
			b.WriteString("\\n");
		} else if (_ref === 13) {
			b.WriteString("\\r");
		} else if (_ref === 9) {
			b.WriteString("\\t");
		} else if (_ref === 11) {
			b.WriteString("\\v");
		} else {
			if (r < 256) {
				b.WriteString("\\x");
				s = strconv.FormatInt(new $Int64(0, r), 16);
				if (s.length === 1) {
					b.WriteRune(48);
				}
				b.WriteString(s);
				break;
			}
			b.WriteString("\\x{");
			b.WriteString(strconv.FormatInt(new $Int64(0, r), 16));
			b.WriteString("}");
		} }
	};
	Regexp.ptr.prototype.MaxCap = function() {
		var _i, _ref, m, n, re, sub;
		re = this;
		m = 0;
		if (re.Op === 13) {
			m = re.Cap;
		}
		_ref = re.Sub;
		_i = 0;
		while (_i < _ref.$length) {
			sub = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			n = sub.MaxCap();
			if (m < n) {
				m = n;
			}
			_i++;
		}
		return m;
	};
	Regexp.prototype.MaxCap = function() { return this.$val.MaxCap(); };
	Regexp.ptr.prototype.CapNames = function() {
		var names, re;
		re = this;
		names = $makeSlice(sliceType$3, (re.MaxCap() + 1 >> 0));
		re.capNames(names);
		return names;
	};
	Regexp.prototype.CapNames = function() { return this.$val.CapNames(); };
	Regexp.ptr.prototype.capNames = function(names) {
		var _i, _ref, re, sub, x;
		re = this;
		if (re.Op === 13) {
			(x = re.Cap, (x < 0 || x >= names.$length) ? $throwRuntimeError("index out of range") : names.$array[names.$offset + x] = re.Name);
		}
		_ref = re.Sub;
		_i = 0;
		while (_i < _ref.$length) {
			sub = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			sub.capNames(names);
			_i++;
		}
	};
	Regexp.prototype.capNames = function(names) { return this.$val.capNames(names); };
	Regexp.ptr.prototype.Simplify = function() {
		var _i, _ref, _ref$1, i, i$1, i$2, i$3, nre, nre$1, nre2, nsub, prefix, re, sub, sub$1, sub$2, suffix, x, x$1;
		re = this;
		if (re === ptrType.nil) {
			return ptrType.nil;
		}
		_ref = re.Op;
		if (_ref === 13 || _ref === 18 || _ref === 19) {
			nre = re;
			_ref$1 = re.Sub;
			_i = 0;
			while (_i < _ref$1.$length) {
				i = _i;
				sub = ((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]);
				nsub = sub.Simplify();
				if (nre === re && !(nsub === sub)) {
					nre = new Regexp.ptr();
					$copy(nre, re, Regexp);
					nre.Rune = sliceType.nil;
					nre.Sub = $appendSlice($subslice(new sliceType$4(nre.Sub0), 0, 0), $subslice(re.Sub, 0, i));
				}
				if (!(nre === re)) {
					nre.Sub = $append(nre.Sub, nsub);
				}
				_i++;
			}
			return nre;
		} else if (_ref === 14 || _ref === 15 || _ref === 16) {
			sub$1 = (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0])).Simplify();
			return simplify1(re.Op, re.Flags, sub$1, re);
		} else if (_ref === 17) {
			if ((re.Min === 0) && (re.Max === 0)) {
				return new Regexp.ptr(2, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
			}
			sub$2 = (x$1 = re.Sub, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0])).Simplify();
			if (re.Max === -1) {
				if (re.Min === 0) {
					return simplify1(14, re.Flags, sub$2, ptrType.nil);
				}
				if (re.Min === 1) {
					return simplify1(15, re.Flags, sub$2, ptrType.nil);
				}
				nre$1 = new Regexp.ptr(18, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
				nre$1.Sub = $subslice(new sliceType$4(nre$1.Sub0), 0, 0);
				i$1 = 0;
				while (i$1 < (re.Min - 1 >> 0)) {
					nre$1.Sub = $append(nre$1.Sub, sub$2);
					i$1 = i$1 + (1) >> 0;
				}
				nre$1.Sub = $append(nre$1.Sub, simplify1(15, re.Flags, sub$2, ptrType.nil));
				return nre$1;
			}
			if ((re.Min === 1) && (re.Max === 1)) {
				return sub$2;
			}
			prefix = ptrType.nil;
			if (re.Min > 0) {
				prefix = new Regexp.ptr(18, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
				prefix.Sub = $subslice(new sliceType$4(prefix.Sub0), 0, 0);
				i$2 = 0;
				while (i$2 < re.Min) {
					prefix.Sub = $append(prefix.Sub, sub$2);
					i$2 = i$2 + (1) >> 0;
				}
			}
			if (re.Max > re.Min) {
				suffix = simplify1(16, re.Flags, sub$2, ptrType.nil);
				i$3 = re.Min + 1 >> 0;
				while (i$3 < re.Max) {
					nre2 = new Regexp.ptr(18, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
					nre2.Sub = $append($subslice(new sliceType$4(nre2.Sub0), 0, 0), sub$2, suffix);
					suffix = simplify1(16, re.Flags, nre2, ptrType.nil);
					i$3 = i$3 + (1) >> 0;
				}
				if (prefix === ptrType.nil) {
					return suffix;
				}
				prefix.Sub = $append(prefix.Sub, suffix);
			}
			if (!(prefix === ptrType.nil)) {
				return prefix;
			}
			return new Regexp.ptr(1, 0, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
		}
		return re;
	};
	Regexp.prototype.Simplify = function() { return this.$val.Simplify(); };
	simplify1 = function(op, flags, sub, re) {
		var x;
		if (sub.Op === 2) {
			return sub;
		}
		if ((op === sub.Op) && (((flags & 32) >>> 0) === ((sub.Flags & 32) >>> 0))) {
			return sub;
		}
		if (!(re === ptrType.nil) && (re.Op === op) && (((re.Flags & 32) >>> 0) === ((flags & 32) >>> 0)) && sub === (x = re.Sub, ((0 < 0 || 0 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 0]))) {
			return re;
		}
		re = new Regexp.ptr(op, flags, sliceType$4.nil, arrayType.zero(), sliceType.nil, arrayType$1.zero(), 0, 0, 0, "");
		re.Sub = $append($subslice(new sliceType$4(re.Sub0), 0, 0), sub);
		return re;
	};
	patchList.methods = [{prop: "append", name: "append", pkg: "regexp/syntax", type: $funcType([ptrType$3, patchList], [patchList], false)}, {prop: "next", name: "next", pkg: "regexp/syntax", type: $funcType([ptrType$3], [patchList], false)}, {prop: "patch", name: "patch", pkg: "regexp/syntax", type: $funcType([ptrType$3, $Uint32], [], false)}];
	ptrType$4.methods = [{prop: "append", name: "append", pkg: "regexp/syntax", type: $funcType([ptrType$3, patchList], [patchList], false)}, {prop: "next", name: "next", pkg: "regexp/syntax", type: $funcType([ptrType$3], [patchList], false)}, {prop: "patch", name: "patch", pkg: "regexp/syntax", type: $funcType([ptrType$3, $Uint32], [], false)}];
	ptrType$5.methods = [{prop: "alt", name: "alt", pkg: "regexp/syntax", type: $funcType([frag, frag], [frag], false)}, {prop: "cap", name: "cap", pkg: "regexp/syntax", type: $funcType([$Uint32], [frag], false)}, {prop: "cat", name: "cat", pkg: "regexp/syntax", type: $funcType([frag, frag], [frag], false)}, {prop: "compile", name: "compile", pkg: "regexp/syntax", type: $funcType([ptrType], [frag], false)}, {prop: "empty", name: "empty", pkg: "regexp/syntax", type: $funcType([EmptyOp], [frag], false)}, {prop: "fail", name: "fail", pkg: "regexp/syntax", type: $funcType([], [frag], false)}, {prop: "init", name: "init", pkg: "regexp/syntax", type: $funcType([], [], false)}, {prop: "inst", name: "inst", pkg: "regexp/syntax", type: $funcType([InstOp], [frag], false)}, {prop: "nop", name: "nop", pkg: "regexp/syntax", type: $funcType([], [frag], false)}, {prop: "plus", name: "plus", pkg: "regexp/syntax", type: $funcType([frag, $Bool], [frag], false)}, {prop: "quest", name: "quest", pkg: "regexp/syntax", type: $funcType([frag, $Bool], [frag], false)}, {prop: "rune", name: "rune", pkg: "regexp/syntax", type: $funcType([sliceType, Flags], [frag], false)}, {prop: "star", name: "star", pkg: "regexp/syntax", type: $funcType([frag, $Bool], [frag], false)}];
	ptrType$6.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ErrorCode.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$7.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$8.methods = [{prop: "alternate", name: "alternate", pkg: "regexp/syntax", type: $funcType([], [ptrType], false)}, {prop: "appendGroup", name: "appendGroup", pkg: "regexp/syntax", type: $funcType([sliceType, charGroup], [sliceType], false)}, {prop: "collapse", name: "collapse", pkg: "regexp/syntax", type: $funcType([sliceType$4, Op], [ptrType], false)}, {prop: "concat", name: "concat", pkg: "regexp/syntax", type: $funcType([], [ptrType], false)}, {prop: "factor", name: "factor", pkg: "regexp/syntax", type: $funcType([sliceType$4, Flags], [sliceType$4], false)}, {prop: "leadingRegexp", name: "leadingRegexp", pkg: "regexp/syntax", type: $funcType([ptrType], [ptrType], false)}, {prop: "leadingString", name: "leadingString", pkg: "regexp/syntax", type: $funcType([ptrType], [sliceType, Flags], false)}, {prop: "literal", name: "literal", pkg: "regexp/syntax", type: $funcType([$Int32], [], false)}, {prop: "maybeConcat", name: "maybeConcat", pkg: "regexp/syntax", type: $funcType([$Int32, Flags], [$Bool], false)}, {prop: "newLiteral", name: "newLiteral", pkg: "regexp/syntax", type: $funcType([$Int32, Flags], [ptrType], false)}, {prop: "newRegexp", name: "newRegexp", pkg: "regexp/syntax", type: $funcType([Op], [ptrType], false)}, {prop: "op", name: "op", pkg: "regexp/syntax", type: $funcType([Op], [ptrType], false)}, {prop: "parseClass", name: "parseClass", pkg: "regexp/syntax", type: $funcType([$String], [$String, $error], false)}, {prop: "parseClassChar", name: "parseClassChar", pkg: "regexp/syntax", type: $funcType([$String, $String], [$Int32, $String, $error], false)}, {prop: "parseEscape", name: "parseEscape", pkg: "regexp/syntax", type: $funcType([$String], [$Int32, $String, $error], false)}, {prop: "parseInt", name: "parseInt", pkg: "regexp/syntax", type: $funcType([$String], [$Int, $String, $Bool], false)}, {prop: "parseNamedClass", name: "parseNamedClass", pkg: "regexp/syntax", type: $funcType([$String, sliceType], [sliceType, $String, $error], false)}, {prop: "parsePerlClassEscape", name: "parsePerlClassEscape", pkg: "regexp/syntax", type: $funcType([$String, sliceType], [sliceType, $String], false)}, {prop: "parsePerlFlags", name: "parsePerlFlags", pkg: "regexp/syntax", type: $funcType([$String], [$String, $error], false)}, {prop: "parseRepeat", name: "parseRepeat", pkg: "regexp/syntax", type: $funcType([$String], [$Int, $Int, $String, $Bool], false)}, {prop: "parseRightParen", name: "parseRightParen", pkg: "regexp/syntax", type: $funcType([], [$error], false)}, {prop: "parseUnicodeClass", name: "parseUnicodeClass", pkg: "regexp/syntax", type: $funcType([$String, sliceType], [sliceType, $String, $error], false)}, {prop: "parseVerticalBar", name: "parseVerticalBar", pkg: "regexp/syntax", type: $funcType([], [$error], false)}, {prop: "push", name: "push", pkg: "regexp/syntax", type: $funcType([ptrType], [ptrType], false)}, {prop: "removeLeadingRegexp", name: "removeLeadingRegexp", pkg: "regexp/syntax", type: $funcType([ptrType, $Bool], [ptrType], false)}, {prop: "removeLeadingString", name: "removeLeadingString", pkg: "regexp/syntax", type: $funcType([ptrType, $Int], [ptrType], false)}, {prop: "repeat", name: "repeat", pkg: "regexp/syntax", type: $funcType([Op, $Int, $Int, $String, $String, $String], [$String, $error], false)}, {prop: "reuse", name: "reuse", pkg: "regexp/syntax", type: $funcType([ptrType], [], false)}, {prop: "swapVerticalBar", name: "swapVerticalBar", pkg: "regexp/syntax", type: $funcType([], [$Bool], false)}];
	ranges.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$9.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$3.methods = [{prop: "Prefix", name: "Prefix", pkg: "", type: $funcType([], [$String, $Bool], false)}, {prop: "StartCond", name: "StartCond", pkg: "", type: $funcType([], [EmptyOp], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "skipNop", name: "skipNop", pkg: "regexp/syntax", type: $funcType([$Uint32], [ptrType$10, $Uint32], false)}];
	InstOp.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$11.methods = [{prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$10.methods = [{prop: "MatchEmptyWidth", name: "MatchEmptyWidth", pkg: "", type: $funcType([$Int32, $Int32], [$Bool], false)}, {prop: "MatchRune", name: "MatchRune", pkg: "", type: $funcType([$Int32], [$Bool], false)}, {prop: "MatchRunePos", name: "MatchRunePos", pkg: "", type: $funcType([$Int32], [$Int], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "op", name: "op", pkg: "regexp/syntax", type: $funcType([], [InstOp], false)}];
	ptrType.methods = [{prop: "CapNames", name: "CapNames", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "Equal", name: "Equal", pkg: "", type: $funcType([ptrType], [$Bool], false)}, {prop: "MaxCap", name: "MaxCap", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Simplify", name: "Simplify", pkg: "", type: $funcType([], [ptrType], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "capNames", name: "capNames", pkg: "regexp/syntax", type: $funcType([sliceType$3], [], false)}];
	frag.init([{prop: "i", name: "i", pkg: "regexp/syntax", type: $Uint32, tag: ""}, {prop: "out", name: "out", pkg: "regexp/syntax", type: patchList, tag: ""}]);
	compiler.init([{prop: "p", name: "p", pkg: "regexp/syntax", type: ptrType$3, tag: ""}]);
	Error.init([{prop: "Code", name: "Code", pkg: "", type: ErrorCode, tag: ""}, {prop: "Expr", name: "Expr", pkg: "", type: $String, tag: ""}]);
	parser.init([{prop: "flags", name: "flags", pkg: "regexp/syntax", type: Flags, tag: ""}, {prop: "stack", name: "stack", pkg: "regexp/syntax", type: sliceType$4, tag: ""}, {prop: "free", name: "free", pkg: "regexp/syntax", type: ptrType, tag: ""}, {prop: "numCap", name: "numCap", pkg: "regexp/syntax", type: $Int, tag: ""}, {prop: "wholeRegexp", name: "wholeRegexp", pkg: "regexp/syntax", type: $String, tag: ""}, {prop: "tmpClass", name: "tmpClass", pkg: "regexp/syntax", type: sliceType, tag: ""}]);
	charGroup.init([{prop: "sign", name: "sign", pkg: "regexp/syntax", type: $Int, tag: ""}, {prop: "class$1", name: "class", pkg: "regexp/syntax", type: sliceType, tag: ""}]);
	ranges.init([{prop: "p", name: "p", pkg: "regexp/syntax", type: ptrType$1, tag: ""}]);
	Prog.init([{prop: "Inst", name: "Inst", pkg: "", type: sliceType$5, tag: ""}, {prop: "Start", name: "Start", pkg: "", type: $Int, tag: ""}, {prop: "NumCap", name: "NumCap", pkg: "", type: $Int, tag: ""}]);
	Inst.init([{prop: "Op", name: "Op", pkg: "", type: InstOp, tag: ""}, {prop: "Out", name: "Out", pkg: "", type: $Uint32, tag: ""}, {prop: "Arg", name: "Arg", pkg: "", type: $Uint32, tag: ""}, {prop: "Rune", name: "Rune", pkg: "", type: sliceType, tag: ""}]);
	Regexp.init([{prop: "Op", name: "Op", pkg: "", type: Op, tag: ""}, {prop: "Flags", name: "Flags", pkg: "", type: Flags, tag: ""}, {prop: "Sub", name: "Sub", pkg: "", type: sliceType$4, tag: ""}, {prop: "Sub0", name: "Sub0", pkg: "", type: arrayType, tag: ""}, {prop: "Rune", name: "Rune", pkg: "", type: sliceType, tag: ""}, {prop: "Rune0", name: "Rune0", pkg: "", type: arrayType$1, tag: ""}, {prop: "Min", name: "Min", pkg: "", type: $Int, tag: ""}, {prop: "Max", name: "Max", pkg: "", type: $Int, tag: ""}, {prop: "Cap", name: "Cap", pkg: "", type: $Int, tag: ""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_syntax = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = sort.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = unicode.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		anyRuneNotNL = new sliceType([0, 9, 11, 1114111]);
		anyRune = new sliceType([0, 1114111]);
		anyTable = new unicode.RangeTable.ptr(new sliceType$1([new unicode.Range16.ptr(0, 65535, 1)]), new sliceType$2([new unicode.Range32.ptr(65536, 1114111, 1)]), 0);
		code1 = new sliceType([48, 57]);
		code2 = new sliceType([9, 10, 12, 13, 32, 32]);
		code3 = new sliceType([48, 57, 65, 90, 95, 95, 97, 122]);
		perlGroup = (_map = new $Map(), _key = "\\d", _map[_key] = { k: _key, v: new charGroup.ptr(1, code1) }, _key = "\\D", _map[_key] = { k: _key, v: new charGroup.ptr(-1, code1) }, _key = "\\s", _map[_key] = { k: _key, v: new charGroup.ptr(1, code2) }, _key = "\\S", _map[_key] = { k: _key, v: new charGroup.ptr(-1, code2) }, _key = "\\w", _map[_key] = { k: _key, v: new charGroup.ptr(1, code3) }, _key = "\\W", _map[_key] = { k: _key, v: new charGroup.ptr(-1, code3) }, _map);
		code4 = new sliceType([48, 57, 65, 90, 97, 122]);
		code5 = new sliceType([65, 90, 97, 122]);
		code6 = new sliceType([0, 127]);
		code7 = new sliceType([9, 9, 32, 32]);
		code8 = new sliceType([0, 31, 127, 127]);
		code9 = new sliceType([48, 57]);
		code10 = new sliceType([33, 126]);
		code11 = new sliceType([97, 122]);
		code12 = new sliceType([32, 126]);
		code13 = new sliceType([33, 47, 58, 64, 91, 96, 123, 126]);
		code14 = new sliceType([9, 13, 32, 32]);
		code15 = new sliceType([65, 90]);
		code16 = new sliceType([48, 57, 65, 90, 95, 95, 97, 122]);
		code17 = new sliceType([48, 57, 65, 70, 97, 102]);
		posixGroup = (_map$1 = new $Map(), _key$1 = "[:alnum:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code4) }, _key$1 = "[:^alnum:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code4) }, _key$1 = "[:alpha:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code5) }, _key$1 = "[:^alpha:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code5) }, _key$1 = "[:ascii:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code6) }, _key$1 = "[:^ascii:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code6) }, _key$1 = "[:blank:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code7) }, _key$1 = "[:^blank:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code7) }, _key$1 = "[:cntrl:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code8) }, _key$1 = "[:^cntrl:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code8) }, _key$1 = "[:digit:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code9) }, _key$1 = "[:^digit:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code9) }, _key$1 = "[:graph:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code10) }, _key$1 = "[:^graph:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code10) }, _key$1 = "[:lower:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code11) }, _key$1 = "[:^lower:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code11) }, _key$1 = "[:print:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code12) }, _key$1 = "[:^print:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code12) }, _key$1 = "[:punct:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code13) }, _key$1 = "[:^punct:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code13) }, _key$1 = "[:space:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code14) }, _key$1 = "[:^space:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code14) }, _key$1 = "[:upper:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code15) }, _key$1 = "[:^upper:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code15) }, _key$1 = "[:word:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code16) }, _key$1 = "[:^word:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code16) }, _key$1 = "[:xdigit:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(1, code17) }, _key$1 = "[:^xdigit:]", _map$1[_key$1] = { k: _key$1, v: new charGroup.ptr(-1, code17) }, _map$1);
		instOpNames = new sliceType$3(["InstAlt", "InstAltMatch", "InstCapture", "InstEmptyWidth", "InstMatch", "InstFail", "InstNop", "InstRune", "InstRune1", "InstRuneAny", "InstRuneAnyNotNL"]);
		/* */ } return; } }; $init_syntax.$blocking = true; return $init_syntax;
	};
	return $pkg;
})();
$packages["regexp"] = (function() {
	var $pkg = {}, bytes, io, syntax, sort, strconv, strings, sync, testing, unicode, utf8, queue, entry, thread, machine, onePassProg, onePassInst, queueOnePass, runeSlice, Regexp, input, inputString, inputBytes, inputReader, sliceType, sliceType$1, sliceType$2, ptrType, sliceType$3, ptrType$1, ptrType$2, ptrType$3, sliceType$5, sliceType$6, ptrType$4, ptrType$5, sliceType$7, ptrType$6, sliceType$8, ptrType$7, sliceType$9, ptrType$8, sliceType$10, sliceType$11, sliceType$12, sliceType$13, sliceType$14, ptrType$9, ptrType$10, ptrType$11, ptrType$12, funcType, funcType$1, funcType$2, funcType$3, ptrType$13, ptrType$14, ptrType$15, empty, noRune, noNext, anyRuneNotNL, anyRune, notOnePass, progMachine, onePassPrefix, onePassNext, iop, newQueue, mergeRuneSets, cleanupOnePass, onePassCopy, makeOnePass, compileOnePass, Compile, compile, MustCompile, quote, Match, extract;
	bytes = $packages["bytes"];
	io = $packages["io"];
	syntax = $packages["regexp/syntax"];
	sort = $packages["sort"];
	strconv = $packages["strconv"];
	strings = $packages["strings"];
	sync = $packages["sync"];
	testing = $packages["testing"];
	unicode = $packages["unicode"];
	utf8 = $packages["unicode/utf8"];
	queue = $pkg.queue = $newType(0, $kindStruct, "regexp.queue", "queue", "regexp", function(sparse_, dense_) {
		this.$val = this;
		this.sparse = sparse_ !== undefined ? sparse_ : sliceType$2.nil;
		this.dense = dense_ !== undefined ? dense_ : sliceType$6.nil;
	});
	entry = $pkg.entry = $newType(0, $kindStruct, "regexp.entry", "entry", "regexp", function(pc_, t_) {
		this.$val = this;
		this.pc = pc_ !== undefined ? pc_ : 0;
		this.t = t_ !== undefined ? t_ : ptrType$3.nil;
	});
	thread = $pkg.thread = $newType(0, $kindStruct, "regexp.thread", "thread", "regexp", function(inst_, cap_) {
		this.$val = this;
		this.inst = inst_ !== undefined ? inst_ : ptrType$9.nil;
		this.cap = cap_ !== undefined ? cap_ : sliceType.nil;
	});
	machine = $pkg.machine = $newType(0, $kindStruct, "regexp.machine", "machine", "regexp", function(re_, p_, op_, q0_, q1_, pool_, matched_, matchcap_, inputBytes_, inputString_, inputReader_) {
		this.$val = this;
		this.re = re_ !== undefined ? re_ : ptrType$1.nil;
		this.p = p_ !== undefined ? p_ : ptrType$2.nil;
		this.op = op_ !== undefined ? op_ : ptrType.nil;
		this.q0 = q0_ !== undefined ? q0_ : new queue.ptr();
		this.q1 = q1_ !== undefined ? q1_ : new queue.ptr();
		this.pool = pool_ !== undefined ? pool_ : sliceType$5.nil;
		this.matched = matched_ !== undefined ? matched_ : false;
		this.matchcap = matchcap_ !== undefined ? matchcap_ : sliceType.nil;
		this.inputBytes = inputBytes_ !== undefined ? inputBytes_ : new inputBytes.ptr();
		this.inputString = inputString_ !== undefined ? inputString_ : new inputString.ptr();
		this.inputReader = inputReader_ !== undefined ? inputReader_ : new inputReader.ptr();
	});
	onePassProg = $pkg.onePassProg = $newType(0, $kindStruct, "regexp.onePassProg", "onePassProg", "regexp", function(Inst_, Start_, NumCap_) {
		this.$val = this;
		this.Inst = Inst_ !== undefined ? Inst_ : sliceType$7.nil;
		this.Start = Start_ !== undefined ? Start_ : 0;
		this.NumCap = NumCap_ !== undefined ? NumCap_ : 0;
	});
	onePassInst = $pkg.onePassInst = $newType(0, $kindStruct, "regexp.onePassInst", "onePassInst", "regexp", function(Inst_, Next_) {
		this.$val = this;
		this.Inst = Inst_ !== undefined ? Inst_ : new syntax.Inst.ptr();
		this.Next = Next_ !== undefined ? Next_ : sliceType$2.nil;
	});
	queueOnePass = $pkg.queueOnePass = $newType(0, $kindStruct, "regexp.queueOnePass", "queueOnePass", "regexp", function(sparse_, dense_, size_, nextIndex_) {
		this.$val = this;
		this.sparse = sparse_ !== undefined ? sparse_ : sliceType$2.nil;
		this.dense = dense_ !== undefined ? dense_ : sliceType$2.nil;
		this.size = size_ !== undefined ? size_ : 0;
		this.nextIndex = nextIndex_ !== undefined ? nextIndex_ : 0;
	});
	runeSlice = $pkg.runeSlice = $newType(12, $kindSlice, "regexp.runeSlice", "runeSlice", "regexp", null);
	Regexp = $pkg.Regexp = $newType(0, $kindStruct, "regexp.Regexp", "Regexp", "regexp", function(expr_, prog_, onepass_, prefix_, prefixBytes_, prefixComplete_, prefixRune_, prefixEnd_, cond_, numSubexp_, subexpNames_, longest_, mu_, machine_) {
		this.$val = this;
		this.expr = expr_ !== undefined ? expr_ : "";
		this.prog = prog_ !== undefined ? prog_ : ptrType$2.nil;
		this.onepass = onepass_ !== undefined ? onepass_ : ptrType.nil;
		this.prefix = prefix_ !== undefined ? prefix_ : "";
		this.prefixBytes = prefixBytes_ !== undefined ? prefixBytes_ : sliceType$3.nil;
		this.prefixComplete = prefixComplete_ !== undefined ? prefixComplete_ : false;
		this.prefixRune = prefixRune_ !== undefined ? prefixRune_ : 0;
		this.prefixEnd = prefixEnd_ !== undefined ? prefixEnd_ : 0;
		this.cond = cond_ !== undefined ? cond_ : 0;
		this.numSubexp = numSubexp_ !== undefined ? numSubexp_ : 0;
		this.subexpNames = subexpNames_ !== undefined ? subexpNames_ : sliceType$9.nil;
		this.longest = longest_ !== undefined ? longest_ : false;
		this.mu = mu_ !== undefined ? mu_ : new sync.Mutex.ptr();
		this.machine = machine_ !== undefined ? machine_ : sliceType$10.nil;
	});
	input = $pkg.input = $newType(8, $kindInterface, "regexp.input", "input", "regexp", null);
	inputString = $pkg.inputString = $newType(0, $kindStruct, "regexp.inputString", "inputString", "regexp", function(str_) {
		this.$val = this;
		this.str = str_ !== undefined ? str_ : "";
	});
	inputBytes = $pkg.inputBytes = $newType(0, $kindStruct, "regexp.inputBytes", "inputBytes", "regexp", function(str_) {
		this.$val = this;
		this.str = str_ !== undefined ? str_ : sliceType$3.nil;
	});
	inputReader = $pkg.inputReader = $newType(0, $kindStruct, "regexp.inputReader", "inputReader", "regexp", function(r_, atEOT_, pos_) {
		this.$val = this;
		this.r = r_ !== undefined ? r_ : $ifaceNil;
		this.atEOT = atEOT_ !== undefined ? atEOT_ : false;
		this.pos = pos_ !== undefined ? pos_ : 0;
	});
		sliceType = $sliceType($Int);
		sliceType$1 = $sliceType($Int32);
		sliceType$2 = $sliceType($Uint32);
		ptrType = $ptrType(onePassProg);
		sliceType$3 = $sliceType($Uint8);
		ptrType$1 = $ptrType(Regexp);
		ptrType$2 = $ptrType(syntax.Prog);
		ptrType$3 = $ptrType(thread);
		sliceType$5 = $sliceType(ptrType$3);
		sliceType$6 = $sliceType(entry);
		ptrType$4 = $ptrType($Int);
		ptrType$5 = $ptrType(queueOnePass);
		sliceType$7 = $sliceType(onePassInst);
		ptrType$6 = $ptrType($Uint32);
		sliceType$8 = $sliceType(sliceType$1);
		ptrType$7 = $ptrType(sliceType$1);
		sliceType$9 = $sliceType($String);
		ptrType$8 = $ptrType(machine);
		sliceType$10 = $sliceType(ptrType$8);
		sliceType$11 = $sliceType(sliceType$3);
		sliceType$12 = $sliceType(sliceType);
		sliceType$13 = $sliceType(sliceType$11);
		sliceType$14 = $sliceType(sliceType$9);
		ptrType$9 = $ptrType(syntax.Inst);
		ptrType$10 = $ptrType(queue);
		ptrType$11 = $ptrType(onePassInst);
		ptrType$12 = $ptrType(runeSlice);
		funcType = $funcType([sliceType$3], [sliceType$3], false);
		funcType$1 = $funcType([$String], [$String], false);
		funcType$2 = $funcType([sliceType], [], false);
		funcType$3 = $funcType([sliceType$3, sliceType], [sliceType$3], false);
		ptrType$13 = $ptrType(inputString);
		ptrType$14 = $ptrType(inputBytes);
		ptrType$15 = $ptrType(inputReader);
	machine.ptr.prototype.newInputBytes = function(b) {
		var m;
		m = this;
		m.inputBytes.str = b;
		return m.inputBytes;
	};
	machine.prototype.newInputBytes = function(b) { return this.$val.newInputBytes(b); };
	machine.ptr.prototype.newInputString = function(s) {
		var m;
		m = this;
		m.inputString.str = s;
		return m.inputString;
	};
	machine.prototype.newInputString = function(s) { return this.$val.newInputString(s); };
	machine.ptr.prototype.newInputReader = function(r) {
		var m;
		m = this;
		m.inputReader.r = r;
		m.inputReader.atEOT = false;
		m.inputReader.pos = 0;
		return m.inputReader;
	};
	machine.prototype.newInputReader = function(r) { return this.$val.newInputReader(r); };
	progMachine = function(p, op) {
		var m, n, ncap;
		m = new machine.ptr(ptrType$1.nil, p, op, new queue.ptr(), new queue.ptr(), sliceType$5.nil, false, sliceType.nil, new inputBytes.ptr(), new inputString.ptr(), new inputReader.ptr());
		n = m.p.Inst.$length;
		$copy(m.q0, new queue.ptr($makeSlice(sliceType$2, n), $makeSlice(sliceType$6, 0, n)), queue);
		$copy(m.q1, new queue.ptr($makeSlice(sliceType$2, n), $makeSlice(sliceType$6, 0, n)), queue);
		ncap = p.NumCap;
		if (ncap < 2) {
			ncap = 2;
		}
		m.matchcap = $makeSlice(sliceType, ncap);
		return m;
	};
	machine.ptr.prototype.init = function(ncap) {
		var _i, _ref, m, t;
		m = this;
		_ref = m.pool;
		_i = 0;
		while (_i < _ref.$length) {
			t = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			t.cap = $subslice(t.cap, 0, ncap);
			_i++;
		}
		m.matchcap = $subslice(m.matchcap, 0, ncap);
	};
	machine.prototype.init = function(ncap) { return this.$val.init(ncap); };
	machine.ptr.prototype.alloc = function(i) {
		var m, n, t, x, x$1;
		m = this;
		t = ptrType$3.nil;
		n = m.pool.$length;
		if (n > 0) {
			t = (x = m.pool, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
			m.pool = $subslice(m.pool, 0, (n - 1 >> 0));
		} else {
			t = new thread.ptr();
			t.cap = $makeSlice(sliceType, m.matchcap.$length, m.matchcap.$capacity);
		}
		t.inst = i;
		return t;
	};
	machine.prototype.alloc = function(i) { return this.$val.alloc(i); };
	machine.ptr.prototype.match = function(i, pos) {
		var _i, _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, advance, flag, i$1, m, nextq, r, r1, runq, startCond, width, width1, x, x$1;
		m = this;
		startCond = m.re.cond;
		if (startCond === 255) {
			return false;
		}
		m.matched = false;
		_ref = m.matchcap;
		_i = 0;
		while (_i < _ref.$length) {
			i$1 = _i;
			(x = m.matchcap, (i$1 < 0 || i$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i$1] = -1);
			_i++;
		}
		_tmp = m.q0; _tmp$1 = m.q1; runq = _tmp; nextq = _tmp$1;
		_tmp$2 = -1; _tmp$3 = -1; r = _tmp$2; r1 = _tmp$3;
		_tmp$4 = 0; _tmp$5 = 0; width = _tmp$4; width1 = _tmp$5;
		_tuple = i.step(pos); r = _tuple[0]; width = _tuple[1];
		if (!((r === -1))) {
			_tuple$1 = i.step(pos + width >> 0); r1 = _tuple$1[0]; width1 = _tuple$1[1];
		}
		flag = 0;
		if (pos === 0) {
			flag = syntax.EmptyOpContext(-1, r);
		} else {
			flag = i.context(pos);
		}
		while (true) {
			if (runq.dense.$length === 0) {
				if (!((((startCond & 4) >>> 0) === 0)) && !((pos === 0))) {
					break;
				}
				if (m.matched) {
					break;
				}
				if (m.re.prefix.length > 0 && !((r1 === m.re.prefixRune)) && i.canCheckPrefix()) {
					advance = i.index(m.re, pos);
					if (advance < 0) {
						break;
					}
					pos = pos + (advance) >> 0;
					_tuple$2 = i.step(pos); r = _tuple$2[0]; width = _tuple$2[1];
					_tuple$3 = i.step(pos + width >> 0); r1 = _tuple$3[0]; width1 = _tuple$3[1];
				}
			}
			if (!m.matched) {
				if (m.matchcap.$length > 0) {
					(x$1 = m.matchcap, (0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0] = pos);
				}
				m.add(runq, (m.p.Start >>> 0), pos, m.matchcap, flag, ptrType$3.nil);
			}
			flag = syntax.EmptyOpContext(r, r1);
			m.step(runq, nextq, pos, pos + width >> 0, r, flag);
			if (width === 0) {
				break;
			}
			if ((m.matchcap.$length === 0) && m.matched) {
				break;
			}
			pos = pos + (width) >> 0;
			_tmp$6 = r1; _tmp$7 = width1; r = _tmp$6; width = _tmp$7;
			if (!((r === -1))) {
				_tuple$4 = i.step(pos + width >> 0); r1 = _tuple$4[0]; width1 = _tuple$4[1];
			}
			_tmp$8 = nextq; _tmp$9 = runq; runq = _tmp$8; nextq = _tmp$9;
		}
		m.clear(nextq);
		return m.matched;
	};
	machine.prototype.match = function(i, pos) { return this.$val.match(i, pos); };
	machine.ptr.prototype.clear = function(q) {
		var _i, _ref, d, m;
		m = this;
		_ref = q.dense;
		_i = 0;
		while (_i < _ref.$length) {
			d = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), entry);
			if (!(d.t === ptrType$3.nil)) {
				m.pool = $append(m.pool, d.t);
			}
			_i++;
		}
		q.dense = $subslice(q.dense, 0, 0);
	};
	machine.prototype.clear = function(q) { return this.$val.clear(q); };
	machine.ptr.prototype.step = function(runq, nextq, pos, nextPos, c, nextCond) {
		var _i, _ref, _ref$1, add, d, d$1, i, j, longest, m, t, x, x$1, x$2, x$3, x$4, x$5;
		m = this;
		longest = m.re.longest;
		j = 0;
		while (j < runq.dense.$length) {
			d = (x = runq.dense, ((j < 0 || j >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + j]));
			t = d.t;
			if (t === ptrType$3.nil) {
				j = j + (1) >> 0;
				continue;
			}
			if (longest && m.matched && t.cap.$length > 0 && (x$1 = m.matchcap, ((0 < 0 || 0 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + 0])) < (x$2 = t.cap, ((0 < 0 || 0 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + 0]))) {
				m.pool = $append(m.pool, t);
				j = j + (1) >> 0;
				continue;
			}
			i = t.inst;
			add = false;
			_ref = i.Op;
			if (_ref === 4) {
				if (t.cap.$length > 0 && (!longest || !m.matched || (x$3 = m.matchcap, ((1 < 0 || 1 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 1])) < pos)) {
					(x$4 = t.cap, (1 < 0 || 1 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 1] = pos);
					$copySlice(m.matchcap, t.cap);
				}
				if (!longest) {
					_ref$1 = $subslice(runq.dense, (j + 1 >> 0));
					_i = 0;
					while (_i < _ref$1.$length) {
						d$1 = $clone(((_i < 0 || _i >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i]), entry);
						if (!(d$1.t === ptrType$3.nil)) {
							m.pool = $append(m.pool, d$1.t);
						}
						_i++;
					}
					runq.dense = $subslice(runq.dense, 0, 0);
				}
				m.matched = true;
			} else if (_ref === 7) {
				add = i.MatchRune(c);
			} else if (_ref === 8) {
				add = c === (x$5 = i.Rune, ((0 < 0 || 0 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 0]));
			} else if (_ref === 9) {
				add = true;
			} else if (_ref === 10) {
				add = !((c === 10));
			} else {
				$panic(new $String("bad inst"));
			}
			if (add) {
				t = m.add(nextq, i.Out, nextPos, t.cap, nextCond, t);
			}
			if (!(t === ptrType$3.nil)) {
				m.pool = $append(m.pool, t);
			}
			j = j + (1) >> 0;
		}
		runq.dense = $subslice(runq.dense, 0, 0);
	};
	machine.prototype.step = function(runq, nextq, pos, nextPos, c, nextCond) { return this.$val.step(runq, nextq, pos, nextPos, c, nextCond); };
	machine.ptr.prototype.add = function(q, pc, pos, cap, cond, t) {
		var _ref, d, i, j, j$1, m, opos, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7;
		m = this;
		if (pc === 0) {
			return t;
		}
		j = (x = q.sparse, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc]));
		if (j < (q.dense.$length >>> 0) && ((x$1 = q.dense, ((j < 0 || j >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + j])).pc === pc)) {
			return t;
		}
		j$1 = q.dense.$length;
		q.dense = $subslice(q.dense, 0, (j$1 + 1 >> 0));
		d = (x$2 = q.dense, ((j$1 < 0 || j$1 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + j$1]));
		d.t = ptrType$3.nil;
		d.pc = pc;
		(x$3 = q.sparse, (pc < 0 || pc >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + pc] = (j$1 >>> 0));
		i = (x$4 = m.p.Inst, ((pc < 0 || pc >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + pc]));
		_ref = i.Op;
		if (_ref === 5) {
		} else if (_ref === 0 || _ref === 1) {
			t = m.add(q, i.Out, pos, cap, cond, t);
			t = m.add(q, i.Arg, pos, cap, cond, t);
		} else if (_ref === 3) {
			if (((i.Arg << 24 >>> 24) & ~cond) === 0) {
				t = m.add(q, i.Out, pos, cap, cond, t);
			}
		} else if (_ref === 6) {
			t = m.add(q, i.Out, pos, cap, cond, t);
		} else if (_ref === 2) {
			if ((i.Arg >> 0) < cap.$length) {
				opos = (x$5 = i.Arg, ((x$5 < 0 || x$5 >= cap.$length) ? $throwRuntimeError("index out of range") : cap.$array[cap.$offset + x$5]));
				(x$6 = i.Arg, (x$6 < 0 || x$6 >= cap.$length) ? $throwRuntimeError("index out of range") : cap.$array[cap.$offset + x$6] = pos);
				m.add(q, i.Out, pos, cap, cond, ptrType$3.nil);
				(x$7 = i.Arg, (x$7 < 0 || x$7 >= cap.$length) ? $throwRuntimeError("index out of range") : cap.$array[cap.$offset + x$7] = opos);
			} else {
				t = m.add(q, i.Out, pos, cap, cond, t);
			}
		} else if (_ref === 4 || _ref === 7 || _ref === 8 || _ref === 9 || _ref === 10) {
			if (t === ptrType$3.nil) {
				t = m.alloc(i);
			} else {
				t.inst = i;
			}
			if (cap.$length > 0 && !($pointerIsEqual(new ptrType$4(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, t.cap), new ptrType$4(function() { return ((0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0]); }, function($v) { (0 < 0 || 0 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + 0] = $v; }, cap)))) {
				$copySlice(t.cap, cap);
			}
			d.t = t;
			t = ptrType$3.nil;
		} else {
			$panic(new $String("unhandled"));
		}
		return t;
	};
	machine.prototype.add = function(q, pc, pos, cap, cond, t) { return this.$val.add(q, pc, pos, cap, cond, t); };
	machine.ptr.prototype.onepass = function(i, pos) {
		var _i, _ref, _ref$1, _tmp, _tmp$1, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, flag, i$1, inst, m, pc, r, r1, startCond, width, width1, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7;
		m = this;
		startCond = m.re.cond;
		if (startCond === 255) {
			return false;
		}
		m.matched = false;
		_ref = m.matchcap;
		_i = 0;
		while (_i < _ref.$length) {
			i$1 = _i;
			(x = m.matchcap, (i$1 < 0 || i$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + i$1] = -1);
			_i++;
		}
		_tmp = -1; _tmp$1 = -1; r = _tmp; r1 = _tmp$1;
		_tmp$2 = 0; _tmp$3 = 0; width = _tmp$2; width1 = _tmp$3;
		_tuple = i.step(pos); r = _tuple[0]; width = _tuple[1];
		if (!((r === -1))) {
			_tuple$1 = i.step(pos + width >> 0); r1 = _tuple$1[0]; width1 = _tuple$1[1];
		}
		flag = 0;
		if (pos === 0) {
			flag = syntax.EmptyOpContext(-1, r);
		} else {
			flag = i.context(pos);
		}
		pc = m.op.Start;
		inst = $clone((x$1 = m.op.Inst, ((pc < 0 || pc >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + pc])), onePassInst);
		if ((pos === 0) && (((inst.Inst.Arg << 24 >>> 24) & ~flag) === 0) && m.re.prefix.length > 0 && i.canCheckPrefix()) {
			if (i.hasPrefix(m.re)) {
				pos = pos + (m.re.prefix.length) >> 0;
				_tuple$2 = i.step(pos); r = _tuple$2[0]; width = _tuple$2[1];
				_tuple$3 = i.step(pos + width >> 0); r1 = _tuple$3[0]; width1 = _tuple$3[1];
				flag = i.context(pos);
				pc = (m.re.prefixEnd >> 0);
			} else {
				return m.matched;
			}
		}
		while (true) {
			$copy(inst, (x$2 = m.op.Inst, ((pc < 0 || pc >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + pc])), onePassInst);
			pc = (inst.Inst.Out >> 0);
			_ref$1 = inst.Inst.Op;
			if (_ref$1 === 4) {
				m.matched = true;
				if (m.matchcap.$length > 0) {
					(x$3 = m.matchcap, (0 < 0 || 0 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + 0] = 0);
					(x$4 = m.matchcap, (1 < 0 || 1 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 1] = pos);
				}
				return m.matched;
			} else if (_ref$1 === 7) {
				if (!inst.Inst.MatchRune(r)) {
					return m.matched;
				}
			} else if (_ref$1 === 8) {
				if (!((r === (x$5 = inst.Inst.Rune, ((0 < 0 || 0 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 0]))))) {
					return m.matched;
				}
			} else if (_ref$1 === 9) {
			} else if (_ref$1 === 10) {
				if (r === 10) {
					return m.matched;
				}
			} else if (_ref$1 === 0 || _ref$1 === 1) {
				pc = (onePassNext(inst, r) >> 0);
				continue;
			} else if (_ref$1 === 5) {
				return m.matched;
			} else if (_ref$1 === 6) {
				continue;
			} else if (_ref$1 === 3) {
				if (!((((inst.Inst.Arg << 24 >>> 24) & ~flag) === 0))) {
					return m.matched;
				}
				continue;
			} else if (_ref$1 === 2) {
				if ((inst.Inst.Arg >> 0) < m.matchcap.$length) {
					(x$6 = m.matchcap, x$7 = inst.Inst.Arg, (x$7 < 0 || x$7 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + x$7] = pos);
				}
				continue;
			} else {
				$panic(new $String("bad inst"));
			}
			if (width === 0) {
				break;
			}
			flag = syntax.EmptyOpContext(r, r1);
			pos = pos + (width) >> 0;
			_tmp$4 = r1; _tmp$5 = width1; r = _tmp$4; width = _tmp$5;
			if (!((r === -1))) {
				_tuple$4 = i.step(pos + width >> 0); r1 = _tuple$4[0]; width1 = _tuple$4[1];
			}
		}
		return m.matched;
	};
	machine.prototype.onepass = function(i, pos) { return this.$val.onepass(i, pos); };
	Regexp.ptr.prototype.doExecute = function(r, b, s, pos, ncap) {
		var cap, i, m, re;
		re = this;
		m = re.get();
		i = $ifaceNil;
		if (!($interfaceIsEqual(r, $ifaceNil))) {
			i = m.newInputReader(r);
		} else if (!(b === sliceType$3.nil)) {
			i = m.newInputBytes(b);
		} else {
			i = m.newInputString(s);
		}
		if (!(m.op === notOnePass)) {
			if (!m.onepass(i, pos)) {
				re.put(m);
				return sliceType.nil;
			}
		} else {
			m.init(ncap);
			if (!m.match(i, pos)) {
				re.put(m);
				return sliceType.nil;
			}
		}
		if (ncap === 0) {
			re.put(m);
			return empty;
		}
		cap = $makeSlice(sliceType, m.matchcap.$length);
		$copySlice(cap, m.matchcap);
		re.put(m);
		return cap;
	};
	Regexp.prototype.doExecute = function(r, b, s, pos, ncap) { return this.$val.doExecute(r, b, s, pos, ncap); };
	onePassPrefix = function(p) {
		var _tmp, _tmp$1, _tmp$10, _tmp$2, _tmp$3, _tmp$4, _tmp$5, _tmp$6, _tmp$7, _tmp$8, _tmp$9, buf, complete = false, i, pc = 0, prefix = "", x, x$1, x$2, x$3, x$4, x$5, x$6;
		i = (x = p.Inst, x$1 = p.Start, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		if (!((i.Op === 3)) || (((((i.Arg << 24 >>> 24)) & 4) >>> 0) === 0)) {
			_tmp = ""; _tmp$1 = i.Op === 4; _tmp$2 = (p.Start >>> 0); prefix = _tmp; complete = _tmp$1; pc = _tmp$2;
			return [prefix, complete, pc];
		}
		pc = i.Out;
		i = (x$2 = p.Inst, ((pc < 0 || pc >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + pc]));
		while (i.Op === 6) {
			pc = i.Out;
			i = (x$3 = p.Inst, ((pc < 0 || pc >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + pc]));
		}
		if (!((iop(i) === 7)) || !((i.Rune.$length === 1))) {
			_tmp$3 = ""; _tmp$4 = i.Op === 4; _tmp$5 = (p.Start >>> 0); prefix = _tmp$3; complete = _tmp$4; pc = _tmp$5;
			return [prefix, complete, pc];
		}
		buf = $clone(new bytes.Buffer.ptr(), bytes.Buffer);
		while ((iop(i) === 7) && (i.Rune.$length === 1) && ((((i.Arg << 16 >>> 16) & 1) >>> 0) === 0)) {
			buf.WriteRune((x$4 = i.Rune, ((0 < 0 || 0 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + 0])));
			_tmp$6 = i.Out; _tmp$7 = (x$5 = p.Inst, x$6 = i.Out, ((x$6 < 0 || x$6 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + x$6])); pc = _tmp$6; i = _tmp$7;
		}
		_tmp$8 = buf.String(); _tmp$9 = (i.Op === 3) && !((((((i.Arg << 24 >>> 24)) & 4) >>> 0) === 0)); _tmp$10 = pc; prefix = _tmp$8; complete = _tmp$9; pc = _tmp$10;
		return [prefix, complete, pc];
	};
	onePassNext = function(i, r) {
		var next, x;
		next = i.Inst.MatchRunePos(r);
		if (next >= 0) {
			return (x = i.Next, ((next < 0 || next >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + next]));
		}
		if (i.Inst.Op === 1) {
			return i.Inst.Out;
		}
		return 0;
	};
	iop = function(i) {
		var _ref, op;
		op = i.Op;
		_ref = op;
		if (_ref === 8 || _ref === 9 || _ref === 10) {
			op = 7;
		}
		return op;
	};
	queueOnePass.ptr.prototype.empty = function() {
		var q;
		q = this;
		return q.nextIndex >= q.size;
	};
	queueOnePass.prototype.empty = function() { return this.$val.empty(); };
	queueOnePass.ptr.prototype.next = function() {
		var n = 0, q, x, x$1;
		q = this;
		n = (x = q.dense, x$1 = q.nextIndex, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
		q.nextIndex = q.nextIndex + (1) >>> 0;
		return n;
	};
	queueOnePass.prototype.next = function() { return this.$val.next(); };
	queueOnePass.ptr.prototype.clear = function() {
		var q;
		q = this;
		q.size = 0;
		q.nextIndex = 0;
	};
	queueOnePass.prototype.clear = function() { return this.$val.clear(); };
	queueOnePass.ptr.prototype.contains = function(u) {
		var q, x, x$1, x$2, x$3;
		q = this;
		if (u >= (q.sparse.$length >>> 0)) {
			return false;
		}
		return (x = q.sparse, ((u < 0 || u >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + u])) < q.size && ((x$1 = q.dense, x$2 = (x$3 = q.sparse, ((u < 0 || u >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + u])), ((x$2 < 0 || x$2 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + x$2])) === u);
	};
	queueOnePass.prototype.contains = function(u) { return this.$val.contains(u); };
	queueOnePass.ptr.prototype.insert = function(u) {
		var q;
		q = this;
		if (!q.contains(u)) {
			q.insertNew(u);
		}
	};
	queueOnePass.prototype.insert = function(u) { return this.$val.insert(u); };
	queueOnePass.ptr.prototype.insertNew = function(u) {
		var q, x, x$1, x$2;
		q = this;
		if (u >= (q.sparse.$length >>> 0)) {
			return;
		}
		(x = q.sparse, (u < 0 || u >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + u] = q.size);
		(x$1 = q.dense, x$2 = q.size, (x$2 < 0 || x$2 >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + x$2] = u);
		q.size = q.size + (1) >>> 0;
	};
	queueOnePass.prototype.insertNew = function(u) { return this.$val.insertNew(u); };
	newQueue = function(size) {
		var q = ptrType$5.nil;
		q = new queueOnePass.ptr($makeSlice(sliceType$2, size), $makeSlice(sliceType$2, size), 0, 0);
		return q;
	};
	mergeRuneSets = function(leftRunes, rightRunes, leftPC, rightPC) {
		var $deferred = [], $err = null, _tmp, _tmp$1, extend, ix, leftLen, lx, merged, next, ok, rightLen, rx, x, x$1;
		/* */ try { $deferFrames.push($deferred);
		leftLen = leftRunes.$get().$length;
		rightLen = rightRunes.$get().$length;
		if (!(((leftLen & 1) === 0)) || !(((rightLen & 1) === 0))) {
			$panic(new $String("mergeRuneSets odd length []rune"));
		}
		_tmp = 0; _tmp$1 = 0; lx = _tmp; rx = _tmp$1;
		merged = $makeSlice(sliceType$1, 0);
		next = $makeSlice(sliceType$2, 0);
		ok = true;
		$deferred.push([(function() {
			if (!ok) {
				merged = sliceType$1.nil;
				next = sliceType$2.nil;
			}
		}), []]);
		ix = -1;
		extend = (function(newLow, newArray, pc) {
			var _lhs, x, x$1, x$2, x$3, x$4, x$5;
			if (ix > 0 && (x = newArray.$get(), x$1 = newLow.$get(), ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])) <= ((ix < 0 || ix >= merged.$length) ? $throwRuntimeError("index out of range") : merged.$array[merged.$offset + ix])) {
				return false;
			}
			merged = $append(merged, (x$2 = newArray.$get(), x$3 = newLow.$get(), ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3])), (x$4 = newArray.$get(), x$5 = newLow.$get() + 1 >> 0, ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5])));
			_lhs = newLow; _lhs.$set(_lhs.$get() + (2) >> 0);
			ix = ix + (2) >> 0;
			next = $append(next, pc);
			return true;
		});
		while (lx < leftLen || rx < rightLen) {
			if (rx >= rightLen) {
				ok = extend(new ptrType$4(function() { return lx; }, function($v) { lx = $v; }), leftRunes, leftPC);
			} else if (lx >= leftLen) {
				ok = extend(new ptrType$4(function() { return rx; }, function($v) { rx = $v; }), rightRunes, rightPC);
			} else if ((x = rightRunes.$get(), ((rx < 0 || rx >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + rx])) < (x$1 = leftRunes.$get(), ((lx < 0 || lx >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + lx]))) {
				ok = extend(new ptrType$4(function() { return rx; }, function($v) { rx = $v; }), rightRunes, rightPC);
			} else {
				ok = extend(new ptrType$4(function() { return lx; }, function($v) { lx = $v; }), leftRunes, leftPC);
			}
			if (!ok) {
				return [noRune, noNext];
			}
		}
		return [merged, next];
		/* */ } catch(err) { $err = err; return [sliceType$1.nil, sliceType$2.nil]; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); }
	};
	cleanupOnePass = function(prog, original) {
		var _i, _ref, _ref$1, instOriginal, ix, x, x$1, x$2;
		_ref = original.Inst;
		_i = 0;
		while (_i < _ref.$length) {
			ix = _i;
			instOriginal = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), syntax.Inst);
			_ref$1 = instOriginal.Op;
			if (_ref$1 === 0 || _ref$1 === 1 || _ref$1 === 7) {
			} else if (_ref$1 === 2 || _ref$1 === 3 || _ref$1 === 6 || _ref$1 === 4 || _ref$1 === 5) {
				(x = prog.Inst, ((ix < 0 || ix >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + ix])).Next = sliceType$2.nil;
			} else if (_ref$1 === 8 || _ref$1 === 9 || _ref$1 === 10) {
				(x$1 = prog.Inst, ((ix < 0 || ix >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + ix])).Next = sliceType$2.nil;
				$copy((x$2 = prog.Inst, ((ix < 0 || ix >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + ix])), new onePassInst.ptr($clone(instOriginal, syntax.Inst), sliceType$2.nil), onePassInst);
			}
			_i++;
		}
	};
	onePassCopy = function(prog) {
		var _i, _i$1, _ref, _ref$1, _ref$2, _tmp, _tmp$1, _tmp$2, _tmp$3, inst, instAlt, instOther, p, p_A_Alt, p_A_Other, p_B_Alt, p_B_Other, patch, pc, x, x$1, x$10, x$11, x$12, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		p = new onePassProg.ptr(sliceType$7.nil, prog.Start, prog.NumCap);
		_ref = prog.Inst;
		_i = 0;
		while (_i < _ref.$length) {
			inst = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), syntax.Inst);
			p.Inst = $append(p.Inst, new onePassInst.ptr($clone(inst, syntax.Inst), sliceType$2.nil));
			_i++;
		}
		_ref$1 = p.Inst;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			p_A_Alt = [undefined];
			pc = _i$1;
			_ref$2 = (x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc])).Inst.Op;
			if (_ref$2 === 0 || _ref$2 === 1) {
				p_A_Other = new ptrType$6(function() { return this.$target.Inst.Out; }, function($v) { this.$target.Inst.Out = $v; }, (x$1 = p.Inst, ((pc < 0 || pc >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + pc])));
				p_A_Alt[0] = new ptrType$6(function() { return this.$target.Inst.Arg; }, function($v) { this.$target.Inst.Arg = $v; }, (x$2 = p.Inst, ((pc < 0 || pc >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + pc])));
				instAlt = $clone((x$3 = p.Inst, x$4 = p_A_Alt[0].$get(), ((x$4 < 0 || x$4 >= x$3.$length) ? $throwRuntimeError("index out of range") : x$3.$array[x$3.$offset + x$4])), onePassInst);
				if (!((instAlt.Inst.Op === 0) || (instAlt.Inst.Op === 1))) {
					_tmp = p_A_Other; _tmp$1 = p_A_Alt[0]; p_A_Alt[0] = _tmp; p_A_Other = _tmp$1;
					$copy(instAlt, (x$5 = p.Inst, x$6 = p_A_Alt[0].$get(), ((x$6 < 0 || x$6 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + x$6])), onePassInst);
					if (!((instAlt.Inst.Op === 0) || (instAlt.Inst.Op === 1))) {
						_i$1++;
						continue;
					}
				}
				instOther = $clone((x$7 = p.Inst, x$8 = p_A_Other.$get(), ((x$8 < 0 || x$8 >= x$7.$length) ? $throwRuntimeError("index out of range") : x$7.$array[x$7.$offset + x$8])), onePassInst);
				if ((instOther.Inst.Op === 0) || (instOther.Inst.Op === 1)) {
					_i$1++;
					continue;
				}
				p_B_Alt = new ptrType$6(function() { return this.$target.Inst.Out; }, function($v) { this.$target.Inst.Out = $v; }, (x$9 = p.Inst, x$10 = p_A_Alt[0].$get(), ((x$10 < 0 || x$10 >= x$9.$length) ? $throwRuntimeError("index out of range") : x$9.$array[x$9.$offset + x$10])));
				p_B_Other = new ptrType$6(function() { return this.$target.Inst.Arg; }, function($v) { this.$target.Inst.Arg = $v; }, (x$11 = p.Inst, x$12 = p_A_Alt[0].$get(), ((x$12 < 0 || x$12 >= x$11.$length) ? $throwRuntimeError("index out of range") : x$11.$array[x$11.$offset + x$12])));
				patch = false;
				if (instAlt.Inst.Out === (pc >>> 0)) {
					patch = true;
				} else if (instAlt.Inst.Arg === (pc >>> 0)) {
					patch = true;
					_tmp$2 = p_B_Other; _tmp$3 = p_B_Alt; p_B_Alt = _tmp$2; p_B_Other = _tmp$3;
				}
				if (patch) {
					p_B_Alt.$set(p_A_Other.$get());
				}
				if (p_A_Other.$get() === p_B_Alt.$get()) {
					p_A_Alt[0].$set(p_B_Other.$get());
				}
			} else {
				_i$1++;
				continue;
			}
			_i$1++;
		}
		return p;
	};
	runeSlice.prototype.Len = function() {
		var p;
		p = this;
		return p.$length;
	};
	$ptrType(runeSlice).prototype.Len = function() { return this.$get().Len(); };
	runeSlice.prototype.Less = function(i, j) {
		var p;
		p = this;
		return ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]) < ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]);
	};
	$ptrType(runeSlice).prototype.Less = function(i, j) { return this.$get().Less(i, j); };
	runeSlice.prototype.Swap = function(i, j) {
		var _tmp, _tmp$1, p;
		p = this;
		_tmp = ((j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j]); _tmp$1 = ((i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i]); (i < 0 || i >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + i] = _tmp; (j < 0 || j >= p.$length) ? $throwRuntimeError("index out of range") : p.$array[p.$offset + j] = _tmp$1;
	};
	$ptrType(runeSlice).prototype.Swap = function(i, j) { return this.$get().Swap(i, j); };
	runeSlice.prototype.Sort = function() {
		var p;
		p = this;
		sort.Sort(p);
	};
	$ptrType(runeSlice).prototype.Sort = function() { return this.$get().Sort(); };
	makeOnePass = function(p) {
		var _i, _ref, _ref$1, build, check, i, inst, instQueue, m, onePassRunes, pc, visitQueue, x, x$1;
		if (p.Inst.$length >= 1000) {
			return notOnePass;
		}
		instQueue = newQueue(p.Inst.$length);
		visitQueue = newQueue(p.Inst.$length);
		build = $throwNilPointerError;
		check = $throwNilPointerError;
		onePassRunes = $makeSlice(sliceType$8, p.Inst.$length);
		build = (function(pc, q) {
			var _ref, inst, x;
			if (q.contains(pc)) {
				return;
			}
			inst = $clone((x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc])), onePassInst);
			_ref = inst.Inst.Op;
			if (_ref === 0 || _ref === 1) {
				q.insert(inst.Inst.Out);
				build(inst.Inst.Out, q);
				q.insert(inst.Inst.Arg);
			} else if (_ref === 4 || _ref === 5) {
			} else {
				q.insert(inst.Inst.Out);
			}
		});
		check = (function(pc, m) {
			var _entry, _entry$1, _entry$2, _entry$3, _key, _key$1, _key$2, _key$3, _key$4, _key$5, _key$6, _key$7, _q, _q$1, _q$2, _q$3, _q$4, _ref, _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, i, i$1, i$2, i$3, i$4, inst, matchArg, matchOut, ok = false, r0, r0$1, r1, r1$1, runes, runes$1, x, x$1, x$10, x$11, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
			ok = true;
			inst = (x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc]));
			if (visitQueue.contains(pc)) {
				return ok;
			}
			visitQueue.insert(pc);
			_ref = inst.Inst.Op;
			switch (0) { default: if (_ref === 0 || _ref === 1) {
				ok = check(inst.Inst.Out, m) && check(inst.Inst.Arg, m);
				matchOut = (_entry = m[inst.Inst.Out], _entry !== undefined ? _entry.v : false);
				matchArg = (_entry$1 = m[inst.Inst.Arg], _entry$1 !== undefined ? _entry$1.v : false);
				if (matchOut && matchArg) {
					ok = false;
					break;
				}
				if (matchArg) {
					_tmp = inst.Inst.Arg; _tmp$1 = inst.Inst.Out; inst.Inst.Out = _tmp; inst.Inst.Arg = _tmp$1;
					_tmp$2 = matchArg; _tmp$3 = matchOut; matchOut = _tmp$2; matchArg = _tmp$3;
				}
				if (matchOut) {
					_key = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: true };
					inst.Inst.Op = 1;
				}
				_tuple = mergeRuneSets(new ptrType$7(function() { return (x$2 = inst.Inst.Out, ((x$2 < 0 || x$2 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$2])); }, function($v) { (x$1 = inst.Inst.Out, (x$1 < 0 || x$1 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$1] = $v); }, onePassRunes), new ptrType$7(function() { return (x$4 = inst.Inst.Arg, ((x$4 < 0 || x$4 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$4])); }, function($v) { (x$3 = inst.Inst.Arg, (x$3 < 0 || x$3 >= this.$target.$length) ? $throwRuntimeError("index out of range") : this.$target.$array[this.$target.$offset + x$3] = $v); }, onePassRunes), inst.Inst.Out, inst.Inst.Arg); (pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = _tuple[0]; inst.Next = _tuple[1];
				if (inst.Next.$length > 0 && ((x$5 = inst.Next, ((0 < 0 || 0 >= x$5.$length) ? $throwRuntimeError("index out of range") : x$5.$array[x$5.$offset + 0])) === 4294967295)) {
					ok = false;
					break;
				}
			} else if (_ref === 2 || _ref === 6) {
				ok = check(inst.Inst.Out, m);
				_key$1 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$1] = { k: _key$1, v: (_entry$2 = m[inst.Inst.Out], _entry$2 !== undefined ? _entry$2.v : false) };
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = $appendSlice(new sliceType$1([]), (x$6 = inst.Inst.Out, ((x$6 < 0 || x$6 >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + x$6])));
				inst.Next = new sliceType$2([]);
				i = (_q = ((pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc]).$length / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
				while (i >= 0) {
					inst.Next = $append(inst.Next, inst.Inst.Out);
					i = i - (1) >> 0;
				}
			} else if (_ref === 3) {
				ok = check(inst.Inst.Out, m);
				_key$2 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$2] = { k: _key$2, v: (_entry$3 = m[inst.Inst.Out], _entry$3 !== undefined ? _entry$3.v : false) };
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = $appendSlice(new sliceType$1([]), (x$7 = inst.Inst.Out, ((x$7 < 0 || x$7 >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + x$7])));
				inst.Next = new sliceType$2([]);
				i$1 = (_q$1 = ((pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc]).$length / 2, (_q$1 === _q$1 && _q$1 !== 1/0 && _q$1 !== -1/0) ? _q$1 >> 0 : $throwRuntimeError("integer divide by zero"));
				while (i$1 >= 0) {
					inst.Next = $append(inst.Next, inst.Inst.Out);
					i$1 = i$1 - (1) >> 0;
				}
			} else if (_ref === 4 || _ref === 5) {
				_key$3 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$3] = { k: _key$3, v: inst.Inst.Op === 4 };
				break;
			} else if (_ref === 7) {
				ok = check(inst.Inst.Out, m);
				_key$4 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$4] = { k: _key$4, v: false };
				if (inst.Next.$length > 0) {
					break;
				}
				if (inst.Inst.Rune.$length === 0) {
					(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = new sliceType$1([]);
					inst.Next = new sliceType$2([inst.Inst.Out]);
					break;
				}
				runes = $makeSlice(sliceType$1, 0);
				if ((inst.Inst.Rune.$length === 1) && !(((((inst.Inst.Arg << 16 >>> 16) & 1) >>> 0) === 0))) {
					r0 = (x$8 = inst.Inst.Rune, ((0 < 0 || 0 >= x$8.$length) ? $throwRuntimeError("index out of range") : x$8.$array[x$8.$offset + 0]));
					runes = $append(runes, r0, r0);
					r1 = unicode.SimpleFold(r0);
					while (!((r1 === r0))) {
						runes = $append(runes, r1, r1);
						r1 = unicode.SimpleFold(r1);
					}
					sort.Sort($subslice(new runeSlice(runes.$array), runes.$offset, runes.$offset + runes.$length));
				} else {
					runes = $appendSlice(runes, inst.Inst.Rune);
				}
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = runes;
				inst.Next = new sliceType$2([]);
				i$2 = (_q$2 = ((pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc]).$length / 2, (_q$2 === _q$2 && _q$2 !== 1/0 && _q$2 !== -1/0) ? _q$2 >> 0 : $throwRuntimeError("integer divide by zero"));
				while (i$2 >= 0) {
					inst.Next = $append(inst.Next, inst.Inst.Out);
					i$2 = i$2 - (1) >> 0;
				}
				inst.Inst.Op = 7;
			} else if (_ref === 8) {
				ok = check(inst.Inst.Out, m);
				_key$5 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$5] = { k: _key$5, v: false };
				if (inst.Next.$length > 0) {
					break;
				}
				runes$1 = new sliceType$1([]);
				if (!(((((inst.Inst.Arg << 16 >>> 16) & 1) >>> 0) === 0))) {
					r0$1 = (x$9 = inst.Inst.Rune, ((0 < 0 || 0 >= x$9.$length) ? $throwRuntimeError("index out of range") : x$9.$array[x$9.$offset + 0]));
					runes$1 = $append(runes$1, r0$1, r0$1);
					r1$1 = unicode.SimpleFold(r0$1);
					while (!((r1$1 === r0$1))) {
						runes$1 = $append(runes$1, r1$1, r1$1);
						r1$1 = unicode.SimpleFold(r1$1);
					}
					sort.Sort($subslice(new runeSlice(runes$1.$array), runes$1.$offset, runes$1.$offset + runes$1.$length));
				} else {
					runes$1 = $append(runes$1, (x$10 = inst.Inst.Rune, ((0 < 0 || 0 >= x$10.$length) ? $throwRuntimeError("index out of range") : x$10.$array[x$10.$offset + 0])), (x$11 = inst.Inst.Rune, ((0 < 0 || 0 >= x$11.$length) ? $throwRuntimeError("index out of range") : x$11.$array[x$11.$offset + 0])));
				}
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = runes$1;
				inst.Next = new sliceType$2([]);
				i$3 = (_q$3 = ((pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc]).$length / 2, (_q$3 === _q$3 && _q$3 !== 1/0 && _q$3 !== -1/0) ? _q$3 >> 0 : $throwRuntimeError("integer divide by zero"));
				while (i$3 >= 0) {
					inst.Next = $append(inst.Next, inst.Inst.Out);
					i$3 = i$3 - (1) >> 0;
				}
				inst.Inst.Op = 7;
			} else if (_ref === 9) {
				ok = check(inst.Inst.Out, m);
				_key$6 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$6] = { k: _key$6, v: false };
				if (inst.Next.$length > 0) {
					break;
				}
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = $appendSlice(new sliceType$1([]), anyRune);
				inst.Next = new sliceType$2([inst.Inst.Out]);
			} else if (_ref === 10) {
				ok = check(inst.Inst.Out, m);
				_key$7 = pc; (m || $throwRuntimeError("assignment to entry in nil map"))[_key$7] = { k: _key$7, v: false };
				if (inst.Next.$length > 0) {
					break;
				}
				(pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc] = $appendSlice(new sliceType$1([]), anyRuneNotNL);
				inst.Next = new sliceType$2([]);
				i$4 = (_q$4 = ((pc < 0 || pc >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + pc]).$length / 2, (_q$4 === _q$4 && _q$4 !== 1/0 && _q$4 !== -1/0) ? _q$4 >> 0 : $throwRuntimeError("integer divide by zero"));
				while (i$4 >= 0) {
					inst.Next = $append(inst.Next, inst.Inst.Out);
					i$4 = i$4 - (1) >> 0;
				}
			} }
			return ok;
		});
		instQueue.clear();
		instQueue.insert((p.Start >>> 0));
		m = new $Map();
		while (!instQueue.empty()) {
			pc = instQueue.next();
			inst = $clone((x = p.Inst, ((pc < 0 || pc >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pc])), onePassInst);
			visitQueue.clear();
			if (!check(pc, m)) {
				p = notOnePass;
				break;
			}
			_ref = inst.Inst.Op;
			if (_ref === 0 || _ref === 1) {
				instQueue.insert(inst.Inst.Out);
				instQueue.insert(inst.Inst.Arg);
			} else if (_ref === 2 || _ref === 3 || _ref === 6) {
				instQueue.insert(inst.Inst.Out);
			} else if (_ref === 4) {
			} else if (_ref === 5) {
			} else if (_ref === 7 || _ref === 8 || _ref === 9 || _ref === 10) {
			} else {
			}
		}
		if (!(p === notOnePass)) {
			_ref$1 = p.Inst;
			_i = 0;
			while (_i < _ref$1.$length) {
				i = _i;
				(x$1 = p.Inst, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i])).Inst.Rune = ((i < 0 || i >= onePassRunes.$length) ? $throwRuntimeError("index out of range") : onePassRunes.$array[onePassRunes.$offset + i]);
				_i++;
			}
		}
		return p;
	};
	compileOnePass = function(prog) {
		var _i, _ref, _ref$1, inst, opOut, p = ptrType.nil, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7;
		if (prog.Start === 0) {
			p = notOnePass;
			return p;
		}
		if (!(((x = prog.Inst, x$1 = prog.Start, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1])).Op === 3)) || !((((((x$2 = prog.Inst, x$3 = prog.Start, ((x$3 < 0 || x$3 >= x$2.$length) ? $throwRuntimeError("index out of range") : x$2.$array[x$2.$offset + x$3])).Arg << 24 >>> 24) & 4) >>> 0) === 4))) {
			p = notOnePass;
			return p;
		}
		_ref = prog.Inst;
		_i = 0;
		while (_i < _ref.$length) {
			inst = $clone(((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]), syntax.Inst);
			opOut = (x$4 = prog.Inst, x$5 = inst.Out, ((x$5 < 0 || x$5 >= x$4.$length) ? $throwRuntimeError("index out of range") : x$4.$array[x$4.$offset + x$5])).Op;
			_ref$1 = inst.Op;
			if (_ref$1 === 0 || _ref$1 === 1) {
				if ((opOut === 4) || ((x$6 = prog.Inst, x$7 = inst.Arg, ((x$7 < 0 || x$7 >= x$6.$length) ? $throwRuntimeError("index out of range") : x$6.$array[x$6.$offset + x$7])).Op === 4)) {
					p = notOnePass;
					return p;
				}
			} else if (_ref$1 === 3) {
				if (opOut === 4) {
					if ((((inst.Arg << 24 >>> 24) & 8) >>> 0) === 8) {
						_i++;
						continue;
					}
					p = notOnePass;
					return p;
				}
			} else {
				if (opOut === 4) {
					p = notOnePass;
					return p;
				}
			}
			_i++;
		}
		p = onePassCopy(prog);
		p = makeOnePass(p);
		if (!(p === notOnePass)) {
			cleanupOnePass(p, prog);
		}
		p = p;
		return p;
	};
	Regexp.ptr.prototype.String = function() {
		var re;
		re = this;
		return re.expr;
	};
	Regexp.prototype.String = function() { return this.$val.String(); };
	Compile = $pkg.Compile = function(expr) {
		return compile(expr, 212, false);
	};
	Regexp.ptr.prototype.Longest = function() {
		var re;
		re = this;
		re.longest = true;
	};
	Regexp.prototype.Longest = function() { return this.$val.Longest(); };
	compile = function(expr, mode, longest) {
		var _tuple, _tuple$1, _tuple$2, _tuple$3, _tuple$4, capNames, err, maxCap, prog, re, regexp;
		_tuple = syntax.Parse(expr, mode); re = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [ptrType$1.nil, err];
		}
		maxCap = re.MaxCap();
		capNames = re.CapNames();
		re = re.Simplify();
		_tuple$1 = syntax.Compile(re); prog = _tuple$1[0]; err = _tuple$1[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [ptrType$1.nil, err];
		}
		regexp = new Regexp.ptr(expr, prog, compileOnePass(prog), "", sliceType$3.nil, false, 0, 0, prog.StartCond(), maxCap, capNames, longest, new sync.Mutex.ptr(), sliceType$10.nil);
		if (regexp.onepass === notOnePass) {
			_tuple$2 = prog.Prefix(); regexp.prefix = _tuple$2[0]; regexp.prefixComplete = _tuple$2[1];
		} else {
			_tuple$3 = onePassPrefix(prog); regexp.prefix = _tuple$3[0]; regexp.prefixComplete = _tuple$3[1]; regexp.prefixEnd = _tuple$3[2];
		}
		if (!(regexp.prefix === "")) {
			regexp.prefixBytes = new sliceType$3($stringToBytes(regexp.prefix));
			_tuple$4 = utf8.DecodeRuneInString(regexp.prefix); regexp.prefixRune = _tuple$4[0];
		}
		return [regexp, $ifaceNil];
	};
	Regexp.ptr.prototype.get = function() {
		var n, re, x, x$1, z, z$1;
		re = this;
		re.mu.Lock();
		n = re.machine.$length;
		if (n > 0) {
			z = (x = re.machine, x$1 = n - 1 >> 0, ((x$1 < 0 || x$1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + x$1]));
			re.machine = $subslice(re.machine, 0, (n - 1 >> 0));
			re.mu.Unlock();
			return z;
		}
		re.mu.Unlock();
		z$1 = progMachine(re.prog, re.onepass);
		z$1.re = re;
		return z$1;
	};
	Regexp.prototype.get = function() { return this.$val.get(); };
	Regexp.ptr.prototype.put = function(z) {
		var re;
		re = this;
		re.mu.Lock();
		re.machine = $append(re.machine, z);
		re.mu.Unlock();
	};
	Regexp.prototype.put = function(z) { return this.$val.put(z); };
	MustCompile = $pkg.MustCompile = function(str) {
		var _tuple, error, regexp;
		_tuple = Compile(str); regexp = _tuple[0]; error = _tuple[1];
		if (!($interfaceIsEqual(error, $ifaceNil))) {
			$panic(new $String("regexp: Compile(" + quote(str) + "): " + error.Error()));
		}
		return regexp;
	};
	quote = function(s) {
		if (strconv.CanBackquote(s)) {
			return "`" + s + "`";
		}
		return strconv.Quote(s);
	};
	Regexp.ptr.prototype.NumSubexp = function() {
		var re;
		re = this;
		return re.numSubexp;
	};
	Regexp.prototype.NumSubexp = function() { return this.$val.NumSubexp(); };
	Regexp.ptr.prototype.SubexpNames = function() {
		var re;
		re = this;
		return re.subexpNames;
	};
	Regexp.prototype.SubexpNames = function() { return this.$val.SubexpNames(); };
	inputString.ptr.prototype.step = function(pos) {
		var c, i;
		i = this;
		if (pos < i.str.length) {
			c = i.str.charCodeAt(pos);
			if (c < 128) {
				return [(c >> 0), 1];
			}
			return utf8.DecodeRuneInString(i.str.substring(pos));
		}
		return [-1, 0];
	};
	inputString.prototype.step = function(pos) { return this.$val.step(pos); };
	inputString.ptr.prototype.canCheckPrefix = function() {
		var i;
		i = this;
		return true;
	};
	inputString.prototype.canCheckPrefix = function() { return this.$val.canCheckPrefix(); };
	inputString.ptr.prototype.hasPrefix = function(re) {
		var i;
		i = this;
		return strings.HasPrefix(i.str, re.prefix);
	};
	inputString.prototype.hasPrefix = function(re) { return this.$val.hasPrefix(re); };
	inputString.ptr.prototype.index = function(re, pos) {
		var i;
		i = this;
		return strings.Index(i.str.substring(pos), re.prefix);
	};
	inputString.prototype.index = function(re, pos) { return this.$val.index(re, pos); };
	inputString.ptr.prototype.context = function(pos) {
		var _tmp, _tmp$1, _tuple, _tuple$1, i, r1, r2;
		i = this;
		_tmp = -1; _tmp$1 = -1; r1 = _tmp; r2 = _tmp$1;
		if (pos > 0 && pos <= i.str.length) {
			_tuple = utf8.DecodeLastRuneInString(i.str.substring(0, pos)); r1 = _tuple[0];
		}
		if (pos < i.str.length) {
			_tuple$1 = utf8.DecodeRuneInString(i.str.substring(pos)); r2 = _tuple$1[0];
		}
		return syntax.EmptyOpContext(r1, r2);
	};
	inputString.prototype.context = function(pos) { return this.$val.context(pos); };
	inputBytes.ptr.prototype.step = function(pos) {
		var c, i, x;
		i = this;
		if (pos < i.str.$length) {
			c = (x = i.str, ((pos < 0 || pos >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + pos]));
			if (c < 128) {
				return [(c >> 0), 1];
			}
			return utf8.DecodeRune($subslice(i.str, pos));
		}
		return [-1, 0];
	};
	inputBytes.prototype.step = function(pos) { return this.$val.step(pos); };
	inputBytes.ptr.prototype.canCheckPrefix = function() {
		var i;
		i = this;
		return true;
	};
	inputBytes.prototype.canCheckPrefix = function() { return this.$val.canCheckPrefix(); };
	inputBytes.ptr.prototype.hasPrefix = function(re) {
		var i;
		i = this;
		return bytes.HasPrefix(i.str, re.prefixBytes);
	};
	inputBytes.prototype.hasPrefix = function(re) { return this.$val.hasPrefix(re); };
	inputBytes.ptr.prototype.index = function(re, pos) {
		var i;
		i = this;
		return bytes.Index($subslice(i.str, pos), re.prefixBytes);
	};
	inputBytes.prototype.index = function(re, pos) { return this.$val.index(re, pos); };
	inputBytes.ptr.prototype.context = function(pos) {
		var _tmp, _tmp$1, _tuple, _tuple$1, i, r1, r2;
		i = this;
		_tmp = -1; _tmp$1 = -1; r1 = _tmp; r2 = _tmp$1;
		if (pos > 0 && pos <= i.str.$length) {
			_tuple = utf8.DecodeLastRune($subslice(i.str, 0, pos)); r1 = _tuple[0];
		}
		if (pos < i.str.$length) {
			_tuple$1 = utf8.DecodeRune($subslice(i.str, pos)); r2 = _tuple$1[0];
		}
		return syntax.EmptyOpContext(r1, r2);
	};
	inputBytes.prototype.context = function(pos) { return this.$val.context(pos); };
	inputReader.ptr.prototype.step = function(pos) {
		var _tuple, err, i, r, w;
		i = this;
		if (!i.atEOT && !((pos === i.pos))) {
			return [-1, 0];
		}
		_tuple = i.r.ReadRune(); r = _tuple[0]; w = _tuple[1]; err = _tuple[2];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			i.atEOT = true;
			return [-1, 0];
		}
		i.pos = i.pos + (w) >> 0;
		return [r, w];
	};
	inputReader.prototype.step = function(pos) { return this.$val.step(pos); };
	inputReader.ptr.prototype.canCheckPrefix = function() {
		var i;
		i = this;
		return false;
	};
	inputReader.prototype.canCheckPrefix = function() { return this.$val.canCheckPrefix(); };
	inputReader.ptr.prototype.hasPrefix = function(re) {
		var i;
		i = this;
		return false;
	};
	inputReader.prototype.hasPrefix = function(re) { return this.$val.hasPrefix(re); };
	inputReader.ptr.prototype.index = function(re, pos) {
		var i;
		i = this;
		return -1;
	};
	inputReader.prototype.index = function(re, pos) { return this.$val.index(re, pos); };
	inputReader.ptr.prototype.context = function(pos) {
		var i;
		i = this;
		return 0;
	};
	inputReader.prototype.context = function(pos) { return this.$val.context(pos); };
	Regexp.ptr.prototype.LiteralPrefix = function() {
		var _tmp, _tmp$1, complete = false, prefix = "", re;
		re = this;
		_tmp = re.prefix; _tmp$1 = re.prefixComplete; prefix = _tmp; complete = _tmp$1;
		return [prefix, complete];
	};
	Regexp.prototype.LiteralPrefix = function() { return this.$val.LiteralPrefix(); };
	Regexp.ptr.prototype.MatchReader = function(r) {
		var re;
		re = this;
		return !(re.doExecute(r, sliceType$3.nil, "", 0, 0) === sliceType.nil);
	};
	Regexp.prototype.MatchReader = function(r) { return this.$val.MatchReader(r); };
	Regexp.ptr.prototype.MatchString = function(s) {
		var re;
		re = this;
		return !(re.doExecute($ifaceNil, sliceType$3.nil, s, 0, 0) === sliceType.nil);
	};
	Regexp.prototype.MatchString = function(s) { return this.$val.MatchString(s); };
	Regexp.ptr.prototype.Match = function(b) {
		var re;
		re = this;
		return !(re.doExecute($ifaceNil, b, "", 0, 0) === sliceType.nil);
	};
	Regexp.prototype.Match = function(b) { return this.$val.Match(b); };
	Match = $pkg.Match = function(pattern, b) {
		var _tmp, _tmp$1, _tmp$2, _tmp$3, _tuple, err = $ifaceNil, matched = false, re;
		_tuple = Compile(pattern); re = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			_tmp = false; _tmp$1 = err; matched = _tmp; err = _tmp$1;
			return [matched, err];
		}
		_tmp$2 = re.Match(b); _tmp$3 = $ifaceNil; matched = _tmp$2; err = _tmp$3;
		return [matched, err];
	};
	Regexp.ptr.prototype.ReplaceAllString = function(src, repl) {
		var b, n, re;
		re = this;
		n = 2;
		if (strings.Index(repl, "$") >= 0) {
			n = 2 * ((re.numSubexp + 1 >> 0)) >> 0;
		}
		b = re.replaceAll(sliceType$3.nil, src, n, (function(dst, match) {
			return re.expand(dst, repl, sliceType$3.nil, src, match);
		}));
		return $bytesToString(b);
	};
	Regexp.prototype.ReplaceAllString = function(src, repl) { return this.$val.ReplaceAllString(src, repl); };
	Regexp.ptr.prototype.ReplaceAllLiteralString = function(src, repl) {
		var re;
		re = this;
		return $bytesToString(re.replaceAll(sliceType$3.nil, src, 2, (function(dst, match) {
			return $appendSlice(dst, new sliceType$3($stringToBytes(repl)));
		})));
	};
	Regexp.prototype.ReplaceAllLiteralString = function(src, repl) { return this.$val.ReplaceAllLiteralString(src, repl); };
	Regexp.ptr.prototype.ReplaceAllStringFunc = function(src, repl) {
		var b, re;
		re = this;
		b = re.replaceAll(sliceType$3.nil, src, 2, (function(dst, match) {
			return $appendSlice(dst, new sliceType$3($stringToBytes(repl(src.substring(((0 < 0 || 0 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 0]), ((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1]))))));
		}));
		return $bytesToString(b);
	};
	Regexp.prototype.ReplaceAllStringFunc = function(src, repl) { return this.$val.ReplaceAllStringFunc(src, repl); };
	Regexp.ptr.prototype.replaceAll = function(bsrc, src, nmatch, repl) {
		var _tuple, _tuple$1, a, buf, endPos, lastMatchEnd, re, searchPos, width;
		re = this;
		lastMatchEnd = 0;
		searchPos = 0;
		buf = sliceType$3.nil;
		endPos = 0;
		if (!(bsrc === sliceType$3.nil)) {
			endPos = bsrc.$length;
		} else {
			endPos = src.length;
		}
		while (searchPos <= endPos) {
			a = re.doExecute($ifaceNil, bsrc, src, searchPos, nmatch);
			if (a.$length === 0) {
				break;
			}
			if (!(bsrc === sliceType$3.nil)) {
				buf = $appendSlice(buf, $subslice(bsrc, lastMatchEnd, ((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0])));
			} else {
				buf = $appendSlice(buf, new sliceType$3($stringToBytes(src.substring(lastMatchEnd, ((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0])))));
			}
			if (((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1]) > lastMatchEnd || (((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0]) === 0)) {
				buf = repl(buf, a);
			}
			lastMatchEnd = ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1]);
			width = 0;
			if (!(bsrc === sliceType$3.nil)) {
				_tuple = utf8.DecodeRune($subslice(bsrc, searchPos)); width = _tuple[1];
			} else {
				_tuple$1 = utf8.DecodeRuneInString(src.substring(searchPos)); width = _tuple$1[1];
			}
			if ((searchPos + width >> 0) > ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1])) {
				searchPos = searchPos + (width) >> 0;
			} else if ((searchPos + 1 >> 0) > ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1])) {
				searchPos = searchPos + (1) >> 0;
			} else {
				searchPos = ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1]);
			}
		}
		if (!(bsrc === sliceType$3.nil)) {
			buf = $appendSlice(buf, $subslice(bsrc, lastMatchEnd));
		} else {
			buf = $appendSlice(buf, new sliceType$3($stringToBytes(src.substring(lastMatchEnd))));
		}
		return buf;
	};
	Regexp.prototype.replaceAll = function(bsrc, src, nmatch, repl) { return this.$val.replaceAll(bsrc, src, nmatch, repl); };
	Regexp.ptr.prototype.ReplaceAll = function(src, repl) {
		var b, n, re, srepl;
		re = this;
		n = 2;
		if (bytes.IndexByte(repl, 36) >= 0) {
			n = 2 * ((re.numSubexp + 1 >> 0)) >> 0;
		}
		srepl = "";
		b = re.replaceAll(src, "", n, (function(dst, match) {
			if (!((srepl.length === repl.$length))) {
				srepl = $bytesToString(repl);
			}
			return re.expand(dst, srepl, src, "", match);
		}));
		return b;
	};
	Regexp.prototype.ReplaceAll = function(src, repl) { return this.$val.ReplaceAll(src, repl); };
	Regexp.ptr.prototype.ReplaceAllLiteral = function(src, repl) {
		var re;
		re = this;
		return re.replaceAll(src, "", 2, (function(dst, match) {
			return $appendSlice(dst, repl);
		}));
	};
	Regexp.prototype.ReplaceAllLiteral = function(src, repl) { return this.$val.ReplaceAllLiteral(src, repl); };
	Regexp.ptr.prototype.ReplaceAllFunc = function(src, repl) {
		var re;
		re = this;
		return re.replaceAll(src, "", 2, (function(dst, match) {
			return $appendSlice(dst, repl($subslice(src, ((0 < 0 || 0 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 0]), ((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1]))));
		}));
	};
	Regexp.prototype.ReplaceAllFunc = function(src, repl) { return this.$val.ReplaceAllFunc(src, repl); };
	Regexp.ptr.prototype.pad = function(a) {
		var n, re;
		re = this;
		if (a === sliceType.nil) {
			return sliceType.nil;
		}
		n = ((1 + re.numSubexp >> 0)) * 2 >> 0;
		while (a.$length < n) {
			a = $append(a, -1);
		}
		return a;
	};
	Regexp.prototype.pad = function(a) { return this.$val.pad(a); };
	Regexp.ptr.prototype.allMatches = function(s, b, n, deliver) {
		var _tmp, _tmp$1, _tmp$2, _tuple, _tuple$1, accept, end, i, matches, pos, prevMatchEnd, re, width;
		re = this;
		end = 0;
		if (b === sliceType$3.nil) {
			end = s.length;
		} else {
			end = b.$length;
		}
		_tmp = 0; _tmp$1 = 0; _tmp$2 = -1; pos = _tmp; i = _tmp$1; prevMatchEnd = _tmp$2;
		while (i < n && pos <= end) {
			matches = re.doExecute($ifaceNil, b, s, pos, re.prog.NumCap);
			if (matches.$length === 0) {
				break;
			}
			accept = true;
			if (((1 < 0 || 1 >= matches.$length) ? $throwRuntimeError("index out of range") : matches.$array[matches.$offset + 1]) === pos) {
				if (((0 < 0 || 0 >= matches.$length) ? $throwRuntimeError("index out of range") : matches.$array[matches.$offset + 0]) === prevMatchEnd) {
					accept = false;
				}
				width = 0;
				if (b === sliceType$3.nil) {
					_tuple = utf8.DecodeRuneInString(s.substring(pos, end)); width = _tuple[1];
				} else {
					_tuple$1 = utf8.DecodeRune($subslice(b, pos, end)); width = _tuple$1[1];
				}
				if (width > 0) {
					pos = pos + (width) >> 0;
				} else {
					pos = end + 1 >> 0;
				}
			} else {
				pos = ((1 < 0 || 1 >= matches.$length) ? $throwRuntimeError("index out of range") : matches.$array[matches.$offset + 1]);
			}
			prevMatchEnd = ((1 < 0 || 1 >= matches.$length) ? $throwRuntimeError("index out of range") : matches.$array[matches.$offset + 1]);
			if (accept) {
				deliver(re.pad(matches));
				i = i + (1) >> 0;
			}
		}
	};
	Regexp.prototype.allMatches = function(s, b, n, deliver) { return this.$val.allMatches(s, b, n, deliver); };
	Regexp.ptr.prototype.Find = function(b) {
		var a, re;
		re = this;
		a = re.doExecute($ifaceNil, b, "", 0, 2);
		if (a === sliceType.nil) {
			return sliceType$3.nil;
		}
		return $subslice(b, ((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0]), ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1]));
	};
	Regexp.prototype.Find = function(b) { return this.$val.Find(b); };
	Regexp.ptr.prototype.FindIndex = function(b) {
		var a, loc = sliceType.nil, re;
		re = this;
		a = re.doExecute($ifaceNil, b, "", 0, 2);
		if (a === sliceType.nil) {
			loc = sliceType.nil;
			return loc;
		}
		loc = $subslice(a, 0, 2);
		return loc;
	};
	Regexp.prototype.FindIndex = function(b) { return this.$val.FindIndex(b); };
	Regexp.ptr.prototype.FindString = function(s) {
		var a, re;
		re = this;
		a = re.doExecute($ifaceNil, sliceType$3.nil, s, 0, 2);
		if (a === sliceType.nil) {
			return "";
		}
		return s.substring(((0 < 0 || 0 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 0]), ((1 < 0 || 1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + 1]));
	};
	Regexp.prototype.FindString = function(s) { return this.$val.FindString(s); };
	Regexp.ptr.prototype.FindStringIndex = function(s) {
		var a, loc = sliceType.nil, re;
		re = this;
		a = re.doExecute($ifaceNil, sliceType$3.nil, s, 0, 2);
		if (a === sliceType.nil) {
			loc = sliceType.nil;
			return loc;
		}
		loc = $subslice(a, 0, 2);
		return loc;
	};
	Regexp.prototype.FindStringIndex = function(s) { return this.$val.FindStringIndex(s); };
	Regexp.ptr.prototype.FindReaderIndex = function(r) {
		var a, loc = sliceType.nil, re;
		re = this;
		a = re.doExecute(r, sliceType$3.nil, "", 0, 2);
		if (a === sliceType.nil) {
			loc = sliceType.nil;
			return loc;
		}
		loc = $subslice(a, 0, 2);
		return loc;
	};
	Regexp.prototype.FindReaderIndex = function(r) { return this.$val.FindReaderIndex(r); };
	Regexp.ptr.prototype.FindSubmatch = function(b) {
		var _i, _ref, a, i, re, ret, x, x$1, x$2;
		re = this;
		a = re.doExecute($ifaceNil, b, "", 0, re.prog.NumCap);
		if (a === sliceType.nil) {
			return sliceType$11.nil;
		}
		ret = $makeSlice(sliceType$11, (1 + re.numSubexp >> 0));
		_ref = ret;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			if ((2 * i >> 0) < a.$length && (x = 2 * i >> 0, ((x < 0 || x >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x])) >= 0) {
				(i < 0 || i >= ret.$length) ? $throwRuntimeError("index out of range") : ret.$array[ret.$offset + i] = $subslice(b, (x$1 = 2 * i >> 0, ((x$1 < 0 || x$1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x$1])), (x$2 = (2 * i >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x$2])));
			}
			_i++;
		}
		return ret;
	};
	Regexp.prototype.FindSubmatch = function(b) { return this.$val.FindSubmatch(b); };
	Regexp.ptr.prototype.Expand = function(dst, template, src, match) {
		var re;
		re = this;
		return re.expand(dst, $bytesToString(template), src, "", match);
	};
	Regexp.prototype.Expand = function(dst, template, src, match) { return this.$val.Expand(dst, template, src, match); };
	Regexp.ptr.prototype.ExpandString = function(dst, template, src, match) {
		var re;
		re = this;
		return re.expand(dst, template, sliceType$3.nil, src, match);
	};
	Regexp.prototype.ExpandString = function(dst, template, src, match) { return this.$val.ExpandString(dst, template, src, match); };
	Regexp.ptr.prototype.expand = function(dst, template, bsrc, src, match) {
		var _i, _ref, _tuple, i, i$1, name, namei, num, ok, re, rest, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		re = this;
		while (template.length > 0) {
			i = strings.Index(template, "$");
			if (i < 0) {
				break;
			}
			dst = $appendSlice(dst, new sliceType$3($stringToBytes(template.substring(0, i))));
			template = template.substring(i);
			if (template.length > 1 && (template.charCodeAt(1) === 36)) {
				dst = $append(dst, 36);
				template = template.substring(2);
				continue;
			}
			_tuple = extract(template); name = _tuple[0]; num = _tuple[1]; rest = _tuple[2]; ok = _tuple[3];
			if (!ok) {
				dst = $append(dst, 36);
				template = template.substring(1);
				continue;
			}
			template = rest;
			if (num >= 0) {
				if (((2 * num >> 0) + 1 >> 0) < match.$length && (x = 2 * num >> 0, ((x < 0 || x >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x])) >= 0) {
					if (!(bsrc === sliceType$3.nil)) {
						dst = $appendSlice(dst, $subslice(bsrc, (x$1 = 2 * num >> 0, ((x$1 < 0 || x$1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$1])), (x$2 = (2 * num >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$2]))));
					} else {
						dst = $appendSlice(dst, new sliceType$3($stringToBytes(src.substring((x$3 = 2 * num >> 0, ((x$3 < 0 || x$3 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$3])), (x$4 = (2 * num >> 0) + 1 >> 0, ((x$4 < 0 || x$4 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$4]))))));
					}
				}
			} else {
				_ref = re.subexpNames;
				_i = 0;
				while (_i < _ref.$length) {
					i$1 = _i;
					namei = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
					if (name === namei && ((2 * i$1 >> 0) + 1 >> 0) < match.$length && (x$5 = 2 * i$1 >> 0, ((x$5 < 0 || x$5 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$5])) >= 0) {
						if (!(bsrc === sliceType$3.nil)) {
							dst = $appendSlice(dst, $subslice(bsrc, (x$6 = 2 * i$1 >> 0, ((x$6 < 0 || x$6 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$6])), (x$7 = (2 * i$1 >> 0) + 1 >> 0, ((x$7 < 0 || x$7 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$7]))));
						} else {
							dst = $appendSlice(dst, new sliceType$3($stringToBytes(src.substring((x$8 = 2 * i$1 >> 0, ((x$8 < 0 || x$8 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$8])), (x$9 = (2 * i$1 >> 0) + 1 >> 0, ((x$9 < 0 || x$9 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$9]))))));
						}
						break;
					}
					_i++;
				}
			}
		}
		dst = $appendSlice(dst, new sliceType$3($stringToBytes(template)));
		return dst;
	};
	Regexp.prototype.expand = function(dst, template, bsrc, src, match) { return this.$val.expand(dst, template, bsrc, src, match); };
	extract = function(str) {
		var _tuple, brace, i, i$1, name = "", num = 0, ok = false, rest = "", rune, size;
		if (str.length < 2 || !((str.charCodeAt(0) === 36))) {
			return [name, num, rest, ok];
		}
		brace = false;
		if (str.charCodeAt(1) === 123) {
			brace = true;
			str = str.substring(2);
		} else {
			str = str.substring(1);
		}
		i = 0;
		while (i < str.length) {
			_tuple = utf8.DecodeRuneInString(str.substring(i)); rune = _tuple[0]; size = _tuple[1];
			if (!unicode.IsLetter(rune) && !unicode.IsDigit(rune) && !((rune === 95))) {
				break;
			}
			i = i + (size) >> 0;
		}
		if (i === 0) {
			return [name, num, rest, ok];
		}
		name = str.substring(0, i);
		if (brace) {
			if (i >= str.length || !((str.charCodeAt(i) === 125))) {
				return [name, num, rest, ok];
			}
			i = i + (1) >> 0;
		}
		num = 0;
		i$1 = 0;
		while (i$1 < name.length) {
			if (name.charCodeAt(i$1) < 48 || 57 < name.charCodeAt(i$1) || num >= 100000000) {
				num = -1;
				break;
			}
			num = ((num * 10 >> 0) + (name.charCodeAt(i$1) >> 0) >> 0) - 48 >> 0;
			i$1 = i$1 + (1) >> 0;
		}
		if ((name.charCodeAt(0) === 48) && name.length > 1) {
			num = -1;
		}
		rest = str.substring(i);
		ok = true;
		return [name, num, rest, ok];
	};
	Regexp.ptr.prototype.FindSubmatchIndex = function(b) {
		var re;
		re = this;
		return re.pad(re.doExecute($ifaceNil, b, "", 0, re.prog.NumCap));
	};
	Regexp.prototype.FindSubmatchIndex = function(b) { return this.$val.FindSubmatchIndex(b); };
	Regexp.ptr.prototype.FindStringSubmatch = function(s) {
		var _i, _ref, a, i, re, ret, x, x$1, x$2;
		re = this;
		a = re.doExecute($ifaceNil, sliceType$3.nil, s, 0, re.prog.NumCap);
		if (a === sliceType.nil) {
			return sliceType$9.nil;
		}
		ret = $makeSlice(sliceType$9, (1 + re.numSubexp >> 0));
		_ref = ret;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			if ((2 * i >> 0) < a.$length && (x = 2 * i >> 0, ((x < 0 || x >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x])) >= 0) {
				(i < 0 || i >= ret.$length) ? $throwRuntimeError("index out of range") : ret.$array[ret.$offset + i] = s.substring((x$1 = 2 * i >> 0, ((x$1 < 0 || x$1 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x$1])), (x$2 = (2 * i >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= a.$length) ? $throwRuntimeError("index out of range") : a.$array[a.$offset + x$2])));
			}
			_i++;
		}
		return ret;
	};
	Regexp.prototype.FindStringSubmatch = function(s) { return this.$val.FindStringSubmatch(s); };
	Regexp.ptr.prototype.FindStringSubmatchIndex = function(s) {
		var re;
		re = this;
		return re.pad(re.doExecute($ifaceNil, sliceType$3.nil, s, 0, re.prog.NumCap));
	};
	Regexp.prototype.FindStringSubmatchIndex = function(s) { return this.$val.FindStringSubmatchIndex(s); };
	Regexp.ptr.prototype.FindReaderSubmatchIndex = function(r) {
		var re;
		re = this;
		return re.pad(re.doExecute(r, sliceType$3.nil, "", 0, re.prog.NumCap));
	};
	Regexp.prototype.FindReaderSubmatchIndex = function(r) { return this.$val.FindReaderSubmatchIndex(r); };
	Regexp.ptr.prototype.FindAll = function(b, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = b.$length + 1 >> 0;
		}
		result = $makeSlice(sliceType$11, 0, 10);
		re.allMatches("", b, n, (function(match) {
			result = $append(result, $subslice(b, ((0 < 0 || 0 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 0]), ((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1])));
		}));
		if (result.$length === 0) {
			return sliceType$11.nil;
		}
		return result;
	};
	Regexp.prototype.FindAll = function(b, n) { return this.$val.FindAll(b, n); };
	Regexp.ptr.prototype.FindAllIndex = function(b, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = b.$length + 1 >> 0;
		}
		result = $makeSlice(sliceType$12, 0, 10);
		re.allMatches("", b, n, (function(match) {
			result = $append(result, $subslice(match, 0, 2));
		}));
		if (result.$length === 0) {
			return sliceType$12.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllIndex = function(b, n) { return this.$val.FindAllIndex(b, n); };
	Regexp.ptr.prototype.FindAllString = function(s, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = s.length + 1 >> 0;
		}
		result = $makeSlice(sliceType$9, 0, 10);
		re.allMatches(s, sliceType$3.nil, n, (function(match) {
			result = $append(result, s.substring(((0 < 0 || 0 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 0]), ((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1])));
		}));
		if (result.$length === 0) {
			return sliceType$9.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllString = function(s, n) { return this.$val.FindAllString(s, n); };
	Regexp.ptr.prototype.FindAllStringIndex = function(s, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = s.length + 1 >> 0;
		}
		result = $makeSlice(sliceType$12, 0, 10);
		re.allMatches(s, sliceType$3.nil, n, (function(match) {
			result = $append(result, $subslice(match, 0, 2));
		}));
		if (result.$length === 0) {
			return sliceType$12.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllStringIndex = function(s, n) { return this.$val.FindAllStringIndex(s, n); };
	Regexp.ptr.prototype.FindAllSubmatch = function(b, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = b.$length + 1 >> 0;
		}
		result = $makeSlice(sliceType$13, 0, 10);
		re.allMatches("", b, n, (function(match) {
			var _i, _q, _ref, j, slice, x, x$1, x$2;
			slice = $makeSlice(sliceType$11, (_q = match.$length / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")));
			_ref = slice;
			_i = 0;
			while (_i < _ref.$length) {
				j = _i;
				if ((x = 2 * j >> 0, ((x < 0 || x >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x])) >= 0) {
					(j < 0 || j >= slice.$length) ? $throwRuntimeError("index out of range") : slice.$array[slice.$offset + j] = $subslice(b, (x$1 = 2 * j >> 0, ((x$1 < 0 || x$1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$1])), (x$2 = (2 * j >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$2])));
				}
				_i++;
			}
			result = $append(result, slice);
		}));
		if (result.$length === 0) {
			return sliceType$13.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllSubmatch = function(b, n) { return this.$val.FindAllSubmatch(b, n); };
	Regexp.ptr.prototype.FindAllSubmatchIndex = function(b, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = b.$length + 1 >> 0;
		}
		result = $makeSlice(sliceType$12, 0, 10);
		re.allMatches("", b, n, (function(match) {
			result = $append(result, match);
		}));
		if (result.$length === 0) {
			return sliceType$12.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllSubmatchIndex = function(b, n) { return this.$val.FindAllSubmatchIndex(b, n); };
	Regexp.ptr.prototype.FindAllStringSubmatch = function(s, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = s.length + 1 >> 0;
		}
		result = $makeSlice(sliceType$14, 0, 10);
		re.allMatches(s, sliceType$3.nil, n, (function(match) {
			var _i, _q, _ref, j, slice, x, x$1, x$2;
			slice = $makeSlice(sliceType$9, (_q = match.$length / 2, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero")));
			_ref = slice;
			_i = 0;
			while (_i < _ref.$length) {
				j = _i;
				if ((x = 2 * j >> 0, ((x < 0 || x >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x])) >= 0) {
					(j < 0 || j >= slice.$length) ? $throwRuntimeError("index out of range") : slice.$array[slice.$offset + j] = s.substring((x$1 = 2 * j >> 0, ((x$1 < 0 || x$1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$1])), (x$2 = (2 * j >> 0) + 1 >> 0, ((x$2 < 0 || x$2 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + x$2])));
				}
				_i++;
			}
			result = $append(result, slice);
		}));
		if (result.$length === 0) {
			return sliceType$14.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllStringSubmatch = function(s, n) { return this.$val.FindAllStringSubmatch(s, n); };
	Regexp.ptr.prototype.FindAllStringSubmatchIndex = function(s, n) {
		var re, result;
		re = this;
		if (n < 0) {
			n = s.length + 1 >> 0;
		}
		result = $makeSlice(sliceType$12, 0, 10);
		re.allMatches(s, sliceType$3.nil, n, (function(match) {
			result = $append(result, match);
		}));
		if (result.$length === 0) {
			return sliceType$12.nil;
		}
		return result;
	};
	Regexp.prototype.FindAllStringSubmatchIndex = function(s, n) { return this.$val.FindAllStringSubmatchIndex(s, n); };
	Regexp.ptr.prototype.Split = function(s, n) {
		var _i, _ref, beg, end, match, matches, re, strings$1;
		re = this;
		if (n === 0) {
			return sliceType$9.nil;
		}
		if (re.expr.length > 0 && (s.length === 0)) {
			return new sliceType$9([""]);
		}
		matches = re.FindAllStringIndex(s, n);
		strings$1 = $makeSlice(sliceType$9, 0, matches.$length);
		beg = 0;
		end = 0;
		_ref = matches;
		_i = 0;
		while (_i < _ref.$length) {
			match = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (n > 0 && strings$1.$length >= (n - 1 >> 0)) {
				break;
			}
			end = ((0 < 0 || 0 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 0]);
			if (!((((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1]) === 0))) {
				strings$1 = $append(strings$1, s.substring(beg, end));
			}
			beg = ((1 < 0 || 1 >= match.$length) ? $throwRuntimeError("index out of range") : match.$array[match.$offset + 1]);
			_i++;
		}
		if (!((end === s.length))) {
			strings$1 = $append(strings$1, s.substring(beg));
		}
		return strings$1;
	};
	Regexp.prototype.Split = function(s, n) { return this.$val.Split(s, n); };
	ptrType$8.methods = [{prop: "add", name: "add", pkg: "regexp", type: $funcType([ptrType$10, $Uint32, $Int, sliceType, syntax.EmptyOp, ptrType$3], [ptrType$3], false)}, {prop: "alloc", name: "alloc", pkg: "regexp", type: $funcType([ptrType$9], [ptrType$3], false)}, {prop: "clear", name: "clear", pkg: "regexp", type: $funcType([ptrType$10], [], false)}, {prop: "free", name: "free", pkg: "regexp", type: $funcType([ptrType$3], [], false)}, {prop: "init", name: "init", pkg: "regexp", type: $funcType([$Int], [], false)}, {prop: "match", name: "match", pkg: "regexp", type: $funcType([input, $Int], [$Bool], false)}, {prop: "newInputBytes", name: "newInputBytes", pkg: "regexp", type: $funcType([sliceType$3], [input], false)}, {prop: "newInputReader", name: "newInputReader", pkg: "regexp", type: $funcType([io.RuneReader], [input], false)}, {prop: "newInputString", name: "newInputString", pkg: "regexp", type: $funcType([$String], [input], false)}, {prop: "onepass", name: "onepass", pkg: "regexp", type: $funcType([input, $Int], [$Bool], false)}, {prop: "step", name: "step", pkg: "regexp", type: $funcType([ptrType$10, ptrType$10, $Int, $Int, $Int32, syntax.EmptyOp], [], false)}];
	ptrType$11.methods = [{prop: "MatchEmptyWidth", name: "MatchEmptyWidth", pkg: "", type: $funcType([$Int32, $Int32], [$Bool], false)}, {prop: "MatchRune", name: "MatchRune", pkg: "", type: $funcType([$Int32], [$Bool], false)}, {prop: "MatchRunePos", name: "MatchRunePos", pkg: "", type: $funcType([$Int32], [$Int], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "op", name: "op", pkg: "regexp/syntax", type: $funcType([], [syntax.InstOp], false)}];
	ptrType$5.methods = [{prop: "clear", name: "clear", pkg: "regexp", type: $funcType([], [], false)}, {prop: "contains", name: "contains", pkg: "regexp", type: $funcType([$Uint32], [$Bool], false)}, {prop: "empty", name: "empty", pkg: "regexp", type: $funcType([], [$Bool], false)}, {prop: "insert", name: "insert", pkg: "regexp", type: $funcType([$Uint32], [], false)}, {prop: "insertNew", name: "insertNew", pkg: "regexp", type: $funcType([$Uint32], [], false)}, {prop: "next", name: "next", pkg: "regexp", type: $funcType([], [$Uint32], false)}, {prop: "reset", name: "reset", pkg: "regexp", type: $funcType([], [], false)}];
	runeSlice.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Sort", name: "Sort", pkg: "", type: $funcType([], [], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$12.methods = [{prop: "Len", name: "Len", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Less", name: "Less", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Sort", name: "Sort", pkg: "", type: $funcType([], [], false)}, {prop: "Swap", name: "Swap", pkg: "", type: $funcType([$Int, $Int], [], false)}];
	ptrType$1.methods = [{prop: "Expand", name: "Expand", pkg: "", type: $funcType([sliceType$3, sliceType$3, sliceType$3, sliceType], [sliceType$3], false)}, {prop: "ExpandString", name: "ExpandString", pkg: "", type: $funcType([sliceType$3, $String, $String, sliceType], [sliceType$3], false)}, {prop: "Find", name: "Find", pkg: "", type: $funcType([sliceType$3], [sliceType$3], false)}, {prop: "FindAll", name: "FindAll", pkg: "", type: $funcType([sliceType$3, $Int], [sliceType$11], false)}, {prop: "FindAllIndex", name: "FindAllIndex", pkg: "", type: $funcType([sliceType$3, $Int], [sliceType$12], false)}, {prop: "FindAllString", name: "FindAllString", pkg: "", type: $funcType([$String, $Int], [sliceType$9], false)}, {prop: "FindAllStringIndex", name: "FindAllStringIndex", pkg: "", type: $funcType([$String, $Int], [sliceType$12], false)}, {prop: "FindAllStringSubmatch", name: "FindAllStringSubmatch", pkg: "", type: $funcType([$String, $Int], [sliceType$14], false)}, {prop: "FindAllStringSubmatchIndex", name: "FindAllStringSubmatchIndex", pkg: "", type: $funcType([$String, $Int], [sliceType$12], false)}, {prop: "FindAllSubmatch", name: "FindAllSubmatch", pkg: "", type: $funcType([sliceType$3, $Int], [sliceType$13], false)}, {prop: "FindAllSubmatchIndex", name: "FindAllSubmatchIndex", pkg: "", type: $funcType([sliceType$3, $Int], [sliceType$12], false)}, {prop: "FindIndex", name: "FindIndex", pkg: "", type: $funcType([sliceType$3], [sliceType], false)}, {prop: "FindReaderIndex", name: "FindReaderIndex", pkg: "", type: $funcType([io.RuneReader], [sliceType], false)}, {prop: "FindReaderSubmatchIndex", name: "FindReaderSubmatchIndex", pkg: "", type: $funcType([io.RuneReader], [sliceType], false)}, {prop: "FindString", name: "FindString", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "FindStringIndex", name: "FindStringIndex", pkg: "", type: $funcType([$String], [sliceType], false)}, {prop: "FindStringSubmatch", name: "FindStringSubmatch", pkg: "", type: $funcType([$String], [sliceType$9], false)}, {prop: "FindStringSubmatchIndex", name: "FindStringSubmatchIndex", pkg: "", type: $funcType([$String], [sliceType], false)}, {prop: "FindSubmatch", name: "FindSubmatch", pkg: "", type: $funcType([sliceType$3], [sliceType$11], false)}, {prop: "FindSubmatchIndex", name: "FindSubmatchIndex", pkg: "", type: $funcType([sliceType$3], [sliceType], false)}, {prop: "LiteralPrefix", name: "LiteralPrefix", pkg: "", type: $funcType([], [$String, $Bool], false)}, {prop: "Longest", name: "Longest", pkg: "", type: $funcType([], [], false)}, {prop: "Match", name: "Match", pkg: "", type: $funcType([sliceType$3], [$Bool], false)}, {prop: "MatchReader", name: "MatchReader", pkg: "", type: $funcType([io.RuneReader], [$Bool], false)}, {prop: "MatchString", name: "MatchString", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "NumSubexp", name: "NumSubexp", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ReplaceAll", name: "ReplaceAll", pkg: "", type: $funcType([sliceType$3, sliceType$3], [sliceType$3], false)}, {prop: "ReplaceAllFunc", name: "ReplaceAllFunc", pkg: "", type: $funcType([sliceType$3, funcType], [sliceType$3], false)}, {prop: "ReplaceAllLiteral", name: "ReplaceAllLiteral", pkg: "", type: $funcType([sliceType$3, sliceType$3], [sliceType$3], false)}, {prop: "ReplaceAllLiteralString", name: "ReplaceAllLiteralString", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "ReplaceAllString", name: "ReplaceAllString", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "ReplaceAllStringFunc", name: "ReplaceAllStringFunc", pkg: "", type: $funcType([$String, funcType$1], [$String], false)}, {prop: "Split", name: "Split", pkg: "", type: $funcType([$String, $Int], [sliceType$9], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "SubexpNames", name: "SubexpNames", pkg: "", type: $funcType([], [sliceType$9], false)}, {prop: "allMatches", name: "allMatches", pkg: "regexp", type: $funcType([$String, sliceType$3, $Int, funcType$2], [], false)}, {prop: "doExecute", name: "doExecute", pkg: "regexp", type: $funcType([io.RuneReader, sliceType$3, $String, $Int, $Int], [sliceType], false)}, {prop: "expand", name: "expand", pkg: "regexp", type: $funcType([sliceType$3, $String, sliceType$3, $String, sliceType], [sliceType$3], false)}, {prop: "get", name: "get", pkg: "regexp", type: $funcType([], [ptrType$8], false)}, {prop: "pad", name: "pad", pkg: "regexp", type: $funcType([sliceType], [sliceType], false)}, {prop: "put", name: "put", pkg: "regexp", type: $funcType([ptrType$8], [], false)}, {prop: "replaceAll", name: "replaceAll", pkg: "regexp", type: $funcType([sliceType$3, $String, $Int, funcType$3], [sliceType$3], false)}];
	ptrType$13.methods = [{prop: "canCheckPrefix", name: "canCheckPrefix", pkg: "regexp", type: $funcType([], [$Bool], false)}, {prop: "context", name: "context", pkg: "regexp", type: $funcType([$Int], [syntax.EmptyOp], false)}, {prop: "hasPrefix", name: "hasPrefix", pkg: "regexp", type: $funcType([ptrType$1], [$Bool], false)}, {prop: "index", name: "index", pkg: "regexp", type: $funcType([ptrType$1, $Int], [$Int], false)}, {prop: "step", name: "step", pkg: "regexp", type: $funcType([$Int], [$Int32, $Int], false)}];
	ptrType$14.methods = [{prop: "canCheckPrefix", name: "canCheckPrefix", pkg: "regexp", type: $funcType([], [$Bool], false)}, {prop: "context", name: "context", pkg: "regexp", type: $funcType([$Int], [syntax.EmptyOp], false)}, {prop: "hasPrefix", name: "hasPrefix", pkg: "regexp", type: $funcType([ptrType$1], [$Bool], false)}, {prop: "index", name: "index", pkg: "regexp", type: $funcType([ptrType$1, $Int], [$Int], false)}, {prop: "step", name: "step", pkg: "regexp", type: $funcType([$Int], [$Int32, $Int], false)}];
	ptrType$15.methods = [{prop: "canCheckPrefix", name: "canCheckPrefix", pkg: "regexp", type: $funcType([], [$Bool], false)}, {prop: "context", name: "context", pkg: "regexp", type: $funcType([$Int], [syntax.EmptyOp], false)}, {prop: "hasPrefix", name: "hasPrefix", pkg: "regexp", type: $funcType([ptrType$1], [$Bool], false)}, {prop: "index", name: "index", pkg: "regexp", type: $funcType([ptrType$1, $Int], [$Int], false)}, {prop: "step", name: "step", pkg: "regexp", type: $funcType([$Int], [$Int32, $Int], false)}];
	queue.init([{prop: "sparse", name: "sparse", pkg: "regexp", type: sliceType$2, tag: ""}, {prop: "dense", name: "dense", pkg: "regexp", type: sliceType$6, tag: ""}]);
	entry.init([{prop: "pc", name: "pc", pkg: "regexp", type: $Uint32, tag: ""}, {prop: "t", name: "t", pkg: "regexp", type: ptrType$3, tag: ""}]);
	thread.init([{prop: "inst", name: "inst", pkg: "regexp", type: ptrType$9, tag: ""}, {prop: "cap", name: "cap", pkg: "regexp", type: sliceType, tag: ""}]);
	machine.init([{prop: "re", name: "re", pkg: "regexp", type: ptrType$1, tag: ""}, {prop: "p", name: "p", pkg: "regexp", type: ptrType$2, tag: ""}, {prop: "op", name: "op", pkg: "regexp", type: ptrType, tag: ""}, {prop: "q0", name: "q0", pkg: "regexp", type: queue, tag: ""}, {prop: "q1", name: "q1", pkg: "regexp", type: queue, tag: ""}, {prop: "pool", name: "pool", pkg: "regexp", type: sliceType$5, tag: ""}, {prop: "matched", name: "matched", pkg: "regexp", type: $Bool, tag: ""}, {prop: "matchcap", name: "matchcap", pkg: "regexp", type: sliceType, tag: ""}, {prop: "inputBytes", name: "inputBytes", pkg: "regexp", type: inputBytes, tag: ""}, {prop: "inputString", name: "inputString", pkg: "regexp", type: inputString, tag: ""}, {prop: "inputReader", name: "inputReader", pkg: "regexp", type: inputReader, tag: ""}]);
	onePassProg.init([{prop: "Inst", name: "Inst", pkg: "", type: sliceType$7, tag: ""}, {prop: "Start", name: "Start", pkg: "", type: $Int, tag: ""}, {prop: "NumCap", name: "NumCap", pkg: "", type: $Int, tag: ""}]);
	onePassInst.init([{prop: "Inst", name: "", pkg: "", type: syntax.Inst, tag: ""}, {prop: "Next", name: "Next", pkg: "", type: sliceType$2, tag: ""}]);
	queueOnePass.init([{prop: "sparse", name: "sparse", pkg: "regexp", type: sliceType$2, tag: ""}, {prop: "dense", name: "dense", pkg: "regexp", type: sliceType$2, tag: ""}, {prop: "size", name: "size", pkg: "regexp", type: $Uint32, tag: ""}, {prop: "nextIndex", name: "nextIndex", pkg: "regexp", type: $Uint32, tag: ""}]);
	runeSlice.init($Int32);
	Regexp.init([{prop: "expr", name: "expr", pkg: "regexp", type: $String, tag: ""}, {prop: "prog", name: "prog", pkg: "regexp", type: ptrType$2, tag: ""}, {prop: "onepass", name: "onepass", pkg: "regexp", type: ptrType, tag: ""}, {prop: "prefix", name: "prefix", pkg: "regexp", type: $String, tag: ""}, {prop: "prefixBytes", name: "prefixBytes", pkg: "regexp", type: sliceType$3, tag: ""}, {prop: "prefixComplete", name: "prefixComplete", pkg: "regexp", type: $Bool, tag: ""}, {prop: "prefixRune", name: "prefixRune", pkg: "regexp", type: $Int32, tag: ""}, {prop: "prefixEnd", name: "prefixEnd", pkg: "regexp", type: $Uint32, tag: ""}, {prop: "cond", name: "cond", pkg: "regexp", type: syntax.EmptyOp, tag: ""}, {prop: "numSubexp", name: "numSubexp", pkg: "regexp", type: $Int, tag: ""}, {prop: "subexpNames", name: "subexpNames", pkg: "regexp", type: sliceType$9, tag: ""}, {prop: "longest", name: "longest", pkg: "regexp", type: $Bool, tag: ""}, {prop: "mu", name: "mu", pkg: "regexp", type: sync.Mutex, tag: ""}, {prop: "machine", name: "machine", pkg: "regexp", type: sliceType$10, tag: ""}]);
	input.init([{prop: "canCheckPrefix", name: "canCheckPrefix", pkg: "regexp", type: $funcType([], [$Bool], false)}, {prop: "context", name: "context", pkg: "regexp", type: $funcType([$Int], [syntax.EmptyOp], false)}, {prop: "hasPrefix", name: "hasPrefix", pkg: "regexp", type: $funcType([ptrType$1], [$Bool], false)}, {prop: "index", name: "index", pkg: "regexp", type: $funcType([ptrType$1, $Int], [$Int], false)}, {prop: "step", name: "step", pkg: "regexp", type: $funcType([$Int], [$Int32, $Int], false)}]);
	inputString.init([{prop: "str", name: "str", pkg: "regexp", type: $String, tag: ""}]);
	inputBytes.init([{prop: "str", name: "str", pkg: "regexp", type: sliceType$3, tag: ""}]);
	inputReader.init([{prop: "r", name: "r", pkg: "regexp", type: io.RuneReader, tag: ""}, {prop: "atEOT", name: "atEOT", pkg: "regexp", type: $Bool, tag: ""}, {prop: "pos", name: "pos", pkg: "regexp", type: $Int, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_regexp = function() { while (true) { switch ($s) { case 0:
		$r = bytes.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = io.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = syntax.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = sort.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = sync.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = testing.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		$r = unicode.$init($BLOCKING); /* */ $s = 9; case 9: if ($r && $r.$blocking) { $r = $r(); }
		$r = utf8.$init($BLOCKING); /* */ $s = 10; case 10: if ($r && $r.$blocking) { $r = $r(); }
		empty = $makeSlice(sliceType, 0);
		noRune = new sliceType$1([]);
		noNext = new sliceType$2([4294967295]);
		anyRuneNotNL = new sliceType$1([0, 9, 11, 1114111]);
		anyRune = new sliceType$1([0, 1114111]);
		notOnePass = ptrType.nil;
		/* */ } return; } }; $init_regexp.$blocking = true; return $init_regexp;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/humble/router"] = (function() {
	var $pkg = {}, js, console, regexp, strings, time, Router, Handler, route, ptrType, sliceType, ptrType$1, sliceType$1, sliceType$2, funcType, ptrType$2, mapType, New, newRoute, removeEmptyStrings, getHash, setHash;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	console = $packages["honnef.co/go/js/console"];
	regexp = $packages["regexp"];
	strings = $packages["strings"];
	time = $packages["time"];
	Router = $pkg.Router = $newType(0, $kindStruct, "router.Router", "Router", "github.com/fabioberger/humble/router", function(routes_) {
		this.$val = this;
		this.routes = routes_ !== undefined ? routes_ : sliceType.nil;
	});
	Handler = $pkg.Handler = $newType(4, $kindFunc, "router.Handler", "Handler", "github.com/fabioberger/humble/router", null);
	route = $pkg.route = $newType(0, $kindStruct, "router.route", "route", "github.com/fabioberger/humble/router", function(regex_, paramNames_, handler_) {
		this.$val = this;
		this.regex = regex_ !== undefined ? regex_ : ptrType$1.nil;
		this.paramNames = paramNames_ !== undefined ? paramNames_ : sliceType$1.nil;
		this.handler = handler_ !== undefined ? handler_ : $throwNilPointerError;
	});
		ptrType = $ptrType(route);
		sliceType = $sliceType(ptrType);
		ptrType$1 = $ptrType(regexp.Regexp);
		sliceType$1 = $sliceType($String);
		sliceType$2 = $sliceType($emptyInterface);
		funcType = $funcType([], [], false);
		ptrType$2 = $ptrType(Router);
		mapType = $mapType($String, $String);
	New = $pkg.New = function() {
		return new Router.ptr(new sliceType([]));
	};
	Router.ptr.prototype.HandleFunc = function(path, handler) {
		var r;
		r = this;
		r.routes = $append(r.routes, newRoute(path, handler));
	};
	Router.prototype.HandleFunc = function(path, handler) { return this.$val.HandleFunc(path, handler); };
	newRoute = function(path, handler) {
		var _i, _ref, pattern, route$1, str, strs;
		route$1 = new route.ptr(ptrType$1.nil, sliceType$1.nil, handler);
		strs = strings.Split(path, "/");
		strs = removeEmptyStrings(strs);
		pattern = "^";
		_ref = strs;
		_i = 0;
		while (_i < _ref.$length) {
			str = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if ((str.charCodeAt(0) === 123) && (str.charCodeAt((str.length - 1 >> 0)) === 125)) {
				pattern = pattern + ("/");
				pattern = pattern + ("([\\w+-]*)");
				route$1.paramNames = $append(route$1.paramNames, str.substring(1, ((str.length - 1 >> 0))));
			} else {
				pattern = pattern + ("/");
				pattern = pattern + (str);
			}
			_i++;
		}
		pattern = pattern + ("/?$");
		route$1.regex = regexp.MustCompile(pattern);
		return route$1;
	};
	Router.ptr.prototype.Start = function($b) {
		var $args = arguments, $r, $s = 0, $this = this, r;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_Start = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		$r = r.setInitialHash($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		r.watchHash();
		/* */ case -1: } return; } }; $blocking_Start.$blocking = true; return $blocking_Start;
	};
	Router.prototype.Start = function($b) { return this.$val.Start($b); };
	Router.ptr.prototype.setInitialHash = function($b) {
		var $args = arguments, $r, $s = 0, $this = this, hash, r;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_setInitialHash = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		hash = getHash();
		/* if (hash === "") { */ if (hash === "") {} else { $s = 1; continue; }
			setHash("/");
		/* } else { */ $s = 2; continue; case 1: 
			$r = r.hashChanged(hash, $BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		/* } */ case 2:
		/* */ case -1: } return; } }; $blocking_setInitialHash.$blocking = true; return $blocking_setInitialHash;
	};
	Router.prototype.setInitialHash = function($b) { return this.$val.setInitialHash($b); };
	Router.ptr.prototype.hashChanged = function(hash, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _i, _i$1, _key, _key$1, _map, _ref, _ref$1, bestMatches, bestRoute, i, leastParams, match, matches, params, path, r, route$1, strs, x, x$1;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_hashChanged = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		path = (x = strings.SplitN(hash, "#", 2), ((1 < 0 || 1 >= x.$length) ? $throwRuntimeError("index out of range") : x.$array[x.$offset + 1]));
		strs = strings.Split(path, "/");
		strs = removeEmptyStrings(strs);
		leastParams = -1;
		bestRoute = ptrType.nil;
		bestMatches = sliceType$1.nil;
		_ref = r.routes;
		_i = 0;
		while (_i < _ref.$length) {
			route$1 = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			matches = route$1.regex.FindStringSubmatch(path);
			if (!(matches === sliceType$1.nil)) {
				if (((leastParams === -1)) || (matches.$length < leastParams)) {
					leastParams = matches.$length;
					bestRoute = route$1;
					bestMatches = $subslice(matches, 1);
				}
			}
			_i++;
		}
		if (bestRoute === ptrType.nil) {
			console.Error(new sliceType$2([new $String("Could not find route to match: " + path)]));
			return;
		}
		params = (_map = new $Map(), _map);
		_ref$1 = bestMatches;
		_i$1 = 0;
		while (_i$1 < _ref$1.$length) {
			i = _i$1;
			match = ((_i$1 < 0 || _i$1 >= _ref$1.$length) ? $throwRuntimeError("index out of range") : _ref$1.$array[_ref$1.$offset + _i$1]);
			_key$1 = (x$1 = bestRoute.paramNames, ((i < 0 || i >= x$1.$length) ? $throwRuntimeError("index out of range") : x$1.$array[x$1.$offset + i])); (params || $throwRuntimeError("assignment to entry in nil map"))[_key$1] = { k: _key$1, v: match };
			_i$1++;
		}
		$r = bestRoute.handler(params, $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		/* */ case -1: } return; } }; $blocking_hashChanged.$blocking = true; return $blocking_hashChanged;
	};
	Router.prototype.hashChanged = function(hash, $b) { return this.$val.hashChanged(hash, $b); };
	removeEmptyStrings = function(a) {
		var _i, _ref, i, s;
		_ref = a;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			s = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (s === "") {
				a = $appendSlice($subslice(a, 0, i), $subslice(a, (i + 1 >> 0)));
			}
			_i++;
		}
		return a;
	};
	Router.ptr.prototype.watchHash = function() {
		var r;
		r = this;
		if (!($global.onhashchange === undefined)) {
			$global.onhashchange = $externalize((function() {
				$go((function($b) {
					var $args = arguments, $r, $s = 0, $this = this;
					/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
					$r = r.hashChanged(getHash(), $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
					/* */ case -1: } return; } }; $f.$blocking = true; return $f;
				}), []);
			}), funcType);
		} else {
			console.Warn(new sliceType$2([new $String("onhashchange is not supported. Humble is falling back to a legacy version.")]));
			r.legacyWatchHash();
		}
	};
	Router.prototype.watchHash = function() { return this.$val.watchHash(); };
	Router.ptr.prototype.legacyWatchHash = function() {
		var r, t;
		r = this;
		t = time.NewTicker(new time.Duration(0, 50000000));
		$go((function($b) {
			var $args = arguments, $r, $s = 0, $this = this, _r, hash, newHash;
			/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
			hash = getHash();
			/* while (true) { */ case 1: if(!(true)) { $s = 2; continue; }
				_r = $recv(t.C, $BLOCKING); /* */ $s = 3; case 3: if (_r && _r.$blocking) { _r = _r(); }
				_r[0];
				newHash = getHash();
				/* if (!(hash === newHash)) { */ if (!(hash === newHash)) {} else { $s = 4; continue; }
					hash = newHash;
					$r = r.hashChanged(hash, $BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
				/* } */ case 4:
			/* } */ $s = 1; continue; case 2:
			/* */ case -1: } return; } }; $f.$blocking = true; return $f;
		}), []);
	};
	Router.prototype.legacyWatchHash = function() { return this.$val.legacyWatchHash(); };
	getHash = function() {
		return $internalize($global.location.hash, $String);
	};
	setHash = function(hash) {
		$global.location.hash = $externalize(hash, $String);
	};
	ptrType$2.methods = [{prop: "HandleFunc", name: "HandleFunc", pkg: "", type: $funcType([$String, Handler], [], false)}, {prop: "Start", name: "Start", pkg: "", type: $funcType([], [], false)}, {prop: "hashChanged", name: "hashChanged", pkg: "github.com/fabioberger/humble/router", type: $funcType([$String], [], false)}, {prop: "legacyWatchHash", name: "legacyWatchHash", pkg: "github.com/fabioberger/humble/router", type: $funcType([], [], false)}, {prop: "setInitialHash", name: "setInitialHash", pkg: "github.com/fabioberger/humble/router", type: $funcType([], [], false)}, {prop: "watchHash", name: "watchHash", pkg: "github.com/fabioberger/humble/router", type: $funcType([], [], false)}];
	Router.init([{prop: "routes", name: "routes", pkg: "github.com/fabioberger/humble/router", type: sliceType, tag: ""}]);
	Handler.init([mapType], [], false);
	route.init([{prop: "regex", name: "regex", pkg: "github.com/fabioberger/humble/router", type: ptrType$1, tag: ""}, {prop: "paramNames", name: "paramNames", pkg: "github.com/fabioberger/humble/router", type: sliceType$1, tag: ""}, {prop: "handler", name: "handler", pkg: "github.com/fabioberger/humble/router", type: Handler, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_router = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = console.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = regexp.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_router.$blocking = true; return $init_router;
	};
	return $pkg;
})();
$packages["math/rand"] = (function() {
	var $pkg = {}, nosync, math, Source, Rand, lockedSource, rngSource, sliceType, ptrType$1, ptrType$2, arrayType, ptrType$3, ke, we, fe, kn, wn, fn, globalRand, rng_cooked, absInt32, NewSource, New, Seed, Intn, seedrand;
	nosync = $packages["github.com/gopherjs/gopherjs/nosync"];
	math = $packages["math"];
	Source = $pkg.Source = $newType(8, $kindInterface, "rand.Source", "Source", "math/rand", null);
	Rand = $pkg.Rand = $newType(0, $kindStruct, "rand.Rand", "Rand", "math/rand", function(src_) {
		this.$val = this;
		this.src = src_ !== undefined ? src_ : $ifaceNil;
	});
	lockedSource = $pkg.lockedSource = $newType(0, $kindStruct, "rand.lockedSource", "lockedSource", "math/rand", function(lk_, src_) {
		this.$val = this;
		this.lk = lk_ !== undefined ? lk_ : new nosync.Mutex.ptr();
		this.src = src_ !== undefined ? src_ : $ifaceNil;
	});
	rngSource = $pkg.rngSource = $newType(0, $kindStruct, "rand.rngSource", "rngSource", "math/rand", function(tap_, feed_, vec_) {
		this.$val = this;
		this.tap = tap_ !== undefined ? tap_ : 0;
		this.feed = feed_ !== undefined ? feed_ : 0;
		this.vec = vec_ !== undefined ? vec_ : arrayType.zero();
	});
		sliceType = $sliceType($Int);
		ptrType$1 = $ptrType(Rand);
		ptrType$2 = $ptrType(lockedSource);
		arrayType = $arrayType($Int64, 607);
		ptrType$3 = $ptrType(rngSource);
	Rand.ptr.prototype.ExpFloat64 = function() {
		var i, j, r, x, x$1;
		r = this;
		while (true) {
			j = r.Uint32();
			i = (j & 255) >>> 0;
			x = j * $coerceFloat32(((i < 0 || i >= we.length) ? $throwRuntimeError("index out of range") : we[i]));
			if (j < ((i < 0 || i >= ke.length) ? $throwRuntimeError("index out of range") : ke[i])) {
				return x;
			}
			if (i === 0) {
				return 7.69711747013105 - math.Log(r.Float64());
			}
			if (((i < 0 || i >= fe.length) ? $throwRuntimeError("index out of range") : fe[i]) + r.Float64() * ((x$1 = i - 1 >>> 0, ((x$1 < 0 || x$1 >= fe.length) ? $throwRuntimeError("index out of range") : fe[x$1])) - ((i < 0 || i >= fe.length) ? $throwRuntimeError("index out of range") : fe[i])) < math.Exp(-x)) {
				return x;
			}
		}
	};
	Rand.prototype.ExpFloat64 = function() { return this.$val.ExpFloat64(); };
	absInt32 = function(i) {
		if (i < 0) {
			return (-i >>> 0);
		}
		return (i >>> 0);
	};
	Rand.ptr.prototype.NormFloat64 = function() {
		var i, j, r, x, x$1, y;
		r = this;
		while (true) {
			j = (r.Uint32() >> 0);
			i = j & 127;
			x = j * $coerceFloat32(((i < 0 || i >= wn.length) ? $throwRuntimeError("index out of range") : wn[i]));
			if (absInt32(j) < ((i < 0 || i >= kn.length) ? $throwRuntimeError("index out of range") : kn[i])) {
				return x;
			}
			if (i === 0) {
				while (true) {
					x = -math.Log(r.Float64()) * 0.29047645161474317;
					y = -math.Log(r.Float64());
					if (y + y >= x * x) {
						break;
					}
				}
				if (j > 0) {
					return 3.442619855899 + x;
				}
				return -3.442619855899 - x;
			}
			if (((i < 0 || i >= fn.length) ? $throwRuntimeError("index out of range") : fn[i]) + r.Float64() * ((x$1 = i - 1 >> 0, ((x$1 < 0 || x$1 >= fn.length) ? $throwRuntimeError("index out of range") : fn[x$1])) - ((i < 0 || i >= fn.length) ? $throwRuntimeError("index out of range") : fn[i])) < math.Exp(-0.5 * x * x)) {
				return x;
			}
		}
	};
	Rand.prototype.NormFloat64 = function() { return this.$val.NormFloat64(); };
	NewSource = $pkg.NewSource = function(seed) {
		var rng;
		rng = $clone(new rngSource.ptr(), rngSource);
		rng.Seed(seed);
		return rng;
	};
	New = $pkg.New = function(src) {
		return new Rand.ptr(src);
	};
	Rand.ptr.prototype.Seed = function(seed) {
		var r;
		r = this;
		r.src.Seed(seed);
	};
	Rand.prototype.Seed = function(seed) { return this.$val.Seed(seed); };
	Rand.ptr.prototype.Int63 = function() {
		var r;
		r = this;
		return r.src.Int63();
	};
	Rand.prototype.Int63 = function() { return this.$val.Int63(); };
	Rand.ptr.prototype.Uint32 = function() {
		var r;
		r = this;
		return ($shiftRightInt64(r.Int63(), 31).$low >>> 0);
	};
	Rand.prototype.Uint32 = function() { return this.$val.Uint32(); };
	Rand.ptr.prototype.Int31 = function() {
		var r, x;
		r = this;
		return ((x = $shiftRightInt64(r.Int63(), 32), x.$low + ((x.$high >> 31) * 4294967296)) >> 0);
	};
	Rand.prototype.Int31 = function() { return this.$val.Int31(); };
	Rand.ptr.prototype.Int = function() {
		var r, u;
		r = this;
		u = (r.Int63().$low >>> 0);
		return (((u << 1 >>> 0) >>> 1 >>> 0) >> 0);
	};
	Rand.prototype.Int = function() { return this.$val.Int(); };
	Rand.ptr.prototype.Int63n = function(n) {
		var max, r, v, x, x$1, x$2, x$3, x$4, x$5;
		r = this;
		if ((n.$high < 0 || (n.$high === 0 && n.$low <= 0))) {
			$panic(new $String("invalid argument to Int63n"));
		}
		if ((x = (x$1 = new $Int64(n.$high - 0, n.$low - 1), new $Int64(n.$high & x$1.$high, (n.$low & x$1.$low) >>> 0)), (x.$high === 0 && x.$low === 0))) {
			return (x$2 = r.Int63(), x$3 = new $Int64(n.$high - 0, n.$low - 1), new $Int64(x$2.$high & x$3.$high, (x$2.$low & x$3.$low) >>> 0));
		}
		max = (x$4 = (x$5 = $div64(new $Uint64(2147483648, 0), new $Uint64(n.$high, n.$low), true), new $Uint64(2147483647 - x$5.$high, 4294967295 - x$5.$low)), new $Int64(x$4.$high, x$4.$low));
		v = r.Int63();
		while ((v.$high > max.$high || (v.$high === max.$high && v.$low > max.$low))) {
			v = r.Int63();
		}
		return $div64(v, n, true);
	};
	Rand.prototype.Int63n = function(n) { return this.$val.Int63n(n); };
	Rand.ptr.prototype.Int31n = function(n) {
		var _r, _r$1, max, r, v;
		r = this;
		if (n <= 0) {
			$panic(new $String("invalid argument to Int31n"));
		}
		if ((n & ((n - 1 >> 0))) === 0) {
			return r.Int31() & ((n - 1 >> 0));
		}
		max = ((2147483647 - (_r = 2147483648 % (n >>> 0), _r === _r ? _r : $throwRuntimeError("integer divide by zero")) >>> 0) >> 0);
		v = r.Int31();
		while (v > max) {
			v = r.Int31();
		}
		return (_r$1 = v % n, _r$1 === _r$1 ? _r$1 : $throwRuntimeError("integer divide by zero"));
	};
	Rand.prototype.Int31n = function(n) { return this.$val.Int31n(n); };
	Rand.ptr.prototype.Intn = function(n) {
		var r, x;
		r = this;
		if (n <= 0) {
			$panic(new $String("invalid argument to Intn"));
		}
		if (n <= 2147483647) {
			return (r.Int31n((n >> 0)) >> 0);
		}
		return ((x = r.Int63n(new $Int64(0, n)), x.$low + ((x.$high >> 31) * 4294967296)) >> 0);
	};
	Rand.prototype.Intn = function(n) { return this.$val.Intn(n); };
	Rand.ptr.prototype.Float64 = function() {
		var f, r;
		r = this;
		f = $flatten64(r.Int63()) / 9.223372036854776e+18;
		if (f === 1) {
			f = 0;
		}
		return f;
	};
	Rand.prototype.Float64 = function() { return this.$val.Float64(); };
	Rand.ptr.prototype.Float32 = function() {
		var f, r;
		r = this;
		f = r.Float64();
		if ($float32IsEqual(f, 1)) {
			f = 0;
		}
		return f;
	};
	Rand.prototype.Float32 = function() { return this.$val.Float32(); };
	Rand.ptr.prototype.Perm = function(n) {
		var i, j, m, r;
		r = this;
		m = $makeSlice(sliceType, n);
		i = 0;
		while (i < n) {
			j = r.Intn(i + 1 >> 0);
			(i < 0 || i >= m.$length) ? $throwRuntimeError("index out of range") : m.$array[m.$offset + i] = ((j < 0 || j >= m.$length) ? $throwRuntimeError("index out of range") : m.$array[m.$offset + j]);
			(j < 0 || j >= m.$length) ? $throwRuntimeError("index out of range") : m.$array[m.$offset + j] = i;
			i = i + (1) >> 0;
		}
		return m;
	};
	Rand.prototype.Perm = function(n) { return this.$val.Perm(n); };
	Seed = $pkg.Seed = function(seed) {
		globalRand.Seed(seed);
	};
	Intn = $pkg.Intn = function(n) {
		return globalRand.Intn(n);
	};
	lockedSource.ptr.prototype.Int63 = function() {
		var n = new $Int64(0, 0), r;
		r = this;
		r.lk.Lock();
		n = r.src.Int63();
		r.lk.Unlock();
		return n;
	};
	lockedSource.prototype.Int63 = function() { return this.$val.Int63(); };
	lockedSource.ptr.prototype.Seed = function(seed) {
		var r;
		r = this;
		r.lk.Lock();
		r.src.Seed(seed);
		r.lk.Unlock();
	};
	lockedSource.prototype.Seed = function(seed) { return this.$val.Seed(seed); };
	seedrand = function(x) {
		var _q, _r, hi, lo;
		hi = (_q = x / 44488, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		lo = (_r = x % 44488, _r === _r ? _r : $throwRuntimeError("integer divide by zero"));
		x = ((((48271 >>> 16 << 16) * lo >> 0) + (48271 << 16 >>> 16) * lo) >> 0) - ((((3399 >>> 16 << 16) * hi >> 0) + (3399 << 16 >>> 16) * hi) >> 0) >> 0;
		if (x < 0) {
			x = x + (2147483647) >> 0;
		}
		return x;
	};
	rngSource.ptr.prototype.Seed = function(seed) {
		var i, rng, u, x, x$1, x$2, x$3, x$4, x$5;
		rng = this;
		rng.tap = 0;
		rng.feed = 334;
		seed = $div64(seed, new $Int64(0, 2147483647), true);
		if ((seed.$high < 0 || (seed.$high === 0 && seed.$low < 0))) {
			seed = (x = new $Int64(0, 2147483647), new $Int64(seed.$high + x.$high, seed.$low + x.$low));
		}
		if ((seed.$high === 0 && seed.$low === 0)) {
			seed = new $Int64(0, 89482311);
		}
		x$1 = ((seed.$low + ((seed.$high >> 31) * 4294967296)) >> 0);
		i = -20;
		while (i < 607) {
			x$1 = seedrand(x$1);
			if (i >= 0) {
				u = new $Int64(0, 0);
				u = $shiftLeft64(new $Int64(0, x$1), 40);
				x$1 = seedrand(x$1);
				u = (x$2 = $shiftLeft64(new $Int64(0, x$1), 20), new $Int64(u.$high ^ x$2.$high, (u.$low ^ x$2.$low) >>> 0));
				x$1 = seedrand(x$1);
				u = (x$3 = new $Int64(0, x$1), new $Int64(u.$high ^ x$3.$high, (u.$low ^ x$3.$low) >>> 0));
				u = (x$4 = ((i < 0 || i >= rng_cooked.length) ? $throwRuntimeError("index out of range") : rng_cooked[i]), new $Int64(u.$high ^ x$4.$high, (u.$low ^ x$4.$low) >>> 0));
				(x$5 = rng.vec, (i < 0 || i >= x$5.length) ? $throwRuntimeError("index out of range") : x$5[i] = new $Int64(u.$high & 2147483647, (u.$low & 4294967295) >>> 0));
			}
			i = i + (1) >> 0;
		}
	};
	rngSource.prototype.Seed = function(seed) { return this.$val.Seed(seed); };
	rngSource.ptr.prototype.Int63 = function() {
		var rng, x, x$1, x$2, x$3, x$4, x$5, x$6, x$7, x$8, x$9;
		rng = this;
		rng.tap = rng.tap - (1) >> 0;
		if (rng.tap < 0) {
			rng.tap = rng.tap + (607) >> 0;
		}
		rng.feed = rng.feed - (1) >> 0;
		if (rng.feed < 0) {
			rng.feed = rng.feed + (607) >> 0;
		}
		x$7 = (x = (x$1 = (x$2 = rng.vec, x$3 = rng.feed, ((x$3 < 0 || x$3 >= x$2.length) ? $throwRuntimeError("index out of range") : x$2[x$3])), x$4 = (x$5 = rng.vec, x$6 = rng.tap, ((x$6 < 0 || x$6 >= x$5.length) ? $throwRuntimeError("index out of range") : x$5[x$6])), new $Int64(x$1.$high + x$4.$high, x$1.$low + x$4.$low)), new $Int64(x.$high & 2147483647, (x.$low & 4294967295) >>> 0));
		(x$8 = rng.vec, x$9 = rng.feed, (x$9 < 0 || x$9 >= x$8.length) ? $throwRuntimeError("index out of range") : x$8[x$9] = x$7);
		return x$7;
	};
	rngSource.prototype.Int63 = function() { return this.$val.Int63(); };
	ptrType$1.methods = [{prop: "ExpFloat64", name: "ExpFloat64", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Float32", name: "Float32", pkg: "", type: $funcType([], [$Float32], false)}, {prop: "Float64", name: "Float64", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int31", name: "Int31", pkg: "", type: $funcType([], [$Int32], false)}, {prop: "Int31n", name: "Int31n", pkg: "", type: $funcType([$Int32], [$Int32], false)}, {prop: "Int63", name: "Int63", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Int63n", name: "Int63n", pkg: "", type: $funcType([$Int64], [$Int64], false)}, {prop: "Intn", name: "Intn", pkg: "", type: $funcType([$Int], [$Int], false)}, {prop: "NormFloat64", name: "NormFloat64", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Perm", name: "Perm", pkg: "", type: $funcType([$Int], [sliceType], false)}, {prop: "Seed", name: "Seed", pkg: "", type: $funcType([$Int64], [], false)}, {prop: "Uint32", name: "Uint32", pkg: "", type: $funcType([], [$Uint32], false)}];
	ptrType$2.methods = [{prop: "Int63", name: "Int63", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Seed", name: "Seed", pkg: "", type: $funcType([$Int64], [], false)}];
	ptrType$3.methods = [{prop: "Int63", name: "Int63", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Seed", name: "Seed", pkg: "", type: $funcType([$Int64], [], false)}];
	Source.init([{prop: "Int63", name: "Int63", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Seed", name: "Seed", pkg: "", type: $funcType([$Int64], [], false)}]);
	Rand.init([{prop: "src", name: "src", pkg: "math/rand", type: Source, tag: ""}]);
	lockedSource.init([{prop: "lk", name: "lk", pkg: "math/rand", type: nosync.Mutex, tag: ""}, {prop: "src", name: "src", pkg: "math/rand", type: Source, tag: ""}]);
	rngSource.init([{prop: "tap", name: "tap", pkg: "math/rand", type: $Int, tag: ""}, {prop: "feed", name: "feed", pkg: "math/rand", type: $Int, tag: ""}, {prop: "vec", name: "vec", pkg: "math/rand", type: arrayType, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_rand = function() { while (true) { switch ($s) { case 0:
		$r = nosync.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = math.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		ke = $toNativeArray($kindUint32, [3801129273, 0, 2615860924, 3279400049, 3571300752, 3733536696, 3836274812, 3906990442, 3958562475, 3997804264, 4028649213, 4053523342, 4074002619, 4091154507, 4105727352, 4118261130, 4129155133, 4138710916, 4147160435, 4154685009, 4161428406, 4167506077, 4173011791, 4178022498, 4182601930, 4186803325, 4190671498, 4194244443, 4197554582, 4200629752, 4203493986, 4206168142, 4208670408, 4211016720, 4213221098, 4215295924, 4217252177, 4219099625, 4220846988, 4222502074, 4224071896, 4225562770, 4226980400, 4228329951, 4229616109, 4230843138, 4232014925, 4233135020, 4234206673, 4235232866, 4236216336, 4237159604, 4238064994, 4238934652, 4239770563, 4240574564, 4241348362, 4242093539, 4242811568, 4243503822, 4244171579, 4244816032, 4245438297, 4246039419, 4246620374, 4247182079, 4247725394, 4248251127, 4248760037, 4249252839, 4249730206, 4250192773, 4250641138, 4251075867, 4251497493, 4251906522, 4252303431, 4252688672, 4253062674, 4253425844, 4253778565, 4254121205, 4254454110, 4254777611, 4255092022, 4255397640, 4255694750, 4255983622, 4256264513, 4256537670, 4256803325, 4257061702, 4257313014, 4257557464, 4257795244, 4258026541, 4258251531, 4258470383, 4258683258, 4258890309, 4259091685, 4259287526, 4259477966, 4259663135, 4259843154, 4260018142, 4260188212, 4260353470, 4260514019, 4260669958, 4260821380, 4260968374, 4261111028, 4261249421, 4261383632, 4261513736, 4261639802, 4261761900, 4261880092, 4261994441, 4262105003, 4262211835, 4262314988, 4262414513, 4262510454, 4262602857, 4262691764, 4262777212, 4262859239, 4262937878, 4263013162, 4263085118, 4263153776, 4263219158, 4263281289, 4263340187, 4263395872, 4263448358, 4263497660, 4263543789, 4263586755, 4263626565, 4263663224, 4263696735, 4263727099, 4263754314, 4263778377, 4263799282, 4263817020, 4263831582, 4263842955, 4263851124, 4263856071, 4263857776, 4263856218, 4263851370, 4263843206, 4263831695, 4263816804, 4263798497, 4263776735, 4263751476, 4263722676, 4263690284, 4263654251, 4263614520, 4263571032, 4263523724, 4263472530, 4263417377, 4263358192, 4263294892, 4263227394, 4263155608, 4263079437, 4262998781, 4262913534, 4262823581, 4262728804, 4262629075, 4262524261, 4262414220, 4262298801, 4262177846, 4262051187, 4261918645, 4261780032, 4261635148, 4261483780, 4261325704, 4261160681, 4260988457, 4260808763, 4260621313, 4260425802, 4260221905, 4260009277, 4259787550, 4259556329, 4259315195, 4259063697, 4258801357, 4258527656, 4258242044, 4257943926, 4257632664, 4257307571, 4256967906, 4256612870, 4256241598, 4255853155, 4255446525, 4255020608, 4254574202, 4254106002, 4253614578, 4253098370, 4252555662, 4251984571, 4251383021, 4250748722, 4250079132, 4249371435, 4248622490, 4247828790, 4246986404, 4246090910, 4245137315, 4244119963, 4243032411, 4241867296, 4240616155, 4239269214, 4237815118, 4236240596, 4234530035, 4232664930, 4230623176, 4228378137, 4225897409, 4223141146, 4220059768, 4216590757, 4212654085, 4208145538, 4202926710, 4196809522, 4189531420, 4180713890, 4169789475, 4155865042, 4137444620, 4111806704, 4073393724, 4008685917, 3873074895]);
		we = $toNativeArray($kindFloat32, [2.0249555365836613e-09, 1.4866739783681027e-11, 2.4409616689036184e-11, 3.1968806074589295e-11, 3.844677007314168e-11, 4.42282044321729e-11, 4.951644302919611e-11, 5.443358958023836e-11, 5.905943789574764e-11, 6.34494193296753e-11, 6.764381416113352e-11, 7.167294535648239e-11, 7.556032188826833e-11, 7.932458162551725e-11, 8.298078890689453e-11, 8.654132271912474e-11, 9.001651507523079e-11, 9.341507428706208e-11, 9.674443190998971e-11, 1.0001099254308699e-10, 1.0322031424037093e-10, 1.0637725422757427e-10, 1.0948611461891744e-10, 1.1255067711157807e-10, 1.1557434870246297e-10, 1.1856014781042035e-10, 1.2151082917633005e-10, 1.2442885610752796e-10, 1.2731647680563896e-10, 1.3017574518325858e-10, 1.330085347417409e-10, 1.3581656632677408e-10, 1.386014220061682e-10, 1.413645728254309e-10, 1.4410737880776736e-10, 1.4683107507629245e-10, 1.4953686899854546e-10, 1.522258291641876e-10, 1.5489899640730442e-10, 1.575573282952547e-10, 1.6020171300645814e-10, 1.628330109637588e-10, 1.6545202707884954e-10, 1.68059510752272e-10, 1.7065616975120435e-10, 1.73242697965037e-10, 1.758197337720091e-10, 1.783878739169964e-10, 1.8094774290045024e-10, 1.834998542005195e-10, 1.8604476292871652e-10, 1.8858298256319017e-10, 1.9111498494872592e-10, 1.9364125580789704e-10, 1.9616222535212557e-10, 1.9867835154840918e-10, 2.011900368525943e-10, 2.0369768372052732e-10, 2.062016807302669e-10, 2.0870240258208383e-10, 2.1120022397624894e-10, 2.136955057352452e-10, 2.1618855317040442e-10, 2.1867974098199738e-10, 2.2116936060356807e-10, 2.2365774510202385e-10, 2.2614519978869652e-10, 2.2863201609713002e-10, 2.3111849933865614e-10, 2.3360494094681883e-10, 2.3609159072179864e-10, 2.3857874009713953e-10, 2.4106666662859766e-10, 2.4355562011635357e-10, 2.460458781161634e-10, 2.485376904282077e-10, 2.5103127909709144e-10, 2.5352694943414633e-10, 2.560248957284017e-10, 2.585253955356137e-10, 2.610286709003873e-10, 2.6353494386732734e-10, 2.6604446423661443e-10, 2.6855745405285347e-10, 2.71074163116225e-10, 2.7359478571575835e-10, 2.7611959940720965e-10, 2.786487707240326e-10, 2.8118254946640775e-10, 2.8372118543451563e-10, 2.8626484516180994e-10, 2.8881380620404684e-10, 2.9136826285025563e-10, 2.9392840938946563e-10, 2.96494523377433e-10, 2.990667713476114e-10, 3.016454031001814e-10, 3.042306406797479e-10, 3.068226783753403e-10, 3.09421765987139e-10, 3.12028125559749e-10, 3.1464195138219964e-10, 3.17263521010247e-10, 3.1989300097734485e-10, 3.225306410836737e-10, 3.2517669112941405e-10, 3.2783134540359526e-10, 3.3049485370639786e-10, 3.3316743808242677e-10, 3.3584937608743815e-10, 3.385408342548857e-10, 3.4124211789610115e-10, 3.4395342130011386e-10, 3.4667499426710435e-10, 3.494071143528288e-10, 3.521500313574677e-10, 3.54903967325626e-10, 3.576691720574843e-10, 3.6044595086437425e-10, 3.632345535464765e-10, 3.660352021483959e-10, 3.688482297370399e-10, 3.716738583570134e-10, 3.7451239331964814e-10, 3.773641121807003e-10, 3.802292924959261e-10, 3.831082673322328e-10, 3.8600128648980103e-10, 3.8890865527996255e-10, 3.9183070676962473e-10, 3.9476774627011935e-10, 3.977200790927782e-10, 4.006880383045086e-10, 4.0367195697221803e-10, 4.066721681628138e-10, 4.0968900494320337e-10, 4.127228558914453e-10, 4.15774054074447e-10, 4.188429603146915e-10, 4.2192993543466173e-10, 4.25035395767992e-10, 4.2815970213716525e-10, 4.313032986313914e-10, 4.3446651831757777e-10, 4.376498607960855e-10, 4.408536868893975e-10, 4.4407846844229937e-10, 4.4732464954400086e-10, 4.5059267428371186e-10, 4.538830145062178e-10, 4.5719619756745544e-10, 4.605326675566346e-10, 4.638929240741163e-10, 4.672775499869886e-10, 4.706869893844612e-10, 4.74121908400349e-10, 4.775827511238617e-10, 4.810701836888143e-10, 4.845848167178701e-10, 4.881271498113904e-10, 4.916979601254923e-10, 4.952977472605369e-10, 4.989272883726414e-10, 5.025872495956207e-10, 5.062783525744408e-10, 5.100013189540675e-10, 5.13756870379467e-10, 5.175458395179078e-10, 5.21369003525507e-10, 5.252272505806843e-10, 5.29121357839557e-10, 5.330522134805449e-10, 5.3702081670437e-10, 5.41028055689452e-10, 5.450749851476644e-10, 5.491624932574268e-10, 5.532918012640664e-10, 5.574638528571541e-10, 5.616799247931681e-10, 5.659410717839819e-10, 5.702485705860738e-10, 5.746036979559221e-10, 5.790077306500052e-10, 5.83462111958255e-10, 5.879682296594524e-10, 5.925275825546805e-10, 5.971417249561739e-10, 6.01812211176167e-10, 6.065408175714992e-10, 6.113292094767075e-10, 6.16179329782085e-10, 6.21092954844471e-10, 6.260721940876124e-10, 6.311191569352559e-10, 6.362359528111483e-10, 6.414249686947926e-10, 6.466885360545405e-10, 6.520292639144998e-10, 6.574497612987784e-10, 6.629528592760892e-10, 6.685415554485985e-10, 6.742187919073217e-10, 6.799880103436351e-10, 6.858525969377638e-10, 6.918161599145378e-10, 6.978825850545434e-10, 7.040559801829716e-10, 7.103406751696184e-10, 7.167412219288849e-10, 7.232625609532306e-10, 7.2990985477972e-10, 7.366885990123251e-10, 7.436047333442275e-10, 7.506645305355164e-10, 7.57874762946642e-10, 7.652426470272644e-10, 7.727759543385559e-10, 7.804830115532013e-10, 7.883728114777e-10, 7.964550685635174e-10, 8.047402189070851e-10, 8.132396422944055e-10, 8.219657177122031e-10, 8.309318788590758e-10, 8.401527806789488e-10, 8.496445214056791e-10, 8.594246980742071e-10, 8.695127395874636e-10, 8.799300732498239e-10, 8.90700457834015e-10, 9.01850316648023e-10, 9.134091816243028e-10, 9.254100818978372e-10, 9.37890431984556e-10, 9.508922538259412e-10, 9.64463842123564e-10, 9.78660263939446e-10, 9.935448019859905e-10, 1.0091912860943353e-09, 1.0256859805934937e-09, 1.0431305819125214e-09, 1.0616465484503124e-09, 1.0813799855569073e-09, 1.1025096391392708e-09, 1.1252564435793033e-09, 1.149898620766976e-09, 1.176793218427008e-09, 1.2064089727203964e-09, 1.2393785997488749e-09, 1.2765849488616254e-09, 1.319313880365769e-09, 1.36954347862428e-09, 1.4305497897382224e-09, 1.5083649884672923e-09, 1.6160853766322703e-09, 1.7921247819074893e-09]);
		fe = $toNativeArray($kindFloat32, [1, 0.9381436705589294, 0.900469958782196, 0.8717043399810791, 0.847785472869873, 0.8269932866096497, 0.8084216713905334, 0.7915276288986206, 0.7759568691253662, 0.7614634037017822, 0.7478685975074768, 0.7350381016731262, 0.7228676676750183, 0.7112747430801392, 0.7001926302909851, 0.6895664930343628, 0.6793505549430847, 0.669506311416626, 0.6600008606910706, 0.6508058309555054, 0.6418967247009277, 0.633251965045929, 0.62485271692276, 0.6166821718215942, 0.608725368976593, 0.6009689569473267, 0.5934008955955505, 0.5860103368759155, 0.5787873864173889, 0.5717230439186096, 0.5648092031478882, 0.5580382943153381, 0.5514034032821655, 0.5448982119560242, 0.5385168790817261, 0.5322538614273071, 0.526104211807251, 0.5200631618499756, 0.5141264200210571, 0.5082897543907166, 0.5025495290756226, 0.4969019889831543, 0.4913438558578491, 0.4858720004558563, 0.48048335313796997, 0.4751752018928528, 0.4699448347091675, 0.4647897481918335, 0.4597076177597046, 0.4546961486339569, 0.4497532546520233, 0.44487687945365906, 0.4400651156902313, 0.4353161156177521, 0.4306281507015228, 0.42599955201148987, 0.42142874002456665, 0.4169141948223114, 0.4124544560909271, 0.40804818272590637, 0.4036940038204193, 0.39939069747924805, 0.3951369822025299, 0.39093172550201416, 0.38677382469177246, 0.38266217708587646, 0.378595769405365, 0.37457355856895447, 0.37059465050697327, 0.366658091545105, 0.362762987613678, 0.358908474445343, 0.35509374737739563, 0.35131800174713135, 0.3475804924964905, 0.34388044476509094, 0.34021714329719543, 0.33658990263938904, 0.3329980671405792, 0.3294409513473511, 0.32591795921325684, 0.32242849469184875, 0.3189719021320343, 0.3155476748943329, 0.31215524673461914, 0.3087940812110901, 0.30546361207962036, 0.30216339230537415, 0.29889291524887085, 0.29565170407295227, 0.2924392819404602, 0.2892552316188812, 0.28609907627105713, 0.2829704284667969, 0.27986884117126465, 0.2767939269542694, 0.2737452983856201, 0.2707225978374481, 0.26772540807724, 0.26475343108177185, 0.2618062496185303, 0.258883535861969, 0.2559850215911865, 0.25311028957366943, 0.25025907158851624, 0.24743106961250305, 0.2446259707212448, 0.24184346199035645, 0.23908329010009766, 0.23634515702724457, 0.2336287796497345, 0.23093391954898834, 0.22826029360294342, 0.22560766339302063, 0.22297576069831848, 0.22036437690258026, 0.21777324378490448, 0.21520215272903442, 0.212650865316391, 0.21011915802955627, 0.20760682225227356, 0.20511364936828613, 0.20263944566249847, 0.20018397271633148, 0.19774706661701202, 0.1953285187482834, 0.19292815029621124, 0.19054576754570007, 0.18818120658397675, 0.18583425879478455, 0.18350479006767273, 0.18119260668754578, 0.17889754474163055, 0.17661945521831512, 0.17435817420482635, 0.1721135377883911, 0.16988539695739746, 0.16767361760139465, 0.16547803580760956, 0.16329853236675262, 0.16113494336605072, 0.1589871346950531, 0.15685498714447021, 0.15473836660385132, 0.15263713896274567, 0.1505511850118637, 0.1484803706407547, 0.14642459154129028, 0.1443837285041809, 0.14235764741897583, 0.1403462439775467, 0.13834942877292633, 0.136367067694664, 0.13439907133579254, 0.1324453204870224, 0.1305057406425476, 0.12858019769191742, 0.12666863203048706, 0.12477091699838638, 0.12288697808980942, 0.1210167184472084, 0.11916005611419678, 0.11731690168380737, 0.11548716574907303, 0.11367076635360718, 0.11186762899160385, 0.11007767915725708, 0.1083008274435997, 0.10653700679540634, 0.10478614270687103, 0.1030481606721878, 0.10132300108671188, 0.0996105819940567, 0.09791085124015808, 0.09622374176979065, 0.09454918652772903, 0.09288713335990906, 0.09123751521110535, 0.08960027992725372, 0.08797537535429001, 0.08636274188756943, 0.0847623273730278, 0.08317409455776215, 0.08159798383712769, 0.08003395050764084, 0.07848194986581802, 0.07694194465875626, 0.07541389018297195, 0.07389774918556213, 0.07239348441362381, 0.070901058614254, 0.06942043453454971, 0.06795158982276917, 0.06649449467658997, 0.06504911929368973, 0.06361543387174606, 0.06219341605901718, 0.06078304722905159, 0.0593843050301075, 0.05799717456102371, 0.05662164092063904, 0.05525768920779228, 0.05390531197190285, 0.05256449431180954, 0.05123523622751236, 0.04991753399372101, 0.04861138388514519, 0.047316793352365494, 0.04603376239538193, 0.044762298464775085, 0.04350241273641586, 0.04225412383675575, 0.04101744294166565, 0.039792392402887344, 0.03857899457216263, 0.03737728297710419, 0.03618728369474411, 0.03500903770327568, 0.03384258225560188, 0.0326879620552063, 0.031545232981443405, 0.030414443463087082, 0.0292956605553627, 0.028188949450850487, 0.027094384655356407, 0.02601204626262188, 0.024942025542259216, 0.023884421214461327, 0.022839335724711418, 0.021806888282299042, 0.020787203684449196, 0.019780423492193222, 0.018786700442433357, 0.017806200310587883, 0.016839107498526573, 0.015885621309280396, 0.014945968054234982, 0.01402039173990488, 0.013109165243804455, 0.012212592177093029, 0.011331013403832912, 0.010464809834957123, 0.009614413604140282, 0.008780314587056637, 0.007963077165186405, 0.007163353264331818, 0.0063819061033427715, 0.005619642324745655, 0.004877655766904354, 0.004157294984906912, 0.003460264764726162, 0.0027887988835573196, 0.0021459676790982485, 0.001536299823783338, 0.0009672692976891994, 0.0004541343660093844]);
		kn = $toNativeArray($kindUint32, [1991057938, 0, 1611602771, 1826899878, 1918584482, 1969227037, 2001281515, 2023368125, 2039498179, 2051788381, 2061460127, 2069267110, 2075699398, 2081089314, 2085670119, 2089610331, 2093034710, 2096037586, 2098691595, 2101053571, 2103168620, 2105072996, 2106796166, 2108362327, 2109791536, 2111100552, 2112303493, 2113412330, 2114437283, 2115387130, 2116269447, 2117090813, 2117856962, 2118572919, 2119243101, 2119871411, 2120461303, 2121015852, 2121537798, 2122029592, 2122493434, 2122931299, 2123344971, 2123736059, 2124106020, 2124456175, 2124787725, 2125101763, 2125399283, 2125681194, 2125948325, 2126201433, 2126441213, 2126668298, 2126883268, 2127086657, 2127278949, 2127460589, 2127631985, 2127793506, 2127945490, 2128088244, 2128222044, 2128347141, 2128463758, 2128572095, 2128672327, 2128764606, 2128849065, 2128925811, 2128994934, 2129056501, 2129110560, 2129157136, 2129196237, 2129227847, 2129251929, 2129268426, 2129277255, 2129278312, 2129271467, 2129256561, 2129233410, 2129201800, 2129161480, 2129112170, 2129053545, 2128985244, 2128906855, 2128817916, 2128717911, 2128606255, 2128482298, 2128345305, 2128194452, 2128028813, 2127847342, 2127648860, 2127432031, 2127195339, 2126937058, 2126655214, 2126347546, 2126011445, 2125643893, 2125241376, 2124799783, 2124314271, 2123779094, 2123187386, 2122530867, 2121799464, 2120980787, 2120059418, 2119015917, 2117825402, 2116455471, 2114863093, 2112989789, 2110753906, 2108037662, 2104664315, 2100355223, 2094642347, 2086670106, 2074676188, 2054300022, 2010539237]);
		wn = $toNativeArray($kindFloat32, [1.7290404663583558e-09, 1.2680928529462676e-10, 1.689751810696194e-10, 1.9862687883343e-10, 2.223243117382978e-10, 2.4244936613904144e-10, 2.601613091623989e-10, 2.761198769629658e-10, 2.9073962681813725e-10, 3.042996965518796e-10, 3.169979556627567e-10, 3.289802041894774e-10, 3.4035738116777736e-10, 3.5121602848242617e-10, 3.61625090983253e-10, 3.7164057942185025e-10, 3.813085680537398e-10, 3.906675816178762e-10, 3.997501218933053e-10, 4.0858399996679395e-10, 4.1719308563337165e-10, 4.255982233303257e-10, 4.3381759295968436e-10, 4.4186720948857783e-10, 4.497613115272969e-10, 4.57512583373898e-10, 4.6513240481438345e-10, 4.726310454117311e-10, 4.800177477726209e-10, 4.873009773476156e-10, 4.944885056978876e-10, 5.015873272284921e-10, 5.086040477664255e-10, 5.155446070048697e-10, 5.224146670812502e-10, 5.292193350214802e-10, 5.359634958068682e-10, 5.426517013518151e-10, 5.492881705038144e-10, 5.558769555769061e-10, 5.624218868405251e-10, 5.689264614971989e-10, 5.75394121238304e-10, 5.818281967329142e-10, 5.882316855831959e-10, 5.946076964136182e-10, 6.009590047817426e-10, 6.072883862451306e-10, 6.135985053390414e-10, 6.19892026598734e-10, 6.261713370037114e-10, 6.324390455780815e-10, 6.386973727678935e-10, 6.449488165749528e-10, 6.511955974453087e-10, 6.574400468473129e-10, 6.636843297158634e-10, 6.699307220081607e-10, 6.761814441702541e-10, 6.824387166481927e-10, 6.887046488657234e-10, 6.949815167800466e-10, 7.012714853260604e-10, 7.075767749498141e-10, 7.13899661608508e-10, 7.202424212593428e-10, 7.266072743483676e-10, 7.329966078550854e-10, 7.394128087589991e-10, 7.458582640396116e-10, 7.523354716987285e-10, 7.588469852493063e-10, 7.653954137154528e-10, 7.719834771435785e-10, 7.786139510912449e-10, 7.852897221383159e-10, 7.920137878869582e-10, 7.987892014504894e-10, 8.056192379868321e-10, 8.125072836762115e-10, 8.194568912323064e-10, 8.264716688799467e-10, 8.3355555791087e-10, 8.407127216614185e-10, 8.479473234679347e-10, 8.552640262671218e-10, 8.626675485068347e-10, 8.701631637464402e-10, 8.777562010564566e-10, 8.854524335966119e-10, 8.932581896381464e-10, 9.011799639857543e-10, 9.092249730890956e-10, 9.174008219758889e-10, 9.25715837318819e-10, 9.341788453909317e-10, 9.42799727177146e-10, 9.515889187738935e-10, 9.605578554783278e-10, 9.697193048552322e-10, 9.790869226478094e-10, 9.886760299337993e-10, 9.985036131254788e-10, 1.008588212947359e-09, 1.0189509236369076e-09, 1.0296150598776421e-09, 1.040606933955246e-09, 1.0519566329136865e-09, 1.0636980185552147e-09, 1.0758701707302976e-09, 1.0885182755160372e-09, 1.101694735439196e-09, 1.115461056855338e-09, 1.1298901814171813e-09, 1.1450695946990663e-09, 1.1611052119775422e-09, 1.178127595480305e-09, 1.1962995039027646e-09, 1.2158286599728285e-09, 1.2369856250415978e-09, 1.2601323318151003e-09, 1.2857697129220469e-09, 1.3146201904845611e-09, 1.3477839955200466e-09, 1.3870635751089821e-09, 1.43574030442295e-09, 1.5008658760251592e-09, 1.6030947680434338e-09]);
		fn = $toNativeArray($kindFloat32, [1, 0.963599681854248, 0.9362826943397522, 0.9130436182022095, 0.8922816514968872, 0.8732430338859558, 0.8555005788803101, 0.8387836217880249, 0.8229072093963623, 0.8077383041381836, 0.7931770086288452, 0.7791460752487183, 0.7655841708183289, 0.7524415850639343, 0.7396772503852844, 0.7272568941116333, 0.7151514887809753, 0.7033361196517944, 0.6917891502380371, 0.6804918646812439, 0.6694276928901672, 0.6585819721221924, 0.6479418277740479, 0.6374954581260681, 0.6272324919700623, 0.6171433925628662, 0.6072195172309875, 0.5974531769752502, 0.5878370404243469, 0.5783646702766418, 0.5690299868583679, 0.5598273873329163, 0.550751805305481, 0.5417983531951904, 0.5329626798629761, 0.5242405533790588, 0.5156282186508179, 0.5071220397949219, 0.49871864914894104, 0.4904148280620575, 0.48220765590667725, 0.47409430146217346, 0.466072142124176, 0.45813870429992676, 0.45029163360595703, 0.44252872467041016, 0.4348478317260742, 0.42724698781967163, 0.41972434520721436, 0.41227802634239197, 0.40490642189979553, 0.39760786294937134, 0.3903807997703552, 0.3832238018512726, 0.3761354684829712, 0.3691144585609436, 0.36215949058532715, 0.3552693724632263, 0.3484429717063904, 0.3416791558265686, 0.33497685194015503, 0.32833510637283325, 0.3217529058456421, 0.3152293860912323, 0.30876362323760986, 0.3023548424243927, 0.2960021495819092, 0.2897048592567444, 0.28346219658851624, 0.2772735059261322, 0.271138072013855, 0.2650552988052368, 0.25902456045150757, 0.25304529070854187, 0.24711695313453674, 0.24123899638652802, 0.23541094362735748, 0.22963231801986694, 0.22390270233154297, 0.21822164952754974, 0.21258877217769623, 0.20700371265411377, 0.20146611332893372, 0.1959756463766098, 0.19053204357624054, 0.18513499200344086, 0.17978426814079285, 0.1744796335697174, 0.16922089457511902, 0.16400785744190216, 0.1588403731584549, 0.15371830761432648, 0.14864157140254974, 0.14361007511615753, 0.13862377405166626, 0.13368265330791473, 0.12878671288490295, 0.12393598258495331, 0.11913054436445236, 0.11437050998210907, 0.10965602099895477, 0.1049872562289238, 0.10036443918943405, 0.09578784555196762, 0.09125780314207077, 0.08677466958761215, 0.08233889937400818, 0.07795098423957825, 0.07361150532960892, 0.06932111829519272, 0.06508058309555054, 0.06089077144861221, 0.05675266310572624, 0.05266740173101425, 0.048636294901371, 0.044660862535238266, 0.040742866694927216, 0.03688438981771469, 0.03308788686990738, 0.029356317594647408, 0.025693291798233986, 0.02210330404341221, 0.018592102453112602, 0.015167297795414925, 0.011839478276669979, 0.0086244847625494, 0.005548994988203049, 0.0026696291752159595]);
		rng_cooked = $toNativeArray($kindInt64, [new $Int64(1173834291, 3952672746), new $Int64(1081821761, 3130416987), new $Int64(324977939, 3414273807), new $Int64(1241840476, 2806224363), new $Int64(669549340, 1997590414), new $Int64(2103305448, 2402795971), new $Int64(1663160183, 1140819369), new $Int64(1120601685, 1788868961), new $Int64(1848035537, 1089001426), new $Int64(1235702047, 873593504), new $Int64(1911387977, 581324885), new $Int64(492609478, 1609182556), new $Int64(1069394745, 1241596776), new $Int64(1895445337, 1771189259), new $Int64(772864846, 3467012610), new $Int64(2006957225, 2344407434), new $Int64(402115761, 782467244), new $Int64(26335124, 3404933915), new $Int64(1063924276, 618867887), new $Int64(1178782866, 520164395), new $Int64(555910815, 1341358184), new $Int64(632398609, 665794848), new $Int64(1527227641, 3183648150), new $Int64(1781176124, 696329606), new $Int64(1789146075, 4151988961), new $Int64(60039534, 998951326), new $Int64(1535158725, 1364957564), new $Int64(63173359, 4090230633), new $Int64(649454641, 4009697548), new $Int64(248009524, 2569622517), new $Int64(778703922, 3742421481), new $Int64(1038377625, 1506914633), new $Int64(1738099768, 1983412561), new $Int64(236311649, 1436266083), new $Int64(1035966148, 3922894967), new $Int64(810508934, 1792680179), new $Int64(563141142, 1188796351), new $Int64(1349617468, 405968250), new $Int64(1044074554, 433754187), new $Int64(870549669, 4073162024), new $Int64(1053232044, 433121399), new $Int64(2451824, 4162580594), new $Int64(2010221076, 4132415622), new $Int64(611252600, 3033822028), new $Int64(2016407895, 824682382), new $Int64(2366218, 3583765414), new $Int64(1522878809, 535386927), new $Int64(1637219058, 2286693689), new $Int64(1453075389, 2968466525), new $Int64(193683513, 1351410206), new $Int64(1863677552, 1412813499), new $Int64(492736522, 4126267639), new $Int64(512765208, 2105529399), new $Int64(2132966268, 2413882233), new $Int64(947457634, 32226200), new $Int64(1149341356, 2032329073), new $Int64(106485445, 1356518208), new $Int64(79673492, 3430061722), new $Int64(663048513, 3820169661), new $Int64(481498454, 2981816134), new $Int64(1017155588, 4184371017), new $Int64(206574701, 2119206761), new $Int64(1295374591, 2472200560), new $Int64(1587026100, 2853524696), new $Int64(1307803389, 1681119904), new $Int64(1972496813, 95608918), new $Int64(392686347, 3690479145), new $Int64(941912722, 1397922290), new $Int64(988169623, 1516129515), new $Int64(1827305493, 1547420459), new $Int64(1311333971, 1470949486), new $Int64(194013850, 1336785672), new $Int64(2102397034, 4131677129), new $Int64(755205548, 4246329084), new $Int64(1004983461, 3788585631), new $Int64(2081005363, 3080389532), new $Int64(1501045284, 2215402037), new $Int64(391002300, 1171593935), new $Int64(1408774047, 1423855166), new $Int64(1628305930, 2276716302), new $Int64(1779030508, 2068027241), new $Int64(1369359303, 3427553297), new $Int64(189241615, 3289637845), new $Int64(1057480830, 3486407650), new $Int64(634572984, 3071877822), new $Int64(1159653919, 3363620705), new $Int64(1213226718, 4159821533), new $Int64(2070861710, 1894661), new $Int64(1472989750, 1156868282), new $Int64(348271067, 776219088), new $Int64(1646054810, 2425634259), new $Int64(1716021749, 680510161), new $Int64(1573220192, 1310101429), new $Int64(1095885995, 2964454134), new $Int64(1821788136, 3467098407), new $Int64(1990672920, 2109628894), new $Int64(7834944, 1232604732), new $Int64(309412934, 3261916179), new $Int64(1699175360, 434597899), new $Int64(235436061, 1624796439), new $Int64(521080809, 3589632480), new $Int64(1198416575, 864579159), new $Int64(208735487, 1380889830), new $Int64(619206309, 2654509477), new $Int64(1419738251, 1468209306), new $Int64(403198876, 100794388), new $Int64(956062190, 2991674471), new $Int64(1938816907, 2224662036), new $Int64(1973824487, 977097250), new $Int64(1351320195, 726419512), new $Int64(1964023751, 1747974366), new $Int64(1394388465, 1556430604), new $Int64(1097991433, 1080776742), new $Int64(1761636690, 280794874), new $Int64(117767733, 919835643), new $Int64(1180474222, 3434019658), new $Int64(196069168, 2461941785), new $Int64(133215641, 3615001066), new $Int64(417204809, 3103414427), new $Int64(790056561, 3380809712), new $Int64(879802240, 2724693469), new $Int64(547796833, 598827710), new $Int64(300924196, 3452273442), new $Int64(2071705424, 649274915), new $Int64(1346182319, 2585724112), new $Int64(636549385, 3165579553), new $Int64(1185578221, 2635894283), new $Int64(2094573470, 2053289721), new $Int64(985976581, 3169337108), new $Int64(1170569632, 144717764), new $Int64(1079216270, 1383666384), new $Int64(2022678706, 681540375), new $Int64(1375448925, 537050586), new $Int64(182715304, 315246468), new $Int64(226402871, 849323088), new $Int64(1262421183, 45543944), new $Int64(1201038398, 2319052083), new $Int64(2106775454, 3613090841), new $Int64(560472520, 2992171180), new $Int64(1765620479, 2068244785), new $Int64(917538188, 4239862634), new $Int64(777927839, 3892253031), new $Int64(720683925, 958186149), new $Int64(1724185863, 1877702262), new $Int64(1357886971, 837674867), new $Int64(1837048883, 1507589294), new $Int64(1905518400, 873336795), new $Int64(267722611, 2764496274), new $Int64(341003118, 4196182374), new $Int64(1080717893, 550964545), new $Int64(818747069, 420611474), new $Int64(222653272, 204265180), new $Int64(1549974541, 1787046383), new $Int64(1215581865, 3102292318), new $Int64(418321538, 1552199393), new $Int64(1243493047, 980542004), new $Int64(267284263, 3293718720), new $Int64(1179528763, 3771917473), new $Int64(599484404, 2195808264), new $Int64(252818753, 3894702887), new $Int64(780007692, 2099949527), new $Int64(1424094358, 338442522), new $Int64(490737398, 637158004), new $Int64(419862118, 281976339), new $Int64(574970164, 3619802330), new $Int64(1715552825, 3084554784), new $Int64(882872465, 4129772886), new $Int64(43084605, 1680378557), new $Int64(525521057, 3339087776), new $Int64(1680500332, 4220317857), new $Int64(211654685, 2959322499), new $Int64(1675600481, 1488354890), new $Int64(1312620086, 3958162143), new $Int64(920972075, 2773705983), new $Int64(1876039582, 225908689), new $Int64(963748535, 908216283), new $Int64(1541787429, 3574646075), new $Int64(319760557, 1936937569), new $Int64(1519770881, 75492235), new $Int64(816689472, 1935193178), new $Int64(2142521206, 2018250883), new $Int64(455141620, 3943126022), new $Int64(1546084160, 3066544345), new $Int64(1932392669, 2793082663), new $Int64(908474287, 3297036421), new $Int64(1640597065, 2206987825), new $Int64(1594236910, 807894872), new $Int64(366158341, 766252117), new $Int64(2060649606, 3833114345), new $Int64(845619743, 1255067973), new $Int64(1201145605, 741697208), new $Int64(671241040, 2810093753), new $Int64(1109032642, 4229340371), new $Int64(1462188720, 1361684224), new $Int64(988084219, 1906263026), new $Int64(475781207, 3904421704), new $Int64(1523946520, 1769075545), new $Int64(1062308525, 2621599764), new $Int64(1279509432, 3431891480), new $Int64(404732502, 1871896503), new $Int64(128756421, 1412808876), new $Int64(1605404688, 952876175), new $Int64(1917039957, 1824438899), new $Int64(1662295856, 1005035476), new $Int64(1990909507, 527508597), new $Int64(1288873303, 3066806859), new $Int64(565995893, 3244940914), new $Int64(1257737460, 209092916), new $Int64(1899814242, 1242699167), new $Int64(1433653252, 456723774), new $Int64(1776978905, 1001252870), new $Int64(1468772157, 2026725874), new $Int64(857254202, 2137562569), new $Int64(765939740, 3183366709), new $Int64(1533887628, 2612072960), new $Int64(56977098, 1727148468), new $Int64(949899753, 3803658212), new $Int64(1883670356, 479946959), new $Int64(685713571, 1562982345), new $Int64(201241205, 1766109365), new $Int64(700596547, 3257093788), new $Int64(1962768719, 2365720207), new $Int64(93384808, 3742754173), new $Int64(1689098413, 2878193673), new $Int64(1096135042, 2174002182), new $Int64(1313222695, 3573511231), new $Int64(1392911121, 1760299077), new $Int64(771856457, 2260779833), new $Int64(1281464374, 1452805722), new $Int64(917811730, 2940011802), new $Int64(1890251082, 1886183802), new $Int64(893897673, 2514369088), new $Int64(1644345561, 3924317791), new $Int64(172616216, 500935732), new $Int64(1403501753, 676580929), new $Int64(581571365, 1184984890), new $Int64(1455515235, 1271474274), new $Int64(318728910, 3163791473), new $Int64(2051027584, 2842487377), new $Int64(1511537551, 2170968612), new $Int64(573262976, 3535856740), new $Int64(94256461, 1488599718), new $Int64(966951817, 3408913763), new $Int64(60951736, 2501050084), new $Int64(1272353200, 1639124157), new $Int64(138001144, 4088176393), new $Int64(1574896563, 3989947576), new $Int64(1982239940, 3414355209), new $Int64(1355154361, 2275136352), new $Int64(89709303, 2151835223), new $Int64(1216338715, 1654534827), new $Int64(1467562197, 377892833), new $Int64(1664767638, 660204544), new $Int64(85706799, 390828249), new $Int64(725310955, 3402783878), new $Int64(678849488, 3717936603), new $Int64(1113532086, 2211058823), new $Int64(1564224320, 2692150867), new $Int64(1952770442, 1928910388), new $Int64(788716862, 3931011137), new $Int64(1083670504, 1112701047), new $Int64(2079333076, 2452299106), new $Int64(1251318826, 2337204777), new $Int64(1774877857, 273889282), new $Int64(1798719843, 1462008793), new $Int64(2138834788, 1554494002), new $Int64(952516517, 182675323), new $Int64(548928884, 1882802136), new $Int64(589279648, 3700220025), new $Int64(381039426, 3083431543), new $Int64(1295624457, 3622207527), new $Int64(338126939, 432729309), new $Int64(480013522, 2391914317), new $Int64(297925497, 235747924), new $Int64(2120733629, 3088823825), new $Int64(1402403853, 2314658321), new $Int64(1165929723, 2957634338), new $Int64(501323675, 4117056981), new $Int64(1564699815, 1482500298), new $Int64(1406657158, 840489337), new $Int64(799522364, 3483178565), new $Int64(532129761, 2074004656), new $Int64(724246478, 3643392642), new $Int64(1482330167, 1583624461), new $Int64(1261660694, 287473085), new $Int64(1667835381, 3136843981), new $Int64(1138806821, 1266970974), new $Int64(135185781, 1998688839), new $Int64(392094735, 1492900209), new $Int64(1031326774, 1538112737), new $Int64(76914806, 2207265429), new $Int64(260686035, 963263315), new $Int64(1671145500, 2295892134), new $Int64(1068469660, 2002560897), new $Int64(1791233343, 1369254035), new $Int64(33436120, 3353312708), new $Int64(57507843, 947771099), new $Int64(201728503, 1747061399), new $Int64(1507240140, 2047354631), new $Int64(720000810, 4165367136), new $Int64(479265078, 3388864963), new $Int64(1195302398, 286492130), new $Int64(2045622690, 2795735007), new $Int64(1431753082, 3703961339), new $Int64(1999047161, 1797825479), new $Int64(1429039600, 1116589674), new $Int64(482063550, 2593309206), new $Int64(1329049334, 3404995677), new $Int64(1396904208, 3453462936), new $Int64(1014767077, 3016498634), new $Int64(75698599, 1650371545), new $Int64(1592007860, 212344364), new $Int64(1127766888, 3843932156), new $Int64(1399463792, 3573129983), new $Int64(1256901817, 665897820), new $Int64(1071492673, 1675628772), new $Int64(243225682, 2831752928), new $Int64(2120298836, 1486294219), new $Int64(193076235, 268782709), new $Int64(1145360145, 4186179080), new $Int64(624342951, 1613720397), new $Int64(857179861, 2703686015), new $Int64(1235864944, 2205342611), new $Int64(1474779655, 1411666394), new $Int64(619028749, 677744900), new $Int64(270855115, 4172867247), new $Int64(135494707, 2163418403), new $Int64(849547544, 2841526879), new $Int64(1029966689, 1082141470), new $Int64(377371856, 4046134367), new $Int64(51415528, 2142943655), new $Int64(1897659315, 3124627521), new $Int64(998228909, 219992939), new $Int64(1068692697, 1756846531), new $Int64(1283749206, 1225118210), new $Int64(1621625642, 1647770243), new $Int64(111523943, 444807907), new $Int64(2036369448, 3952076173), new $Int64(53201823, 1461839639), new $Int64(315761893, 3699250910), new $Int64(702974850, 1373688981), new $Int64(734022261, 147523747), new $Int64(100152742, 1211276581), new $Int64(1294440951, 2548832680), new $Int64(1144696256, 1995631888), new $Int64(154500578, 2011457303), new $Int64(796460974, 3057425772), new $Int64(667839456, 81484597), new $Int64(465502760, 3646681560), new $Int64(775020923, 635548515), new $Int64(602489502, 2508044581), new $Int64(353263531, 1014917157), new $Int64(719992433, 3214891315), new $Int64(852684611, 959582252), new $Int64(226415134, 3347040449), new $Int64(1784615552, 4102971975), new $Int64(397887437, 4078022210), new $Int64(1610679822, 2851767182), new $Int64(749162636, 1540160644), new $Int64(598384772, 1057290595), new $Int64(2034890660, 3907769253), new $Int64(579300318, 4248952684), new $Int64(1092907599, 132554364), new $Int64(1061621234, 1029351092), new $Int64(697840928, 2583007416), new $Int64(298619124, 1486185789), new $Int64(55905697, 2871589073), new $Int64(2017643612, 723203291), new $Int64(146250550, 2494333952), new $Int64(1064490251, 2230939180), new $Int64(342915576, 3943232912), new $Int64(1768732449, 2181367922), new $Int64(1418222537, 2889274791), new $Int64(1824032949, 2046728161), new $Int64(1653899792, 1376052477), new $Int64(1022327048, 381236993), new $Int64(1034385958, 3188942166), new $Int64(2073003539, 350070824), new $Int64(144881592, 61758415), new $Int64(1405659422, 3492950336), new $Int64(117440928, 3093818430), new $Int64(1693893113, 2962480613), new $Int64(235432940, 3154871160), new $Int64(511005079, 3228564679), new $Int64(610731502, 888276216), new $Int64(1200780674, 3574998604), new $Int64(870415268, 1967526716), new $Int64(591335707, 1554691298), new $Int64(574459414, 339944798), new $Int64(1223764147, 1154515356), new $Int64(1825645307, 967516237), new $Int64(1546195135, 596588202), new $Int64(279882768, 3764362170), new $Int64(492091056, 266611402), new $Int64(1754227768, 2047856075), new $Int64(1146757215, 21444105), new $Int64(1198058894, 3065563181), new $Int64(1915064845, 1140663212), new $Int64(633187674, 2323741028), new $Int64(2126290159, 3103873707), new $Int64(1008658319, 2766828349), new $Int64(1661896145, 1970872996), new $Int64(1628585413, 3766615585), new $Int64(1552335120, 2036813414), new $Int64(152606527, 3105536507), new $Int64(13954645, 3396176938), new $Int64(1426081645, 1377154485), new $Int64(2085644467, 3807014186), new $Int64(543009040, 3710110597), new $Int64(396058129, 916420443), new $Int64(734556788, 2103831255), new $Int64(381322154, 717331943), new $Int64(572884752, 3550505941), new $Int64(45939673, 378749927), new $Int64(149867929, 611017331), new $Int64(592130075, 758907650), new $Int64(1012992349, 154266815), new $Int64(1107028706, 1407468696), new $Int64(469292398, 970098704), new $Int64(1862426162, 1971660656), new $Int64(998365243, 3332747885), new $Int64(1947089649, 1935189867), new $Int64(1510248801, 203520055), new $Int64(842317902, 3916463034), new $Int64(1758884993, 3474113316), new $Int64(1036101639, 316544223), new $Int64(373738757, 1650844677), new $Int64(1240292229, 4267565603), new $Int64(1077208624, 2501167616), new $Int64(626831785, 3929401789), new $Int64(56122796, 337170252), new $Int64(1186981558, 2061966842), new $Int64(1843292800, 2508461464), new $Int64(206012532, 2791377107), new $Int64(1240791848, 1227227588), new $Int64(1813978778, 1709681848), new $Int64(1153692192, 3768820575), new $Int64(1145186199, 2887126398), new $Int64(700372314, 296561685), new $Int64(700300844, 3729960077), new $Int64(575172304, 372833036), new $Int64(2078875613, 2409779288), new $Int64(1829161290, 555274064), new $Int64(1041887929, 4239804901), new $Int64(1839403216, 3723486978), new $Int64(498390553, 2145871984), new $Int64(564717933, 3565480803), new $Int64(578829821, 2197313814), new $Int64(974785092, 3613674566), new $Int64(438638731, 3042093666), new $Int64(2050927384, 3324034321), new $Int64(869420878, 3708873369), new $Int64(946682149, 1698090092), new $Int64(1618900382, 4213940712), new $Int64(304003901, 2087477361), new $Int64(381315848, 2407950639), new $Int64(851258090, 3942568569), new $Int64(923583198, 4088074412), new $Int64(723260036, 2964773675), new $Int64(1473561819, 1539178386), new $Int64(1062961552, 2694849566), new $Int64(460977733, 2120273838), new $Int64(542912908, 2484608657), new $Int64(880846449, 2956190677), new $Int64(1970902366, 4223313749), new $Int64(662161910, 3502682327), new $Int64(705634754, 4133891139), new $Int64(1116124348, 1166449596), new $Int64(1038247601, 3362705993), new $Int64(93734798, 3892921029), new $Int64(1876124043, 786869787), new $Int64(1057490746, 1046342263), new $Int64(242763728, 493777327), new $Int64(1293910447, 3304827646), new $Int64(616460742, 125356352), new $Int64(499300063, 74094113), new $Int64(1351896723, 2500816079), new $Int64(1657235204, 514015239), new $Int64(1377565129, 543520454), new $Int64(107706923, 3614531153), new $Int64(2056746300, 2356753985), new $Int64(1390062617, 2018141668), new $Int64(131272971, 2087974891), new $Int64(644556607, 3166972343), new $Int64(372256200, 1517638666), new $Int64(1212207984, 173466846), new $Int64(1451709187, 4241513471), new $Int64(733932806, 2783126920), new $Int64(1972004134, 4167264826), new $Int64(29260506, 3907395640), new $Int64(1236582087, 1539634186), new $Int64(1551526350, 178241987), new $Int64(2034206012, 182168164), new $Int64(1044953189, 2386154934), new $Int64(1379126408, 4077374341), new $Int64(32803926, 1732699140), new $Int64(1726425903, 1041306002), new $Int64(1860414813, 2068001749), new $Int64(1005320202, 3208962910), new $Int64(844054010, 697710380), new $Int64(638124245, 2228431183), new $Int64(1337169671, 3554678728), new $Int64(1396494601, 173470263), new $Int64(2061597383, 3848297795), new $Int64(1220546671, 246236185), new $Int64(163293187, 2066374846), new $Int64(1771673660, 312890749), new $Int64(703378057, 3573310289), new $Int64(1548631747, 143166754), new $Int64(613554316, 2081511079), new $Int64(1197802104, 486038032), new $Int64(240999859, 2982218564), new $Int64(364901986, 1000939191), new $Int64(1902782651, 2750454885), new $Int64(1475638791, 3375313137), new $Int64(503615608, 881302957), new $Int64(638698903, 2514186393), new $Int64(443860803, 360024739), new $Int64(1399671872, 292500025), new $Int64(1381210821, 2276300752), new $Int64(521803381, 4069087683), new $Int64(208500981, 1637778212), new $Int64(720490469, 1676670893), new $Int64(1067262482, 3855174429), new $Int64(2114075974, 2067248671), new $Int64(2058057389, 2884561259), new $Int64(1341742553, 2456511185), new $Int64(983726246, 561175414), new $Int64(427994085, 432588903), new $Int64(885133709, 4059399550), new $Int64(2054387382, 1075014784), new $Int64(413651020, 2728058415), new $Int64(1839142064, 1299703678), new $Int64(1262333188, 2347583393), new $Int64(1285481956, 2468164145), new $Int64(989129637, 1140014346), new $Int64(2033889184, 1936972070), new $Int64(409904655, 3870530098), new $Int64(1662989391, 1717789158), new $Int64(1914486492, 1153452491), new $Int64(1157059232, 3948827651), new $Int64(790338018, 2101413152), new $Int64(1495744672, 3854091229), new $Int64(83644069, 4215565463), new $Int64(762206335, 1202710438), new $Int64(1582574611, 2072216740), new $Int64(705690639, 2066751068), new $Int64(33900336, 173902580), new $Int64(1405499842, 142459001), new $Int64(172391592, 1889151926), new $Int64(1648540523, 3034199774), new $Int64(1618587731, 516490102), new $Int64(93114264, 3692577783), new $Int64(68662295, 2953948865), new $Int64(1826544975, 4041040923), new $Int64(204965672, 592046130), new $Int64(1441840008, 384297211), new $Int64(95834184, 265863924), new $Int64(2101717619, 1333136237), new $Int64(1499611781, 1406273556), new $Int64(1074670496, 426305476), new $Int64(125704633, 2750898176), new $Int64(488068495, 1633944332), new $Int64(2037723464, 3236349343), new $Int64(444060402, 4013676611), new $Int64(1718532237, 2265047407), new $Int64(1433593806, 875071080), new $Int64(1804436145, 1418843655), new $Int64(2009228711, 451657300), new $Int64(1229446621, 1866374663), new $Int64(1653472867, 1551455622), new $Int64(577191481, 3560962459), new $Int64(1669204077, 3347903778), new $Int64(1849156454, 2675874918), new $Int64(316128071, 2762991672), new $Int64(530492383, 3689068477), new $Int64(844089962, 4071997905), new $Int64(1508155730, 1381702441), new $Int64(2089931018, 2373284878), new $Int64(1283216186, 2143983064), new $Int64(308739063, 1938207195), new $Int64(1754949306, 1188152253), new $Int64(1272345009, 615870490), new $Int64(742653194, 2662252621), new $Int64(1477718295, 3839976789), new $Int64(56149435, 306752547), new $Int64(720795581, 2162363077), new $Int64(2090431015, 2767224719), new $Int64(675859549, 2628837712), new $Int64(1678405918, 2967771969), new $Int64(1694285728, 499792248), new $Int64(403352367, 4285253508), new $Int64(962357072, 2856511070), new $Int64(679471692, 2526409716), new $Int64(353777175, 1240875658), new $Int64(1232590226, 2577342868), new $Int64(1146185433, 4136853496), new $Int64(670368674, 2403540137), new $Int64(1372824515, 1371410668), new $Int64(1970921600, 371758825), new $Int64(1706420536, 1528834084), new $Int64(2075795018, 1504757260), new $Int64(685663576, 699052551), new $Int64(1641940109, 3347789870), new $Int64(1951619734, 3430604759), new $Int64(2119672219, 1935601723), new $Int64(966789690, 834676166)]);
		globalRand = New(new lockedSource.ptr(new nosync.Mutex.ptr(), NewSource(new $Int64(0, 1))));
		/* */ } return; } }; $init_rand.$blocking = true; return $init_rand;
	};
	return $pkg;
})();
$packages["github.com/gophergala/humble"] = (function() {
	var $pkg = {}, fmt, rand, strconv, time, ViewElementNotFoundError, sliceType, ptrType, NewViewElementNotFoundError;
	fmt = $packages["fmt"];
	rand = $packages["math/rand"];
	strconv = $packages["strconv"];
	time = $packages["time"];
	ViewElementNotFoundError = $pkg.ViewElementNotFoundError = $newType(0, $kindStruct, "humble.ViewElementNotFoundError", "ViewElementNotFoundError", "github.com/gophergala/humble", function(viewId_) {
		this.$val = this;
		this.viewId = viewId_ !== undefined ? viewId_ : "";
	});
		sliceType = $sliceType($emptyInterface);
		ptrType = $ptrType(ViewElementNotFoundError);
	ViewElementNotFoundError.ptr.prototype.Error = function() {
		var e;
		e = $clone(this, ViewElementNotFoundError);
		return fmt.Sprintf("Could not find element in index or DOM for view with id: %s.", new sliceType([new $String(e.viewId)]));
	};
	ViewElementNotFoundError.prototype.Error = function() { return this.$val.Error(); };
	NewViewElementNotFoundError = $pkg.NewViewElementNotFoundError = function(viewId) {
		return new ViewElementNotFoundError.ptr(viewId);
	};
	ViewElementNotFoundError.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ptrType.methods = [{prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}];
	ViewElementNotFoundError.init([{prop: "viewId", name: "viewId", pkg: "github.com/gophergala/humble", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_humble = function() { while (true) { switch ($s) { case 0:
		$r = fmt.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = rand.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_humble.$blocking = true; return $init_humble;
	};
	return $pkg;
})();
$packages["honnef.co/go/js/dom"] = (function() {
	var $pkg = {}, js, strings, time, TokenList, Document, HTMLDocument, document, htmlDocument, URLUtils, Location, HTMLElement, Window, window, Selection, Screen, Navigator, Geolocation, PositionError, PositionOptions, Position, Coordinates, History, Console, DocumentType, DOMImplementation, StyleSheet, Node, BasicNode, Element, ClientRect, BasicHTMLElement, BasicElement, HTMLAnchorElement, HTMLAppletElement, HTMLAreaElement, HTMLAudioElement, HTMLBRElement, HTMLBaseElement, HTMLBodyElement, ValidityState, HTMLButtonElement, HTMLCanvasElement, CanvasRenderingContext2D, HTMLDListElement, HTMLDataElement, HTMLDataListElement, HTMLDirectoryElement, HTMLDivElement, HTMLEmbedElement, HTMLFieldSetElement, HTMLFontElement, HTMLFormElement, HTMLFrameElement, HTMLFrameSetElement, HTMLHRElement, HTMLHeadElement, HTMLHeadingElement, HTMLHtmlElement, HTMLIFrameElement, HTMLImageElement, HTMLInputElement, File, HTMLKeygenElement, HTMLLIElement, HTMLLabelElement, HTMLLegendElement, HTMLLinkElement, HTMLMapElement, HTMLMediaElement, HTMLMenuElement, HTMLMetaElement, HTMLMeterElement, HTMLModElement, HTMLOListElement, HTMLObjectElement, HTMLOptGroupElement, HTMLOptionElement, HTMLOutputElement, HTMLParagraphElement, HTMLParamElement, HTMLPreElement, HTMLProgressElement, HTMLQuoteElement, HTMLScriptElement, HTMLSelectElement, HTMLSourceElement, HTMLSpanElement, HTMLStyleElement, HTMLTableCaptionElement, HTMLTableCellElement, HTMLTableColElement, HTMLTableDataCellElement, HTMLTableElement, HTMLTableHeaderCellElement, HTMLTableRowElement, HTMLTableSectionElement, HTMLTextAreaElement, HTMLTimeElement, HTMLTitleElement, TextTrack, HTMLTrackElement, HTMLUListElement, HTMLUnknownElement, HTMLVideoElement, CSSStyleDeclaration, Text, Event, BasicEvent, AnimationEvent, AudioProcessingEvent, BeforeInputEvent, BeforeUnloadEvent, BlobEvent, ClipboardEvent, CloseEvent, CompositionEvent, CSSFontFaceLoadEvent, CustomEvent, DeviceLightEvent, DeviceMotionEvent, DeviceOrientationEvent, DeviceProximityEvent, DOMTransactionEvent, DragEvent, EditingBeforeInputEvent, ErrorEvent, FocusEvent, GamepadEvent, HashChangeEvent, IDBVersionChangeEvent, KeyboardEvent, MediaStreamEvent, MessageEvent, MouseEvent, MutationEvent, OfflineAudioCompletionEvent, PageTransitionEvent, PointerEvent, PopStateEvent, ProgressEvent, RelatedEvent, RTCPeerConnectionIceEvent, SensorEvent, StorageEvent, SVGEvent, SVGZoomEvent, TimeEvent, TouchEvent, TrackEvent, TransitionEvent, UIEvent, UserProximityEvent, WheelEvent, sliceType, sliceType$1, sliceType$2, sliceType$3, ptrType, ptrType$1, ptrType$2, ptrType$3, ptrType$4, sliceType$4, sliceType$5, sliceType$6, ptrType$5, ptrType$6, sliceType$7, ptrType$7, sliceType$8, ptrType$8, sliceType$9, sliceType$10, ptrType$9, funcType, funcType$1, funcType$2, ptrType$10, sliceType$11, ptrType$11, sliceType$12, ptrType$12, ptrType$13, sliceType$13, ptrType$14, sliceType$14, ptrType$15, sliceType$15, ptrType$16, ptrType$17, ptrType$18, funcType$3, ptrType$19, ptrType$20, ptrType$21, ptrType$22, ptrType$23, ptrType$24, ptrType$25, ptrType$26, funcType$4, funcType$5, ptrType$27, ptrType$28, ptrType$29, ptrType$30, ptrType$31, ptrType$32, ptrType$33, ptrType$34, ptrType$35, ptrType$36, ptrType$37, ptrType$38, ptrType$39, ptrType$40, ptrType$41, ptrType$42, ptrType$43, ptrType$44, ptrType$45, ptrType$46, ptrType$47, ptrType$48, ptrType$49, ptrType$50, ptrType$51, ptrType$52, ptrType$53, ptrType$54, ptrType$55, ptrType$56, ptrType$57, ptrType$58, ptrType$59, ptrType$60, ptrType$61, ptrType$62, ptrType$63, ptrType$64, ptrType$65, ptrType$66, ptrType$67, ptrType$68, ptrType$69, ptrType$70, ptrType$71, ptrType$72, ptrType$73, ptrType$74, ptrType$75, ptrType$76, ptrType$77, ptrType$78, ptrType$79, ptrType$80, ptrType$81, ptrType$82, ptrType$83, ptrType$84, ptrType$85, ptrType$86, ptrType$87, ptrType$88, ptrType$89, mapType, ptrType$90, ptrType$91, ptrType$92, ptrType$93, ptrType$94, ptrType$95, ptrType$96, ptrType$97, ptrType$98, ptrType$99, ptrType$100, ptrType$101, ptrType$102, ptrType$103, ptrType$104, ptrType$105, ptrType$106, ptrType$107, ptrType$108, ptrType$109, ptrType$110, ptrType$111, ptrType$112, ptrType$113, ptrType$114, ptrType$115, ptrType$116, ptrType$117, ptrType$118, ptrType$119, ptrType$120, ptrType$121, ptrType$122, ptrType$123, ptrType$124, ptrType$125, ptrType$126, ptrType$127, ptrType$128, ptrType$129, ptrType$130, ptrType$131, ptrType$132, ptrType$133, callRecover, nodeListToNodes, nodeListToElements, nodeListToHTMLElements, wrapDocument, wrapNode, wrapElement, wrapHTMLElement, getForm, getLabels, GetWindow, wrapEvent;
	js = $packages["github.com/gopherjs/gopherjs/js"];
	strings = $packages["strings"];
	time = $packages["time"];
	TokenList = $pkg.TokenList = $newType(0, $kindStruct, "dom.TokenList", "TokenList", "honnef.co/go/js/dom", function(dtl_, o_, sa_, Length_) {
		this.$val = this;
		this.dtl = dtl_ !== undefined ? dtl_ : null;
		this.o = o_ !== undefined ? o_ : null;
		this.sa = sa_ !== undefined ? sa_ : "";
		this.Length = Length_ !== undefined ? Length_ : 0;
	});
	Document = $pkg.Document = $newType(8, $kindInterface, "dom.Document", "Document", "honnef.co/go/js/dom", null);
	HTMLDocument = $pkg.HTMLDocument = $newType(8, $kindInterface, "dom.HTMLDocument", "HTMLDocument", "honnef.co/go/js/dom", null);
	document = $pkg.document = $newType(0, $kindStruct, "dom.document", "document", "honnef.co/go/js/dom", function(BasicNode_) {
		this.$val = this;
		this.BasicNode = BasicNode_ !== undefined ? BasicNode_ : ptrType$20.nil;
	});
	htmlDocument = $pkg.htmlDocument = $newType(0, $kindStruct, "dom.htmlDocument", "htmlDocument", "honnef.co/go/js/dom", function(document_) {
		this.$val = this;
		this.document = document_ !== undefined ? document_ : ptrType$21.nil;
	});
	URLUtils = $pkg.URLUtils = $newType(0, $kindStruct, "dom.URLUtils", "URLUtils", "honnef.co/go/js/dom", function(Object_, Href_, Protocol_, Host_, Hostname_, Port_, Pathname_, Search_, Hash_, Username_, Password_, Origin_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.Href = Href_ !== undefined ? Href_ : "";
		this.Protocol = Protocol_ !== undefined ? Protocol_ : "";
		this.Host = Host_ !== undefined ? Host_ : "";
		this.Hostname = Hostname_ !== undefined ? Hostname_ : "";
		this.Port = Port_ !== undefined ? Port_ : "";
		this.Pathname = Pathname_ !== undefined ? Pathname_ : "";
		this.Search = Search_ !== undefined ? Search_ : "";
		this.Hash = Hash_ !== undefined ? Hash_ : "";
		this.Username = Username_ !== undefined ? Username_ : "";
		this.Password = Password_ !== undefined ? Password_ : "";
		this.Origin = Origin_ !== undefined ? Origin_ : "";
	});
	Location = $pkg.Location = $newType(0, $kindStruct, "dom.Location", "Location", "honnef.co/go/js/dom", function(Object_, URLUtils_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.URLUtils = URLUtils_ !== undefined ? URLUtils_ : ptrType$1.nil;
	});
	HTMLElement = $pkg.HTMLElement = $newType(8, $kindInterface, "dom.HTMLElement", "HTMLElement", "honnef.co/go/js/dom", null);
	Window = $pkg.Window = $newType(8, $kindInterface, "dom.Window", "Window", "honnef.co/go/js/dom", null);
	window = $pkg.window = $newType(0, $kindStruct, "dom.window", "window", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	Selection = $pkg.Selection = $newType(8, $kindInterface, "dom.Selection", "Selection", "honnef.co/go/js/dom", null);
	Screen = $pkg.Screen = $newType(0, $kindStruct, "dom.Screen", "Screen", "honnef.co/go/js/dom", function(Object_, AvailTop_, AvailLeft_, AvailHeight_, AvailWidth_, ColorDepth_, Height_, Left_, PixelDepth_, Top_, Width_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.AvailTop = AvailTop_ !== undefined ? AvailTop_ : 0;
		this.AvailLeft = AvailLeft_ !== undefined ? AvailLeft_ : 0;
		this.AvailHeight = AvailHeight_ !== undefined ? AvailHeight_ : 0;
		this.AvailWidth = AvailWidth_ !== undefined ? AvailWidth_ : 0;
		this.ColorDepth = ColorDepth_ !== undefined ? ColorDepth_ : 0;
		this.Height = Height_ !== undefined ? Height_ : 0;
		this.Left = Left_ !== undefined ? Left_ : 0;
		this.PixelDepth = PixelDepth_ !== undefined ? PixelDepth_ : 0;
		this.Top = Top_ !== undefined ? Top_ : 0;
		this.Width = Width_ !== undefined ? Width_ : 0;
	});
	Navigator = $pkg.Navigator = $newType(8, $kindInterface, "dom.Navigator", "Navigator", "honnef.co/go/js/dom", null);
	Geolocation = $pkg.Geolocation = $newType(8, $kindInterface, "dom.Geolocation", "Geolocation", "honnef.co/go/js/dom", null);
	PositionError = $pkg.PositionError = $newType(0, $kindStruct, "dom.PositionError", "PositionError", "honnef.co/go/js/dom", function(Object_, Code_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.Code = Code_ !== undefined ? Code_ : 0;
	});
	PositionOptions = $pkg.PositionOptions = $newType(0, $kindStruct, "dom.PositionOptions", "PositionOptions", "honnef.co/go/js/dom", function(EnableHighAccuracy_, Timeout_, MaximumAge_) {
		this.$val = this;
		this.EnableHighAccuracy = EnableHighAccuracy_ !== undefined ? EnableHighAccuracy_ : false;
		this.Timeout = Timeout_ !== undefined ? Timeout_ : new time.Duration(0, 0);
		this.MaximumAge = MaximumAge_ !== undefined ? MaximumAge_ : new time.Duration(0, 0);
	});
	Position = $pkg.Position = $newType(0, $kindStruct, "dom.Position", "Position", "honnef.co/go/js/dom", function(Coords_, Timestamp_) {
		this.$val = this;
		this.Coords = Coords_ !== undefined ? Coords_ : ptrType$28.nil;
		this.Timestamp = Timestamp_ !== undefined ? Timestamp_ : new time.Time.ptr();
	});
	Coordinates = $pkg.Coordinates = $newType(0, $kindStruct, "dom.Coordinates", "Coordinates", "honnef.co/go/js/dom", function(Object_, Latitude_, Longitude_, Altitude_, Accuracy_, AltitudeAccuracy_, Heading_, Speed_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.Latitude = Latitude_ !== undefined ? Latitude_ : 0;
		this.Longitude = Longitude_ !== undefined ? Longitude_ : 0;
		this.Altitude = Altitude_ !== undefined ? Altitude_ : 0;
		this.Accuracy = Accuracy_ !== undefined ? Accuracy_ : 0;
		this.AltitudeAccuracy = AltitudeAccuracy_ !== undefined ? AltitudeAccuracy_ : 0;
		this.Heading = Heading_ !== undefined ? Heading_ : 0;
		this.Speed = Speed_ !== undefined ? Speed_ : 0;
	});
	History = $pkg.History = $newType(8, $kindInterface, "dom.History", "History", "honnef.co/go/js/dom", null);
	Console = $pkg.Console = $newType(0, $kindStruct, "dom.Console", "Console", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	DocumentType = $pkg.DocumentType = $newType(8, $kindInterface, "dom.DocumentType", "DocumentType", "honnef.co/go/js/dom", null);
	DOMImplementation = $pkg.DOMImplementation = $newType(8, $kindInterface, "dom.DOMImplementation", "DOMImplementation", "honnef.co/go/js/dom", null);
	StyleSheet = $pkg.StyleSheet = $newType(8, $kindInterface, "dom.StyleSheet", "StyleSheet", "honnef.co/go/js/dom", null);
	Node = $pkg.Node = $newType(8, $kindInterface, "dom.Node", "Node", "honnef.co/go/js/dom", null);
	BasicNode = $pkg.BasicNode = $newType(0, $kindStruct, "dom.BasicNode", "BasicNode", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	Element = $pkg.Element = $newType(8, $kindInterface, "dom.Element", "Element", "honnef.co/go/js/dom", null);
	ClientRect = $pkg.ClientRect = $newType(0, $kindStruct, "dom.ClientRect", "ClientRect", "honnef.co/go/js/dom", function(Object_, Height_, Width_, Left_, Right_, Top_, Bottom_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.Height = Height_ !== undefined ? Height_ : 0;
		this.Width = Width_ !== undefined ? Width_ : 0;
		this.Left = Left_ !== undefined ? Left_ : 0;
		this.Right = Right_ !== undefined ? Right_ : 0;
		this.Top = Top_ !== undefined ? Top_ : 0;
		this.Bottom = Bottom_ !== undefined ? Bottom_ : 0;
	});
	BasicHTMLElement = $pkg.BasicHTMLElement = $newType(0, $kindStruct, "dom.BasicHTMLElement", "BasicHTMLElement", "honnef.co/go/js/dom", function(BasicElement_) {
		this.$val = this;
		this.BasicElement = BasicElement_ !== undefined ? BasicElement_ : ptrType$30.nil;
	});
	BasicElement = $pkg.BasicElement = $newType(0, $kindStruct, "dom.BasicElement", "BasicElement", "honnef.co/go/js/dom", function(BasicNode_) {
		this.$val = this;
		this.BasicNode = BasicNode_ !== undefined ? BasicNode_ : ptrType$20.nil;
	});
	HTMLAnchorElement = $pkg.HTMLAnchorElement = $newType(0, $kindStruct, "dom.HTMLAnchorElement", "HTMLAnchorElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, URLUtils_, HrefLang_, Media_, TabIndex_, Target_, Text_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.URLUtils = URLUtils_ !== undefined ? URLUtils_ : ptrType$1.nil;
		this.HrefLang = HrefLang_ !== undefined ? HrefLang_ : "";
		this.Media = Media_ !== undefined ? Media_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Target = Target_ !== undefined ? Target_ : "";
		this.Text = Text_ !== undefined ? Text_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLAppletElement = $pkg.HTMLAppletElement = $newType(0, $kindStruct, "dom.HTMLAppletElement", "HTMLAppletElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Alt_, Coords_, HrefLang_, Media_, Search_, Shape_, TabIndex_, Target_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Alt = Alt_ !== undefined ? Alt_ : "";
		this.Coords = Coords_ !== undefined ? Coords_ : "";
		this.HrefLang = HrefLang_ !== undefined ? HrefLang_ : "";
		this.Media = Media_ !== undefined ? Media_ : "";
		this.Search = Search_ !== undefined ? Search_ : "";
		this.Shape = Shape_ !== undefined ? Shape_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Target = Target_ !== undefined ? Target_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLAreaElement = $pkg.HTMLAreaElement = $newType(0, $kindStruct, "dom.HTMLAreaElement", "HTMLAreaElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, URLUtils_, Alt_, Coords_, HrefLang_, Media_, Search_, Shape_, TabIndex_, Target_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.URLUtils = URLUtils_ !== undefined ? URLUtils_ : ptrType$1.nil;
		this.Alt = Alt_ !== undefined ? Alt_ : "";
		this.Coords = Coords_ !== undefined ? Coords_ : "";
		this.HrefLang = HrefLang_ !== undefined ? HrefLang_ : "";
		this.Media = Media_ !== undefined ? Media_ : "";
		this.Search = Search_ !== undefined ? Search_ : "";
		this.Shape = Shape_ !== undefined ? Shape_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Target = Target_ !== undefined ? Target_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLAudioElement = $pkg.HTMLAudioElement = $newType(0, $kindStruct, "dom.HTMLAudioElement", "HTMLAudioElement", "honnef.co/go/js/dom", function(HTMLMediaElement_) {
		this.$val = this;
		this.HTMLMediaElement = HTMLMediaElement_ !== undefined ? HTMLMediaElement_ : ptrType$2.nil;
	});
	HTMLBRElement = $pkg.HTMLBRElement = $newType(0, $kindStruct, "dom.HTMLBRElement", "HTMLBRElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLBaseElement = $pkg.HTMLBaseElement = $newType(0, $kindStruct, "dom.HTMLBaseElement", "HTMLBaseElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLBodyElement = $pkg.HTMLBodyElement = $newType(0, $kindStruct, "dom.HTMLBodyElement", "HTMLBodyElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	ValidityState = $pkg.ValidityState = $newType(0, $kindStruct, "dom.ValidityState", "ValidityState", "honnef.co/go/js/dom", function(Object_, CustomError_, PatternMismatch_, RangeOverflow_, RangeUnderflow_, StepMismatch_, TooLong_, TypeMismatch_, Valid_, ValueMissing_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.CustomError = CustomError_ !== undefined ? CustomError_ : false;
		this.PatternMismatch = PatternMismatch_ !== undefined ? PatternMismatch_ : false;
		this.RangeOverflow = RangeOverflow_ !== undefined ? RangeOverflow_ : false;
		this.RangeUnderflow = RangeUnderflow_ !== undefined ? RangeUnderflow_ : false;
		this.StepMismatch = StepMismatch_ !== undefined ? StepMismatch_ : false;
		this.TooLong = TooLong_ !== undefined ? TooLong_ : false;
		this.TypeMismatch = TypeMismatch_ !== undefined ? TypeMismatch_ : false;
		this.Valid = Valid_ !== undefined ? Valid_ : false;
		this.ValueMissing = ValueMissing_ !== undefined ? ValueMissing_ : false;
	});
	HTMLButtonElement = $pkg.HTMLButtonElement = $newType(0, $kindStruct, "dom.HTMLButtonElement", "HTMLButtonElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, AutoFocus_, Disabled_, FormAction_, FormEncType_, FormMethod_, FormNoValidate_, FormTarget_, Name_, TabIndex_, Type_, ValidationMessage_, Value_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.AutoFocus = AutoFocus_ !== undefined ? AutoFocus_ : false;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.FormAction = FormAction_ !== undefined ? FormAction_ : "";
		this.FormEncType = FormEncType_ !== undefined ? FormEncType_ : "";
		this.FormMethod = FormMethod_ !== undefined ? FormMethod_ : "";
		this.FormNoValidate = FormNoValidate_ !== undefined ? FormNoValidate_ : false;
		this.FormTarget = FormTarget_ !== undefined ? FormTarget_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLCanvasElement = $pkg.HTMLCanvasElement = $newType(0, $kindStruct, "dom.HTMLCanvasElement", "HTMLCanvasElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Height_, Width_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Height = Height_ !== undefined ? Height_ : 0;
		this.Width = Width_ !== undefined ? Width_ : 0;
	});
	CanvasRenderingContext2D = $pkg.CanvasRenderingContext2D = $newType(0, $kindStruct, "dom.CanvasRenderingContext2D", "CanvasRenderingContext2D", "honnef.co/go/js/dom", function(Object_, FillStyle_, StrokeStyle_, ShadowColor_, ShadowBlur_, ShadowOffsetX_, ShadowOffsetY_, LineCap_, LineJoin_, LineWidth_, MiterLimit_, Font_, TextAlign_, TextBaseline_, GlobalAlpha_, GlobalCompositeOperation_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
		this.FillStyle = FillStyle_ !== undefined ? FillStyle_ : "";
		this.StrokeStyle = StrokeStyle_ !== undefined ? StrokeStyle_ : "";
		this.ShadowColor = ShadowColor_ !== undefined ? ShadowColor_ : "";
		this.ShadowBlur = ShadowBlur_ !== undefined ? ShadowBlur_ : 0;
		this.ShadowOffsetX = ShadowOffsetX_ !== undefined ? ShadowOffsetX_ : 0;
		this.ShadowOffsetY = ShadowOffsetY_ !== undefined ? ShadowOffsetY_ : 0;
		this.LineCap = LineCap_ !== undefined ? LineCap_ : "";
		this.LineJoin = LineJoin_ !== undefined ? LineJoin_ : "";
		this.LineWidth = LineWidth_ !== undefined ? LineWidth_ : 0;
		this.MiterLimit = MiterLimit_ !== undefined ? MiterLimit_ : 0;
		this.Font = Font_ !== undefined ? Font_ : "";
		this.TextAlign = TextAlign_ !== undefined ? TextAlign_ : "";
		this.TextBaseline = TextBaseline_ !== undefined ? TextBaseline_ : "";
		this.GlobalAlpha = GlobalAlpha_ !== undefined ? GlobalAlpha_ : 0;
		this.GlobalCompositeOperation = GlobalCompositeOperation_ !== undefined ? GlobalCompositeOperation_ : "";
	});
	HTMLDListElement = $pkg.HTMLDListElement = $newType(0, $kindStruct, "dom.HTMLDListElement", "HTMLDListElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLDataElement = $pkg.HTMLDataElement = $newType(0, $kindStruct, "dom.HTMLDataElement", "HTMLDataElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Value_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Value = Value_ !== undefined ? Value_ : "";
	});
	HTMLDataListElement = $pkg.HTMLDataListElement = $newType(0, $kindStruct, "dom.HTMLDataListElement", "HTMLDataListElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLDirectoryElement = $pkg.HTMLDirectoryElement = $newType(0, $kindStruct, "dom.HTMLDirectoryElement", "HTMLDirectoryElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLDivElement = $pkg.HTMLDivElement = $newType(0, $kindStruct, "dom.HTMLDivElement", "HTMLDivElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLEmbedElement = $pkg.HTMLEmbedElement = $newType(0, $kindStruct, "dom.HTMLEmbedElement", "HTMLEmbedElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Src_, Type_, Width_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Src = Src_ !== undefined ? Src_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
		this.Width = Width_ !== undefined ? Width_ : "";
	});
	HTMLFieldSetElement = $pkg.HTMLFieldSetElement = $newType(0, $kindStruct, "dom.HTMLFieldSetElement", "HTMLFieldSetElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Disabled_, Name_, Type_, ValidationMessage_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLFontElement = $pkg.HTMLFontElement = $newType(0, $kindStruct, "dom.HTMLFontElement", "HTMLFontElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLFormElement = $pkg.HTMLFormElement = $newType(0, $kindStruct, "dom.HTMLFormElement", "HTMLFormElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, AcceptCharset_, Action_, Autocomplete_, Encoding_, Enctype_, Length_, Method_, Name_, NoValidate_, Target_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.AcceptCharset = AcceptCharset_ !== undefined ? AcceptCharset_ : "";
		this.Action = Action_ !== undefined ? Action_ : "";
		this.Autocomplete = Autocomplete_ !== undefined ? Autocomplete_ : "";
		this.Encoding = Encoding_ !== undefined ? Encoding_ : "";
		this.Enctype = Enctype_ !== undefined ? Enctype_ : "";
		this.Length = Length_ !== undefined ? Length_ : 0;
		this.Method = Method_ !== undefined ? Method_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.NoValidate = NoValidate_ !== undefined ? NoValidate_ : false;
		this.Target = Target_ !== undefined ? Target_ : "";
	});
	HTMLFrameElement = $pkg.HTMLFrameElement = $newType(0, $kindStruct, "dom.HTMLFrameElement", "HTMLFrameElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLFrameSetElement = $pkg.HTMLFrameSetElement = $newType(0, $kindStruct, "dom.HTMLFrameSetElement", "HTMLFrameSetElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLHRElement = $pkg.HTMLHRElement = $newType(0, $kindStruct, "dom.HTMLHRElement", "HTMLHRElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLHeadElement = $pkg.HTMLHeadElement = $newType(0, $kindStruct, "dom.HTMLHeadElement", "HTMLHeadElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLHeadingElement = $pkg.HTMLHeadingElement = $newType(0, $kindStruct, "dom.HTMLHeadingElement", "HTMLHeadingElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLHtmlElement = $pkg.HTMLHtmlElement = $newType(0, $kindStruct, "dom.HTMLHtmlElement", "HTMLHtmlElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLIFrameElement = $pkg.HTMLIFrameElement = $newType(0, $kindStruct, "dom.HTMLIFrameElement", "HTMLIFrameElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Width_, Height_, Name_, Src_, SrcDoc_, Seamless_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Width = Width_ !== undefined ? Width_ : "";
		this.Height = Height_ !== undefined ? Height_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Src = Src_ !== undefined ? Src_ : "";
		this.SrcDoc = SrcDoc_ !== undefined ? SrcDoc_ : "";
		this.Seamless = Seamless_ !== undefined ? Seamless_ : false;
	});
	HTMLImageElement = $pkg.HTMLImageElement = $newType(0, $kindStruct, "dom.HTMLImageElement", "HTMLImageElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Complete_, CrossOrigin_, Height_, IsMap_, NaturalHeight_, NaturalWidth_, Src_, UseMap_, Width_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Complete = Complete_ !== undefined ? Complete_ : false;
		this.CrossOrigin = CrossOrigin_ !== undefined ? CrossOrigin_ : "";
		this.Height = Height_ !== undefined ? Height_ : 0;
		this.IsMap = IsMap_ !== undefined ? IsMap_ : false;
		this.NaturalHeight = NaturalHeight_ !== undefined ? NaturalHeight_ : 0;
		this.NaturalWidth = NaturalWidth_ !== undefined ? NaturalWidth_ : 0;
		this.Src = Src_ !== undefined ? Src_ : "";
		this.UseMap = UseMap_ !== undefined ? UseMap_ : "";
		this.Width = Width_ !== undefined ? Width_ : 0;
	});
	HTMLInputElement = $pkg.HTMLInputElement = $newType(0, $kindStruct, "dom.HTMLInputElement", "HTMLInputElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Accept_, Alt_, Autocomplete_, Autofocus_, Checked_, DefaultChecked_, DefaultValue_, DirName_, Disabled_, FormAction_, FormEncType_, FormMethod_, FormNoValidate_, FormTarget_, Height_, Indeterminate_, Max_, MaxLength_, Min_, Multiple_, Name_, Pattern_, Placeholder_, ReadOnly_, Required_, SelectionDirection_, SelectionEnd_, SelectionStart_, Size_, Src_, Step_, TabIndex_, Type_, ValidationMessage_, Value_, ValueAsDate_, ValueAsNumber_, Width_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Accept = Accept_ !== undefined ? Accept_ : "";
		this.Alt = Alt_ !== undefined ? Alt_ : "";
		this.Autocomplete = Autocomplete_ !== undefined ? Autocomplete_ : "";
		this.Autofocus = Autofocus_ !== undefined ? Autofocus_ : false;
		this.Checked = Checked_ !== undefined ? Checked_ : false;
		this.DefaultChecked = DefaultChecked_ !== undefined ? DefaultChecked_ : false;
		this.DefaultValue = DefaultValue_ !== undefined ? DefaultValue_ : "";
		this.DirName = DirName_ !== undefined ? DirName_ : "";
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.FormAction = FormAction_ !== undefined ? FormAction_ : "";
		this.FormEncType = FormEncType_ !== undefined ? FormEncType_ : "";
		this.FormMethod = FormMethod_ !== undefined ? FormMethod_ : "";
		this.FormNoValidate = FormNoValidate_ !== undefined ? FormNoValidate_ : false;
		this.FormTarget = FormTarget_ !== undefined ? FormTarget_ : "";
		this.Height = Height_ !== undefined ? Height_ : "";
		this.Indeterminate = Indeterminate_ !== undefined ? Indeterminate_ : false;
		this.Max = Max_ !== undefined ? Max_ : "";
		this.MaxLength = MaxLength_ !== undefined ? MaxLength_ : 0;
		this.Min = Min_ !== undefined ? Min_ : "";
		this.Multiple = Multiple_ !== undefined ? Multiple_ : false;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Pattern = Pattern_ !== undefined ? Pattern_ : "";
		this.Placeholder = Placeholder_ !== undefined ? Placeholder_ : "";
		this.ReadOnly = ReadOnly_ !== undefined ? ReadOnly_ : false;
		this.Required = Required_ !== undefined ? Required_ : false;
		this.SelectionDirection = SelectionDirection_ !== undefined ? SelectionDirection_ : "";
		this.SelectionEnd = SelectionEnd_ !== undefined ? SelectionEnd_ : 0;
		this.SelectionStart = SelectionStart_ !== undefined ? SelectionStart_ : 0;
		this.Size = Size_ !== undefined ? Size_ : 0;
		this.Src = Src_ !== undefined ? Src_ : "";
		this.Step = Step_ !== undefined ? Step_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.ValueAsDate = ValueAsDate_ !== undefined ? ValueAsDate_ : new time.Time.ptr();
		this.ValueAsNumber = ValueAsNumber_ !== undefined ? ValueAsNumber_ : 0;
		this.Width = Width_ !== undefined ? Width_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	File = $pkg.File = $newType(0, $kindStruct, "dom.File", "File", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	HTMLKeygenElement = $pkg.HTMLKeygenElement = $newType(0, $kindStruct, "dom.HTMLKeygenElement", "HTMLKeygenElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Autofocus_, Challenge_, Disabled_, Keytype_, Name_, Type_, ValidationMessage_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Autofocus = Autofocus_ !== undefined ? Autofocus_ : false;
		this.Challenge = Challenge_ !== undefined ? Challenge_ : "";
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Keytype = Keytype_ !== undefined ? Keytype_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLLIElement = $pkg.HTMLLIElement = $newType(0, $kindStruct, "dom.HTMLLIElement", "HTMLLIElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Value_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Value = Value_ !== undefined ? Value_ : 0;
	});
	HTMLLabelElement = $pkg.HTMLLabelElement = $newType(0, $kindStruct, "dom.HTMLLabelElement", "HTMLLabelElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, For_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.For = For_ !== undefined ? For_ : "";
	});
	HTMLLegendElement = $pkg.HTMLLegendElement = $newType(0, $kindStruct, "dom.HTMLLegendElement", "HTMLLegendElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLLinkElement = $pkg.HTMLLinkElement = $newType(0, $kindStruct, "dom.HTMLLinkElement", "HTMLLinkElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Disabled_, Href_, HrefLang_, Media_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Href = Href_ !== undefined ? Href_ : "";
		this.HrefLang = HrefLang_ !== undefined ? HrefLang_ : "";
		this.Media = Media_ !== undefined ? Media_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLMapElement = $pkg.HTMLMapElement = $newType(0, $kindStruct, "dom.HTMLMapElement", "HTMLMapElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Name_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Name = Name_ !== undefined ? Name_ : "";
	});
	HTMLMediaElement = $pkg.HTMLMediaElement = $newType(0, $kindStruct, "dom.HTMLMediaElement", "HTMLMediaElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLMenuElement = $pkg.HTMLMenuElement = $newType(0, $kindStruct, "dom.HTMLMenuElement", "HTMLMenuElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLMetaElement = $pkg.HTMLMetaElement = $newType(0, $kindStruct, "dom.HTMLMetaElement", "HTMLMetaElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Content_, HTTPEquiv_, Name_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Content = Content_ !== undefined ? Content_ : "";
		this.HTTPEquiv = HTTPEquiv_ !== undefined ? HTTPEquiv_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
	});
	HTMLMeterElement = $pkg.HTMLMeterElement = $newType(0, $kindStruct, "dom.HTMLMeterElement", "HTMLMeterElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, High_, Low_, Max_, Min_, Optimum_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.High = High_ !== undefined ? High_ : 0;
		this.Low = Low_ !== undefined ? Low_ : 0;
		this.Max = Max_ !== undefined ? Max_ : 0;
		this.Min = Min_ !== undefined ? Min_ : 0;
		this.Optimum = Optimum_ !== undefined ? Optimum_ : 0;
	});
	HTMLModElement = $pkg.HTMLModElement = $newType(0, $kindStruct, "dom.HTMLModElement", "HTMLModElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Cite_, DateTime_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Cite = Cite_ !== undefined ? Cite_ : "";
		this.DateTime = DateTime_ !== undefined ? DateTime_ : "";
	});
	HTMLOListElement = $pkg.HTMLOListElement = $newType(0, $kindStruct, "dom.HTMLOListElement", "HTMLOListElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Reversed_, Start_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Reversed = Reversed_ !== undefined ? Reversed_ : false;
		this.Start = Start_ !== undefined ? Start_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLObjectElement = $pkg.HTMLObjectElement = $newType(0, $kindStruct, "dom.HTMLObjectElement", "HTMLObjectElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Data_, Height_, Name_, TabIndex_, Type_, TypeMustMatch_, UseMap_, ValidationMessage_, With_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Data = Data_ !== undefined ? Data_ : "";
		this.Height = Height_ !== undefined ? Height_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.TypeMustMatch = TypeMustMatch_ !== undefined ? TypeMustMatch_ : false;
		this.UseMap = UseMap_ !== undefined ? UseMap_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.With = With_ !== undefined ? With_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLOptGroupElement = $pkg.HTMLOptGroupElement = $newType(0, $kindStruct, "dom.HTMLOptGroupElement", "HTMLOptGroupElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Disabled_, Label_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Label = Label_ !== undefined ? Label_ : "";
	});
	HTMLOptionElement = $pkg.HTMLOptionElement = $newType(0, $kindStruct, "dom.HTMLOptionElement", "HTMLOptionElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, DefaultSelected_, Disabled_, Index_, Label_, Selected_, Text_, Value_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.DefaultSelected = DefaultSelected_ !== undefined ? DefaultSelected_ : false;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Index = Index_ !== undefined ? Index_ : 0;
		this.Label = Label_ !== undefined ? Label_ : "";
		this.Selected = Selected_ !== undefined ? Selected_ : false;
		this.Text = Text_ !== undefined ? Text_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
	});
	HTMLOutputElement = $pkg.HTMLOutputElement = $newType(0, $kindStruct, "dom.HTMLOutputElement", "HTMLOutputElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, DefaultValue_, Name_, Type_, ValidationMessage_, Value_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.DefaultValue = DefaultValue_ !== undefined ? DefaultValue_ : "";
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLParagraphElement = $pkg.HTMLParagraphElement = $newType(0, $kindStruct, "dom.HTMLParagraphElement", "HTMLParagraphElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLParamElement = $pkg.HTMLParamElement = $newType(0, $kindStruct, "dom.HTMLParamElement", "HTMLParamElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Name_, Value_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
	});
	HTMLPreElement = $pkg.HTMLPreElement = $newType(0, $kindStruct, "dom.HTMLPreElement", "HTMLPreElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLProgressElement = $pkg.HTMLProgressElement = $newType(0, $kindStruct, "dom.HTMLProgressElement", "HTMLProgressElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Max_, Position_, Value_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Max = Max_ !== undefined ? Max_ : 0;
		this.Position = Position_ !== undefined ? Position_ : 0;
		this.Value = Value_ !== undefined ? Value_ : 0;
	});
	HTMLQuoteElement = $pkg.HTMLQuoteElement = $newType(0, $kindStruct, "dom.HTMLQuoteElement", "HTMLQuoteElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Cite_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Cite = Cite_ !== undefined ? Cite_ : "";
	});
	HTMLScriptElement = $pkg.HTMLScriptElement = $newType(0, $kindStruct, "dom.HTMLScriptElement", "HTMLScriptElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Type_, Src_, Charset_, Async_, Defer_, Text_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.Src = Src_ !== undefined ? Src_ : "";
		this.Charset = Charset_ !== undefined ? Charset_ : "";
		this.Async = Async_ !== undefined ? Async_ : false;
		this.Defer = Defer_ !== undefined ? Defer_ : false;
		this.Text = Text_ !== undefined ? Text_ : "";
	});
	HTMLSelectElement = $pkg.HTMLSelectElement = $newType(0, $kindStruct, "dom.HTMLSelectElement", "HTMLSelectElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Autofocus_, Disabled_, Length_, Multiple_, Name_, Required_, SelectedIndex_, Size_, Type_, ValidationMessage_, Value_, WillValidate_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Autofocus = Autofocus_ !== undefined ? Autofocus_ : false;
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.Length = Length_ !== undefined ? Length_ : 0;
		this.Multiple = Multiple_ !== undefined ? Multiple_ : false;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Required = Required_ !== undefined ? Required_ : false;
		this.SelectedIndex = SelectedIndex_ !== undefined ? SelectedIndex_ : 0;
		this.Size = Size_ !== undefined ? Size_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
	});
	HTMLSourceElement = $pkg.HTMLSourceElement = $newType(0, $kindStruct, "dom.HTMLSourceElement", "HTMLSourceElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Media_, Src_, Type_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Media = Media_ !== undefined ? Media_ : "";
		this.Src = Src_ !== undefined ? Src_ : "";
		this.Type = Type_ !== undefined ? Type_ : "";
	});
	HTMLSpanElement = $pkg.HTMLSpanElement = $newType(0, $kindStruct, "dom.HTMLSpanElement", "HTMLSpanElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLStyleElement = $pkg.HTMLStyleElement = $newType(0, $kindStruct, "dom.HTMLStyleElement", "HTMLStyleElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLTableCaptionElement = $pkg.HTMLTableCaptionElement = $newType(0, $kindStruct, "dom.HTMLTableCaptionElement", "HTMLTableCaptionElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLTableCellElement = $pkg.HTMLTableCellElement = $newType(0, $kindStruct, "dom.HTMLTableCellElement", "HTMLTableCellElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, ColSpan_, RowSpan_, CellIndex_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.ColSpan = ColSpan_ !== undefined ? ColSpan_ : 0;
		this.RowSpan = RowSpan_ !== undefined ? RowSpan_ : 0;
		this.CellIndex = CellIndex_ !== undefined ? CellIndex_ : 0;
	});
	HTMLTableColElement = $pkg.HTMLTableColElement = $newType(0, $kindStruct, "dom.HTMLTableColElement", "HTMLTableColElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Span_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Span = Span_ !== undefined ? Span_ : 0;
	});
	HTMLTableDataCellElement = $pkg.HTMLTableDataCellElement = $newType(0, $kindStruct, "dom.HTMLTableDataCellElement", "HTMLTableDataCellElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLTableElement = $pkg.HTMLTableElement = $newType(0, $kindStruct, "dom.HTMLTableElement", "HTMLTableElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLTableHeaderCellElement = $pkg.HTMLTableHeaderCellElement = $newType(0, $kindStruct, "dom.HTMLTableHeaderCellElement", "HTMLTableHeaderCellElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Abbr_, Scope_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Abbr = Abbr_ !== undefined ? Abbr_ : "";
		this.Scope = Scope_ !== undefined ? Scope_ : "";
	});
	HTMLTableRowElement = $pkg.HTMLTableRowElement = $newType(0, $kindStruct, "dom.HTMLTableRowElement", "HTMLTableRowElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, RowIndex_, SectionRowIndex_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.RowIndex = RowIndex_ !== undefined ? RowIndex_ : 0;
		this.SectionRowIndex = SectionRowIndex_ !== undefined ? SectionRowIndex_ : 0;
	});
	HTMLTableSectionElement = $pkg.HTMLTableSectionElement = $newType(0, $kindStruct, "dom.HTMLTableSectionElement", "HTMLTableSectionElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLTextAreaElement = $pkg.HTMLTextAreaElement = $newType(0, $kindStruct, "dom.HTMLTextAreaElement", "HTMLTextAreaElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Autocomplete_, Autofocus_, Cols_, DefaultValue_, DirName_, Disabled_, MaxLength_, Name_, Placeholder_, ReadOnly_, Required_, Rows_, SelectionDirection_, SelectionStart_, SelectionEnd_, TabIndex_, TextLength_, Type_, ValidationMessage_, Value_, WillValidate_, Wrap_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Autocomplete = Autocomplete_ !== undefined ? Autocomplete_ : "";
		this.Autofocus = Autofocus_ !== undefined ? Autofocus_ : false;
		this.Cols = Cols_ !== undefined ? Cols_ : 0;
		this.DefaultValue = DefaultValue_ !== undefined ? DefaultValue_ : "";
		this.DirName = DirName_ !== undefined ? DirName_ : "";
		this.Disabled = Disabled_ !== undefined ? Disabled_ : false;
		this.MaxLength = MaxLength_ !== undefined ? MaxLength_ : 0;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Placeholder = Placeholder_ !== undefined ? Placeholder_ : "";
		this.ReadOnly = ReadOnly_ !== undefined ? ReadOnly_ : false;
		this.Required = Required_ !== undefined ? Required_ : false;
		this.Rows = Rows_ !== undefined ? Rows_ : 0;
		this.SelectionDirection = SelectionDirection_ !== undefined ? SelectionDirection_ : "";
		this.SelectionStart = SelectionStart_ !== undefined ? SelectionStart_ : 0;
		this.SelectionEnd = SelectionEnd_ !== undefined ? SelectionEnd_ : 0;
		this.TabIndex = TabIndex_ !== undefined ? TabIndex_ : 0;
		this.TextLength = TextLength_ !== undefined ? TextLength_ : 0;
		this.Type = Type_ !== undefined ? Type_ : "";
		this.ValidationMessage = ValidationMessage_ !== undefined ? ValidationMessage_ : "";
		this.Value = Value_ !== undefined ? Value_ : "";
		this.WillValidate = WillValidate_ !== undefined ? WillValidate_ : false;
		this.Wrap = Wrap_ !== undefined ? Wrap_ : "";
	});
	HTMLTimeElement = $pkg.HTMLTimeElement = $newType(0, $kindStruct, "dom.HTMLTimeElement", "HTMLTimeElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, DateTime_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.DateTime = DateTime_ !== undefined ? DateTime_ : "";
	});
	HTMLTitleElement = $pkg.HTMLTitleElement = $newType(0, $kindStruct, "dom.HTMLTitleElement", "HTMLTitleElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Text_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Text = Text_ !== undefined ? Text_ : "";
	});
	TextTrack = $pkg.TextTrack = $newType(0, $kindStruct, "dom.TextTrack", "TextTrack", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	HTMLTrackElement = $pkg.HTMLTrackElement = $newType(0, $kindStruct, "dom.HTMLTrackElement", "HTMLTrackElement", "honnef.co/go/js/dom", function(BasicHTMLElement_, Kind_, Src_, Srclang_, Label_, Default_, ReadyState_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
		this.Kind = Kind_ !== undefined ? Kind_ : "";
		this.Src = Src_ !== undefined ? Src_ : "";
		this.Srclang = Srclang_ !== undefined ? Srclang_ : "";
		this.Label = Label_ !== undefined ? Label_ : "";
		this.Default = Default_ !== undefined ? Default_ : false;
		this.ReadyState = ReadyState_ !== undefined ? ReadyState_ : 0;
	});
	HTMLUListElement = $pkg.HTMLUListElement = $newType(0, $kindStruct, "dom.HTMLUListElement", "HTMLUListElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLUnknownElement = $pkg.HTMLUnknownElement = $newType(0, $kindStruct, "dom.HTMLUnknownElement", "HTMLUnknownElement", "honnef.co/go/js/dom", function(BasicHTMLElement_) {
		this.$val = this;
		this.BasicHTMLElement = BasicHTMLElement_ !== undefined ? BasicHTMLElement_ : ptrType.nil;
	});
	HTMLVideoElement = $pkg.HTMLVideoElement = $newType(0, $kindStruct, "dom.HTMLVideoElement", "HTMLVideoElement", "honnef.co/go/js/dom", function(HTMLMediaElement_) {
		this.$val = this;
		this.HTMLMediaElement = HTMLMediaElement_ !== undefined ? HTMLMediaElement_ : ptrType$2.nil;
	});
	CSSStyleDeclaration = $pkg.CSSStyleDeclaration = $newType(0, $kindStruct, "dom.CSSStyleDeclaration", "CSSStyleDeclaration", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	Text = $pkg.Text = $newType(0, $kindStruct, "dom.Text", "Text", "honnef.co/go/js/dom", function(BasicNode_) {
		this.$val = this;
		this.BasicNode = BasicNode_ !== undefined ? BasicNode_ : ptrType$20.nil;
	});
	Event = $pkg.Event = $newType(8, $kindInterface, "dom.Event", "Event", "honnef.co/go/js/dom", null);
	BasicEvent = $pkg.BasicEvent = $newType(0, $kindStruct, "dom.BasicEvent", "BasicEvent", "honnef.co/go/js/dom", function(Object_) {
		this.$val = this;
		this.Object = Object_ !== undefined ? Object_ : null;
	});
	AnimationEvent = $pkg.AnimationEvent = $newType(0, $kindStruct, "dom.AnimationEvent", "AnimationEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	AudioProcessingEvent = $pkg.AudioProcessingEvent = $newType(0, $kindStruct, "dom.AudioProcessingEvent", "AudioProcessingEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	BeforeInputEvent = $pkg.BeforeInputEvent = $newType(0, $kindStruct, "dom.BeforeInputEvent", "BeforeInputEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	BeforeUnloadEvent = $pkg.BeforeUnloadEvent = $newType(0, $kindStruct, "dom.BeforeUnloadEvent", "BeforeUnloadEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	BlobEvent = $pkg.BlobEvent = $newType(0, $kindStruct, "dom.BlobEvent", "BlobEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	ClipboardEvent = $pkg.ClipboardEvent = $newType(0, $kindStruct, "dom.ClipboardEvent", "ClipboardEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	CloseEvent = $pkg.CloseEvent = $newType(0, $kindStruct, "dom.CloseEvent", "CloseEvent", "honnef.co/go/js/dom", function(BasicEvent_, Code_, Reason_, WasClean_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
		this.Code = Code_ !== undefined ? Code_ : 0;
		this.Reason = Reason_ !== undefined ? Reason_ : "";
		this.WasClean = WasClean_ !== undefined ? WasClean_ : false;
	});
	CompositionEvent = $pkg.CompositionEvent = $newType(0, $kindStruct, "dom.CompositionEvent", "CompositionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	CSSFontFaceLoadEvent = $pkg.CSSFontFaceLoadEvent = $newType(0, $kindStruct, "dom.CSSFontFaceLoadEvent", "CSSFontFaceLoadEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	CustomEvent = $pkg.CustomEvent = $newType(0, $kindStruct, "dom.CustomEvent", "CustomEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DeviceLightEvent = $pkg.DeviceLightEvent = $newType(0, $kindStruct, "dom.DeviceLightEvent", "DeviceLightEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DeviceMotionEvent = $pkg.DeviceMotionEvent = $newType(0, $kindStruct, "dom.DeviceMotionEvent", "DeviceMotionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DeviceOrientationEvent = $pkg.DeviceOrientationEvent = $newType(0, $kindStruct, "dom.DeviceOrientationEvent", "DeviceOrientationEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DeviceProximityEvent = $pkg.DeviceProximityEvent = $newType(0, $kindStruct, "dom.DeviceProximityEvent", "DeviceProximityEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DOMTransactionEvent = $pkg.DOMTransactionEvent = $newType(0, $kindStruct, "dom.DOMTransactionEvent", "DOMTransactionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	DragEvent = $pkg.DragEvent = $newType(0, $kindStruct, "dom.DragEvent", "DragEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	EditingBeforeInputEvent = $pkg.EditingBeforeInputEvent = $newType(0, $kindStruct, "dom.EditingBeforeInputEvent", "EditingBeforeInputEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	ErrorEvent = $pkg.ErrorEvent = $newType(0, $kindStruct, "dom.ErrorEvent", "ErrorEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	FocusEvent = $pkg.FocusEvent = $newType(0, $kindStruct, "dom.FocusEvent", "FocusEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	GamepadEvent = $pkg.GamepadEvent = $newType(0, $kindStruct, "dom.GamepadEvent", "GamepadEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	HashChangeEvent = $pkg.HashChangeEvent = $newType(0, $kindStruct, "dom.HashChangeEvent", "HashChangeEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	IDBVersionChangeEvent = $pkg.IDBVersionChangeEvent = $newType(0, $kindStruct, "dom.IDBVersionChangeEvent", "IDBVersionChangeEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	KeyboardEvent = $pkg.KeyboardEvent = $newType(0, $kindStruct, "dom.KeyboardEvent", "KeyboardEvent", "honnef.co/go/js/dom", function(BasicEvent_, AltKey_, CharCode_, CtrlKey_, Key_, KeyIdentifier_, KeyCode_, Locale_, Location_, KeyLocation_, MetaKey_, Repeat_, ShiftKey_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
		this.AltKey = AltKey_ !== undefined ? AltKey_ : false;
		this.CharCode = CharCode_ !== undefined ? CharCode_ : 0;
		this.CtrlKey = CtrlKey_ !== undefined ? CtrlKey_ : false;
		this.Key = Key_ !== undefined ? Key_ : "";
		this.KeyIdentifier = KeyIdentifier_ !== undefined ? KeyIdentifier_ : "";
		this.KeyCode = KeyCode_ !== undefined ? KeyCode_ : 0;
		this.Locale = Locale_ !== undefined ? Locale_ : "";
		this.Location = Location_ !== undefined ? Location_ : 0;
		this.KeyLocation = KeyLocation_ !== undefined ? KeyLocation_ : 0;
		this.MetaKey = MetaKey_ !== undefined ? MetaKey_ : false;
		this.Repeat = Repeat_ !== undefined ? Repeat_ : false;
		this.ShiftKey = ShiftKey_ !== undefined ? ShiftKey_ : false;
	});
	MediaStreamEvent = $pkg.MediaStreamEvent = $newType(0, $kindStruct, "dom.MediaStreamEvent", "MediaStreamEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	MessageEvent = $pkg.MessageEvent = $newType(0, $kindStruct, "dom.MessageEvent", "MessageEvent", "honnef.co/go/js/dom", function(BasicEvent_, Data_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
		this.Data = Data_ !== undefined ? Data_ : null;
	});
	MouseEvent = $pkg.MouseEvent = $newType(0, $kindStruct, "dom.MouseEvent", "MouseEvent", "honnef.co/go/js/dom", function(UIEvent_, AltKey_, Button_, ClientX_, ClientY_, CtrlKey_, MetaKey_, MovementX_, MovementY_, ScreenX_, ScreenY_, ShiftKey_) {
		this.$val = this;
		this.UIEvent = UIEvent_ !== undefined ? UIEvent_ : ptrType$17.nil;
		this.AltKey = AltKey_ !== undefined ? AltKey_ : false;
		this.Button = Button_ !== undefined ? Button_ : 0;
		this.ClientX = ClientX_ !== undefined ? ClientX_ : 0;
		this.ClientY = ClientY_ !== undefined ? ClientY_ : 0;
		this.CtrlKey = CtrlKey_ !== undefined ? CtrlKey_ : false;
		this.MetaKey = MetaKey_ !== undefined ? MetaKey_ : false;
		this.MovementX = MovementX_ !== undefined ? MovementX_ : 0;
		this.MovementY = MovementY_ !== undefined ? MovementY_ : 0;
		this.ScreenX = ScreenX_ !== undefined ? ScreenX_ : 0;
		this.ScreenY = ScreenY_ !== undefined ? ScreenY_ : 0;
		this.ShiftKey = ShiftKey_ !== undefined ? ShiftKey_ : false;
	});
	MutationEvent = $pkg.MutationEvent = $newType(0, $kindStruct, "dom.MutationEvent", "MutationEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	OfflineAudioCompletionEvent = $pkg.OfflineAudioCompletionEvent = $newType(0, $kindStruct, "dom.OfflineAudioCompletionEvent", "OfflineAudioCompletionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	PageTransitionEvent = $pkg.PageTransitionEvent = $newType(0, $kindStruct, "dom.PageTransitionEvent", "PageTransitionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	PointerEvent = $pkg.PointerEvent = $newType(0, $kindStruct, "dom.PointerEvent", "PointerEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	PopStateEvent = $pkg.PopStateEvent = $newType(0, $kindStruct, "dom.PopStateEvent", "PopStateEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	ProgressEvent = $pkg.ProgressEvent = $newType(0, $kindStruct, "dom.ProgressEvent", "ProgressEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	RelatedEvent = $pkg.RelatedEvent = $newType(0, $kindStruct, "dom.RelatedEvent", "RelatedEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	RTCPeerConnectionIceEvent = $pkg.RTCPeerConnectionIceEvent = $newType(0, $kindStruct, "dom.RTCPeerConnectionIceEvent", "RTCPeerConnectionIceEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	SensorEvent = $pkg.SensorEvent = $newType(0, $kindStruct, "dom.SensorEvent", "SensorEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	StorageEvent = $pkg.StorageEvent = $newType(0, $kindStruct, "dom.StorageEvent", "StorageEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	SVGEvent = $pkg.SVGEvent = $newType(0, $kindStruct, "dom.SVGEvent", "SVGEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	SVGZoomEvent = $pkg.SVGZoomEvent = $newType(0, $kindStruct, "dom.SVGZoomEvent", "SVGZoomEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	TimeEvent = $pkg.TimeEvent = $newType(0, $kindStruct, "dom.TimeEvent", "TimeEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	TouchEvent = $pkg.TouchEvent = $newType(0, $kindStruct, "dom.TouchEvent", "TouchEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	TrackEvent = $pkg.TrackEvent = $newType(0, $kindStruct, "dom.TrackEvent", "TrackEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	TransitionEvent = $pkg.TransitionEvent = $newType(0, $kindStruct, "dom.TransitionEvent", "TransitionEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	UIEvent = $pkg.UIEvent = $newType(0, $kindStruct, "dom.UIEvent", "UIEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	UserProximityEvent = $pkg.UserProximityEvent = $newType(0, $kindStruct, "dom.UserProximityEvent", "UserProximityEvent", "honnef.co/go/js/dom", function(BasicEvent_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
	});
	WheelEvent = $pkg.WheelEvent = $newType(0, $kindStruct, "dom.WheelEvent", "WheelEvent", "honnef.co/go/js/dom", function(BasicEvent_, DeltaX_, DeltaY_, DeltaZ_, DeltaMode_) {
		this.$val = this;
		this.BasicEvent = BasicEvent_ !== undefined ? BasicEvent_ : ptrType$16.nil;
		this.DeltaX = DeltaX_ !== undefined ? DeltaX_ : 0;
		this.DeltaY = DeltaY_ !== undefined ? DeltaY_ : 0;
		this.DeltaZ = DeltaZ_ !== undefined ? DeltaZ_ : 0;
		this.DeltaMode = DeltaMode_ !== undefined ? DeltaMode_ : 0;
	});
		sliceType = $sliceType($emptyInterface);
		sliceType$1 = $sliceType(Node);
		sliceType$2 = $sliceType(Element);
		sliceType$3 = $sliceType(HTMLElement);
		ptrType = $ptrType(BasicHTMLElement);
		ptrType$1 = $ptrType(URLUtils);
		ptrType$2 = $ptrType(HTMLMediaElement);
		ptrType$3 = $ptrType(HTMLFormElement);
		ptrType$4 = $ptrType(HTMLLabelElement);
		sliceType$4 = $sliceType(ptrType$4);
		sliceType$5 = $sliceType($String);
		sliceType$6 = $sliceType(ptrType$3);
		ptrType$5 = $ptrType(HTMLHeadElement);
		ptrType$6 = $ptrType(HTMLImageElement);
		sliceType$7 = $sliceType(ptrType$6);
		ptrType$7 = $ptrType(HTMLEmbedElement);
		sliceType$8 = $sliceType(ptrType$7);
		ptrType$8 = $ptrType(HTMLScriptElement);
		sliceType$9 = $sliceType(ptrType$8);
		sliceType$10 = $sliceType(StyleSheet);
		ptrType$9 = $ptrType(Text);
		funcType = $funcType([], [], false);
		funcType$1 = $funcType([js.Object], [], false);
		funcType$2 = $funcType([js.Object], [], false);
		ptrType$10 = $ptrType(HTMLOptionElement);
		sliceType$11 = $sliceType(ptrType$10);
		ptrType$11 = $ptrType(File);
		sliceType$12 = $sliceType(ptrType$11);
		ptrType$12 = $ptrType(HTMLDataListElement);
		ptrType$13 = $ptrType(HTMLAreaElement);
		sliceType$13 = $sliceType(ptrType$13);
		ptrType$14 = $ptrType(HTMLTableCellElement);
		sliceType$14 = $sliceType(ptrType$14);
		ptrType$15 = $ptrType(HTMLTableRowElement);
		sliceType$15 = $sliceType(ptrType$15);
		ptrType$16 = $ptrType(BasicEvent);
		ptrType$17 = $ptrType(UIEvent);
		ptrType$18 = $ptrType(TokenList);
		funcType$3 = $funcType([Event], [], false);
		ptrType$19 = $ptrType(Location);
		ptrType$20 = $ptrType(BasicNode);
		ptrType$21 = $ptrType(document);
		ptrType$22 = $ptrType(htmlDocument);
		ptrType$23 = $ptrType(CSSStyleDeclaration);
		ptrType$24 = $ptrType(Console);
		ptrType$25 = $ptrType(Screen);
		ptrType$26 = $ptrType(window);
		funcType$4 = $funcType([Position], [], false);
		funcType$5 = $funcType([PositionError], [], false);
		ptrType$27 = $ptrType(PositionError);
		ptrType$28 = $ptrType(Coordinates);
		ptrType$29 = $ptrType(ClientRect);
		ptrType$30 = $ptrType(BasicElement);
		ptrType$31 = $ptrType(HTMLAnchorElement);
		ptrType$32 = $ptrType(HTMLAppletElement);
		ptrType$33 = $ptrType(HTMLAudioElement);
		ptrType$34 = $ptrType(HTMLBRElement);
		ptrType$35 = $ptrType(HTMLBaseElement);
		ptrType$36 = $ptrType(HTMLBodyElement);
		ptrType$37 = $ptrType(ValidityState);
		ptrType$38 = $ptrType(HTMLButtonElement);
		ptrType$39 = $ptrType(CanvasRenderingContext2D);
		ptrType$40 = $ptrType(HTMLCanvasElement);
		ptrType$41 = $ptrType(HTMLDListElement);
		ptrType$42 = $ptrType(HTMLDataElement);
		ptrType$43 = $ptrType(HTMLDirectoryElement);
		ptrType$44 = $ptrType(HTMLDivElement);
		ptrType$45 = $ptrType(HTMLFieldSetElement);
		ptrType$46 = $ptrType(HTMLFontElement);
		ptrType$47 = $ptrType(HTMLFrameElement);
		ptrType$48 = $ptrType(HTMLFrameSetElement);
		ptrType$49 = $ptrType(HTMLHRElement);
		ptrType$50 = $ptrType(HTMLHeadingElement);
		ptrType$51 = $ptrType(HTMLHtmlElement);
		ptrType$52 = $ptrType(HTMLIFrameElement);
		ptrType$53 = $ptrType(HTMLInputElement);
		ptrType$54 = $ptrType(HTMLKeygenElement);
		ptrType$55 = $ptrType(HTMLLIElement);
		ptrType$56 = $ptrType(HTMLLegendElement);
		ptrType$57 = $ptrType(HTMLLinkElement);
		ptrType$58 = $ptrType(HTMLMapElement);
		ptrType$59 = $ptrType(HTMLMenuElement);
		ptrType$60 = $ptrType(HTMLMetaElement);
		ptrType$61 = $ptrType(HTMLMeterElement);
		ptrType$62 = $ptrType(HTMLModElement);
		ptrType$63 = $ptrType(HTMLOListElement);
		ptrType$64 = $ptrType(HTMLObjectElement);
		ptrType$65 = $ptrType(HTMLOptGroupElement);
		ptrType$66 = $ptrType(HTMLOutputElement);
		ptrType$67 = $ptrType(HTMLParagraphElement);
		ptrType$68 = $ptrType(HTMLParamElement);
		ptrType$69 = $ptrType(HTMLPreElement);
		ptrType$70 = $ptrType(HTMLProgressElement);
		ptrType$71 = $ptrType(HTMLQuoteElement);
		ptrType$72 = $ptrType(HTMLSelectElement);
		ptrType$73 = $ptrType(HTMLSourceElement);
		ptrType$74 = $ptrType(HTMLSpanElement);
		ptrType$75 = $ptrType(HTMLStyleElement);
		ptrType$76 = $ptrType(HTMLTableCaptionElement);
		ptrType$77 = $ptrType(HTMLTableColElement);
		ptrType$78 = $ptrType(HTMLTableDataCellElement);
		ptrType$79 = $ptrType(HTMLTableElement);
		ptrType$80 = $ptrType(HTMLTableHeaderCellElement);
		ptrType$81 = $ptrType(HTMLTableSectionElement);
		ptrType$82 = $ptrType(HTMLTextAreaElement);
		ptrType$83 = $ptrType(HTMLTimeElement);
		ptrType$84 = $ptrType(HTMLTitleElement);
		ptrType$85 = $ptrType(TextTrack);
		ptrType$86 = $ptrType(HTMLTrackElement);
		ptrType$87 = $ptrType(HTMLUListElement);
		ptrType$88 = $ptrType(HTMLUnknownElement);
		ptrType$89 = $ptrType(HTMLVideoElement);
		mapType = $mapType($String, $String);
		ptrType$90 = $ptrType(AnimationEvent);
		ptrType$91 = $ptrType(AudioProcessingEvent);
		ptrType$92 = $ptrType(BeforeInputEvent);
		ptrType$93 = $ptrType(BeforeUnloadEvent);
		ptrType$94 = $ptrType(BlobEvent);
		ptrType$95 = $ptrType(ClipboardEvent);
		ptrType$96 = $ptrType(CloseEvent);
		ptrType$97 = $ptrType(CompositionEvent);
		ptrType$98 = $ptrType(CSSFontFaceLoadEvent);
		ptrType$99 = $ptrType(CustomEvent);
		ptrType$100 = $ptrType(DeviceLightEvent);
		ptrType$101 = $ptrType(DeviceMotionEvent);
		ptrType$102 = $ptrType(DeviceOrientationEvent);
		ptrType$103 = $ptrType(DeviceProximityEvent);
		ptrType$104 = $ptrType(DOMTransactionEvent);
		ptrType$105 = $ptrType(DragEvent);
		ptrType$106 = $ptrType(EditingBeforeInputEvent);
		ptrType$107 = $ptrType(ErrorEvent);
		ptrType$108 = $ptrType(FocusEvent);
		ptrType$109 = $ptrType(GamepadEvent);
		ptrType$110 = $ptrType(HashChangeEvent);
		ptrType$111 = $ptrType(IDBVersionChangeEvent);
		ptrType$112 = $ptrType(KeyboardEvent);
		ptrType$113 = $ptrType(MediaStreamEvent);
		ptrType$114 = $ptrType(MessageEvent);
		ptrType$115 = $ptrType(MouseEvent);
		ptrType$116 = $ptrType(MutationEvent);
		ptrType$117 = $ptrType(OfflineAudioCompletionEvent);
		ptrType$118 = $ptrType(PageTransitionEvent);
		ptrType$119 = $ptrType(PointerEvent);
		ptrType$120 = $ptrType(PopStateEvent);
		ptrType$121 = $ptrType(ProgressEvent);
		ptrType$122 = $ptrType(RelatedEvent);
		ptrType$123 = $ptrType(RTCPeerConnectionIceEvent);
		ptrType$124 = $ptrType(SensorEvent);
		ptrType$125 = $ptrType(StorageEvent);
		ptrType$126 = $ptrType(SVGEvent);
		ptrType$127 = $ptrType(SVGZoomEvent);
		ptrType$128 = $ptrType(TimeEvent);
		ptrType$129 = $ptrType(TouchEvent);
		ptrType$130 = $ptrType(TrackEvent);
		ptrType$131 = $ptrType(TransitionEvent);
		ptrType$132 = $ptrType(UserProximityEvent);
		ptrType$133 = $ptrType(WheelEvent);
	callRecover = function(o, fn, args) {
		var $deferred = [], $err = null, err = $ifaceNil, obj;
		/* */ try { $deferFrames.push($deferred);
		$deferred.push([(function() {
			var _tuple, e, ok, panicErr;
			e = $recover();
			if ($interfaceIsEqual(e, $ifaceNil)) {
				return;
			}
			_tuple = $assertType(e, $error, true); panicErr = _tuple[0]; ok = _tuple[1];
			if (ok && !($interfaceIsEqual(panicErr, $ifaceNil))) {
				err = panicErr;
			} else {
				$panic(e);
			}
		}), []]);
		(obj = o, obj[$externalize(fn, $String)].apply(obj, $externalize(args, sliceType)));
		err = $ifaceNil;
		return err;
		/* */ } catch(err) { $err = err; } finally { $deferFrames.pop(); $callDeferred($deferred, $err); return err; }
	};
	nodeListToNodes = function(o) {
		var i, length, out;
		out = sliceType$1.nil;
		length = $parseInt(o.length) >> 0;
		i = 0;
		while (i < length) {
			out = $append(out, wrapNode(o.item(i)));
			i = i + (1) >> 0;
		}
		return out;
	};
	nodeListToElements = function(o) {
		var i, length, out;
		out = sliceType$2.nil;
		length = $parseInt(o.length) >> 0;
		i = 0;
		while (i < length) {
			out = $append(out, wrapElement(o.item(i)));
			i = i + (1) >> 0;
		}
		return out;
	};
	nodeListToHTMLElements = function(o) {
		var i, length, out;
		out = sliceType$3.nil;
		length = $parseInt(o.length) >> 0;
		i = 0;
		while (i < length) {
			out = $append(out, wrapHTMLElement(o.item(i)));
			i = i + (1) >> 0;
		}
		return out;
	};
	wrapDocument = function(o) {
		var _ref;
		_ref = o.constructor;
		if (_ref === $global.HTMLDocument) {
			return new htmlDocument.ptr(new document.ptr(new BasicNode.ptr(o)));
		} else {
			return new document.ptr(new BasicNode.ptr(o));
		}
	};
	wrapNode = function(o) {
		var _ref;
		if (o === null || o === undefined) {
			return $ifaceNil;
		}
		_ref = o.constructor;
		if (_ref === $global.Text) {
			return new Text.ptr(new BasicNode.ptr(o));
		} else {
			return wrapElement(o);
		}
	};
	wrapElement = function(o) {
		var _ref;
		if (o === null || o === undefined) {
			return $ifaceNil;
		}
		_ref = o.constructor;
		return wrapHTMLElement(o);
	};
	wrapHTMLElement = function(o) {
		var _ref, c, el;
		if (o === null || o === undefined) {
			return $ifaceNil;
		}
		el = new BasicHTMLElement.ptr(new BasicElement.ptr(new BasicNode.ptr(o)));
		c = o.constructor;
		_ref = c;
		if (_ref === $global.HTMLAnchorElement) {
			return new HTMLAnchorElement.ptr(el, new URLUtils.ptr(o, "", "", "", "", "", "", "", "", "", "", ""), "", "", 0, "", "", "");
		} else if (_ref === $global.HTMLAppletElement) {
			return new HTMLAppletElement.ptr(el, "", "", "", "", "", "", 0, "", "");
		} else if (_ref === $global.HTMLAreaElement) {
			return new HTMLAreaElement.ptr(el, new URLUtils.ptr(o, "", "", "", "", "", "", "", "", "", "", ""), "", "", "", "", "", "", 0, "", "");
		} else if (_ref === $global.HTMLAudioElement) {
			return new HTMLAudioElement.ptr(new HTMLMediaElement.ptr(el));
		} else if (_ref === $global.HTMLBaseElement) {
			return new HTMLBaseElement.ptr(el);
		} else if (_ref === $global.HTMLBodyElement) {
			return new HTMLBodyElement.ptr(el);
		} else if (_ref === $global.HTMLBRElement) {
			return new HTMLBRElement.ptr(el);
		} else if (_ref === $global.HTMLButtonElement) {
			return new HTMLButtonElement.ptr(el, false, false, "", "", "", false, "", "", 0, "", "", "", false);
		} else if (_ref === $global.HTMLCanvasElement) {
			return new HTMLCanvasElement.ptr(el, 0, 0);
		} else if (_ref === $global.HTMLDataElement) {
			return new HTMLDataElement.ptr(el, "");
		} else if (_ref === $global.HTMLDataListElement) {
			return new HTMLDataListElement.ptr(el);
		} else if (_ref === $global.HTMLDirectoryElement) {
			return new HTMLDirectoryElement.ptr(el);
		} else if (_ref === $global.HTMLDivElement) {
			return new HTMLDivElement.ptr(el);
		} else if (_ref === $global.HTMLDListElement) {
			return new HTMLDListElement.ptr(el);
		} else if (_ref === $global.HTMLEmbedElement) {
			return new HTMLEmbedElement.ptr(el, "", "", "");
		} else if (_ref === $global.HTMLFieldSetElement) {
			return new HTMLFieldSetElement.ptr(el, false, "", "", "", false);
		} else if (_ref === $global.HTMLFontElement) {
			return new HTMLFontElement.ptr(el);
		} else if (_ref === $global.HTMLFormElement) {
			return new HTMLFormElement.ptr(el, "", "", "", "", "", 0, "", "", false, "");
		} else if (_ref === $global.HTMLFrameElement) {
			return new HTMLFrameElement.ptr(el);
		} else if (_ref === $global.HTMLFrameSetElement) {
			return new HTMLFrameSetElement.ptr(el);
		} else if (_ref === $global.HTMLHeadElement) {
			return new HTMLHeadElement.ptr(el);
		} else if (_ref === $global.HTMLHeadingElement) {
			return new HTMLHeadingElement.ptr(el);
		} else if (_ref === $global.HTMLHtmlElement) {
			return new HTMLHtmlElement.ptr(el);
		} else if (_ref === $global.HTMLHRElement) {
			return new HTMLHRElement.ptr(el);
		} else if (_ref === $global.HTMLIFrameElement) {
			return new HTMLIFrameElement.ptr(el, "", "", "", "", "", false);
		} else if (_ref === $global.HTMLImageElement) {
			return new HTMLImageElement.ptr(el, false, "", 0, false, 0, 0, "", "", 0);
		} else if (_ref === $global.HTMLInputElement) {
			return new HTMLInputElement.ptr(el, "", "", "", false, false, false, "", "", false, "", "", "", false, "", "", false, "", 0, "", false, "", "", "", false, false, "", 0, 0, 0, "", "", 0, "", "", "", new time.Time.ptr(), 0, "", false);
		} else if (_ref === $global.HTMLKeygenElement) {
			return new HTMLKeygenElement.ptr(el, false, "", false, "", "", "", "", false);
		} else if (_ref === $global.HTMLLabelElement) {
			return new HTMLLabelElement.ptr(el, "");
		} else if (_ref === $global.HTMLLegendElement) {
			return new HTMLLegendElement.ptr(el);
		} else if (_ref === $global.HTMLLIElement) {
			return new HTMLLIElement.ptr(el, 0);
		} else if (_ref === $global.HTMLLinkElement) {
			return new HTMLLinkElement.ptr(el, false, "", "", "", "");
		} else if (_ref === $global.HTMLMapElement) {
			return new HTMLMapElement.ptr(el, "");
		} else if (_ref === $global.HTMLMediaElement) {
			return new HTMLMediaElement.ptr(el);
		} else if (_ref === $global.HTMLMenuElement) {
			return new HTMLMenuElement.ptr(el);
		} else if (_ref === $global.HTMLMetaElement) {
			return new HTMLMetaElement.ptr(el, "", "", "");
		} else if (_ref === $global.HTMLMeterElement) {
			return new HTMLMeterElement.ptr(el, 0, 0, 0, 0, 0);
		} else if (_ref === $global.HTMLModElement) {
			return new HTMLModElement.ptr(el, "", "");
		} else if (_ref === $global.HTMLObjectElement) {
			return new HTMLObjectElement.ptr(el, "", "", "", 0, "", false, "", "", "", false);
		} else if (_ref === $global.HTMLOListElement) {
			return new HTMLOListElement.ptr(el, false, 0, "");
		} else if (_ref === $global.HTMLOptGroupElement) {
			return new HTMLOptGroupElement.ptr(el, false, "");
		} else if (_ref === $global.HTMLOptionElement) {
			return new HTMLOptionElement.ptr(el, false, false, 0, "", false, "", "");
		} else if (_ref === $global.HTMLOutputElement) {
			return new HTMLOutputElement.ptr(el, "", "", "", "", "", false);
		} else if (_ref === $global.HTMLParagraphElement) {
			return new HTMLParagraphElement.ptr(el);
		} else if (_ref === $global.HTMLParamElement) {
			return new HTMLParamElement.ptr(el, "", "");
		} else if (_ref === $global.HTMLPreElement) {
			return new HTMLPreElement.ptr(el);
		} else if (_ref === $global.HTMLProgressElement) {
			return new HTMLProgressElement.ptr(el, 0, 0, 0);
		} else if (_ref === $global.HTMLQuoteElement) {
			return new HTMLQuoteElement.ptr(el, "");
		} else if (_ref === $global.HTMLScriptElement) {
			return new HTMLScriptElement.ptr(el, "", "", "", false, false, "");
		} else if (_ref === $global.HTMLSelectElement) {
			return new HTMLSelectElement.ptr(el, false, false, 0, false, "", false, 0, 0, "", "", "", false);
		} else if (_ref === $global.HTMLSourceElement) {
			return new HTMLSourceElement.ptr(el, "", "", "");
		} else if (_ref === $global.HTMLSpanElement) {
			return new HTMLSpanElement.ptr(el);
		} else if (_ref === $global.HTMLStyleElement) {
			return new HTMLStyleElement.ptr(el);
		} else if (_ref === $global.HTMLTableElement) {
			return new HTMLTableElement.ptr(el);
		} else if (_ref === $global.HTMLTableCaptionElement) {
			return new HTMLTableCaptionElement.ptr(el);
		} else if (_ref === $global.HTMLTableCellElement) {
			return new HTMLTableCellElement.ptr(el, 0, 0, 0);
		} else if (_ref === $global.HTMLTableDataCellElement) {
			return new HTMLTableDataCellElement.ptr(el);
		} else if (_ref === $global.HTMLTableHeaderCellElement) {
			return new HTMLTableHeaderCellElement.ptr(el, "", "");
		} else if (_ref === $global.HTMLTableColElement) {
			return new HTMLTableColElement.ptr(el, 0);
		} else if (_ref === $global.HTMLTableRowElement) {
			return new HTMLTableRowElement.ptr(el, 0, 0);
		} else if (_ref === $global.HTMLTableSectionElement) {
			return new HTMLTableSectionElement.ptr(el);
		} else if (_ref === $global.HTMLTextAreaElement) {
			return new HTMLTextAreaElement.ptr(el, "", false, 0, "", "", false, 0, "", "", false, false, 0, "", 0, 0, 0, 0, "", "", "", false, "");
		} else if (_ref === $global.HTMLTimeElement) {
			return new HTMLTimeElement.ptr(el, "");
		} else if (_ref === $global.HTMLTitleElement) {
			return new HTMLTitleElement.ptr(el, "");
		} else if (_ref === $global.HTMLTrackElement) {
			return new HTMLTrackElement.ptr(el, "", "", "", "", false, 0);
		} else if (_ref === $global.HTMLUListElement) {
			return new HTMLUListElement.ptr(el);
		} else if (_ref === $global.HTMLUnknownElement) {
			return new HTMLUnknownElement.ptr(el);
		} else if (_ref === $global.HTMLVideoElement) {
			return new HTMLVideoElement.ptr(new HTMLMediaElement.ptr(el));
		} else if (_ref === $global.HTMLElement) {
			return el;
		} else {
			return el;
		}
	};
	getForm = function(o) {
		var form;
		form = wrapHTMLElement(o.form);
		if ($interfaceIsEqual(form, $ifaceNil)) {
			return ptrType$3.nil;
		}
		return $assertType(form, ptrType$3);
	};
	getLabels = function(o) {
		var _i, _ref, i, label, labels, out;
		labels = nodeListToElements(o.labels);
		out = $makeSlice(sliceType$4, labels.$length);
		_ref = labels;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			label = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = $assertType(label, ptrType$4);
			_i++;
		}
		return out;
	};
	GetWindow = $pkg.GetWindow = function() {
		return new window.ptr($global);
	};
	TokenList.ptr.prototype.Item = function(idx) {
		var o, tl;
		tl = this;
		o = tl.dtl.item(idx);
		if (o === null || o === undefined) {
			return "";
		}
		return $internalize(o, $String);
	};
	TokenList.prototype.Item = function(idx) { return this.$val.Item(idx); };
	TokenList.ptr.prototype.Contains = function(token) {
		var tl;
		tl = this;
		return !!(tl.dtl.contains($externalize(token, $String)));
	};
	TokenList.prototype.Contains = function(token) { return this.$val.Contains(token); };
	TokenList.ptr.prototype.Add = function(token) {
		var tl;
		tl = this;
		tl.dtl.add($externalize(token, $String));
	};
	TokenList.prototype.Add = function(token) { return this.$val.Add(token); };
	TokenList.ptr.prototype.Remove = function(token) {
		var tl;
		tl = this;
		tl.dtl.remove($externalize(token, $String));
	};
	TokenList.prototype.Remove = function(token) { return this.$val.Remove(token); };
	TokenList.ptr.prototype.Toggle = function(token) {
		var tl;
		tl = this;
		tl.dtl.toggle($externalize(token, $String));
	};
	TokenList.prototype.Toggle = function(token) { return this.$val.Toggle(token); };
	TokenList.ptr.prototype.String = function() {
		var tl;
		tl = this;
		if (!(tl.sa === "")) {
			return $internalize(tl.o[$externalize(tl.sa, $String)], $String);
		}
		if (tl.dtl.constructor === $global.DOMSettableTokenList) {
			return $internalize(tl.dtl.value, $String);
		}
		return "";
	};
	TokenList.prototype.String = function() { return this.$val.String(); };
	TokenList.ptr.prototype.Slice = function() {
		var i, length, out, tl;
		tl = this;
		out = sliceType$5.nil;
		length = $parseInt(tl.dtl.length) >> 0;
		i = 0;
		while (i < length) {
			out = $append(out, $internalize(tl.dtl.item(i), $String));
			i = i + (1) >> 0;
		}
		return out;
	};
	TokenList.prototype.Slice = function() { return this.$val.Slice(); };
	TokenList.ptr.prototype.SetString = function(s) {
		var tl;
		tl = this;
		if (!(tl.sa === "")) {
			tl.o[$externalize(tl.sa, $String)] = $externalize(s, $String);
			return;
		}
		if (tl.dtl.constructor === $global.DOMSettableTokenList) {
			tl.dtl.value = $externalize(s, $String);
			return;
		}
		$panic(new $String("no way to SetString on this TokenList"));
	};
	TokenList.prototype.SetString = function(s) { return this.$val.SetString(s); };
	TokenList.ptr.prototype.Set = function(s) {
		var tl;
		tl = this;
		tl.SetString(strings.Join(s, " "));
	};
	TokenList.prototype.Set = function(s) { return this.$val.Set(s); };
	htmlDocument.ptr.prototype.ActiveElement = function() {
		var d;
		d = this;
		return wrapHTMLElement(d.document.BasicNode.Object.activeElement);
	};
	htmlDocument.prototype.ActiveElement = function() { return this.$val.ActiveElement(); };
	htmlDocument.ptr.prototype.Body = function() {
		var d;
		d = this;
		return wrapHTMLElement(d.document.BasicNode.Object.body);
	};
	htmlDocument.prototype.Body = function() { return this.$val.Body(); };
	htmlDocument.ptr.prototype.Cookie = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.cookie, $String);
	};
	htmlDocument.prototype.Cookie = function() { return this.$val.Cookie(); };
	htmlDocument.ptr.prototype.SetCookie = function(s) {
		var d;
		d = this;
		d.document.BasicNode.Object.cookie = $externalize(s, $String);
	};
	htmlDocument.prototype.SetCookie = function(s) { return this.$val.SetCookie(s); };
	htmlDocument.ptr.prototype.DefaultView = function() {
		var d;
		d = this;
		return new window.ptr(d.document.BasicNode.Object.defaultView);
	};
	htmlDocument.prototype.DefaultView = function() { return this.$val.DefaultView(); };
	htmlDocument.ptr.prototype.DesignMode = function() {
		var d, s;
		d = this;
		s = $internalize(d.document.BasicNode.Object.designMode, $String);
		if (s === "off") {
			return false;
		}
		return true;
	};
	htmlDocument.prototype.DesignMode = function() { return this.$val.DesignMode(); };
	htmlDocument.ptr.prototype.SetDesignMode = function(b) {
		var d, s;
		d = this;
		s = "off";
		if (b) {
			s = "on";
		}
		d.document.BasicNode.Object.designMode = $externalize(s, $String);
	};
	htmlDocument.prototype.SetDesignMode = function(b) { return this.$val.SetDesignMode(b); };
	htmlDocument.ptr.prototype.Domain = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.domain, $String);
	};
	htmlDocument.prototype.Domain = function() { return this.$val.Domain(); };
	htmlDocument.ptr.prototype.SetDomain = function(s) {
		var d;
		d = this;
		d.document.BasicNode.Object.domain = $externalize(s, $String);
	};
	htmlDocument.prototype.SetDomain = function(s) { return this.$val.SetDomain(s); };
	htmlDocument.ptr.prototype.Forms = function() {
		var d, els, forms, i, length;
		d = this;
		els = sliceType$6.nil;
		forms = d.document.BasicNode.Object.forms;
		length = $parseInt(forms.length) >> 0;
		i = 0;
		while (i < length) {
			els = $append(els, $assertType(wrapHTMLElement(forms.item(i)), ptrType$3));
			i = i + (1) >> 0;
		}
		return els;
	};
	htmlDocument.prototype.Forms = function() { return this.$val.Forms(); };
	htmlDocument.ptr.prototype.Head = function() {
		var d, head;
		d = this;
		head = wrapElement(d.document.BasicNode.Object.head);
		if ($interfaceIsEqual(head, $ifaceNil)) {
			return ptrType$5.nil;
		}
		return $assertType(head, ptrType$5);
	};
	htmlDocument.prototype.Head = function() { return this.$val.Head(); };
	htmlDocument.ptr.prototype.Images = function() {
		var d, els, i, images, length;
		d = this;
		els = sliceType$7.nil;
		images = d.document.BasicNode.Object.images;
		length = $parseInt(images.length) >> 0;
		i = 0;
		while (i < length) {
			els = $append(els, $assertType(wrapHTMLElement(images.item(i)), ptrType$6));
			i = i + (1) >> 0;
		}
		return els;
	};
	htmlDocument.prototype.Images = function() { return this.$val.Images(); };
	htmlDocument.ptr.prototype.LastModified = function() {
		var d;
		d = this;
		return $assertType($internalize(d.document.BasicNode.Object.lastModified, $emptyInterface), time.Time);
	};
	htmlDocument.prototype.LastModified = function() { return this.$val.LastModified(); };
	htmlDocument.ptr.prototype.Links = function() {
		var d, els, i, length, links;
		d = this;
		els = sliceType$3.nil;
		links = d.document.BasicNode.Object.links;
		length = $parseInt(links.length) >> 0;
		i = 0;
		while (i < length) {
			els = $append(els, wrapHTMLElement(links.item(i)));
			i = i + (1) >> 0;
		}
		return els;
	};
	htmlDocument.prototype.Links = function() { return this.$val.Links(); };
	htmlDocument.ptr.prototype.Location = function() {
		var d, o;
		d = this;
		o = d.document.BasicNode.Object.location;
		return new Location.ptr(o, new URLUtils.ptr(o, "", "", "", "", "", "", "", "", "", "", ""));
	};
	htmlDocument.prototype.Location = function() { return this.$val.Location(); };
	htmlDocument.ptr.prototype.Plugins = function() {
		var d, els, forms, i, length;
		d = this;
		els = sliceType$8.nil;
		forms = d.document.BasicNode.Object.plugins;
		length = $parseInt(forms.length) >> 0;
		i = 0;
		while (i < length) {
			els = $append(els, $assertType(wrapHTMLElement(forms.item(i)), ptrType$7));
			i = i + (1) >> 0;
		}
		return els;
	};
	htmlDocument.prototype.Plugins = function() { return this.$val.Plugins(); };
	htmlDocument.ptr.prototype.ReadyState = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.readyState, $String);
	};
	htmlDocument.prototype.ReadyState = function() { return this.$val.ReadyState(); };
	htmlDocument.ptr.prototype.Referrer = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.referrer, $String);
	};
	htmlDocument.prototype.Referrer = function() { return this.$val.Referrer(); };
	htmlDocument.ptr.prototype.Scripts = function() {
		var d, els, forms, i, length;
		d = this;
		els = sliceType$9.nil;
		forms = d.document.BasicNode.Object.scripts;
		length = $parseInt(forms.length) >> 0;
		i = 0;
		while (i < length) {
			els = $append(els, $assertType(wrapHTMLElement(forms.item(i)), ptrType$8));
			i = i + (1) >> 0;
		}
		return els;
	};
	htmlDocument.prototype.Scripts = function() { return this.$val.Scripts(); };
	htmlDocument.ptr.prototype.Title = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.title, $String);
	};
	htmlDocument.prototype.Title = function() { return this.$val.Title(); };
	htmlDocument.ptr.prototype.SetTitle = function(s) {
		var d;
		d = this;
		d.document.BasicNode.Object.title = $externalize(s, $String);
	};
	htmlDocument.prototype.SetTitle = function(s) { return this.$val.SetTitle(s); };
	htmlDocument.ptr.prototype.URL = function() {
		var d;
		d = this;
		return $internalize(d.document.BasicNode.Object.url, $String);
	};
	htmlDocument.prototype.URL = function() { return this.$val.URL(); };
	document.ptr.prototype.Async = function() {
		var d;
		d = $clone(this, document);
		return !!(d.BasicNode.Object.async);
	};
	document.prototype.Async = function() { return this.$val.Async(); };
	document.ptr.prototype.SetAsync = function(b) {
		var d;
		d = $clone(this, document);
		d.BasicNode.Object.async = $externalize(b, $Bool);
	};
	document.prototype.SetAsync = function(b) { return this.$val.SetAsync(b); };
	document.ptr.prototype.Doctype = function() {
		var d;
		d = $clone(this, document);
		return $ifaceNil;
	};
	document.prototype.Doctype = function() { return this.$val.Doctype(); };
	document.ptr.prototype.DocumentElement = function() {
		var d;
		d = $clone(this, document);
		return wrapElement(d.BasicNode.Object.documentElement);
	};
	document.prototype.DocumentElement = function() { return this.$val.DocumentElement(); };
	document.ptr.prototype.DocumentURI = function() {
		var d;
		d = $clone(this, document);
		return $internalize(d.BasicNode.Object.documentURI, $String);
	};
	document.prototype.DocumentURI = function() { return this.$val.DocumentURI(); };
	document.ptr.prototype.Implementation = function() {
		var d;
		d = $clone(this, document);
		return $ifaceNil;
	};
	document.prototype.Implementation = function() { return this.$val.Implementation(); };
	document.ptr.prototype.LastStyleSheetSet = function() {
		var d;
		d = $clone(this, document);
		return $internalize(d.BasicNode.Object.lastStyleSheetSet, $String);
	};
	document.prototype.LastStyleSheetSet = function() { return this.$val.LastStyleSheetSet(); };
	document.ptr.prototype.PreferredStyleSheetSet = function() {
		var d;
		d = $clone(this, document);
		return $internalize(d.BasicNode.Object.preferredStyleSheetSet, $String);
	};
	document.prototype.PreferredStyleSheetSet = function() { return this.$val.PreferredStyleSheetSet(); };
	document.ptr.prototype.SelectedStyleSheetSet = function() {
		var d;
		d = $clone(this, document);
		return $internalize(d.BasicNode.Object.selectedStyleSheetSet, $String);
	};
	document.prototype.SelectedStyleSheetSet = function() { return this.$val.SelectedStyleSheetSet(); };
	document.ptr.prototype.StyleSheets = function() {
		var d;
		d = $clone(this, document);
		return sliceType$10.nil;
	};
	document.prototype.StyleSheets = function() { return this.$val.StyleSheets(); };
	document.ptr.prototype.StyleSheetSets = function() {
		var d;
		d = $clone(this, document);
		return sliceType$10.nil;
	};
	document.prototype.StyleSheetSets = function() { return this.$val.StyleSheetSets(); };
	document.ptr.prototype.AdoptNode = function(node) {
		var d;
		d = $clone(this, document);
		return wrapNode(d.BasicNode.Object.adoptNode(node.Underlying()));
	};
	document.prototype.AdoptNode = function(node) { return this.$val.AdoptNode(node); };
	document.ptr.prototype.CreateElement = function(name) {
		var d;
		d = $clone(this, document);
		return wrapElement(d.BasicNode.Object.createElement($externalize(name, $String)));
	};
	document.prototype.CreateElement = function(name) { return this.$val.CreateElement(name); };
	document.ptr.prototype.CreateElementNS = function(ns, name) {
		var d;
		d = $clone(this, document);
		return wrapElement(d.BasicNode.Object.createElement($externalize(ns, $String), $externalize(name, $String)));
	};
	document.prototype.CreateElementNS = function(ns, name) { return this.$val.CreateElementNS(ns, name); };
	document.ptr.prototype.CreateTextNode = function(s) {
		var d;
		d = $clone(this, document);
		return $assertType(wrapNode(d.BasicNode.Object.createTextNode($externalize(s, $String))), ptrType$9);
	};
	document.prototype.CreateTextNode = function(s) { return this.$val.CreateTextNode(s); };
	document.ptr.prototype.ElementFromPoint = function(x, y) {
		var d;
		d = $clone(this, document);
		return wrapElement(d.BasicNode.Object.elementFromPoint(x, y));
	};
	document.prototype.ElementFromPoint = function(x, y) { return this.$val.ElementFromPoint(x, y); };
	document.ptr.prototype.EnableStyleSheetsForSet = function(name) {
		var d;
		d = $clone(this, document);
		d.BasicNode.Object.enableStyleSheetsForSet($externalize(name, $String));
	};
	document.prototype.EnableStyleSheetsForSet = function(name) { return this.$val.EnableStyleSheetsForSet(name); };
	document.ptr.prototype.GetElementsByClassName = function(name) {
		var d;
		d = $clone(this, document);
		return (new BasicElement.ptr(new BasicNode.ptr(d.BasicNode.Object))).GetElementsByClassName(name);
	};
	document.prototype.GetElementsByClassName = function(name) { return this.$val.GetElementsByClassName(name); };
	document.ptr.prototype.GetElementsByTagName = function(name) {
		var d;
		d = $clone(this, document);
		return (new BasicElement.ptr(new BasicNode.ptr(d.BasicNode.Object))).GetElementsByTagName(name);
	};
	document.prototype.GetElementsByTagName = function(name) { return this.$val.GetElementsByTagName(name); };
	document.ptr.prototype.GetElementsByTagNameNS = function(ns, name) {
		var d;
		d = $clone(this, document);
		return (new BasicElement.ptr(new BasicNode.ptr(d.BasicNode.Object))).GetElementsByTagNameNS(ns, name);
	};
	document.prototype.GetElementsByTagNameNS = function(ns, name) { return this.$val.GetElementsByTagNameNS(ns, name); };
	document.ptr.prototype.GetElementByID = function(id) {
		var d;
		d = $clone(this, document);
		return wrapElement(d.BasicNode.Object.getElementById($externalize(id, $String)));
	};
	document.prototype.GetElementByID = function(id) { return this.$val.GetElementByID(id); };
	document.ptr.prototype.QuerySelector = function(sel) {
		var d;
		d = $clone(this, document);
		return (new BasicElement.ptr(new BasicNode.ptr(d.BasicNode.Object))).QuerySelector(sel);
	};
	document.prototype.QuerySelector = function(sel) { return this.$val.QuerySelector(sel); };
	document.ptr.prototype.QuerySelectorAll = function(sel) {
		var d;
		d = $clone(this, document);
		return (new BasicElement.ptr(new BasicNode.ptr(d.BasicNode.Object))).QuerySelectorAll(sel);
	};
	document.prototype.QuerySelectorAll = function(sel) { return this.$val.QuerySelectorAll(sel); };
	window.ptr.prototype.Console = function() {
		var w;
		w = this;
		return new Console.ptr(w.Object.console);
	};
	window.prototype.Console = function() { return this.$val.Console(); };
	window.ptr.prototype.Document = function() {
		var w;
		w = this;
		return wrapDocument(w.Object.document);
	};
	window.prototype.Document = function() { return this.$val.Document(); };
	window.ptr.prototype.FrameElement = function() {
		var w;
		w = this;
		return wrapElement(w.Object.frameElement);
	};
	window.prototype.FrameElement = function() { return this.$val.FrameElement(); };
	window.ptr.prototype.Location = function() {
		var o, w;
		w = this;
		o = w.Object.location;
		return new Location.ptr(o, new URLUtils.ptr(o, "", "", "", "", "", "", "", "", "", "", ""));
	};
	window.prototype.Location = function() { return this.$val.Location(); };
	window.ptr.prototype.Name = function() {
		var w;
		w = this;
		return $internalize(w.Object.name, $String);
	};
	window.prototype.Name = function() { return this.$val.Name(); };
	window.ptr.prototype.SetName = function(s) {
		var w;
		w = this;
		w.Object.name = $externalize(s, $String);
	};
	window.prototype.SetName = function(s) { return this.$val.SetName(s); };
	window.ptr.prototype.InnerHeight = function() {
		var w;
		w = this;
		return $parseInt(w.Object.innerHeight) >> 0;
	};
	window.prototype.InnerHeight = function() { return this.$val.InnerHeight(); };
	window.ptr.prototype.InnerWidth = function() {
		var w;
		w = this;
		return $parseInt(w.Object.innerWidth) >> 0;
	};
	window.prototype.InnerWidth = function() { return this.$val.InnerWidth(); };
	window.ptr.prototype.Length = function() {
		var w;
		w = this;
		return $parseInt(w.Object.length) >> 0;
	};
	window.prototype.Length = function() { return this.$val.Length(); };
	window.ptr.prototype.Opener = function() {
		var w;
		w = this;
		return new window.ptr(w.Object.opener);
	};
	window.prototype.Opener = function() { return this.$val.Opener(); };
	window.ptr.prototype.OuterHeight = function() {
		var w;
		w = this;
		return $parseInt(w.Object.outerHeight) >> 0;
	};
	window.prototype.OuterHeight = function() { return this.$val.OuterHeight(); };
	window.ptr.prototype.OuterWidth = function() {
		var w;
		w = this;
		return $parseInt(w.Object.outerWidth) >> 0;
	};
	window.prototype.OuterWidth = function() { return this.$val.OuterWidth(); };
	window.ptr.prototype.ScrollX = function() {
		var w;
		w = this;
		return $parseInt(w.Object.scrollX) >> 0;
	};
	window.prototype.ScrollX = function() { return this.$val.ScrollX(); };
	window.ptr.prototype.ScrollY = function() {
		var w;
		w = this;
		return $parseInt(w.Object.scrollY) >> 0;
	};
	window.prototype.ScrollY = function() { return this.$val.ScrollY(); };
	window.ptr.prototype.Parent = function() {
		var w;
		w = this;
		return new window.ptr(w.Object.parent);
	};
	window.prototype.Parent = function() { return this.$val.Parent(); };
	window.ptr.prototype.ScreenX = function() {
		var w;
		w = this;
		return $parseInt(w.Object.screenX) >> 0;
	};
	window.prototype.ScreenX = function() { return this.$val.ScreenX(); };
	window.ptr.prototype.ScreenY = function() {
		var w;
		w = this;
		return $parseInt(w.Object.screenY) >> 0;
	};
	window.prototype.ScreenY = function() { return this.$val.ScreenY(); };
	window.ptr.prototype.ScrollMaxX = function() {
		var w;
		w = this;
		return $parseInt(w.Object.scrollMaxX) >> 0;
	};
	window.prototype.ScrollMaxX = function() { return this.$val.ScrollMaxX(); };
	window.ptr.prototype.ScrollMaxY = function() {
		var w;
		w = this;
		return $parseInt(w.Object.scrollMaxY) >> 0;
	};
	window.prototype.ScrollMaxY = function() { return this.$val.ScrollMaxY(); };
	window.ptr.prototype.Top = function() {
		var w;
		w = this;
		return new window.ptr(w.Object.top);
	};
	window.prototype.Top = function() { return this.$val.Top(); };
	window.ptr.prototype.History = function() {
		var w;
		w = this;
		return $ifaceNil;
	};
	window.prototype.History = function() { return this.$val.History(); };
	window.ptr.prototype.Navigator = function() {
		var w;
		w = this;
		return $ifaceNil;
	};
	window.prototype.Navigator = function() { return this.$val.Navigator(); };
	window.ptr.prototype.Screen = function() {
		var w;
		w = this;
		return new Screen.ptr(w.Object.screen, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	};
	window.prototype.Screen = function() { return this.$val.Screen(); };
	window.ptr.prototype.Alert = function(msg) {
		var w;
		w = this;
		w.Object.alert($externalize(msg, $String));
	};
	window.prototype.Alert = function(msg) { return this.$val.Alert(msg); };
	window.ptr.prototype.Back = function() {
		var w;
		w = this;
		w.Object.back();
	};
	window.prototype.Back = function() { return this.$val.Back(); };
	window.ptr.prototype.Blur = function() {
		var w;
		w = this;
		w.Object.blur();
	};
	window.prototype.Blur = function() { return this.$val.Blur(); };
	window.ptr.prototype.ClearInterval = function(id) {
		var w;
		w = this;
		w.Object.clearInterval(id);
	};
	window.prototype.ClearInterval = function(id) { return this.$val.ClearInterval(id); };
	window.ptr.prototype.ClearTimeout = function(id) {
		var w;
		w = this;
		w.Object.clearTimeout(id);
	};
	window.prototype.ClearTimeout = function(id) { return this.$val.ClearTimeout(id); };
	window.ptr.prototype.Close = function() {
		var w;
		w = this;
		w.Object.close();
	};
	window.prototype.Close = function() { return this.$val.Close(); };
	window.ptr.prototype.Confirm = function(prompt) {
		var w;
		w = this;
		return !!(w.Object.confirm($externalize(prompt, $String)));
	};
	window.prototype.Confirm = function(prompt) { return this.$val.Confirm(prompt); };
	window.ptr.prototype.Focus = function() {
		var w;
		w = this;
		w.Object.focus();
	};
	window.prototype.Focus = function() { return this.$val.Focus(); };
	window.ptr.prototype.Forward = function() {
		var w;
		w = this;
		w.Object.forward();
	};
	window.prototype.Forward = function() { return this.$val.Forward(); };
	window.ptr.prototype.GetComputedStyle = function(el, pseudoElt) {
		var optArg, w;
		w = this;
		optArg = $ifaceNil;
		if (!(pseudoElt === "")) {
			optArg = new $String(pseudoElt);
		}
		return new CSSStyleDeclaration.ptr(w.Object.getComputedStyle(el.Underlying(), $externalize(optArg, $emptyInterface)));
	};
	window.prototype.GetComputedStyle = function(el, pseudoElt) { return this.$val.GetComputedStyle(el, pseudoElt); };
	window.ptr.prototype.GetSelection = function() {
		var w;
		w = this;
		return $ifaceNil;
	};
	window.prototype.GetSelection = function() { return this.$val.GetSelection(); };
	window.ptr.prototype.Home = function() {
		var w;
		w = this;
		w.Object.home();
	};
	window.prototype.Home = function() { return this.$val.Home(); };
	window.ptr.prototype.MoveBy = function(dx, dy) {
		var w;
		w = this;
		w.Object.moveBy(dx, dy);
	};
	window.prototype.MoveBy = function(dx, dy) { return this.$val.MoveBy(dx, dy); };
	window.ptr.prototype.MoveTo = function(x, y) {
		var w;
		w = this;
		w.Object.moveTo(x, y);
	};
	window.prototype.MoveTo = function(x, y) { return this.$val.MoveTo(x, y); };
	window.ptr.prototype.Open = function(url, name, features) {
		var w;
		w = this;
		return new window.ptr(w.Object.open($externalize(url, $String), $externalize(name, $String), $externalize(features, $String)));
	};
	window.prototype.Open = function(url, name, features) { return this.$val.Open(url, name, features); };
	window.ptr.prototype.OpenDialog = function(url, name, features, args) {
		var w;
		w = this;
		return new window.ptr(w.Object.openDialog($externalize(url, $String), $externalize(name, $String), $externalize(features, $String), $externalize(args, sliceType)));
	};
	window.prototype.OpenDialog = function(url, name, features, args) { return this.$val.OpenDialog(url, name, features, args); };
	window.ptr.prototype.PostMessage = function(message, target, transfer) {
		var w;
		w = this;
		w.Object.postMessage($externalize(message, $String), $externalize(target, $String), $externalize(transfer, sliceType));
	};
	window.prototype.PostMessage = function(message, target, transfer) { return this.$val.PostMessage(message, target, transfer); };
	window.ptr.prototype.Print = function() {
		var w;
		w = this;
		w.Object.print();
	};
	window.prototype.Print = function() { return this.$val.Print(); };
	window.ptr.prototype.Prompt = function(prompt, initial) {
		var w;
		w = this;
		return $internalize(w.Object.prompt($externalize(prompt, $String), $externalize(initial, $String)), $String);
	};
	window.prototype.Prompt = function(prompt, initial) { return this.$val.Prompt(prompt, initial); };
	window.ptr.prototype.ResizeBy = function(dw, dh) {
		var w;
		w = this;
		w.Object.resizeBy(dw, dh);
	};
	window.prototype.ResizeBy = function(dw, dh) { return this.$val.ResizeBy(dw, dh); };
	window.ptr.prototype.ResizeTo = function(width, height) {
		var w;
		w = this;
		w.Object.resizeTo(width, height);
	};
	window.prototype.ResizeTo = function(width, height) { return this.$val.ResizeTo(width, height); };
	window.ptr.prototype.Scroll = function(x, y) {
		var w;
		w = this;
		w.Object.scroll(x, y);
	};
	window.prototype.Scroll = function(x, y) { return this.$val.Scroll(x, y); };
	window.ptr.prototype.ScrollBy = function(dx, dy) {
		var w;
		w = this;
		w.Object.scrollBy(dx, dy);
	};
	window.prototype.ScrollBy = function(dx, dy) { return this.$val.ScrollBy(dx, dy); };
	window.ptr.prototype.ScrollByLines = function(i) {
		var w;
		w = this;
		w.Object.scrollByLines(i);
	};
	window.prototype.ScrollByLines = function(i) { return this.$val.ScrollByLines(i); };
	window.ptr.prototype.ScrollTo = function(x, y) {
		var w;
		w = this;
		w.Object.scrollTo(x, y);
	};
	window.prototype.ScrollTo = function(x, y) { return this.$val.ScrollTo(x, y); };
	window.ptr.prototype.SetCursor = function(name) {
		var w;
		w = this;
		w.Object.setCursor($externalize(name, $String));
	};
	window.prototype.SetCursor = function(name) { return this.$val.SetCursor(name); };
	window.ptr.prototype.SetInterval = function(fn, delay) {
		var w;
		w = this;
		return $parseInt(w.Object.setInterval($externalize(fn, funcType), delay)) >> 0;
	};
	window.prototype.SetInterval = function(fn, delay) { return this.$val.SetInterval(fn, delay); };
	window.ptr.prototype.SetTimeout = function(fn, delay) {
		var w;
		w = this;
		return $parseInt(w.Object.setTimeout($externalize(fn, funcType), delay)) >> 0;
	};
	window.prototype.SetTimeout = function(fn, delay) { return this.$val.SetTimeout(fn, delay); };
	window.ptr.prototype.Stop = function() {
		var w;
		w = this;
		w.Object.stop();
	};
	window.prototype.Stop = function() { return this.$val.Stop(); };
	window.ptr.prototype.AddEventListener = function(typ, useCapture, listener) {
		var w, wrapper;
		w = this;
		wrapper = (function(o) {
			listener(wrapEvent(o));
		});
		w.Object.addEventListener($externalize(typ, $String), $externalize(wrapper, funcType$1), $externalize(useCapture, $Bool));
		return wrapper;
	};
	window.prototype.AddEventListener = function(typ, useCapture, listener) { return this.$val.AddEventListener(typ, useCapture, listener); };
	window.ptr.prototype.RemoveEventListener = function(typ, useCapture, listener) {
		var w;
		w = this;
		w.Object.removeEventListener($externalize(typ, $String), $externalize(listener, funcType$2), $externalize(useCapture, $Bool));
	};
	window.prototype.RemoveEventListener = function(typ, useCapture, listener) { return this.$val.RemoveEventListener(typ, useCapture, listener); };
	PositionError.ptr.prototype.Error = function() {
		var err;
		err = this;
		return $internalize(err.Object.message(), $String);
	};
	PositionError.prototype.Error = function() { return this.$val.Error(); };
	BasicNode.ptr.prototype.Underlying = function() {
		var n;
		n = this;
		return n.Object;
	};
	BasicNode.prototype.Underlying = function() { return this.$val.Underlying(); };
	BasicNode.ptr.prototype.AddEventListener = function(typ, useCapture, listener) {
		var n, wrapper;
		n = this;
		wrapper = (function(o) {
			listener(wrapEvent(o));
		});
		n.Object.addEventListener($externalize(typ, $String), $externalize(wrapper, funcType$1), $externalize(useCapture, $Bool));
		return wrapper;
	};
	BasicNode.prototype.AddEventListener = function(typ, useCapture, listener) { return this.$val.AddEventListener(typ, useCapture, listener); };
	BasicNode.ptr.prototype.RemoveEventListener = function(typ, useCapture, listener) {
		var n;
		n = this;
		n.Object.removeEventListener($externalize(typ, $String), $externalize(listener, funcType$2), $externalize(useCapture, $Bool));
	};
	BasicNode.prototype.RemoveEventListener = function(typ, useCapture, listener) { return this.$val.RemoveEventListener(typ, useCapture, listener); };
	BasicNode.ptr.prototype.BaseURI = function() {
		var n;
		n = this;
		return $internalize(n.Object.baseURI, $String);
	};
	BasicNode.prototype.BaseURI = function() { return this.$val.BaseURI(); };
	BasicNode.ptr.prototype.ChildNodes = function() {
		var n;
		n = this;
		return nodeListToNodes(n.Object.childNodes);
	};
	BasicNode.prototype.ChildNodes = function() { return this.$val.ChildNodes(); };
	BasicNode.ptr.prototype.FirstChild = function() {
		var n;
		n = this;
		return wrapNode(n.Object.firstChild);
	};
	BasicNode.prototype.FirstChild = function() { return this.$val.FirstChild(); };
	BasicNode.ptr.prototype.LastChild = function() {
		var n;
		n = this;
		return wrapNode(n.Object.lastChild);
	};
	BasicNode.prototype.LastChild = function() { return this.$val.LastChild(); };
	BasicNode.ptr.prototype.NextSibling = function() {
		var n;
		n = this;
		return wrapNode(n.Object.nextSibling);
	};
	BasicNode.prototype.NextSibling = function() { return this.$val.NextSibling(); };
	BasicNode.ptr.prototype.NodeName = function() {
		var n;
		n = this;
		return $internalize(n.Object.nodeName, $String);
	};
	BasicNode.prototype.NodeName = function() { return this.$val.NodeName(); };
	BasicNode.ptr.prototype.NodeType = function() {
		var n;
		n = this;
		return $parseInt(n.Object.nodeType) >> 0;
	};
	BasicNode.prototype.NodeType = function() { return this.$val.NodeType(); };
	BasicNode.ptr.prototype.NodeValue = function() {
		var n;
		n = this;
		return $internalize(n.Object.nodeValue, $String);
	};
	BasicNode.prototype.NodeValue = function() { return this.$val.NodeValue(); };
	BasicNode.ptr.prototype.SetNodeValue = function(s) {
		var n;
		n = this;
		n.Object.nodeValue = $externalize(s, $String);
	};
	BasicNode.prototype.SetNodeValue = function(s) { return this.$val.SetNodeValue(s); };
	BasicNode.ptr.prototype.OwnerDocument = function() {
		var n;
		n = this;
		return $ifaceNil;
	};
	BasicNode.prototype.OwnerDocument = function() { return this.$val.OwnerDocument(); };
	BasicNode.ptr.prototype.ParentNode = function() {
		var n;
		n = this;
		return wrapNode(n.Object.parentNode);
	};
	BasicNode.prototype.ParentNode = function() { return this.$val.ParentNode(); };
	BasicNode.ptr.prototype.ParentElement = function() {
		var n;
		n = this;
		return wrapElement(n.Object.parentElement);
	};
	BasicNode.prototype.ParentElement = function() { return this.$val.ParentElement(); };
	BasicNode.ptr.prototype.PreviousSibling = function() {
		var n;
		n = this;
		return wrapNode(n.Object.previousSibling);
	};
	BasicNode.prototype.PreviousSibling = function() { return this.$val.PreviousSibling(); };
	BasicNode.ptr.prototype.TextContent = function() {
		var n;
		n = this;
		return $internalize(n.Object.textContent, $String);
	};
	BasicNode.prototype.TextContent = function() { return this.$val.TextContent(); };
	BasicNode.ptr.prototype.SetTextContent = function(s) {
		var n;
		n = this;
		n.Object.textContent = $externalize(s, $String);
	};
	BasicNode.prototype.SetTextContent = function(s) { return this.$val.SetTextContent(s); };
	BasicNode.ptr.prototype.AppendChild = function(newchild) {
		var n;
		n = this;
		n.Object.appendChild(newchild.Underlying());
	};
	BasicNode.prototype.AppendChild = function(newchild) { return this.$val.AppendChild(newchild); };
	BasicNode.ptr.prototype.CloneNode = function(deep) {
		var n;
		n = this;
		return wrapNode(n.Object.cloneNode($externalize(deep, $Bool)));
	};
	BasicNode.prototype.CloneNode = function(deep) { return this.$val.CloneNode(deep); };
	BasicNode.ptr.prototype.CompareDocumentPosition = function(other) {
		var n;
		n = this;
		return $parseInt(n.Object.compareDocumentPosition(other.Underlying())) >> 0;
	};
	BasicNode.prototype.CompareDocumentPosition = function(other) { return this.$val.CompareDocumentPosition(other); };
	BasicNode.ptr.prototype.Contains = function(other) {
		var n;
		n = this;
		return !!(n.Object.contains(other.Underlying()));
	};
	BasicNode.prototype.Contains = function(other) { return this.$val.Contains(other); };
	BasicNode.ptr.prototype.HasChildNodes = function() {
		var n;
		n = this;
		return !!(n.Object.hasChildNodes());
	};
	BasicNode.prototype.HasChildNodes = function() { return this.$val.HasChildNodes(); };
	BasicNode.ptr.prototype.InsertBefore = function(which, before) {
		var n, o;
		n = this;
		o = $ifaceNil;
		if (!($interfaceIsEqual(before, $ifaceNil))) {
			o = new $js.container.ptr(before.Underlying());
		}
		n.Object.insertBefore(which.Underlying(), $externalize(o, $emptyInterface));
	};
	BasicNode.prototype.InsertBefore = function(which, before) { return this.$val.InsertBefore(which, before); };
	BasicNode.ptr.prototype.IsDefaultNamespace = function(s) {
		var n;
		n = this;
		return !!(n.Object.isDefaultNamespace($externalize(s, $String)));
	};
	BasicNode.prototype.IsDefaultNamespace = function(s) { return this.$val.IsDefaultNamespace(s); };
	BasicNode.ptr.prototype.IsEqualNode = function(other) {
		var n;
		n = this;
		return !!(n.Object.isEqualNode(other.Underlying()));
	};
	BasicNode.prototype.IsEqualNode = function(other) { return this.$val.IsEqualNode(other); };
	BasicNode.ptr.prototype.LookupPrefix = function() {
		var n;
		n = this;
		return $internalize(n.Object.lookupPrefix(), $String);
	};
	BasicNode.prototype.LookupPrefix = function() { return this.$val.LookupPrefix(); };
	BasicNode.ptr.prototype.LookupNamespaceURI = function(s) {
		var n;
		n = this;
		return $internalize(n.Object.lookupNamespaceURI($externalize(s, $String)), $String);
	};
	BasicNode.prototype.LookupNamespaceURI = function(s) { return this.$val.LookupNamespaceURI(s); };
	BasicNode.ptr.prototype.Normalize = function() {
		var n;
		n = this;
		n.Object.normalize();
	};
	BasicNode.prototype.Normalize = function() { return this.$val.Normalize(); };
	BasicNode.ptr.prototype.RemoveChild = function(other) {
		var n;
		n = this;
		n.Object.removeChild(other.Underlying());
	};
	BasicNode.prototype.RemoveChild = function(other) { return this.$val.RemoveChild(other); };
	BasicNode.ptr.prototype.ReplaceChild = function(newChild, oldChild) {
		var n;
		n = this;
		n.Object.replaceChild(newChild.Underlying(), oldChild.Underlying());
	};
	BasicNode.prototype.ReplaceChild = function(newChild, oldChild) { return this.$val.ReplaceChild(newChild, oldChild); };
	BasicHTMLElement.ptr.prototype.AccessKey = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.accessKey, $String);
	};
	BasicHTMLElement.prototype.AccessKey = function() { return this.$val.AccessKey(); };
	BasicHTMLElement.ptr.prototype.SetAccessKey = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.accessKey = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetAccessKey = function(s) { return this.$val.SetAccessKey(s); };
	BasicHTMLElement.ptr.prototype.AccessKeyLabel = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.accessKeyLabel, $String);
	};
	BasicHTMLElement.prototype.AccessKeyLabel = function() { return this.$val.AccessKeyLabel(); };
	BasicHTMLElement.ptr.prototype.SetAccessKeyLabel = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.accessKeyLabel = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetAccessKeyLabel = function(s) { return this.$val.SetAccessKeyLabel(s); };
	BasicHTMLElement.ptr.prototype.ContentEditable = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.contentEditable, $String);
	};
	BasicHTMLElement.prototype.ContentEditable = function() { return this.$val.ContentEditable(); };
	BasicHTMLElement.ptr.prototype.SetContentEditable = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.contentEditable = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetContentEditable = function(s) { return this.$val.SetContentEditable(s); };
	BasicHTMLElement.ptr.prototype.IsContentEditable = function() {
		var e;
		e = this;
		return !!(e.BasicElement.BasicNode.Object.isContentEditable);
	};
	BasicHTMLElement.prototype.IsContentEditable = function() { return this.$val.IsContentEditable(); };
	BasicHTMLElement.ptr.prototype.Dataset = function() {
		var e;
		e = this;
	};
	BasicHTMLElement.prototype.Dataset = function() { return this.$val.Dataset(); };
	BasicHTMLElement.ptr.prototype.Dir = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.dir, $String);
	};
	BasicHTMLElement.prototype.Dir = function() { return this.$val.Dir(); };
	BasicHTMLElement.ptr.prototype.SetDir = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.dir = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetDir = function(s) { return this.$val.SetDir(s); };
	BasicHTMLElement.ptr.prototype.Draggable = function() {
		var e;
		e = this;
		return !!(e.BasicElement.BasicNode.Object.draggable);
	};
	BasicHTMLElement.prototype.Draggable = function() { return this.$val.Draggable(); };
	BasicHTMLElement.ptr.prototype.SetDraggable = function(b) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.draggable = $externalize(b, $Bool);
	};
	BasicHTMLElement.prototype.SetDraggable = function(b) { return this.$val.SetDraggable(b); };
	BasicHTMLElement.ptr.prototype.Lang = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.lang, $String);
	};
	BasicHTMLElement.prototype.Lang = function() { return this.$val.Lang(); };
	BasicHTMLElement.ptr.prototype.SetLang = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.lang = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetLang = function(s) { return this.$val.SetLang(s); };
	BasicHTMLElement.ptr.prototype.OffsetHeight = function() {
		var e;
		e = this;
		return $parseFloat(e.BasicElement.BasicNode.Object.offsetHeight);
	};
	BasicHTMLElement.prototype.OffsetHeight = function() { return this.$val.OffsetHeight(); };
	BasicHTMLElement.ptr.prototype.OffsetLeft = function() {
		var e;
		e = this;
		return $parseFloat(e.BasicElement.BasicNode.Object.offsetLeft);
	};
	BasicHTMLElement.prototype.OffsetLeft = function() { return this.$val.OffsetLeft(); };
	BasicHTMLElement.ptr.prototype.OffsetParent = function() {
		var e;
		e = this;
		return wrapHTMLElement(e.BasicElement.BasicNode.Object.offsetParent);
	};
	BasicHTMLElement.prototype.OffsetParent = function() { return this.$val.OffsetParent(); };
	BasicHTMLElement.ptr.prototype.OffsetTop = function() {
		var e;
		e = this;
		return $parseFloat(e.BasicElement.BasicNode.Object.offsetTop);
	};
	BasicHTMLElement.prototype.OffsetTop = function() { return this.$val.OffsetTop(); };
	BasicHTMLElement.ptr.prototype.OffsetWidth = function() {
		var e;
		e = this;
		return $parseFloat(e.BasicElement.BasicNode.Object.offsetWidth);
	};
	BasicHTMLElement.prototype.OffsetWidth = function() { return this.$val.OffsetWidth(); };
	BasicHTMLElement.ptr.prototype.Style = function() {
		var e;
		e = this;
		return new CSSStyleDeclaration.ptr(e.BasicElement.BasicNode.Object.style);
	};
	BasicHTMLElement.prototype.Style = function() { return this.$val.Style(); };
	BasicHTMLElement.ptr.prototype.TabIndex = function() {
		var e;
		e = this;
		return $parseInt(e.BasicElement.BasicNode.Object.tabIndex) >> 0;
	};
	BasicHTMLElement.prototype.TabIndex = function() { return this.$val.TabIndex(); };
	BasicHTMLElement.ptr.prototype.SetTabIndex = function(i) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.tabIndex = i;
	};
	BasicHTMLElement.prototype.SetTabIndex = function(i) { return this.$val.SetTabIndex(i); };
	BasicHTMLElement.ptr.prototype.Title = function() {
		var e;
		e = this;
		return $internalize(e.BasicElement.BasicNode.Object.title, $String);
	};
	BasicHTMLElement.prototype.Title = function() { return this.$val.Title(); };
	BasicHTMLElement.ptr.prototype.SetTitle = function(s) {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.title = $externalize(s, $String);
	};
	BasicHTMLElement.prototype.SetTitle = function(s) { return this.$val.SetTitle(s); };
	BasicHTMLElement.ptr.prototype.Blur = function() {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.blur();
	};
	BasicHTMLElement.prototype.Blur = function() { return this.$val.Blur(); };
	BasicHTMLElement.ptr.prototype.Click = function() {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.click();
	};
	BasicHTMLElement.prototype.Click = function() { return this.$val.Click(); };
	BasicHTMLElement.ptr.prototype.Focus = function() {
		var e;
		e = this;
		e.BasicElement.BasicNode.Object.focus();
	};
	BasicHTMLElement.prototype.Focus = function() { return this.$val.Focus(); };
	BasicElement.ptr.prototype.GetBoundingClientRect = function() {
		var e, obj;
		e = this;
		obj = e.BasicNode.Object.getBoundingClientRect();
		return new ClientRect.ptr(obj, 0, 0, 0, 0, 0, 0);
	};
	BasicElement.prototype.GetBoundingClientRect = function() { return this.$val.GetBoundingClientRect(); };
	BasicElement.ptr.prototype.PreviousElementSibling = function() {
		var e;
		e = this;
		return wrapElement(e.BasicNode.Object.previousElementSibling);
	};
	BasicElement.prototype.PreviousElementSibling = function() { return this.$val.PreviousElementSibling(); };
	BasicElement.ptr.prototype.NextElementSibling = function() {
		var e;
		e = this;
		return wrapElement(e.BasicNode.Object.nextElementSibling);
	};
	BasicElement.prototype.NextElementSibling = function() { return this.$val.NextElementSibling(); };
	BasicElement.ptr.prototype.Class = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.BasicNode.Object.classList, e, "className", 0);
	};
	BasicElement.prototype.Class = function() { return this.$val.Class(); };
	BasicElement.ptr.prototype.SetClass = function(s) {
		var e;
		e = this;
		e.BasicNode.Object.className = $externalize(s, $String);
	};
	BasicElement.prototype.SetClass = function(s) { return this.$val.SetClass(s); };
	BasicElement.ptr.prototype.ID = function() {
		var e;
		e = this;
		return $internalize(e.BasicNode.Object.id, $String);
	};
	BasicElement.prototype.ID = function() { return this.$val.ID(); };
	BasicElement.ptr.prototype.SetID = function(s) {
		var e;
		e = this;
		e.BasicNode.Object.id = $externalize(s, $String);
	};
	BasicElement.prototype.SetID = function(s) { return this.$val.SetID(s); };
	BasicElement.ptr.prototype.TagName = function() {
		var e;
		e = this;
		return $internalize(e.BasicNode.Object.tagName, $String);
	};
	BasicElement.prototype.TagName = function() { return this.$val.TagName(); };
	BasicElement.ptr.prototype.GetAttribute = function(name) {
		var e;
		e = this;
		return $internalize(e.BasicNode.Object.getAttribute($externalize(name, $String)), $String);
	};
	BasicElement.prototype.GetAttribute = function(name) { return this.$val.GetAttribute(name); };
	BasicElement.ptr.prototype.GetAttributeNS = function(ns, name) {
		var e;
		e = this;
		return $internalize(e.BasicNode.Object.getAttributeNS($externalize(ns, $String), $externalize(name, $String)), $String);
	};
	BasicElement.prototype.GetAttributeNS = function(ns, name) { return this.$val.GetAttributeNS(ns, name); };
	BasicElement.ptr.prototype.GetElementsByClassName = function(s) {
		var e;
		e = this;
		return nodeListToElements(e.BasicNode.Object.getElementsByClassName($externalize(s, $String)));
	};
	BasicElement.prototype.GetElementsByClassName = function(s) { return this.$val.GetElementsByClassName(s); };
	BasicElement.ptr.prototype.GetElementsByTagName = function(s) {
		var e;
		e = this;
		return nodeListToElements(e.BasicNode.Object.getElementsByTagName($externalize(s, $String)));
	};
	BasicElement.prototype.GetElementsByTagName = function(s) { return this.$val.GetElementsByTagName(s); };
	BasicElement.ptr.prototype.GetElementsByTagNameNS = function(ns, name) {
		var e;
		e = this;
		return nodeListToElements(e.BasicNode.Object.getElementsByTagNameNS($externalize(ns, $String), $externalize(name, $String)));
	};
	BasicElement.prototype.GetElementsByTagNameNS = function(ns, name) { return this.$val.GetElementsByTagNameNS(ns, name); };
	BasicElement.ptr.prototype.HasAttribute = function(s) {
		var e;
		e = this;
		return !!(e.BasicNode.Object.hasAttribute($externalize(s, $String)));
	};
	BasicElement.prototype.HasAttribute = function(s) { return this.$val.HasAttribute(s); };
	BasicElement.ptr.prototype.HasAttributeNS = function(ns, name) {
		var e;
		e = this;
		return !!(e.BasicNode.Object.hasAttributeNS($externalize(ns, $String), $externalize(name, $String)));
	};
	BasicElement.prototype.HasAttributeNS = function(ns, name) { return this.$val.HasAttributeNS(ns, name); };
	BasicElement.ptr.prototype.QuerySelector = function(s) {
		var e;
		e = this;
		return wrapElement(e.BasicNode.Object.querySelector($externalize(s, $String)));
	};
	BasicElement.prototype.QuerySelector = function(s) { return this.$val.QuerySelector(s); };
	BasicElement.ptr.prototype.QuerySelectorAll = function(s) {
		var e;
		e = this;
		return nodeListToElements(e.BasicNode.Object.querySelectorAll($externalize(s, $String)));
	};
	BasicElement.prototype.QuerySelectorAll = function(s) { return this.$val.QuerySelectorAll(s); };
	BasicElement.ptr.prototype.RemoveAttribute = function(s) {
		var e;
		e = this;
		e.BasicNode.Object.removeAttribute($externalize(s, $String));
	};
	BasicElement.prototype.RemoveAttribute = function(s) { return this.$val.RemoveAttribute(s); };
	BasicElement.ptr.prototype.RemoveAttributeNS = function(ns, name) {
		var e;
		e = this;
		e.BasicNode.Object.removeAttributeNS($externalize(ns, $String), $externalize(name, $String));
	};
	BasicElement.prototype.RemoveAttributeNS = function(ns, name) { return this.$val.RemoveAttributeNS(ns, name); };
	BasicElement.ptr.prototype.SetAttribute = function(name, value) {
		var e;
		e = this;
		e.BasicNode.Object.setAttribute($externalize(name, $String), $externalize(value, $String));
	};
	BasicElement.prototype.SetAttribute = function(name, value) { return this.$val.SetAttribute(name, value); };
	BasicElement.ptr.prototype.SetAttributeNS = function(ns, name, value) {
		var e;
		e = this;
		e.BasicNode.Object.setAttributeNS($externalize(ns, $String), $externalize(name, $String), $externalize(value, $String));
	};
	BasicElement.prototype.SetAttributeNS = function(ns, name, value) { return this.$val.SetAttributeNS(ns, name, value); };
	BasicElement.ptr.prototype.InnerHTML = function() {
		var e;
		e = this;
		return $internalize(e.BasicNode.Object.innerHTML, $String);
	};
	BasicElement.prototype.InnerHTML = function() { return this.$val.InnerHTML(); };
	BasicElement.ptr.prototype.SetInnerHTML = function(s) {
		var e;
		e = this;
		e.BasicNode.Object.innerHTML = $externalize(s, $String);
	};
	BasicElement.prototype.SetInnerHTML = function(s) { return this.$val.SetInnerHTML(s); };
	HTMLAnchorElement.ptr.prototype.Rel = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.URLUtils.Object.relList, e, "rel", 0);
	};
	HTMLAnchorElement.prototype.Rel = function() { return this.$val.Rel(); };
	HTMLAppletElement.ptr.prototype.Rel = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.relList, e, "rel", 0);
	};
	HTMLAppletElement.prototype.Rel = function() { return this.$val.Rel(); };
	HTMLAreaElement.ptr.prototype.Rel = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.URLUtils.Object.relList, e, "rel", 0);
	};
	HTMLAreaElement.prototype.Rel = function() { return this.$val.Rel(); };
	HTMLButtonElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLButtonElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLButtonElement.ptr.prototype.Labels = function() {
		var e;
		e = this;
		return getLabels(e);
	};
	HTMLButtonElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLButtonElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLButtonElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLButtonElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLButtonElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLButtonElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLButtonElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLCanvasElement.ptr.prototype.GetContext2d = function() {
		var ctx, e;
		e = this;
		ctx = e.GetContext("2d");
		return new CanvasRenderingContext2D.ptr(ctx, "", "", "", 0, 0, 0, "", "", 0, 0, "", "", "", 0, "");
	};
	HTMLCanvasElement.prototype.GetContext2d = function() { return this.$val.GetContext2d(); };
	HTMLCanvasElement.ptr.prototype.GetContext = function(param) {
		var e;
		e = this;
		return e.BasicHTMLElement.BasicElement.BasicNode.Object.getContext($externalize(param, $String));
	};
	HTMLCanvasElement.prototype.GetContext = function(param) { return this.$val.GetContext(param); };
	CanvasRenderingContext2D.ptr.prototype.CreateLinearGradient = function(x0, y0, x1, y1) {
		var ctx;
		ctx = this;
		ctx.Object.createLinearGradient(x0, y0, x1, y1);
	};
	CanvasRenderingContext2D.prototype.CreateLinearGradient = function(x0, y0, x1, y1) { return this.$val.CreateLinearGradient(x0, y0, x1, y1); };
	CanvasRenderingContext2D.ptr.prototype.Rect = function(x, y, width, height) {
		var ctx;
		ctx = this;
		ctx.Object.rect(x, y, width, height);
	};
	CanvasRenderingContext2D.prototype.Rect = function(x, y, width, height) { return this.$val.Rect(x, y, width, height); };
	CanvasRenderingContext2D.ptr.prototype.FillRect = function(x, y, width, height) {
		var ctx;
		ctx = this;
		ctx.Object.fillRect(x, y, width, height);
	};
	CanvasRenderingContext2D.prototype.FillRect = function(x, y, width, height) { return this.$val.FillRect(x, y, width, height); };
	CanvasRenderingContext2D.ptr.prototype.StrokeRect = function(x, y, width, height) {
		var ctx;
		ctx = this;
		ctx.Object.strokeRect(x, y, width, height);
	};
	CanvasRenderingContext2D.prototype.StrokeRect = function(x, y, width, height) { return this.$val.StrokeRect(x, y, width, height); };
	CanvasRenderingContext2D.ptr.prototype.ClearRect = function(x, y, width, height) {
		var ctx;
		ctx = this;
		ctx.Object.clearRect(x, y, width, height);
	};
	CanvasRenderingContext2D.prototype.ClearRect = function(x, y, width, height) { return this.$val.ClearRect(x, y, width, height); };
	CanvasRenderingContext2D.ptr.prototype.Fill = function() {
		var ctx;
		ctx = this;
		ctx.Object.fill();
	};
	CanvasRenderingContext2D.prototype.Fill = function() { return this.$val.Fill(); };
	CanvasRenderingContext2D.ptr.prototype.Stroke = function() {
		var ctx;
		ctx = this;
		ctx.Object.stroke();
	};
	CanvasRenderingContext2D.prototype.Stroke = function() { return this.$val.Stroke(); };
	CanvasRenderingContext2D.ptr.prototype.BeginPath = function() {
		var ctx;
		ctx = this;
		ctx.Object.beginPath();
	};
	CanvasRenderingContext2D.prototype.BeginPath = function() { return this.$val.BeginPath(); };
	CanvasRenderingContext2D.ptr.prototype.MoveTo = function(x, y) {
		var ctx;
		ctx = this;
		ctx.Object.moveTo(x, y);
	};
	CanvasRenderingContext2D.prototype.MoveTo = function(x, y) { return this.$val.MoveTo(x, y); };
	CanvasRenderingContext2D.ptr.prototype.ClosePath = function() {
		var ctx;
		ctx = this;
		ctx.Object.closePath();
	};
	CanvasRenderingContext2D.prototype.ClosePath = function() { return this.$val.ClosePath(); };
	CanvasRenderingContext2D.ptr.prototype.LineTo = function(x, y) {
		var ctx;
		ctx = this;
		ctx.Object.lineTo(x, y);
	};
	CanvasRenderingContext2D.prototype.LineTo = function(x, y) { return this.$val.LineTo(x, y); };
	CanvasRenderingContext2D.ptr.prototype.Clip = function() {
		var ctx;
		ctx = this;
		ctx.Object.clip();
	};
	CanvasRenderingContext2D.prototype.Clip = function() { return this.$val.Clip(); };
	CanvasRenderingContext2D.ptr.prototype.QuadraticCurveTo = function(cpx, cpy, x, y) {
		var ctx;
		ctx = this;
		ctx.Object.quadraticCurveTo(cpx, cpy, x, y);
	};
	CanvasRenderingContext2D.prototype.QuadraticCurveTo = function(cpx, cpy, x, y) { return this.$val.QuadraticCurveTo(cpx, cpy, x, y); };
	CanvasRenderingContext2D.ptr.prototype.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {
		var ctx;
		ctx = this;
		ctx.Object.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
	};
	CanvasRenderingContext2D.prototype.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) { return this.$val.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y); };
	CanvasRenderingContext2D.ptr.prototype.Arc = function(x, y, r, sAngle, eAngle, counterclockwise) {
		var ctx;
		ctx = this;
		ctx.Object.arc(x, y, r, sAngle, eAngle, $externalize(counterclockwise, $Bool));
	};
	CanvasRenderingContext2D.prototype.Arc = function(x, y, r, sAngle, eAngle, counterclockwise) { return this.$val.Arc(x, y, r, sAngle, eAngle, counterclockwise); };
	CanvasRenderingContext2D.ptr.prototype.ArcTo = function(x1, y1, x2, y2, r) {
		var ctx;
		ctx = this;
		ctx.Object.arcTo(x1, y1, x2, y2, r);
	};
	CanvasRenderingContext2D.prototype.ArcTo = function(x1, y1, x2, y2, r) { return this.$val.ArcTo(x1, y1, x2, y2, r); };
	CanvasRenderingContext2D.ptr.prototype.IsPointInPath = function(x, y) {
		var ctx;
		ctx = this;
		return !!(ctx.Object.isPointInPath(x, y));
	};
	CanvasRenderingContext2D.prototype.IsPointInPath = function(x, y) { return this.$val.IsPointInPath(x, y); };
	CanvasRenderingContext2D.ptr.prototype.Scale = function(scaleWidth, scaleHeight) {
		var ctx;
		ctx = this;
		ctx.Object.scale(scaleWidth, scaleHeight);
	};
	CanvasRenderingContext2D.prototype.Scale = function(scaleWidth, scaleHeight) { return this.$val.Scale(scaleWidth, scaleHeight); };
	CanvasRenderingContext2D.ptr.prototype.Rotate = function(angle) {
		var ctx;
		ctx = this;
		ctx.Object.rotate(angle);
	};
	CanvasRenderingContext2D.prototype.Rotate = function(angle) { return this.$val.Rotate(angle); };
	CanvasRenderingContext2D.ptr.prototype.Translate = function(x, y) {
		var ctx;
		ctx = this;
		ctx.Object.translate(x, y);
	};
	CanvasRenderingContext2D.prototype.Translate = function(x, y) { return this.$val.Translate(x, y); };
	CanvasRenderingContext2D.ptr.prototype.Transform = function(a, b, c, d, e, f) {
		var ctx;
		ctx = this;
		ctx.Object.transform(a, b, c, d, e, f);
	};
	CanvasRenderingContext2D.prototype.Transform = function(a, b, c, d, e, f) { return this.$val.Transform(a, b, c, d, e, f); };
	CanvasRenderingContext2D.ptr.prototype.SetTransform = function(a, b, c, d, e, f) {
		var ctx;
		ctx = this;
		ctx.Object.setTransform(a, b, c, d, e, f);
	};
	CanvasRenderingContext2D.prototype.SetTransform = function(a, b, c, d, e, f) { return this.$val.SetTransform(a, b, c, d, e, f); };
	CanvasRenderingContext2D.ptr.prototype.FillText = function(text, x, y, maxWidth) {
		var ctx;
		ctx = this;
		if (maxWidth === -1) {
			ctx.Object.fillText($externalize(text, $String), x, y);
			return;
		}
		ctx.Object.fillText($externalize(text, $String), x, y, maxWidth);
	};
	CanvasRenderingContext2D.prototype.FillText = function(text, x, y, maxWidth) { return this.$val.FillText(text, x, y, maxWidth); };
	CanvasRenderingContext2D.ptr.prototype.StrokeText = function(text, x, y, maxWidth) {
		var ctx;
		ctx = this;
		if (maxWidth === -1) {
			ctx.Object.strokeText($externalize(text, $String), x, y);
			return;
		}
		ctx.Object.strokeText($externalize(text, $String), x, y, maxWidth);
	};
	CanvasRenderingContext2D.prototype.StrokeText = function(text, x, y, maxWidth) { return this.$val.StrokeText(text, x, y, maxWidth); };
	HTMLDataListElement.ptr.prototype.Options = function() {
		var _i, _ref, e, i, option, options, out;
		e = this;
		options = nodeListToElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.options);
		out = $makeSlice(sliceType$11, options.$length);
		_ref = options;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			option = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = $assertType(option, ptrType$10);
			_i++;
		}
		return out;
	};
	HTMLDataListElement.prototype.Options = function() { return this.$val.Options(); };
	HTMLFieldSetElement.ptr.prototype.Elements = function() {
		var e;
		e = this;
		return nodeListToHTMLElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.elements);
	};
	HTMLFieldSetElement.prototype.Elements = function() { return this.$val.Elements(); };
	HTMLFieldSetElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLFieldSetElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLFieldSetElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLFieldSetElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLFieldSetElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLFieldSetElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLFieldSetElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLFieldSetElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLFormElement.ptr.prototype.Elements = function() {
		var e;
		e = this;
		return nodeListToHTMLElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.elements);
	};
	HTMLFormElement.prototype.Elements = function() { return this.$val.Elements(); };
	HTMLFormElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLFormElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLFormElement.ptr.prototype.Submit = function() {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.submit();
	};
	HTMLFormElement.prototype.Submit = function() { return this.$val.Submit(); };
	HTMLFormElement.ptr.prototype.Reset = function() {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.reset();
	};
	HTMLFormElement.prototype.Reset = function() { return this.$val.Reset(); };
	HTMLFormElement.ptr.prototype.Item = function(index) {
		var e;
		e = this;
		return wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.item(index));
	};
	HTMLFormElement.prototype.Item = function(index) { return this.$val.Item(index); };
	HTMLFormElement.ptr.prototype.NamedItem = function(name) {
		var e;
		e = this;
		return wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.namedItem($externalize(name, $String)));
	};
	HTMLFormElement.prototype.NamedItem = function(name) { return this.$val.NamedItem(name); };
	HTMLIFrameElement.ptr.prototype.ContentDocument = function() {
		var e;
		e = this;
		return wrapDocument(e.BasicHTMLElement.BasicElement.BasicNode.Object.contentDocument);
	};
	HTMLIFrameElement.prototype.ContentDocument = function() { return this.$val.ContentDocument(); };
	HTMLIFrameElement.ptr.prototype.ContentWindow = function() {
		var e;
		e = this;
		return new window.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.contentWindow);
	};
	HTMLIFrameElement.prototype.ContentWindow = function() { return this.$val.ContentWindow(); };
	HTMLInputElement.ptr.prototype.Files = function() {
		var _i, _ref, e, files, i, out;
		e = this;
		files = e.BasicHTMLElement.BasicElement.BasicNode.Object.files;
		out = $makeSlice(sliceType$12, ($parseInt(files.length) >> 0));
		_ref = out;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = new File.ptr(files.item(i));
			_i++;
		}
		return out;
	};
	HTMLInputElement.prototype.Files = function() { return this.$val.Files(); };
	HTMLInputElement.ptr.prototype.List = function() {
		var e, list;
		e = this;
		list = wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.list);
		if ($interfaceIsEqual(list, $ifaceNil)) {
			return ptrType$12.nil;
		}
		return $assertType(list, ptrType$12);
	};
	HTMLInputElement.prototype.List = function() { return this.$val.List(); };
	HTMLInputElement.ptr.prototype.Labels = function() {
		var e;
		e = this;
		return getLabels(e);
	};
	HTMLInputElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLInputElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLInputElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLInputElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLInputElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLInputElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLInputElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLInputElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLInputElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLInputElement.ptr.prototype.Select = function() {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.select();
	};
	HTMLInputElement.prototype.Select = function() { return this.$val.Select(); };
	HTMLInputElement.ptr.prototype.SetSelectionRange = function(start, end, direction) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setSelectionRange(start, end, $externalize(direction, $String));
	};
	HTMLInputElement.prototype.SetSelectionRange = function(start, end, direction) { return this.$val.SetSelectionRange(start, end, direction); };
	HTMLInputElement.ptr.prototype.StepDown = function(n) {
		var e;
		e = this;
		return callRecover(e, "stepDown", new sliceType([new $Int(n)]));
	};
	HTMLInputElement.prototype.StepDown = function(n) { return this.$val.StepDown(n); };
	HTMLInputElement.ptr.prototype.StepUp = function(n) {
		var e;
		e = this;
		return callRecover(e, "stepUp", new sliceType([new $Int(n)]));
	};
	HTMLInputElement.prototype.StepUp = function(n) { return this.$val.StepUp(n); };
	HTMLKeygenElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLKeygenElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLKeygenElement.ptr.prototype.Labels = function() {
		var e;
		e = this;
		return getLabels(e);
	};
	HTMLKeygenElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLKeygenElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLKeygenElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLKeygenElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLKeygenElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLKeygenElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLKeygenElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLLabelElement.ptr.prototype.Control = function() {
		var e;
		e = this;
		return wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.control);
	};
	HTMLLabelElement.prototype.Control = function() { return this.$val.Control(); };
	HTMLLabelElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLLabelElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLLegendElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLLegendElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLLinkElement.ptr.prototype.Rel = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.relList, e, "rel", 0);
	};
	HTMLLinkElement.prototype.Rel = function() { return this.$val.Rel(); };
	HTMLLinkElement.ptr.prototype.Sizes = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.sizes, e, "", 0);
	};
	HTMLLinkElement.prototype.Sizes = function() { return this.$val.Sizes(); };
	HTMLLinkElement.ptr.prototype.Sheet = function() {
		var e;
		e = this;
		return $ifaceNil;
	};
	HTMLLinkElement.prototype.Sheet = function() { return this.$val.Sheet(); };
	HTMLMapElement.ptr.prototype.Areas = function() {
		var _i, _ref, area, areas, e, i, out;
		e = this;
		areas = nodeListToElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.areas);
		out = $makeSlice(sliceType$13, areas.$length);
		_ref = areas;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			area = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = $assertType(area, ptrType$13);
			_i++;
		}
		return out;
	};
	HTMLMapElement.prototype.Areas = function() { return this.$val.Areas(); };
	HTMLMapElement.ptr.prototype.Images = function() {
		var e;
		e = this;
		return nodeListToHTMLElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.areas);
	};
	HTMLMapElement.prototype.Images = function() { return this.$val.Images(); };
	HTMLMeterElement.ptr.prototype.Labels = function() {
		var e;
		e = $clone(this, HTMLMeterElement);
		return getLabels(new e.constructor.elem(e));
	};
	HTMLMeterElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLObjectElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLObjectElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLObjectElement.ptr.prototype.ContentDocument = function() {
		var e;
		e = this;
		return wrapDocument(e.BasicHTMLElement.BasicElement.BasicNode.Object.contentDocument);
	};
	HTMLObjectElement.prototype.ContentDocument = function() { return this.$val.ContentDocument(); };
	HTMLObjectElement.ptr.prototype.ContentWindow = function() {
		var e;
		e = this;
		return new window.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.contentWindow);
	};
	HTMLObjectElement.prototype.ContentWindow = function() { return this.$val.ContentWindow(); };
	HTMLObjectElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLObjectElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLObjectElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLObjectElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLObjectElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLObjectElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLOptionElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e.BasicHTMLElement.BasicElement.BasicNode.Object);
	};
	HTMLOptionElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLOutputElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLOutputElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLOutputElement.ptr.prototype.Labels = function() {
		var e;
		e = this;
		return getLabels(e);
	};
	HTMLOutputElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLOutputElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLOutputElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLOutputElement.ptr.prototype.For = function() {
		var e;
		e = this;
		return new TokenList.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.htmlFor, e, "", 0);
	};
	HTMLOutputElement.prototype.For = function() { return this.$val.For(); };
	HTMLOutputElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLOutputElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLOutputElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLOutputElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLProgressElement.ptr.prototype.Labels = function() {
		var e;
		e = $clone(this, HTMLProgressElement);
		return getLabels(new e.constructor.elem(e));
	};
	HTMLProgressElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLTableRowElement.ptr.prototype.Cells = function() {
		var _i, _ref, cell, cells, e, i, out;
		e = this;
		cells = nodeListToElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.cells);
		out = $makeSlice(sliceType$14, cells.$length);
		_ref = cells;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			cell = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = $assertType(cell, ptrType$14);
			_i++;
		}
		return out;
	};
	HTMLTableRowElement.prototype.Cells = function() { return this.$val.Cells(); };
	HTMLTableRowElement.ptr.prototype.InsertCell = function(index) {
		var e;
		e = this;
		return $assertType(wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.insertCell(index)), ptrType$14);
	};
	HTMLTableRowElement.prototype.InsertCell = function(index) { return this.$val.InsertCell(index); };
	HTMLTableRowElement.ptr.prototype.DeleteCell = function(index) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.deleteCell(index);
	};
	HTMLTableRowElement.prototype.DeleteCell = function(index) { return this.$val.DeleteCell(index); };
	HTMLTableSectionElement.ptr.prototype.Rows = function() {
		var _i, _ref, e, i, out, row, rows;
		e = this;
		rows = nodeListToElements(e.BasicHTMLElement.BasicElement.BasicNode.Object.rows);
		out = $makeSlice(sliceType$15, rows.$length);
		_ref = rows;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			row = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			(i < 0 || i >= out.$length) ? $throwRuntimeError("index out of range") : out.$array[out.$offset + i] = $assertType(row, ptrType$15);
			_i++;
		}
		return out;
	};
	HTMLTableSectionElement.prototype.Rows = function() { return this.$val.Rows(); };
	HTMLTableSectionElement.ptr.prototype.DeleteRow = function(index) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.deleteRow(index);
	};
	HTMLTableSectionElement.prototype.DeleteRow = function(index) { return this.$val.DeleteRow(index); };
	HTMLTableSectionElement.ptr.prototype.InsertRow = function(index) {
		var e;
		e = this;
		return $assertType(wrapHTMLElement(e.BasicHTMLElement.BasicElement.BasicNode.Object.insertRow(index)), ptrType$15);
	};
	HTMLTableSectionElement.prototype.InsertRow = function(index) { return this.$val.InsertRow(index); };
	HTMLTextAreaElement.ptr.prototype.Form = function() {
		var e;
		e = this;
		return getForm(e);
	};
	HTMLTextAreaElement.prototype.Form = function() { return this.$val.Form(); };
	HTMLTextAreaElement.ptr.prototype.Labels = function() {
		var e;
		e = this;
		return getLabels(e);
	};
	HTMLTextAreaElement.prototype.Labels = function() { return this.$val.Labels(); };
	HTMLTextAreaElement.ptr.prototype.Validity = function() {
		var e;
		e = this;
		return new ValidityState.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.validity, false, false, false, false, false, false, false, false, false);
	};
	HTMLTextAreaElement.prototype.Validity = function() { return this.$val.Validity(); };
	HTMLTextAreaElement.ptr.prototype.CheckValidity = function() {
		var e;
		e = this;
		return !!(e.BasicHTMLElement.BasicElement.BasicNode.Object.checkValidity());
	};
	HTMLTextAreaElement.prototype.CheckValidity = function() { return this.$val.CheckValidity(); };
	HTMLTextAreaElement.ptr.prototype.SetCustomValidity = function(s) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setCustomValidity($externalize(s, $String));
	};
	HTMLTextAreaElement.prototype.SetCustomValidity = function(s) { return this.$val.SetCustomValidity(s); };
	HTMLTextAreaElement.ptr.prototype.Select = function() {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.select();
	};
	HTMLTextAreaElement.prototype.Select = function() { return this.$val.Select(); };
	HTMLTextAreaElement.ptr.prototype.SetSelectionRange = function(start, end, direction) {
		var e;
		e = this;
		e.BasicHTMLElement.BasicElement.BasicNode.Object.setSelectionRange(start, end, $externalize(direction, $String));
	};
	HTMLTextAreaElement.prototype.SetSelectionRange = function(start, end, direction) { return this.$val.SetSelectionRange(start, end, direction); };
	HTMLTrackElement.ptr.prototype.Track = function() {
		var e;
		e = this;
		return new TextTrack.ptr(e.BasicHTMLElement.BasicElement.BasicNode.Object.track);
	};
	HTMLTrackElement.prototype.Track = function() { return this.$val.Track(); };
	HTMLBaseElement.ptr.prototype.Href = function() {
		var e;
		e = this;
		return $internalize(e.BasicHTMLElement.BasicElement.BasicNode.Object.href, $String);
	};
	HTMLBaseElement.prototype.Href = function() { return this.$val.Href(); };
	HTMLBaseElement.ptr.prototype.Target = function() {
		var e;
		e = this;
		return $internalize(e.BasicHTMLElement.BasicElement.BasicNode.Object.target, $String);
	};
	HTMLBaseElement.prototype.Target = function() { return this.$val.Target(); };
	CSSStyleDeclaration.ptr.prototype.ToMap = function() {
		var N, _key, css, i, m, name, value;
		css = this;
		m = new $Map();
		N = $parseInt(css.Object.length) >> 0;
		i = 0;
		while (i < N) {
			name = $internalize(css.Object.index(i), $String);
			value = $internalize(css.Object.getPropertyValue(), $String);
			_key = name; (m || $throwRuntimeError("assignment to entry in nil map"))[_key] = { k: _key, v: value };
			i = i + (1) >> 0;
		}
		return m;
	};
	CSSStyleDeclaration.prototype.ToMap = function() { return this.$val.ToMap(); };
	CSSStyleDeclaration.ptr.prototype.RemoveProperty = function(name) {
		var css;
		css = this;
		css.Object.remoteProperty($externalize(name, $String));
	};
	CSSStyleDeclaration.prototype.RemoveProperty = function(name) { return this.$val.RemoveProperty(name); };
	CSSStyleDeclaration.ptr.prototype.GetPropertyValue = function(name) {
		var css;
		css = this;
		return $internalize(css.Object.getPropertyValue($externalize(name, $String)), $String);
	};
	CSSStyleDeclaration.prototype.GetPropertyValue = function(name) { return this.$val.GetPropertyValue(name); };
	CSSStyleDeclaration.ptr.prototype.GetPropertyPriority = function(name) {
		var css;
		css = this;
		return $internalize(css.Object.getPropertyPriority($externalize(name, $String)), $String);
	};
	CSSStyleDeclaration.prototype.GetPropertyPriority = function(name) { return this.$val.GetPropertyPriority(name); };
	CSSStyleDeclaration.ptr.prototype.SetProperty = function(name, value, priority) {
		var css;
		css = this;
		css.Object.setProperty($externalize(name, $String), $externalize(value, $String), $externalize(priority, $String));
	};
	CSSStyleDeclaration.prototype.SetProperty = function(name, value, priority) { return this.$val.SetProperty(name, value, priority); };
	CSSStyleDeclaration.ptr.prototype.Index = function(idx) {
		var css;
		css = this;
		return $internalize(css.Object.index(idx), $String);
	};
	CSSStyleDeclaration.prototype.Index = function(idx) { return this.$val.Index(idx); };
	CSSStyleDeclaration.ptr.prototype.Length = function() {
		var css;
		css = this;
		return $parseInt(css.Object.length) >> 0;
	};
	CSSStyleDeclaration.prototype.Length = function() { return this.$val.Length(); };
	wrapEvent = function(o) {
		var _ref, c, ev;
		if (o === null || o === undefined) {
			return $ifaceNil;
		}
		ev = new BasicEvent.ptr(o);
		c = o.constructor;
		_ref = c;
		if (_ref === $global.AnimationEvent) {
			return new AnimationEvent.ptr(ev);
		} else if (_ref === $global.AudioProcessingEvent) {
			return new AudioProcessingEvent.ptr(ev);
		} else if (_ref === $global.BeforeInputEvent) {
			return new BeforeInputEvent.ptr(ev);
		} else if (_ref === $global.BeforeUnloadEvent) {
			return new BeforeUnloadEvent.ptr(ev);
		} else if (_ref === $global.BlobEvent) {
			return new BlobEvent.ptr(ev);
		} else if (_ref === $global.ClipboardEvent) {
			return new ClipboardEvent.ptr(ev);
		} else if (_ref === $global.CloseEvent) {
			return new CloseEvent.ptr(ev, 0, "", false);
		} else if (_ref === $global.CompositionEvent) {
			return new CompositionEvent.ptr(ev);
		} else if (_ref === $global.CSSFontFaceLoadEvent) {
			return new CSSFontFaceLoadEvent.ptr(ev);
		} else if (_ref === $global.CustomEvent) {
			return new CustomEvent.ptr(ev);
		} else if (_ref === $global.DeviceLightEvent) {
			return new DeviceLightEvent.ptr(ev);
		} else if (_ref === $global.DeviceMotionEvent) {
			return new DeviceMotionEvent.ptr(ev);
		} else if (_ref === $global.DeviceOrientationEvent) {
			return new DeviceOrientationEvent.ptr(ev);
		} else if (_ref === $global.DeviceProximityEvent) {
			return new DeviceProximityEvent.ptr(ev);
		} else if (_ref === $global.DOMTransactionEvent) {
			return new DOMTransactionEvent.ptr(ev);
		} else if (_ref === $global.DragEvent) {
			return new DragEvent.ptr(ev);
		} else if (_ref === $global.EditingBeforeInputEvent) {
			return new EditingBeforeInputEvent.ptr(ev);
		} else if (_ref === $global.ErrorEvent) {
			return new ErrorEvent.ptr(ev);
		} else if (_ref === $global.FocusEvent) {
			return new FocusEvent.ptr(ev);
		} else if (_ref === $global.GamepadEvent) {
			return new GamepadEvent.ptr(ev);
		} else if (_ref === $global.HashChangeEvent) {
			return new HashChangeEvent.ptr(ev);
		} else if (_ref === $global.IDBVersionChangeEvent) {
			return new IDBVersionChangeEvent.ptr(ev);
		} else if (_ref === $global.KeyboardEvent) {
			return new KeyboardEvent.ptr(ev, false, 0, false, "", "", 0, "", 0, 0, false, false, false);
		} else if (_ref === $global.MediaStreamEvent) {
			return new MediaStreamEvent.ptr(ev);
		} else if (_ref === $global.MessageEvent) {
			return new MessageEvent.ptr(ev, null);
		} else if (_ref === $global.MouseEvent) {
			return new MouseEvent.ptr(new UIEvent.ptr(ev), false, 0, 0, 0, false, false, 0, 0, 0, 0, false);
		} else if (_ref === $global.MutationEvent) {
			return new MutationEvent.ptr(ev);
		} else if (_ref === $global.OfflineAudioCompletionEvent) {
			return new OfflineAudioCompletionEvent.ptr(ev);
		} else if (_ref === $global.PageTransitionEvent) {
			return new PageTransitionEvent.ptr(ev);
		} else if (_ref === $global.PointerEvent) {
			return new PointerEvent.ptr(ev);
		} else if (_ref === $global.PopStateEvent) {
			return new PopStateEvent.ptr(ev);
		} else if (_ref === $global.ProgressEvent) {
			return new ProgressEvent.ptr(ev);
		} else if (_ref === $global.RelatedEvent) {
			return new RelatedEvent.ptr(ev);
		} else if (_ref === $global.RTCPeerConnectionIceEvent) {
			return new RTCPeerConnectionIceEvent.ptr(ev);
		} else if (_ref === $global.SensorEvent) {
			return new SensorEvent.ptr(ev);
		} else if (_ref === $global.StorageEvent) {
			return new StorageEvent.ptr(ev);
		} else if (_ref === $global.SVGEvent) {
			return new SVGEvent.ptr(ev);
		} else if (_ref === $global.SVGZoomEvent) {
			return new SVGZoomEvent.ptr(ev);
		} else if (_ref === $global.TimeEvent) {
			return new TimeEvent.ptr(ev);
		} else if (_ref === $global.TouchEvent) {
			return new TouchEvent.ptr(ev);
		} else if (_ref === $global.TrackEvent) {
			return new TrackEvent.ptr(ev);
		} else if (_ref === $global.TransitionEvent) {
			return new TransitionEvent.ptr(ev);
		} else if (_ref === $global.UIEvent) {
			return new UIEvent.ptr(ev);
		} else if (_ref === $global.UserProximityEvent) {
			return new UserProximityEvent.ptr(ev);
		} else if (_ref === $global.WheelEvent) {
			return new WheelEvent.ptr(ev, 0, 0, 0, 0);
		} else {
			return ev;
		}
	};
	BasicEvent.ptr.prototype.Bubbles = function() {
		var ev;
		ev = this;
		return !!(ev.Object.bubbles);
	};
	BasicEvent.prototype.Bubbles = function() { return this.$val.Bubbles(); };
	BasicEvent.ptr.prototype.Cancelable = function() {
		var ev;
		ev = this;
		return !!(ev.Object.cancelable);
	};
	BasicEvent.prototype.Cancelable = function() { return this.$val.Cancelable(); };
	BasicEvent.ptr.prototype.CurrentTarget = function() {
		var ev;
		ev = this;
		return wrapElement(ev.Object.currentTarget);
	};
	BasicEvent.prototype.CurrentTarget = function() { return this.$val.CurrentTarget(); };
	BasicEvent.ptr.prototype.DefaultPrevented = function() {
		var ev;
		ev = this;
		return !!(ev.Object.defaultPrevented);
	};
	BasicEvent.prototype.DefaultPrevented = function() { return this.$val.DefaultPrevented(); };
	BasicEvent.ptr.prototype.EventPhase = function() {
		var ev;
		ev = this;
		return $parseInt(ev.Object.eventPhase) >> 0;
	};
	BasicEvent.prototype.EventPhase = function() { return this.$val.EventPhase(); };
	BasicEvent.ptr.prototype.Target = function() {
		var ev;
		ev = this;
		return wrapElement(ev.Object.target);
	};
	BasicEvent.prototype.Target = function() { return this.$val.Target(); };
	BasicEvent.ptr.prototype.Timestamp = function() {
		var _q, _r, ev, ms, ns, s;
		ev = this;
		ms = $parseInt(ev.Object.timeStamp) >> 0;
		s = (_q = ms / 1000, (_q === _q && _q !== 1/0 && _q !== -1/0) ? _q >> 0 : $throwRuntimeError("integer divide by zero"));
		ns = ((_r = ms % 1000, _r === _r ? _r : $throwRuntimeError("integer divide by zero")) * 1000000 >> 0);
		return time.Unix(new $Int64(0, s), new $Int64(0, ns));
	};
	BasicEvent.prototype.Timestamp = function() { return this.$val.Timestamp(); };
	BasicEvent.ptr.prototype.Type = function() {
		var ev;
		ev = this;
		return $internalize(ev.Object.type, $String);
	};
	BasicEvent.prototype.Type = function() { return this.$val.Type(); };
	BasicEvent.ptr.prototype.PreventDefault = function() {
		var ev;
		ev = this;
		ev.Object.preventDefault();
	};
	BasicEvent.prototype.PreventDefault = function() { return this.$val.PreventDefault(); };
	BasicEvent.ptr.prototype.StopImmediatePropagation = function() {
		var ev;
		ev = this;
		ev.Object.stopImmediatePropagation();
	};
	BasicEvent.prototype.StopImmediatePropagation = function() { return this.$val.StopImmediatePropagation(); };
	BasicEvent.ptr.prototype.StopPropagation = function() {
		var ev;
		ev = this;
		ev.Object.stopPropagation();
	};
	BasicEvent.prototype.StopPropagation = function() { return this.$val.StopPropagation(); };
	KeyboardEvent.ptr.prototype.ModifierState = function(mod) {
		var ev;
		ev = this;
		return !!(ev.BasicEvent.Object.getModifierState($externalize(mod, $String)));
	};
	KeyboardEvent.prototype.ModifierState = function(mod) { return this.$val.ModifierState(mod); };
	MouseEvent.ptr.prototype.RelatedTarget = function() {
		var ev;
		ev = this;
		return wrapElement(ev.UIEvent.BasicEvent.Object.target);
	};
	MouseEvent.prototype.RelatedTarget = function() { return this.$val.RelatedTarget(); };
	MouseEvent.ptr.prototype.ModifierState = function(mod) {
		var ev;
		ev = this;
		return !!(ev.UIEvent.BasicEvent.Object.getModifierState($externalize(mod, $String)));
	};
	MouseEvent.prototype.ModifierState = function(mod) { return this.$val.ModifierState(mod); };
	ptrType$18.methods = [{prop: "Add", name: "Add", pkg: "", type: $funcType([$String], [], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "Item", name: "Item", pkg: "", type: $funcType([$Int], [$String], false)}, {prop: "Remove", name: "Remove", pkg: "", type: $funcType([$String], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([sliceType$5], [], false)}, {prop: "SetString", name: "SetString", pkg: "", type: $funcType([$String], [], false)}, {prop: "Slice", name: "Slice", pkg: "", type: $funcType([], [sliceType$5], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Toggle", name: "Toggle", pkg: "", type: $funcType([$String], [], false)}];
	document.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$21.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	htmlDocument.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$22.methods = [{prop: "ActiveElement", name: "ActiveElement", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Body", name: "Body", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Cookie", name: "Cookie", pkg: "", type: $funcType([], [$String], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "DefaultView", name: "DefaultView", pkg: "", type: $funcType([], [Window], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "DesignMode", name: "DesignMode", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Domain", name: "Domain", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Forms", name: "Forms", pkg: "", type: $funcType([], [sliceType$6], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Head", name: "Head", pkg: "", type: $funcType([], [ptrType$5], false)}, {prop: "Images", name: "Images", pkg: "", type: $funcType([], [sliceType$7], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastModified", name: "LastModified", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Links", name: "Links", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$19], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "Plugins", name: "Plugins", pkg: "", type: $funcType([], [sliceType$8], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "ReadyState", name: "ReadyState", pkg: "", type: $funcType([], [$String], false)}, {prop: "Referrer", name: "Referrer", pkg: "", type: $funcType([], [$String], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Scripts", name: "Scripts", pkg: "", type: $funcType([], [sliceType$9], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetCookie", name: "SetCookie", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDesignMode", name: "SetDesignMode", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetDomain", name: "SetDomain", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "URL", name: "URL", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	URLUtils.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$1.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Location.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$19.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	window.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$26.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$1], false)}, {prop: "Alert", name: "Alert", pkg: "", type: $funcType([$String], [], false)}, {prop: "Back", name: "Back", pkg: "", type: $funcType([], [], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ClearInterval", name: "ClearInterval", pkg: "", type: $funcType([$Int], [], false)}, {prop: "ClearTimeout", name: "ClearTimeout", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Close", name: "Close", pkg: "", type: $funcType([], [], false)}, {prop: "Confirm", name: "Confirm", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "Console", name: "Console", pkg: "", type: $funcType([], [ptrType$24], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Document", name: "Document", pkg: "", type: $funcType([], [Document], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Forward", name: "Forward", pkg: "", type: $funcType([], [], false)}, {prop: "FrameElement", name: "FrameElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetComputedStyle", name: "GetComputedStyle", pkg: "", type: $funcType([Element, $String], [ptrType$23], false)}, {prop: "GetSelection", name: "GetSelection", pkg: "", type: $funcType([], [Selection], false)}, {prop: "History", name: "History", pkg: "", type: $funcType([], [History], false)}, {prop: "Home", name: "Home", pkg: "", type: $funcType([], [], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHeight", name: "InnerHeight", pkg: "", type: $funcType([], [$Int], false)}, {prop: "InnerWidth", name: "InnerWidth", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$19], false)}, {prop: "MoveBy", name: "MoveBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "MoveTo", name: "MoveTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "Navigator", name: "Navigator", pkg: "", type: $funcType([], [Navigator], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Open", name: "Open", pkg: "", type: $funcType([$String, $String, $String], [Window], false)}, {prop: "OpenDialog", name: "OpenDialog", pkg: "", type: $funcType([$String, $String, $String, sliceType], [Window], false)}, {prop: "Opener", name: "Opener", pkg: "", type: $funcType([], [Window], false)}, {prop: "OuterHeight", name: "OuterHeight", pkg: "", type: $funcType([], [$Int], false)}, {prop: "OuterWidth", name: "OuterWidth", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Parent", name: "Parent", pkg: "", type: $funcType([], [Window], false)}, {prop: "PostMessage", name: "PostMessage", pkg: "", type: $funcType([$String, $String, sliceType], [], false)}, {prop: "Print", name: "Print", pkg: "", type: $funcType([], [], false)}, {prop: "Prompt", name: "Prompt", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ResizeBy", name: "ResizeBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ResizeTo", name: "ResizeTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Screen", name: "Screen", pkg: "", type: $funcType([], [ptrType$25], false)}, {prop: "ScreenX", name: "ScreenX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScreenY", name: "ScreenY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Scroll", name: "Scroll", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollBy", name: "ScrollBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollByLines", name: "ScrollByLines", pkg: "", type: $funcType([$Int], [], false)}, {prop: "ScrollMaxX", name: "ScrollMaxX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollMaxY", name: "ScrollMaxY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollTo", name: "ScrollTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollX", name: "ScrollX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollY", name: "ScrollY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetCursor", name: "SetCursor", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInterval", name: "SetInterval", pkg: "", type: $funcType([funcType, $Int], [$Int], false)}, {prop: "SetName", name: "SetName", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTimeout", name: "SetTimeout", pkg: "", type: $funcType([funcType, $Int], [$Int], false)}, {prop: "Stop", name: "Stop", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Top", name: "Top", pkg: "", type: $funcType([], [Window], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Screen.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$25.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	PositionError.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$27.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Error", name: "Error", pkg: "", type: $funcType([], [$String], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Coordinates.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$28.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Console.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$24.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BasicNode.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$20.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ClientRect.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$29.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BasicHTMLElement.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BasicElement.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$30.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLAnchorElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$31.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "Rel", name: "Rel", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLAppletElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$32.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "Rel", name: "Rel", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLAreaElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$13.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "Rel", name: "Rel", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLAudioElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$33.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLBRElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$34.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLBaseElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$35.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Href", name: "Href", pkg: "", type: $funcType([], [$String], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLBodyElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$36.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ValidityState.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$37.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLButtonElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$38.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLCanvasElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$40.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetContext", name: "GetContext", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetContext2d", name: "GetContext2d", pkg: "", type: $funcType([], [ptrType$39], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CanvasRenderingContext2D.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$39.methods = [{prop: "Arc", name: "Arc", pkg: "", type: $funcType([$Int, $Int, $Int, $Int, $Int, $Bool], [], false)}, {prop: "ArcTo", name: "ArcTo", pkg: "", type: $funcType([$Int, $Int, $Int, $Int, $Int], [], false)}, {prop: "BeginPath", name: "BeginPath", pkg: "", type: $funcType([], [], false)}, {prop: "BezierCurveTo", name: "BezierCurveTo", pkg: "", type: $funcType([$Int, $Int, $Int, $Int, $Int, $Int], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ClearRect", name: "ClearRect", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "Clip", name: "Clip", pkg: "", type: $funcType([], [], false)}, {prop: "ClosePath", name: "ClosePath", pkg: "", type: $funcType([], [], false)}, {prop: "CreateLinearGradient", name: "CreateLinearGradient", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Fill", name: "Fill", pkg: "", type: $funcType([], [], false)}, {prop: "FillRect", name: "FillRect", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "FillText", name: "FillText", pkg: "", type: $funcType([$String, $Int, $Int, $Int], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsPointInPath", name: "IsPointInPath", pkg: "", type: $funcType([$Int, $Int], [$Bool], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LineTo", name: "LineTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "MoveTo", name: "MoveTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "QuadraticCurveTo", name: "QuadraticCurveTo", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "Rect", name: "Rect", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "Rotate", name: "Rotate", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Scale", name: "Scale", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetTransform", name: "SetTransform", pkg: "", type: $funcType([$Int, $Int, $Int, $Int, $Int, $Int], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Stroke", name: "Stroke", pkg: "", type: $funcType([], [], false)}, {prop: "StrokeRect", name: "StrokeRect", pkg: "", type: $funcType([$Int, $Int, $Int, $Int], [], false)}, {prop: "StrokeText", name: "StrokeText", pkg: "", type: $funcType([$String, $Int, $Int, $Int], [], false)}, {prop: "Transform", name: "Transform", pkg: "", type: $funcType([$Int, $Int, $Int, $Int, $Int, $Int], [], false)}, {prop: "Translate", name: "Translate", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLDListElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$41.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLDataElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$42.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLDataListElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$12.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Options", name: "Options", pkg: "", type: $funcType([], [sliceType$11], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLDirectoryElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$43.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLDivElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$44.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLEmbedElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$7.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLFieldSetElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$45.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Elements", name: "Elements", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLFontElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$46.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLFormElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$3.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Elements", name: "Elements", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Item", name: "Item", pkg: "", type: $funcType([$Int], [HTMLElement], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NamedItem", name: "NamedItem", pkg: "", type: $funcType([$String], [HTMLElement], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Reset", name: "Reset", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "Submit", name: "Submit", pkg: "", type: $funcType([], [], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLFrameElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$47.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLFrameSetElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$48.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLHRElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$49.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLHeadElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$5.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLHeadingElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$50.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLHtmlElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$51.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLIFrameElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$52.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentDocument", name: "ContentDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "ContentWindow", name: "ContentWindow", pkg: "", type: $funcType([], [Window], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLImageElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$6.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLInputElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$53.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Files", name: "Files", pkg: "", type: $funcType([], [sliceType$12], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "List", name: "List", pkg: "", type: $funcType([], [ptrType$12], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Select", name: "Select", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetSelectionRange", name: "SetSelectionRange", pkg: "", type: $funcType([$Int, $Int, $String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "StepDown", name: "StepDown", pkg: "", type: $funcType([$Int], [$error], false)}, {prop: "StepUp", name: "StepUp", pkg: "", type: $funcType([$Int], [$error], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	File.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$11.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLKeygenElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$54.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLLIElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$55.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLLabelElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$4.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Control", name: "Control", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLLegendElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$56.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLLinkElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$57.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "Rel", name: "Rel", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "Sheet", name: "Sheet", pkg: "", type: $funcType([], [StyleSheet], false)}, {prop: "Sizes", name: "Sizes", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLMapElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$58.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Areas", name: "Areas", pkg: "", type: $funcType([], [sliceType$13], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Images", name: "Images", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLMediaElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$2.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLMenuElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$59.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLMetaElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$60.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLMeterElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$61.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLModElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$62.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLOListElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$63.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLObjectElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$64.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentDocument", name: "ContentDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "ContentWindow", name: "ContentWindow", pkg: "", type: $funcType([], [Window], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLOptGroupElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$65.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLOptionElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$10.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLOutputElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$66.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "For", name: "For", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLParagraphElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$67.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLParamElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$68.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLPreElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$69.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLProgressElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$70.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLQuoteElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$71.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLScriptElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$8.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLSelectElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$72.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLSourceElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$73.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLSpanElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$74.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLStyleElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$75.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableCaptionElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$76.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableCellElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$14.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableColElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$77.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableDataCellElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$78.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$79.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableHeaderCellElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$80.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableRowElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$15.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cells", name: "Cells", pkg: "", type: $funcType([], [sliceType$14], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "DeleteCell", name: "DeleteCell", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "InsertCell", name: "InsertCell", pkg: "", type: $funcType([$Int], [ptrType$14], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTableSectionElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$81.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "DeleteRow", name: "DeleteRow", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "InsertRow", name: "InsertRow", pkg: "", type: $funcType([$Int], [ptrType$15], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Rows", name: "Rows", pkg: "", type: $funcType([], [sliceType$15], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTextAreaElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$82.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "CheckValidity", name: "CheckValidity", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Form", name: "Form", pkg: "", type: $funcType([], [ptrType$3], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Labels", name: "Labels", pkg: "", type: $funcType([], [sliceType$4], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Select", name: "Select", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetCustomValidity", name: "SetCustomValidity", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetSelectionRange", name: "SetSelectionRange", pkg: "", type: $funcType([$Int, $Int, $String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}, {prop: "Validity", name: "Validity", pkg: "", type: $funcType([], [ptrType$37], false)}];
	HTMLTimeElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$83.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTitleElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$84.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TextTrack.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$85.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLTrackElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$86.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Track", name: "Track", pkg: "", type: $funcType([], [ptrType$85], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLUListElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$87.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLUnknownElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$88.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HTMLVideoElement.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$89.methods = [{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetClass", name: "SetClass", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTabIndex", name: "SetTabIndex", pkg: "", type: $funcType([$Int], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $funcType([], [$Int], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CSSStyleDeclaration.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$23.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "GetPropertyPriority", name: "GetPropertyPriority", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetPropertyValue", name: "GetPropertyValue", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [$String], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "RemoveProperty", name: "RemoveProperty", pkg: "", type: $funcType([$String], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetProperty", name: "SetProperty", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "ToMap", name: "ToMap", pkg: "", type: $funcType([], [mapType], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	Text.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$9.methods = [{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BasicEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$16.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	AnimationEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$90.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	AudioProcessingEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$91.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BeforeInputEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$92.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BeforeUnloadEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$93.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	BlobEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$94.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ClipboardEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$95.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CloseEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$96.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CompositionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$97.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CSSFontFaceLoadEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$98.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	CustomEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$99.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DeviceLightEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$100.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DeviceMotionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$101.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DeviceOrientationEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$102.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DeviceProximityEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$103.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DOMTransactionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$104.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	DragEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$105.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	EditingBeforeInputEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$106.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ErrorEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$107.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	FocusEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$108.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	GamepadEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$109.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	HashChangeEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$110.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	IDBVersionChangeEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$111.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	KeyboardEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$112.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ModifierState", name: "ModifierState", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	MediaStreamEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$113.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	MessageEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$114.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	MouseEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$115.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ModifierState", name: "ModifierState", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "RelatedTarget", name: "RelatedTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	MutationEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$116.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	OfflineAudioCompletionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$117.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	PageTransitionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$118.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	PointerEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$119.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	PopStateEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$120.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ProgressEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$121.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	RelatedEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$122.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	RTCPeerConnectionIceEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$123.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	SensorEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$124.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	StorageEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$125.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	SVGEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$126.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	SVGZoomEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$127.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TimeEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$128.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TouchEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$129.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TrackEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$130.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TransitionEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$131.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	UIEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$17.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	UserProximityEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$132.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	WheelEvent.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	ptrType$133.methods = [{prop: "Bool", name: "Bool", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Call", name: "Call", pkg: "", type: $funcType([$String, sliceType], [js.Object], true)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Delete", name: "Delete", pkg: "", type: $funcType([$String], [], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Float", name: "Float", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "Get", name: "Get", pkg: "", type: $funcType([$String], [js.Object], false)}, {prop: "Index", name: "Index", pkg: "", type: $funcType([$Int], [js.Object], false)}, {prop: "Int", name: "Int", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Int64", name: "Int64", pkg: "", type: $funcType([], [$Int64], false)}, {prop: "Interface", name: "Interface", pkg: "", type: $funcType([], [$emptyInterface], false)}, {prop: "Invoke", name: "Invoke", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "New", name: "New", pkg: "", type: $funcType([sliceType], [js.Object], true)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "Set", name: "Set", pkg: "", type: $funcType([$String, $emptyInterface], [], false)}, {prop: "SetIndex", name: "SetIndex", pkg: "", type: $funcType([$Int, $emptyInterface], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "String", name: "String", pkg: "", type: $funcType([], [$String], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}, {prop: "Uint64", name: "Uint64", pkg: "", type: $funcType([], [$Uint64], false)}, {prop: "Unsafe", name: "Unsafe", pkg: "", type: $funcType([], [$Uintptr], false)}];
	TokenList.init([{prop: "dtl", name: "dtl", pkg: "honnef.co/go/js/dom", type: js.Object, tag: ""}, {prop: "o", name: "o", pkg: "honnef.co/go/js/dom", type: js.Object, tag: ""}, {prop: "sa", name: "sa", pkg: "honnef.co/go/js/dom", type: $String, tag: ""}, {prop: "Length", name: "Length", pkg: "", type: $Int, tag: "js:\"length\""}]);
	Document.init([{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}]);
	HTMLDocument.init([{prop: "ActiveElement", name: "ActiveElement", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AdoptNode", name: "AdoptNode", pkg: "", type: $funcType([Node], [Node], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "Async", name: "Async", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Body", name: "Body", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Cookie", name: "Cookie", pkg: "", type: $funcType([], [$String], false)}, {prop: "CreateElement", name: "CreateElement", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "CreateElementNS", name: "CreateElementNS", pkg: "", type: $funcType([$String, $String], [Element], false)}, {prop: "CreateTextNode", name: "CreateTextNode", pkg: "", type: $funcType([$String], [ptrType$9], false)}, {prop: "DefaultView", name: "DefaultView", pkg: "", type: $funcType([], [Window], false)}, {prop: "DesignMode", name: "DesignMode", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Doctype", name: "Doctype", pkg: "", type: $funcType([], [DocumentType], false)}, {prop: "DocumentElement", name: "DocumentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "DocumentURI", name: "DocumentURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Domain", name: "Domain", pkg: "", type: $funcType([], [$String], false)}, {prop: "ElementFromPoint", name: "ElementFromPoint", pkg: "", type: $funcType([$Int, $Int], [Element], false)}, {prop: "EnableStyleSheetsForSet", name: "EnableStyleSheetsForSet", pkg: "", type: $funcType([$String], [], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Forms", name: "Forms", pkg: "", type: $funcType([], [sliceType$6], false)}, {prop: "GetElementByID", name: "GetElementByID", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Head", name: "Head", pkg: "", type: $funcType([], [ptrType$5], false)}, {prop: "Images", name: "Images", pkg: "", type: $funcType([], [sliceType$7], false)}, {prop: "Implementation", name: "Implementation", pkg: "", type: $funcType([], [DOMImplementation], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LastModified", name: "LastModified", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "LastStyleSheetSet", name: "LastStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "Links", name: "Links", pkg: "", type: $funcType([], [sliceType$3], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$19], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "Plugins", name: "Plugins", pkg: "", type: $funcType([], [sliceType$8], false)}, {prop: "PreferredStyleSheetSet", name: "PreferredStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "ReadyState", name: "ReadyState", pkg: "", type: $funcType([], [$String], false)}, {prop: "Referrer", name: "Referrer", pkg: "", type: $funcType([], [$String], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "Scripts", name: "Scripts", pkg: "", type: $funcType([], [sliceType$9], false)}, {prop: "SelectedStyleSheetSet", name: "SelectedStyleSheetSet", pkg: "", type: $funcType([], [$String], false)}, {prop: "SetAsync", name: "SetAsync", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetCookie", name: "SetCookie", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDesignMode", name: "SetDesignMode", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetDomain", name: "SetDomain", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "StyleSheetSets", name: "StyleSheetSets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "StyleSheets", name: "StyleSheets", pkg: "", type: $funcType([], [sliceType$10], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "URL", name: "URL", pkg: "", type: $funcType([], [$String], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}]);
	document.init([{prop: "BasicNode", name: "", pkg: "", type: ptrType$20, tag: ""}]);
	htmlDocument.init([{prop: "document", name: "", pkg: "honnef.co/go/js/dom", type: ptrType$21, tag: ""}]);
	URLUtils.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "Href", name: "Href", pkg: "", type: $String, tag: "js:\"href\""}, {prop: "Protocol", name: "Protocol", pkg: "", type: $String, tag: "js:\"protocol\""}, {prop: "Host", name: "Host", pkg: "", type: $String, tag: "js:\"host\""}, {prop: "Hostname", name: "Hostname", pkg: "", type: $String, tag: "js:\"hostname\""}, {prop: "Port", name: "Port", pkg: "", type: $String, tag: "js:\"port\""}, {prop: "Pathname", name: "Pathname", pkg: "", type: $String, tag: "js:\"pathname\""}, {prop: "Search", name: "Search", pkg: "", type: $String, tag: "js:\"search\""}, {prop: "Hash", name: "Hash", pkg: "", type: $String, tag: "js:\"hash\""}, {prop: "Username", name: "Username", pkg: "", type: $String, tag: "js:\"username\""}, {prop: "Password", name: "Password", pkg: "", type: $String, tag: "js:\"password\""}, {prop: "Origin", name: "Origin", pkg: "", type: $String, tag: "js:\"origin\""}]);
	Location.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "URLUtils", name: "", pkg: "", type: ptrType$1, tag: ""}]);
	HTMLElement.init([{prop: "AccessKey", name: "AccessKey", pkg: "", type: $funcType([], [$String], false)}, {prop: "AccessKeyLabel", name: "AccessKeyLabel", pkg: "", type: $funcType([], [$String], false)}, {prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "Click", name: "Click", pkg: "", type: $funcType([], [], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "ContentEditable", name: "ContentEditable", pkg: "", type: $funcType([], [$String], false)}, {prop: "Dataset", name: "Dataset", pkg: "", type: $funcType([], [], false)}, {prop: "Dir", name: "Dir", pkg: "", type: $funcType([], [$String], false)}, {prop: "Draggable", name: "Draggable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "IsContentEditable", name: "IsContentEditable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "Lang", name: "Lang", pkg: "", type: $funcType([], [$String], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OffsetHeight", name: "OffsetHeight", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetLeft", name: "OffsetLeft", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetParent", name: "OffsetParent", pkg: "", type: $funcType([], [HTMLElement], false)}, {prop: "OffsetTop", name: "OffsetTop", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OffsetWidth", name: "OffsetWidth", pkg: "", type: $funcType([], [$Float64], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SetAccessKey", name: "SetAccessKey", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAccessKeyLabel", name: "SetAccessKeyLabel", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetContentEditable", name: "SetContentEditable", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDir", name: "SetDir", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetDraggable", name: "SetDraggable", pkg: "", type: $funcType([$Bool], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetLang", name: "SetLang", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTitle", name: "SetTitle", pkg: "", type: $funcType([$String], [], false)}, {prop: "Style", name: "Style", pkg: "", type: $funcType([], [ptrType$23], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Title", name: "Title", pkg: "", type: $funcType([], [$String], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}]);
	Window.init([{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "Alert", name: "Alert", pkg: "", type: $funcType([$String], [], false)}, {prop: "Back", name: "Back", pkg: "", type: $funcType([], [], false)}, {prop: "Blur", name: "Blur", pkg: "", type: $funcType([], [], false)}, {prop: "ClearInterval", name: "ClearInterval", pkg: "", type: $funcType([$Int], [], false)}, {prop: "ClearTimeout", name: "ClearTimeout", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Close", name: "Close", pkg: "", type: $funcType([], [], false)}, {prop: "Confirm", name: "Confirm", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "Console", name: "Console", pkg: "", type: $funcType([], [ptrType$24], false)}, {prop: "Document", name: "Document", pkg: "", type: $funcType([], [Document], false)}, {prop: "Focus", name: "Focus", pkg: "", type: $funcType([], [], false)}, {prop: "Forward", name: "Forward", pkg: "", type: $funcType([], [], false)}, {prop: "FrameElement", name: "FrameElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "GetComputedStyle", name: "GetComputedStyle", pkg: "", type: $funcType([Element, $String], [ptrType$23], false)}, {prop: "GetSelection", name: "GetSelection", pkg: "", type: $funcType([], [Selection], false)}, {prop: "History", name: "History", pkg: "", type: $funcType([], [History], false)}, {prop: "Home", name: "Home", pkg: "", type: $funcType([], [], false)}, {prop: "InnerHeight", name: "InnerHeight", pkg: "", type: $funcType([], [$Int], false)}, {prop: "InnerWidth", name: "InnerWidth", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Location", name: "Location", pkg: "", type: $funcType([], [ptrType$19], false)}, {prop: "MoveBy", name: "MoveBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "MoveTo", name: "MoveTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Name", name: "Name", pkg: "", type: $funcType([], [$String], false)}, {prop: "Navigator", name: "Navigator", pkg: "", type: $funcType([], [Navigator], false)}, {prop: "Open", name: "Open", pkg: "", type: $funcType([$String, $String, $String], [Window], false)}, {prop: "OpenDialog", name: "OpenDialog", pkg: "", type: $funcType([$String, $String, $String, sliceType], [Window], false)}, {prop: "Opener", name: "Opener", pkg: "", type: $funcType([], [Window], false)}, {prop: "OuterHeight", name: "OuterHeight", pkg: "", type: $funcType([], [$Int], false)}, {prop: "OuterWidth", name: "OuterWidth", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Parent", name: "Parent", pkg: "", type: $funcType([], [Window], false)}, {prop: "PostMessage", name: "PostMessage", pkg: "", type: $funcType([$String, $String, sliceType], [], false)}, {prop: "Print", name: "Print", pkg: "", type: $funcType([], [], false)}, {prop: "Prompt", name: "Prompt", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ResizeBy", name: "ResizeBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ResizeTo", name: "ResizeTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "Screen", name: "Screen", pkg: "", type: $funcType([], [ptrType$25], false)}, {prop: "ScreenX", name: "ScreenX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScreenY", name: "ScreenY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "Scroll", name: "Scroll", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollBy", name: "ScrollBy", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollByLines", name: "ScrollByLines", pkg: "", type: $funcType([$Int], [], false)}, {prop: "ScrollMaxX", name: "ScrollMaxX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollMaxY", name: "ScrollMaxY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollTo", name: "ScrollTo", pkg: "", type: $funcType([$Int, $Int], [], false)}, {prop: "ScrollX", name: "ScrollX", pkg: "", type: $funcType([], [$Int], false)}, {prop: "ScrollY", name: "ScrollY", pkg: "", type: $funcType([], [$Int], false)}, {prop: "SetCursor", name: "SetCursor", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetInterval", name: "SetInterval", pkg: "", type: $funcType([funcType, $Int], [$Int], false)}, {prop: "SetName", name: "SetName", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTimeout", name: "SetTimeout", pkg: "", type: $funcType([funcType, $Int], [$Int], false)}, {prop: "Stop", name: "Stop", pkg: "", type: $funcType([], [], false)}, {prop: "Top", name: "Top", pkg: "", type: $funcType([], [Window], false)}]);
	window.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	Selection.init([]);
	Screen.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "AvailTop", name: "AvailTop", pkg: "", type: $Int, tag: "js:\"availTop\""}, {prop: "AvailLeft", name: "AvailLeft", pkg: "", type: $Int, tag: "js:\"availLeft\""}, {prop: "AvailHeight", name: "AvailHeight", pkg: "", type: $Int, tag: "js:\"availHeight\""}, {prop: "AvailWidth", name: "AvailWidth", pkg: "", type: $Int, tag: "js:\"availWidth\""}, {prop: "ColorDepth", name: "ColorDepth", pkg: "", type: $Int, tag: "js:\"colorDepth\""}, {prop: "Height", name: "Height", pkg: "", type: $Int, tag: "js:\"height\""}, {prop: "Left", name: "Left", pkg: "", type: $Int, tag: "js:\"left\""}, {prop: "PixelDepth", name: "PixelDepth", pkg: "", type: $Int, tag: "js:\"pixelDepth\""}, {prop: "Top", name: "Top", pkg: "", type: $Int, tag: "js:\"top\""}, {prop: "Width", name: "Width", pkg: "", type: $Int, tag: "js:\"width\""}]);
	Navigator.init([{prop: "AppName", name: "AppName", pkg: "", type: $funcType([], [$String], false)}, {prop: "AppVersion", name: "AppVersion", pkg: "", type: $funcType([], [$String], false)}, {prop: "CookieEnabled", name: "CookieEnabled", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "DoNotTrack", name: "DoNotTrack", pkg: "", type: $funcType([], [$String], false)}, {prop: "Geolocation", name: "Geolocation", pkg: "", type: $funcType([], [Geolocation], false)}, {prop: "Language", name: "Language", pkg: "", type: $funcType([], [$String], false)}, {prop: "Online", name: "Online", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Platform", name: "Platform", pkg: "", type: $funcType([], [$String], false)}, {prop: "Product", name: "Product", pkg: "", type: $funcType([], [$String], false)}, {prop: "RegisterProtocolHandler", name: "RegisterProtocolHandler", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "UserAgent", name: "UserAgent", pkg: "", type: $funcType([], [$String], false)}]);
	Geolocation.init([{prop: "ClearWatch", name: "ClearWatch", pkg: "", type: $funcType([$Int], [], false)}, {prop: "CurrentPosition", name: "CurrentPosition", pkg: "", type: $funcType([funcType$4, funcType$5, PositionOptions], [Position], false)}, {prop: "WatchPosition", name: "WatchPosition", pkg: "", type: $funcType([funcType$4, funcType$5, PositionOptions], [$Int], false)}]);
	PositionError.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "Code", name: "Code", pkg: "", type: $Int, tag: "js:\"code\""}]);
	PositionOptions.init([{prop: "EnableHighAccuracy", name: "EnableHighAccuracy", pkg: "", type: $Bool, tag: ""}, {prop: "Timeout", name: "Timeout", pkg: "", type: time.Duration, tag: ""}, {prop: "MaximumAge", name: "MaximumAge", pkg: "", type: time.Duration, tag: ""}]);
	Position.init([{prop: "Coords", name: "Coords", pkg: "", type: ptrType$28, tag: ""}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: time.Time, tag: ""}]);
	Coordinates.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "Latitude", name: "Latitude", pkg: "", type: $Float64, tag: "js:\"latitude\""}, {prop: "Longitude", name: "Longitude", pkg: "", type: $Float64, tag: "js:\"longitude\""}, {prop: "Altitude", name: "Altitude", pkg: "", type: $Float64, tag: "js:\"altitude\""}, {prop: "Accuracy", name: "Accuracy", pkg: "", type: $Float64, tag: "js:\"accuracy\""}, {prop: "AltitudeAccuracy", name: "AltitudeAccuracy", pkg: "", type: $Float64, tag: "js:\"altitudeAccuracy\""}, {prop: "Heading", name: "Heading", pkg: "", type: $Float64, tag: "js:\"heading\""}, {prop: "Speed", name: "Speed", pkg: "", type: $Float64, tag: "js:\"speed\""}]);
	History.init([{prop: "Back", name: "Back", pkg: "", type: $funcType([], [], false)}, {prop: "Forward", name: "Forward", pkg: "", type: $funcType([], [], false)}, {prop: "Go", name: "Go", pkg: "", type: $funcType([$Int], [], false)}, {prop: "Length", name: "Length", pkg: "", type: $funcType([], [$Int], false)}, {prop: "PushState", name: "PushState", pkg: "", type: $funcType([$emptyInterface, $String, $String], [], false)}, {prop: "ReplaceState", name: "ReplaceState", pkg: "", type: $funcType([$emptyInterface, $String, $String], [], false)}, {prop: "State", name: "State", pkg: "", type: $funcType([], [$emptyInterface], false)}]);
	Console.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	DocumentType.init([]);
	DOMImplementation.init([]);
	StyleSheet.init([]);
	Node.init([{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}]);
	BasicNode.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	Element.init([{prop: "AddEventListener", name: "AddEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$3], [funcType$2], false)}, {prop: "AppendChild", name: "AppendChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "BaseURI", name: "BaseURI", pkg: "", type: $funcType([], [$String], false)}, {prop: "ChildNodes", name: "ChildNodes", pkg: "", type: $funcType([], [sliceType$1], false)}, {prop: "Class", name: "Class", pkg: "", type: $funcType([], [ptrType$18], false)}, {prop: "CloneNode", name: "CloneNode", pkg: "", type: $funcType([$Bool], [Node], false)}, {prop: "CompareDocumentPosition", name: "CompareDocumentPosition", pkg: "", type: $funcType([Node], [$Int], false)}, {prop: "Contains", name: "Contains", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "FirstChild", name: "FirstChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "GetAttribute", name: "GetAttribute", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "GetAttributeNS", name: "GetAttributeNS", pkg: "", type: $funcType([$String, $String], [$String], false)}, {prop: "GetBoundingClientRect", name: "GetBoundingClientRect", pkg: "", type: $funcType([], [ClientRect], false)}, {prop: "GetElementsByClassName", name: "GetElementsByClassName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagName", name: "GetElementsByTagName", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "GetElementsByTagNameNS", name: "GetElementsByTagNameNS", pkg: "", type: $funcType([$String, $String], [sliceType$2], false)}, {prop: "HasAttribute", name: "HasAttribute", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "HasAttributeNS", name: "HasAttributeNS", pkg: "", type: $funcType([$String, $String], [$Bool], false)}, {prop: "HasChildNodes", name: "HasChildNodes", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "ID", name: "ID", pkg: "", type: $funcType([], [$String], false)}, {prop: "InnerHTML", name: "InnerHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "InsertBefore", name: "InsertBefore", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "IsDefaultNamespace", name: "IsDefaultNamespace", pkg: "", type: $funcType([$String], [$Bool], false)}, {prop: "IsEqualNode", name: "IsEqualNode", pkg: "", type: $funcType([Node], [$Bool], false)}, {prop: "LastChild", name: "LastChild", pkg: "", type: $funcType([], [Node], false)}, {prop: "LookupNamespaceURI", name: "LookupNamespaceURI", pkg: "", type: $funcType([$String], [$String], false)}, {prop: "LookupPrefix", name: "LookupPrefix", pkg: "", type: $funcType([], [$String], false)}, {prop: "NextElementSibling", name: "NextElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "NextSibling", name: "NextSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "NodeName", name: "NodeName", pkg: "", type: $funcType([], [$String], false)}, {prop: "NodeType", name: "NodeType", pkg: "", type: $funcType([], [$Int], false)}, {prop: "NodeValue", name: "NodeValue", pkg: "", type: $funcType([], [$String], false)}, {prop: "Normalize", name: "Normalize", pkg: "", type: $funcType([], [], false)}, {prop: "OwnerDocument", name: "OwnerDocument", pkg: "", type: $funcType([], [Document], false)}, {prop: "ParentElement", name: "ParentElement", pkg: "", type: $funcType([], [Element], false)}, {prop: "ParentNode", name: "ParentNode", pkg: "", type: $funcType([], [Node], false)}, {prop: "PreviousElementSibling", name: "PreviousElementSibling", pkg: "", type: $funcType([], [Element], false)}, {prop: "PreviousSibling", name: "PreviousSibling", pkg: "", type: $funcType([], [Node], false)}, {prop: "QuerySelector", name: "QuerySelector", pkg: "", type: $funcType([$String], [Element], false)}, {prop: "QuerySelectorAll", name: "QuerySelectorAll", pkg: "", type: $funcType([$String], [sliceType$2], false)}, {prop: "RemoveAttribute", name: "RemoveAttribute", pkg: "", type: $funcType([$String], [], false)}, {prop: "RemoveAttributeNS", name: "RemoveAttributeNS", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "RemoveChild", name: "RemoveChild", pkg: "", type: $funcType([Node], [], false)}, {prop: "RemoveEventListener", name: "RemoveEventListener", pkg: "", type: $funcType([$String, $Bool, funcType$2], [], false)}, {prop: "ReplaceChild", name: "ReplaceChild", pkg: "", type: $funcType([Node, Node], [], false)}, {prop: "SetAttribute", name: "SetAttribute", pkg: "", type: $funcType([$String, $String], [], false)}, {prop: "SetAttributeNS", name: "SetAttributeNS", pkg: "", type: $funcType([$String, $String, $String], [], false)}, {prop: "SetID", name: "SetID", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetInnerHTML", name: "SetInnerHTML", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetNodeValue", name: "SetNodeValue", pkg: "", type: $funcType([$String], [], false)}, {prop: "SetTextContent", name: "SetTextContent", pkg: "", type: $funcType([$String], [], false)}, {prop: "TagName", name: "TagName", pkg: "", type: $funcType([], [$String], false)}, {prop: "TextContent", name: "TextContent", pkg: "", type: $funcType([], [$String], false)}, {prop: "Underlying", name: "Underlying", pkg: "", type: $funcType([], [js.Object], false)}]);
	ClientRect.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "Height", name: "Height", pkg: "", type: $Int, tag: "js:\"height\""}, {prop: "Width", name: "Width", pkg: "", type: $Int, tag: "js:\"width\""}, {prop: "Left", name: "Left", pkg: "", type: $Int, tag: "js:\"left\""}, {prop: "Right", name: "Right", pkg: "", type: $Int, tag: "js:\"right\""}, {prop: "Top", name: "Top", pkg: "", type: $Int, tag: "js:\"top\""}, {prop: "Bottom", name: "Bottom", pkg: "", type: $Int, tag: "js:\"bottom\""}]);
	BasicHTMLElement.init([{prop: "BasicElement", name: "", pkg: "", type: ptrType$30, tag: ""}]);
	BasicElement.init([{prop: "BasicNode", name: "", pkg: "", type: ptrType$20, tag: ""}]);
	HTMLAnchorElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "URLUtils", name: "", pkg: "", type: ptrType$1, tag: ""}, {prop: "HrefLang", name: "HrefLang", pkg: "", type: $String, tag: "js:\"hreflang\""}, {prop: "Media", name: "Media", pkg: "", type: $String, tag: "js:\"media\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Target", name: "Target", pkg: "", type: $String, tag: "js:\"target\""}, {prop: "Text", name: "Text", pkg: "", type: $String, tag: "js:\"text\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLAppletElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Alt", name: "Alt", pkg: "", type: $String, tag: "js:\"alt\""}, {prop: "Coords", name: "Coords", pkg: "", type: $String, tag: "js:\"coords\""}, {prop: "HrefLang", name: "HrefLang", pkg: "", type: $String, tag: "js:\"hreflang\""}, {prop: "Media", name: "Media", pkg: "", type: $String, tag: "js:\"media\""}, {prop: "Search", name: "Search", pkg: "", type: $String, tag: "js:\"search\""}, {prop: "Shape", name: "Shape", pkg: "", type: $String, tag: "js:\"shape\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Target", name: "Target", pkg: "", type: $String, tag: "js:\"target\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLAreaElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "URLUtils", name: "", pkg: "", type: ptrType$1, tag: ""}, {prop: "Alt", name: "Alt", pkg: "", type: $String, tag: "js:\"alt\""}, {prop: "Coords", name: "Coords", pkg: "", type: $String, tag: "js:\"coords\""}, {prop: "HrefLang", name: "HrefLang", pkg: "", type: $String, tag: "js:\"hreflang\""}, {prop: "Media", name: "Media", pkg: "", type: $String, tag: "js:\"media\""}, {prop: "Search", name: "Search", pkg: "", type: $String, tag: "js:\"search\""}, {prop: "Shape", name: "Shape", pkg: "", type: $String, tag: "js:\"shape\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Target", name: "Target", pkg: "", type: $String, tag: "js:\"target\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLAudioElement.init([{prop: "HTMLMediaElement", name: "", pkg: "", type: ptrType$2, tag: ""}]);
	HTMLBRElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLBaseElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLBodyElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	ValidityState.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "CustomError", name: "CustomError", pkg: "", type: $Bool, tag: "js:\"customError\""}, {prop: "PatternMismatch", name: "PatternMismatch", pkg: "", type: $Bool, tag: "js:\"patternMismatch\""}, {prop: "RangeOverflow", name: "RangeOverflow", pkg: "", type: $Bool, tag: "js:\"rangeOverflow\""}, {prop: "RangeUnderflow", name: "RangeUnderflow", pkg: "", type: $Bool, tag: "js:\"rangeUnderflow\""}, {prop: "StepMismatch", name: "StepMismatch", pkg: "", type: $Bool, tag: "js:\"stepMismatch\""}, {prop: "TooLong", name: "TooLong", pkg: "", type: $Bool, tag: "js:\"tooLong\""}, {prop: "TypeMismatch", name: "TypeMismatch", pkg: "", type: $Bool, tag: "js:\"typeMismatch\""}, {prop: "Valid", name: "Valid", pkg: "", type: $Bool, tag: "js:\"valid\""}, {prop: "ValueMissing", name: "ValueMissing", pkg: "", type: $Bool, tag: "js:\"valueMissing\""}]);
	HTMLButtonElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "AutoFocus", name: "AutoFocus", pkg: "", type: $Bool, tag: "js:\"autofocus\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "FormAction", name: "FormAction", pkg: "", type: $String, tag: "js:\"formAction\""}, {prop: "FormEncType", name: "FormEncType", pkg: "", type: $String, tag: "js:\"formEncType\""}, {prop: "FormMethod", name: "FormMethod", pkg: "", type: $String, tag: "js:\"formMethod\""}, {prop: "FormNoValidate", name: "FormNoValidate", pkg: "", type: $Bool, tag: "js:\"formNoValidate\""}, {prop: "FormTarget", name: "FormTarget", pkg: "", type: $String, tag: "js:\"formTarget\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLCanvasElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Height", name: "Height", pkg: "", type: $Int, tag: "js:\"height\""}, {prop: "Width", name: "Width", pkg: "", type: $Int, tag: "js:\"width\""}]);
	CanvasRenderingContext2D.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}, {prop: "FillStyle", name: "FillStyle", pkg: "", type: $String, tag: "js:\"fillStyle\""}, {prop: "StrokeStyle", name: "StrokeStyle", pkg: "", type: $String, tag: "js:\"strokeStyle\""}, {prop: "ShadowColor", name: "ShadowColor", pkg: "", type: $String, tag: "js:\"shadowColor\""}, {prop: "ShadowBlur", name: "ShadowBlur", pkg: "", type: $Int, tag: "js:\"shadowBlur\""}, {prop: "ShadowOffsetX", name: "ShadowOffsetX", pkg: "", type: $Int, tag: "js:\"shadowOffsetX\""}, {prop: "ShadowOffsetY", name: "ShadowOffsetY", pkg: "", type: $Int, tag: "js:\"shadowOffsetY\""}, {prop: "LineCap", name: "LineCap", pkg: "", type: $String, tag: "js:\"lineCap\""}, {prop: "LineJoin", name: "LineJoin", pkg: "", type: $String, tag: "js:\"lineJoin\""}, {prop: "LineWidth", name: "LineWidth", pkg: "", type: $Int, tag: "js:\"lineWidth\""}, {prop: "MiterLimit", name: "MiterLimit", pkg: "", type: $Int, tag: "js:\"miterLimit\""}, {prop: "Font", name: "Font", pkg: "", type: $String, tag: "js:\"font\""}, {prop: "TextAlign", name: "TextAlign", pkg: "", type: $String, tag: "js:\"textAlign\""}, {prop: "TextBaseline", name: "TextBaseline", pkg: "", type: $String, tag: "js:\"textBaseline\""}, {prop: "GlobalAlpha", name: "GlobalAlpha", pkg: "", type: $Float64, tag: "js:\"globalAlpha\""}, {prop: "GlobalCompositeOperation", name: "GlobalCompositeOperation", pkg: "", type: $String, tag: "js:\"globalCompositeOperation\""}]);
	HTMLDListElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLDataElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}]);
	HTMLDataListElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLDirectoryElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLDivElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLEmbedElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "Width", name: "Width", pkg: "", type: $String, tag: "js:\"width\""}]);
	HTMLFieldSetElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLFontElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLFormElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "AcceptCharset", name: "AcceptCharset", pkg: "", type: $String, tag: "js:\"acceptCharset\""}, {prop: "Action", name: "Action", pkg: "", type: $String, tag: "js:\"action\""}, {prop: "Autocomplete", name: "Autocomplete", pkg: "", type: $String, tag: "js:\"autocomplete\""}, {prop: "Encoding", name: "Encoding", pkg: "", type: $String, tag: "js:\"encoding\""}, {prop: "Enctype", name: "Enctype", pkg: "", type: $String, tag: "js:\"enctype\""}, {prop: "Length", name: "Length", pkg: "", type: $Int, tag: "js:\"length\""}, {prop: "Method", name: "Method", pkg: "", type: $String, tag: "js:\"method\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "NoValidate", name: "NoValidate", pkg: "", type: $Bool, tag: "js:\"noValidate\""}, {prop: "Target", name: "Target", pkg: "", type: $String, tag: "js:\"target\""}]);
	HTMLFrameElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLFrameSetElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLHRElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLHeadElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLHeadingElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLHtmlElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLIFrameElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Width", name: "Width", pkg: "", type: $String, tag: "js:\"width\""}, {prop: "Height", name: "Height", pkg: "", type: $String, tag: "js:\"height\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "SrcDoc", name: "SrcDoc", pkg: "", type: $String, tag: "js:\"srcdoc\""}, {prop: "Seamless", name: "Seamless", pkg: "", type: $Bool, tag: "js:\"seamless\""}]);
	HTMLImageElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Complete", name: "Complete", pkg: "", type: $Bool, tag: "js:\"complete\""}, {prop: "CrossOrigin", name: "CrossOrigin", pkg: "", type: $String, tag: "js:\"crossOrigin\""}, {prop: "Height", name: "Height", pkg: "", type: $Int, tag: "js:\"height\""}, {prop: "IsMap", name: "IsMap", pkg: "", type: $Bool, tag: "js:\"isMap\""}, {prop: "NaturalHeight", name: "NaturalHeight", pkg: "", type: $Int, tag: "js:\"naturalHeight\""}, {prop: "NaturalWidth", name: "NaturalWidth", pkg: "", type: $Int, tag: "js:\"naturalWidth\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "UseMap", name: "UseMap", pkg: "", type: $String, tag: "js:\"useMap\""}, {prop: "Width", name: "Width", pkg: "", type: $Int, tag: "js:\"width\""}]);
	HTMLInputElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Accept", name: "Accept", pkg: "", type: $String, tag: "js:\"accept\""}, {prop: "Alt", name: "Alt", pkg: "", type: $String, tag: "js:\"alt\""}, {prop: "Autocomplete", name: "Autocomplete", pkg: "", type: $String, tag: "js:\"autocomplete\""}, {prop: "Autofocus", name: "Autofocus", pkg: "", type: $Bool, tag: "js:\"autofocus\""}, {prop: "Checked", name: "Checked", pkg: "", type: $Bool, tag: "js:\"checked\""}, {prop: "DefaultChecked", name: "DefaultChecked", pkg: "", type: $Bool, tag: "js:\"defaultChecked\""}, {prop: "DefaultValue", name: "DefaultValue", pkg: "", type: $String, tag: "js:\"defaultValue\""}, {prop: "DirName", name: "DirName", pkg: "", type: $String, tag: "js:\"dirName\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "FormAction", name: "FormAction", pkg: "", type: $String, tag: "js:\"formAction\""}, {prop: "FormEncType", name: "FormEncType", pkg: "", type: $String, tag: "js:\"formEncType\""}, {prop: "FormMethod", name: "FormMethod", pkg: "", type: $String, tag: "js:\"formMethod\""}, {prop: "FormNoValidate", name: "FormNoValidate", pkg: "", type: $Bool, tag: "js:\"formNoValidate\""}, {prop: "FormTarget", name: "FormTarget", pkg: "", type: $String, tag: "js:\"formTarget\""}, {prop: "Height", name: "Height", pkg: "", type: $String, tag: "js:\"height\""}, {prop: "Indeterminate", name: "Indeterminate", pkg: "", type: $Bool, tag: "js:\"indeterminate\""}, {prop: "Max", name: "Max", pkg: "", type: $String, tag: "js:\"max\""}, {prop: "MaxLength", name: "MaxLength", pkg: "", type: $Int, tag: "js:\"maxLength\""}, {prop: "Min", name: "Min", pkg: "", type: $String, tag: "js:\"min\""}, {prop: "Multiple", name: "Multiple", pkg: "", type: $Bool, tag: "js:\"multiple\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Pattern", name: "Pattern", pkg: "", type: $String, tag: "js:\"pattern\""}, {prop: "Placeholder", name: "Placeholder", pkg: "", type: $String, tag: "js:\"placeholder\""}, {prop: "ReadOnly", name: "ReadOnly", pkg: "", type: $Bool, tag: "js:\"readOnly\""}, {prop: "Required", name: "Required", pkg: "", type: $Bool, tag: "js:\"required\""}, {prop: "SelectionDirection", name: "SelectionDirection", pkg: "", type: $String, tag: "js:\"selectionDirection\""}, {prop: "SelectionEnd", name: "SelectionEnd", pkg: "", type: $Int, tag: "js:\"selectionEnd\""}, {prop: "SelectionStart", name: "SelectionStart", pkg: "", type: $Int, tag: "js:\"selectionStart\""}, {prop: "Size", name: "Size", pkg: "", type: $Int, tag: "js:\"size\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "Step", name: "Step", pkg: "", type: $String, tag: "js:\"step\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}, {prop: "ValueAsDate", name: "ValueAsDate", pkg: "", type: time.Time, tag: "js:\"valueAsDate\""}, {prop: "ValueAsNumber", name: "ValueAsNumber", pkg: "", type: $Float64, tag: "js:\"valueAsNumber\""}, {prop: "Width", name: "Width", pkg: "", type: $String, tag: "js:\"width\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	File.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	HTMLKeygenElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Autofocus", name: "Autofocus", pkg: "", type: $Bool, tag: "js:\"autofocus\""}, {prop: "Challenge", name: "Challenge", pkg: "", type: $String, tag: "js:\"challenge\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Keytype", name: "Keytype", pkg: "", type: $String, tag: "js:\"keytype\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLLIElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Value", name: "Value", pkg: "", type: $Int, tag: "js:\"value\""}]);
	HTMLLabelElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "For", name: "For", pkg: "", type: $String, tag: "js:\"htmlFor\""}]);
	HTMLLegendElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLLinkElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Href", name: "Href", pkg: "", type: $String, tag: "js:\"href\""}, {prop: "HrefLang", name: "HrefLang", pkg: "", type: $String, tag: "js:\"hrefLang\""}, {prop: "Media", name: "Media", pkg: "", type: $String, tag: "js:\"media\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLMapElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}]);
	HTMLMediaElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLMenuElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLMetaElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Content", name: "Content", pkg: "", type: $String, tag: "js:\"content\""}, {prop: "HTTPEquiv", name: "HTTPEquiv", pkg: "", type: $String, tag: "js:\"httpEquiv\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}]);
	HTMLMeterElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "High", name: "High", pkg: "", type: $Float64, tag: "js:\"high\""}, {prop: "Low", name: "Low", pkg: "", type: $Float64, tag: "js:\"low\""}, {prop: "Max", name: "Max", pkg: "", type: $Float64, tag: "js:\"max\""}, {prop: "Min", name: "Min", pkg: "", type: $Float64, tag: "js:\"min\""}, {prop: "Optimum", name: "Optimum", pkg: "", type: $Float64, tag: "js:\"optimum\""}]);
	HTMLModElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Cite", name: "Cite", pkg: "", type: $String, tag: "js:\"cite\""}, {prop: "DateTime", name: "DateTime", pkg: "", type: $String, tag: "js:\"dateTime\""}]);
	HTMLOListElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Reversed", name: "Reversed", pkg: "", type: $Bool, tag: "js:\"reversed\""}, {prop: "Start", name: "Start", pkg: "", type: $Int, tag: "js:\"start\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLObjectElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Data", name: "Data", pkg: "", type: $String, tag: "js:\"data\""}, {prop: "Height", name: "Height", pkg: "", type: $String, tag: "js:\"height\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "TypeMustMatch", name: "TypeMustMatch", pkg: "", type: $Bool, tag: "js:\"typeMustMatch\""}, {prop: "UseMap", name: "UseMap", pkg: "", type: $String, tag: "js:\"useMap\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "With", name: "With", pkg: "", type: $String, tag: "js:\"with\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLOptGroupElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Label", name: "Label", pkg: "", type: $String, tag: "js:\"label\""}]);
	HTMLOptionElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "DefaultSelected", name: "DefaultSelected", pkg: "", type: $Bool, tag: "js:\"defaultSelected\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Index", name: "Index", pkg: "", type: $Int, tag: "js:\"index\""}, {prop: "Label", name: "Label", pkg: "", type: $String, tag: "js:\"label\""}, {prop: "Selected", name: "Selected", pkg: "", type: $Bool, tag: "js:\"selected\""}, {prop: "Text", name: "Text", pkg: "", type: $String, tag: "js:\"text\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}]);
	HTMLOutputElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "DefaultValue", name: "DefaultValue", pkg: "", type: $String, tag: "js:\"defaultValue\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLParagraphElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLParamElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}]);
	HTMLPreElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLProgressElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Max", name: "Max", pkg: "", type: $Float64, tag: "js:\"max\""}, {prop: "Position", name: "Position", pkg: "", type: $Float64, tag: "js:\"position\""}, {prop: "Value", name: "Value", pkg: "", type: $Float64, tag: "js:\"value\""}]);
	HTMLQuoteElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Cite", name: "Cite", pkg: "", type: $String, tag: "js:\"cite\""}]);
	HTMLScriptElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "Charset", name: "Charset", pkg: "", type: $String, tag: "js:\"charset\""}, {prop: "Async", name: "Async", pkg: "", type: $Bool, tag: "js:\"async\""}, {prop: "Defer", name: "Defer", pkg: "", type: $Bool, tag: "js:\"defer\""}, {prop: "Text", name: "Text", pkg: "", type: $String, tag: "js:\"text\""}]);
	HTMLSelectElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Autofocus", name: "Autofocus", pkg: "", type: $Bool, tag: "js:\"autofocus\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "Length", name: "Length", pkg: "", type: $Int, tag: "js:\"length\""}, {prop: "Multiple", name: "Multiple", pkg: "", type: $Bool, tag: "js:\"multiple\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Required", name: "Required", pkg: "", type: $Bool, tag: "js:\"required\""}, {prop: "SelectedIndex", name: "SelectedIndex", pkg: "", type: $Int, tag: "js:\"selectedIndex\""}, {prop: "Size", name: "Size", pkg: "", type: $Int, tag: "js:\"size\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}]);
	HTMLSourceElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Media", name: "Media", pkg: "", type: $String, tag: "js:\"media\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}]);
	HTMLSpanElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLStyleElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLTableCaptionElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLTableCellElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "ColSpan", name: "ColSpan", pkg: "", type: $Int, tag: "js:\"colSpan\""}, {prop: "RowSpan", name: "RowSpan", pkg: "", type: $Int, tag: "js:\"rowSpan\""}, {prop: "CellIndex", name: "CellIndex", pkg: "", type: $Int, tag: "js:\"cellIndex\""}]);
	HTMLTableColElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Span", name: "Span", pkg: "", type: $Int, tag: "js:\"span\""}]);
	HTMLTableDataCellElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLTableElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLTableHeaderCellElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Abbr", name: "Abbr", pkg: "", type: $String, tag: "js:\"abbr\""}, {prop: "Scope", name: "Scope", pkg: "", type: $String, tag: "js:\"scope\""}]);
	HTMLTableRowElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "RowIndex", name: "RowIndex", pkg: "", type: $Int, tag: "js:\"rowIndex\""}, {prop: "SectionRowIndex", name: "SectionRowIndex", pkg: "", type: $Int, tag: "js:\"sectionRowIndex\""}]);
	HTMLTableSectionElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLTextAreaElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Autocomplete", name: "Autocomplete", pkg: "", type: $String, tag: "js:\"autocomplete\""}, {prop: "Autofocus", name: "Autofocus", pkg: "", type: $Bool, tag: "js:\"autofocus\""}, {prop: "Cols", name: "Cols", pkg: "", type: $Int, tag: "js:\"cols\""}, {prop: "DefaultValue", name: "DefaultValue", pkg: "", type: $String, tag: "js:\"defaultValue\""}, {prop: "DirName", name: "DirName", pkg: "", type: $String, tag: "js:\"dirName\""}, {prop: "Disabled", name: "Disabled", pkg: "", type: $Bool, tag: "js:\"disabled\""}, {prop: "MaxLength", name: "MaxLength", pkg: "", type: $Int, tag: "js:\"maxLength\""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: "js:\"name\""}, {prop: "Placeholder", name: "Placeholder", pkg: "", type: $String, tag: "js:\"placeholder\""}, {prop: "ReadOnly", name: "ReadOnly", pkg: "", type: $Bool, tag: "js:\"readOnly\""}, {prop: "Required", name: "Required", pkg: "", type: $Bool, tag: "js:\"required\""}, {prop: "Rows", name: "Rows", pkg: "", type: $Int, tag: "js:\"rows\""}, {prop: "SelectionDirection", name: "SelectionDirection", pkg: "", type: $String, tag: "js:\"selectionDirection\""}, {prop: "SelectionStart", name: "SelectionStart", pkg: "", type: $Int, tag: "js:\"selectionStart\""}, {prop: "SelectionEnd", name: "SelectionEnd", pkg: "", type: $Int, tag: "js:\"selectionEnd\""}, {prop: "TabIndex", name: "TabIndex", pkg: "", type: $Int, tag: "js:\"tabIndex\""}, {prop: "TextLength", name: "TextLength", pkg: "", type: $Int, tag: "js:\"textLength\""}, {prop: "Type", name: "Type", pkg: "", type: $String, tag: "js:\"type\""}, {prop: "ValidationMessage", name: "ValidationMessage", pkg: "", type: $String, tag: "js:\"validationMessage\""}, {prop: "Value", name: "Value", pkg: "", type: $String, tag: "js:\"value\""}, {prop: "WillValidate", name: "WillValidate", pkg: "", type: $Bool, tag: "js:\"willValidate\""}, {prop: "Wrap", name: "Wrap", pkg: "", type: $String, tag: "js:\"wrap\""}]);
	HTMLTimeElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "DateTime", name: "DateTime", pkg: "", type: $String, tag: "js:\"dateTime\""}]);
	HTMLTitleElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Text", name: "Text", pkg: "", type: $String, tag: "js:\"text\""}]);
	TextTrack.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	HTMLTrackElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}, {prop: "Kind", name: "Kind", pkg: "", type: $String, tag: "js:\"kind\""}, {prop: "Src", name: "Src", pkg: "", type: $String, tag: "js:\"src\""}, {prop: "Srclang", name: "Srclang", pkg: "", type: $String, tag: "js:\"srclang\""}, {prop: "Label", name: "Label", pkg: "", type: $String, tag: "js:\"label\""}, {prop: "Default", name: "Default", pkg: "", type: $Bool, tag: "js:\"default\""}, {prop: "ReadyState", name: "ReadyState", pkg: "", type: $Int, tag: "js:\"readyState\""}]);
	HTMLUListElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLUnknownElement.init([{prop: "BasicHTMLElement", name: "", pkg: "", type: ptrType, tag: ""}]);
	HTMLVideoElement.init([{prop: "HTMLMediaElement", name: "", pkg: "", type: ptrType$2, tag: ""}]);
	CSSStyleDeclaration.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	Text.init([{prop: "BasicNode", name: "", pkg: "", type: ptrType$20, tag: ""}]);
	Event.init([{prop: "Bubbles", name: "Bubbles", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "Cancelable", name: "Cancelable", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "CurrentTarget", name: "CurrentTarget", pkg: "", type: $funcType([], [Element], false)}, {prop: "DefaultPrevented", name: "DefaultPrevented", pkg: "", type: $funcType([], [$Bool], false)}, {prop: "EventPhase", name: "EventPhase", pkg: "", type: $funcType([], [$Int], false)}, {prop: "PreventDefault", name: "PreventDefault", pkg: "", type: $funcType([], [], false)}, {prop: "StopImmediatePropagation", name: "StopImmediatePropagation", pkg: "", type: $funcType([], [], false)}, {prop: "StopPropagation", name: "StopPropagation", pkg: "", type: $funcType([], [], false)}, {prop: "Target", name: "Target", pkg: "", type: $funcType([], [Element], false)}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $funcType([], [time.Time], false)}, {prop: "Type", name: "Type", pkg: "", type: $funcType([], [$String], false)}]);
	BasicEvent.init([{prop: "Object", name: "", pkg: "", type: js.Object, tag: ""}]);
	AnimationEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	AudioProcessingEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	BeforeInputEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	BeforeUnloadEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	BlobEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	ClipboardEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	CloseEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}, {prop: "Code", name: "Code", pkg: "", type: $Int, tag: "js:\"code\""}, {prop: "Reason", name: "Reason", pkg: "", type: $String, tag: "js:\"reason\""}, {prop: "WasClean", name: "WasClean", pkg: "", type: $Bool, tag: "js:\"wasClean\""}]);
	CompositionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	CSSFontFaceLoadEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	CustomEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DeviceLightEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DeviceMotionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DeviceOrientationEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DeviceProximityEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DOMTransactionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	DragEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	EditingBeforeInputEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	ErrorEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	FocusEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	GamepadEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	HashChangeEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	IDBVersionChangeEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	KeyboardEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}, {prop: "AltKey", name: "AltKey", pkg: "", type: $Bool, tag: "js:\"altKey\""}, {prop: "CharCode", name: "CharCode", pkg: "", type: $Int, tag: "js:\"charCode\""}, {prop: "CtrlKey", name: "CtrlKey", pkg: "", type: $Bool, tag: "js:\"ctrlKey\""}, {prop: "Key", name: "Key", pkg: "", type: $String, tag: "js:\"key\""}, {prop: "KeyIdentifier", name: "KeyIdentifier", pkg: "", type: $String, tag: "js:\"keyIdentifier\""}, {prop: "KeyCode", name: "KeyCode", pkg: "", type: $Int, tag: "js:\"keyCode\""}, {prop: "Locale", name: "Locale", pkg: "", type: $String, tag: "js:\"locale\""}, {prop: "Location", name: "Location", pkg: "", type: $Int, tag: "js:\"location\""}, {prop: "KeyLocation", name: "KeyLocation", pkg: "", type: $Int, tag: "js:\"keyLocation\""}, {prop: "MetaKey", name: "MetaKey", pkg: "", type: $Bool, tag: "js:\"metaKey\""}, {prop: "Repeat", name: "Repeat", pkg: "", type: $Bool, tag: "js:\"repeat\""}, {prop: "ShiftKey", name: "ShiftKey", pkg: "", type: $Bool, tag: "js:\"shiftKey\""}]);
	MediaStreamEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	MessageEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}, {prop: "Data", name: "Data", pkg: "", type: js.Object, tag: "js:\"data\""}]);
	MouseEvent.init([{prop: "UIEvent", name: "", pkg: "", type: ptrType$17, tag: ""}, {prop: "AltKey", name: "AltKey", pkg: "", type: $Bool, tag: "js:\"altKey\""}, {prop: "Button", name: "Button", pkg: "", type: $Int, tag: "js:\"button\""}, {prop: "ClientX", name: "ClientX", pkg: "", type: $Int, tag: "js:\"clientX\""}, {prop: "ClientY", name: "ClientY", pkg: "", type: $Int, tag: "js:\"clientY\""}, {prop: "CtrlKey", name: "CtrlKey", pkg: "", type: $Bool, tag: "js:\"ctrlKey\""}, {prop: "MetaKey", name: "MetaKey", pkg: "", type: $Bool, tag: "js:\"metaKey\""}, {prop: "MovementX", name: "MovementX", pkg: "", type: $Int, tag: "js:\"movementX\""}, {prop: "MovementY", name: "MovementY", pkg: "", type: $Int, tag: "js:\"movementY\""}, {prop: "ScreenX", name: "ScreenX", pkg: "", type: $Int, tag: "js:\"screenX\""}, {prop: "ScreenY", name: "ScreenY", pkg: "", type: $Int, tag: "js:\"screenY\""}, {prop: "ShiftKey", name: "ShiftKey", pkg: "", type: $Bool, tag: "js:\"shiftKey\""}]);
	MutationEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	OfflineAudioCompletionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	PageTransitionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	PointerEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	PopStateEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	ProgressEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	RelatedEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	RTCPeerConnectionIceEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	SensorEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	StorageEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	SVGEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	SVGZoomEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	TimeEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	TouchEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	TrackEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	TransitionEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	UIEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	UserProximityEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}]);
	WheelEvent.init([{prop: "BasicEvent", name: "", pkg: "", type: ptrType$16, tag: ""}, {prop: "DeltaX", name: "DeltaX", pkg: "", type: $Float64, tag: "js:\"deltaX\""}, {prop: "DeltaY", name: "DeltaY", pkg: "", type: $Float64, tag: "js:\"deltaY\""}, {prop: "DeltaZ", name: "DeltaZ", pkg: "", type: $Float64, tag: "js:\"deltaZ\""}, {prop: "DeltaMode", name: "DeltaMode", pkg: "", type: $Int, tag: "js:\"deltaMode\""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_dom = function() { while (true) { switch ($s) { case 0:
		$r = js.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_dom.$blocking = true; return $init_dom;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/humble/view"] = (function() {
	var $pkg = {}, fmt, humble, js, dom, regexp, OnLoader, sliceType, sliceType$1, sliceType$2, document, init, AppendToParentHTML, ReplaceParentHTML, Remove, getElementByViewId, createViewElement, checkOuterTag, viewOnLoad, QuerySelectorAll, AddListener, nonBlockingListener;
	fmt = $packages["fmt"];
	humble = $packages["github.com/gophergala/humble"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	dom = $packages["honnef.co/go/js/dom"];
	regexp = $packages["regexp"];
	OnLoader = $pkg.OnLoader = $newType(8, $kindInterface, "view.OnLoader", "OnLoader", "github.com/fabioberger/humble/view", null);
		sliceType = $sliceType($emptyInterface);
		sliceType$1 = $sliceType($Uint8);
		sliceType$2 = $sliceType(dom.Element);
	init = function() {
		if (!($global.document === undefined)) {
			document = dom.GetWindow().Document();
		}
	};
	AppendToParentHTML = $pkg.AppendToParentHTML = function(view, parentSelector, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, _tuple, err, err$1, parent, viewEl;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_AppendToParentHTML = function() { s: while (true) { switch ($s) { case 0:
		parent = document.QuerySelector(parentSelector);
		if ($interfaceIsEqual(parent, $ifaceNil)) {
			return fmt.Errorf("Could not find element for parentSelector: %s", new sliceType([new $String(parentSelector)]));
		}
		_tuple = createViewElement(view); viewEl = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		parent.AppendChild(viewEl);
		_r = viewOnLoad(view, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err$1 = _r;
		/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ if (!($interfaceIsEqual(err$1, $ifaceNil))) {} else { $s = 2; continue; }
			return err$1;
		/* } */ case 2:
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_AppendToParentHTML.$blocking = true; return $blocking_AppendToParentHTML;
	};
	ReplaceParentHTML = $pkg.ReplaceParentHTML = function(view, parentSelector, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, _tuple, err, err$1, parent, viewEl;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_ReplaceParentHTML = function() { s: while (true) { switch ($s) { case 0:
		parent = document.QuerySelector(parentSelector);
		if ($interfaceIsEqual(parent, $ifaceNil)) {
			return fmt.Errorf("Could not find element for parentSelector: %s", new sliceType([new $String(parentSelector)]));
		}
		_tuple = createViewElement(view); viewEl = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		parent.SetInnerHTML("");
		parent.AppendChild(viewEl);
		_r = viewOnLoad(view, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err$1 = _r;
		/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ if (!($interfaceIsEqual(err$1, $ifaceNil))) {} else { $s = 2; continue; }
			return err$1;
		/* } */ case 2:
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_ReplaceParentHTML.$blocking = true; return $blocking_ReplaceParentHTML;
	};
	Remove = $pkg.Remove = function(view) {
		var _tuple, err, viewEl;
		_tuple = getElementByViewId(view.GetId()); viewEl = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		viewEl.ParentElement().RemoveChild(viewEl);
		return $ifaceNil;
	};
	getElementByViewId = function(viewId) {
		var el, selector, x;
		selector = fmt.Sprintf("[data-humble-view-id='%s']", new sliceType([new $String(viewId)]));
		el = document.QuerySelector(selector);
		if ($interfaceIsEqual(el, $ifaceNil)) {
			return [$ifaceNil, (x = humble.NewViewElementNotFoundError(viewId), new x.constructor.elem(x))];
		}
		return [el, $ifaceNil];
	};
	createViewElement = function(view) {
		var _tuple, _tuple$1, el, err, err$1, existingEl, notFound, viewHTML;
		err = checkOuterTag(view.OuterTag());
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return [$ifaceNil, err];
		}
		viewHTML = view.RenderHTML();
		el = $ifaceNil;
		_tuple = getElementByViewId(view.GetId()); existingEl = _tuple[0]; err$1 = _tuple[1];
		if (!($interfaceIsEqual(err$1, $ifaceNil))) {
			_tuple$1 = $assertType(err$1, humble.ViewElementNotFoundError, true); notFound = _tuple$1[1];
			if (notFound) {
				el = document.CreateElement(view.OuterTag());
			} else {
				return [$ifaceNil, err$1];
			}
		} else {
			el = existingEl;
		}
		el.SetInnerHTML(viewHTML);
		el.SetAttribute("data-humble-view-id", view.GetId());
		return [el, $ifaceNil];
	};
	checkOuterTag = function(tag) {
		var _tuple, err, match;
		_tuple = regexp.Match("[a-zA-Z]", new sliceType$1($stringToBytes(tag))); match = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			fmt.Errorf("Invalid outer tag for humble.View: %s", new sliceType([new $String(err.Error())]));
		}
		if (!match) {
			return fmt.Errorf("Outer tag must be alphabetical characters", new sliceType([]));
		}
		return $ifaceNil;
	};
	viewOnLoad = function(v, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, _tuple, err, hasOnLoad, onLoader;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_viewOnLoad = function() { s: while (true) { switch ($s) { case 0:
		_tuple = $assertType(v, OnLoader, true); onLoader = _tuple[0]; hasOnLoad = _tuple[1];
		/* if (hasOnLoad) { */ if (hasOnLoad) {} else { $s = 1; continue; }
			_r = onLoader.OnLoad($BLOCKING); /* */ $s = 2; case 2: if (_r && _r.$blocking) { _r = _r(); }
			err = _r;
			if (!($interfaceIsEqual(err, $ifaceNil))) {
				return fmt.Errorf("Error in %T.OnLoad: %s", new sliceType([v, new $String(err.Error())]));
			}
		/* } */ case 1:
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_viewOnLoad.$blocking = true; return $blocking_viewOnLoad;
	};
	QuerySelectorAll = $pkg.QuerySelectorAll = function(view, selector) {
		var fullSelector, targetEls;
		fullSelector = fmt.Sprintf("[data-humble-view-id='%s'] %s", new sliceType([new $String(view.GetId()), new $String(selector)]));
		targetEls = document.QuerySelectorAll(fullSelector);
		if (targetEls.$length === 0) {
			return [sliceType$2.nil, fmt.Errorf("Could not find any elements with selector: `%s` inside of element for %T. Full selector was: `%s`", new sliceType([new $String(selector), view, new $String(fullSelector)]))];
		}
		return [targetEls, $ifaceNil];
	};
	AddListener = $pkg.AddListener = function(view, childSelector, eventName, listener) {
		var _i, _ref, _tuple, el, err, targetEls;
		_tuple = QuerySelectorAll(view, childSelector); targetEls = _tuple[0]; err = _tuple[1];
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		_ref = targetEls;
		_i = 0;
		while (_i < _ref.$length) {
			el = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			el.AddEventListener(eventName, false, nonBlockingListener(listener));
			_i++;
		}
		return $ifaceNil;
	};
	nonBlockingListener = function(listener) {
		return (function(ev) {
			$go((function($b) {
				var $args = arguments, $r, $s = 0, $this = this;
				/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
				$r = listener(ev, $BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
				/* */ case -1: } return; } }; $f.$blocking = true; return $f;
			}), []);
		});
	};
	OnLoader.init([{prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_view = function() { while (true) { switch ($s) { case 0:
		$r = fmt.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = humble.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = dom.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = regexp.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		document = $ifaceNil;
		init();
		/* */ } return; } }; $init_view.$blocking = true; return $init_view;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/recall-frontend/go/config"] = (function() {
	var $pkg = {};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_config = function() { while (true) { switch ($s) { case 0:
		$pkg.Port = "3000";
		/* */ } return; } }; $init_config.$blocking = true; return $init_config;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/recall-frontend/go/models"] = (function() {
	var $pkg = {}, config, dom, strconv, time, Reminder, Session, User, ptrType, ptrType$1, ptrType$2;
	config = $packages["github.com/fabioberger/recall-frontend/go/config"];
	dom = $packages["honnef.co/go/js/dom"];
	strconv = $packages["strconv"];
	time = $packages["time"];
	Reminder = $pkg.Reminder = $newType(0, $kindStruct, "models.Reminder", "Reminder", "github.com/fabioberger/recall-frontend/go/models", function(Id_, Reminder_, Timestamp_, Error_) {
		this.$val = this;
		this.Id = Id_ !== undefined ? Id_ : 0;
		this.Reminder = Reminder_ !== undefined ? Reminder_ : "";
		this.Timestamp = Timestamp_ !== undefined ? Timestamp_ : 0;
		this.Error = Error_ !== undefined ? Error_ : "";
	});
	Session = $pkg.Session = $newType(0, $kindStruct, "models.Session", "Session", "github.com/fabioberger/recall-frontend/go/models", function(Id_, Email_, Password_, RememberMe_, Error_) {
		this.$val = this;
		this.Id = Id_ !== undefined ? Id_ : 0;
		this.Email = Email_ !== undefined ? Email_ : "";
		this.Password = Password_ !== undefined ? Password_ : "";
		this.RememberMe = RememberMe_ !== undefined ? RememberMe_ : false;
		this.Error = Error_ !== undefined ? Error_ : "";
	});
	User = $pkg.User = $newType(0, $kindStruct, "models.User", "User", "github.com/fabioberger/recall-frontend/go/models", function(Id_, Name_, Email_, Password_, ConfirmPassword_, Error_) {
		this.$val = this;
		this.Id = Id_ !== undefined ? Id_ : 0;
		this.Name = Name_ !== undefined ? Name_ : "";
		this.Email = Email_ !== undefined ? Email_ : "";
		this.Password = Password_ !== undefined ? Password_ : "";
		this.ConfirmPassword = ConfirmPassword_ !== undefined ? ConfirmPassword_ : "";
		this.Error = Error_ !== undefined ? Error_ : "";
	});
		ptrType = $ptrType(Reminder);
		ptrType$1 = $ptrType(Session);
		ptrType$2 = $ptrType(User);
	Reminder.ptr.prototype.GetId = function() {
		var t;
		t = this;
		return strconv.Itoa(t.Id);
	};
	Reminder.prototype.GetId = function() { return this.$val.GetId(); };
	Reminder.ptr.prototype.RootURL = function() {
		var root, t;
		t = this;
		root = $internalize(dom.GetWindow().Location().URLUtils.Object.hostname, $String);
		return "http://" + root + ":" + config.Port + "/reminders";
	};
	Reminder.prototype.RootURL = function() { return this.$val.RootURL(); };
	Reminder.ptr.prototype.GetDate = function() {
		var _tuple, day, month, readableDate, t, year;
		t = this;
		_tuple = time.Unix(new $Int64(0, t.Timestamp), new $Int64(0, 0)).Date(); year = _tuple[0]; month = _tuple[1]; day = _tuple[2];
		readableDate = strconv.Itoa(day) + " " + new time.Month(month).String() + ", " + strconv.Itoa(year);
		return readableDate;
	};
	Reminder.prototype.GetDate = function() { return this.$val.GetDate(); };
	Session.ptr.prototype.GetId = function() {
		var t;
		t = this;
		return strconv.Itoa(t.Id);
	};
	Session.prototype.GetId = function() { return this.$val.GetId(); };
	Session.ptr.prototype.RootURL = function() {
		var root, t;
		t = this;
		root = $internalize(dom.GetWindow().Location().URLUtils.Object.hostname, $String);
		return "http://" + root + ":" + config.Port + "/sessions";
	};
	Session.prototype.RootURL = function() { return this.$val.RootURL(); };
	User.ptr.prototype.GetId = function() {
		var t;
		t = this;
		return strconv.Itoa(t.Id);
	};
	User.prototype.GetId = function() { return this.$val.GetId(); };
	User.ptr.prototype.RootURL = function() {
		var root, t;
		t = this;
		root = $internalize(dom.GetWindow().Location().URLUtils.Object.hostname, $String);
		return "http://" + root + ":" + config.Port + "/users";
	};
	User.prototype.RootURL = function() { return this.$val.RootURL(); };
	ptrType.methods = [{prop: "GetDate", name: "GetDate", pkg: "", type: $funcType([], [$String], false)}, {prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "RootURL", name: "RootURL", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$1.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "RootURL", name: "RootURL", pkg: "", type: $funcType([], [$String], false)}];
	ptrType$2.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "RootURL", name: "RootURL", pkg: "", type: $funcType([], [$String], false)}];
	Reminder.init([{prop: "Id", name: "Id", pkg: "", type: $Int, tag: ""}, {prop: "Reminder", name: "Reminder", pkg: "", type: $String, tag: ""}, {prop: "Timestamp", name: "Timestamp", pkg: "", type: $Int32, tag: ""}, {prop: "Error", name: "Error", pkg: "", type: $String, tag: ""}]);
	Session.init([{prop: "Id", name: "Id", pkg: "", type: $Int, tag: ""}, {prop: "Email", name: "Email", pkg: "", type: $String, tag: ""}, {prop: "Password", name: "Password", pkg: "", type: $String, tag: ""}, {prop: "RememberMe", name: "RememberMe", pkg: "", type: $Bool, tag: ""}, {prop: "Error", name: "Error", pkg: "", type: $String, tag: ""}]);
	User.init([{prop: "Id", name: "Id", pkg: "", type: $Int, tag: ""}, {prop: "Name", name: "Name", pkg: "", type: $String, tag: ""}, {prop: "Email", name: "Email", pkg: "", type: $String, tag: ""}, {prop: "Password", name: "Password", pkg: "", type: $String, tag: ""}, {prop: "ConfirmPassword", name: "ConfirmPassword", pkg: "", type: $String, tag: ""}, {prop: "Error", name: "Error", pkg: "", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_models = function() { while (true) { switch ($s) { case 0:
		$r = config.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = dom.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_models.$blocking = true; return $init_models;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/humble"] = (function() {
	var $pkg = {}, fmt, rand, strconv, time, Identifier, sliceType$1, ptrType$1, generateRandomId, generateRandomAlphanum;
	fmt = $packages["fmt"];
	rand = $packages["math/rand"];
	strconv = $packages["strconv"];
	time = $packages["time"];
	Identifier = $pkg.Identifier = $newType(0, $kindStruct, "humble.Identifier", "Identifier", "github.com/fabioberger/humble", function(Id_) {
		this.$val = this;
		this.Id = Id_ !== undefined ? Id_ : "";
	});
		sliceType$1 = $sliceType($Uint8);
		ptrType$1 = $ptrType(Identifier);
	Identifier.ptr.prototype.GetId = function() {
		var i;
		i = this;
		if (i.Id === "") {
			i.Id = generateRandomId();
		}
		return i.Id;
	};
	Identifier.prototype.GetId = function() { return this.$val.GetId(); };
	generateRandomId = function() {
		var randomString, timeInt, timeString;
		timeInt = time.Now().Unix();
		timeString = strconv.FormatInt(timeInt, 36);
		randomString = generateRandomAlphanum(16);
		return randomString + timeString;
	};
	generateRandomAlphanum = function(size) {
		var alphanum, i, slice, x;
		alphanum = new sliceType$1($stringToBytes("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"));
		slice = $makeSlice(sliceType$1, size);
		rand.Seed(time.Now().UTC().UnixNano());
		i = 0;
		while (i < size) {
			(i < 0 || i >= slice.$length) ? $throwRuntimeError("index out of range") : slice.$array[slice.$offset + i] = (x = rand.Intn(alphanum.$length), ((x < 0 || x >= alphanum.$length) ? $throwRuntimeError("index out of range") : alphanum.$array[alphanum.$offset + x]));
			i = i + (1) >> 0;
		}
		return $bytesToString(slice);
	};
	ptrType$1.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}];
	Identifier.init([{prop: "Id", name: "Id", pkg: "", type: $String, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_humble = function() { while (true) { switch ($s) { case 0:
		$r = fmt.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = rand.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = strconv.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = time.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_humble.$blocking = true; return $init_humble;
	};
	return $pkg;
})();
$packages["github.com/fabioberger/recall-frontend/go/views"] = (function() {
	var $pkg = {}, fmt, humble, model, view, models, js, console, dom, strings, App, Login, Profile, RecallForm, Reminder, Signup, sliceType, ptrType, sliceType$1, ptrType$1, ptrType$2, ptrType$3, ptrType$4, ptrType$5, sliceType$2, ptrType$6, ptrType$7, doc, cookieExists, addAlert, setUserMenu, setVisitorMenu;
	fmt = $packages["fmt"];
	humble = $packages["github.com/fabioberger/humble"];
	model = $packages["github.com/fabioberger/humble/model"];
	view = $packages["github.com/fabioberger/humble/view"];
	models = $packages["github.com/fabioberger/recall-frontend/go/models"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	console = $packages["honnef.co/go/js/console"];
	dom = $packages["honnef.co/go/js/dom"];
	strings = $packages["strings"];
	App = $pkg.App = $newType(0, $kindStruct, "views.App", "App", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
	});
	Login = $pkg.Login = $newType(0, $kindStruct, "views.Login", "Login", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
	});
	Profile = $pkg.Profile = $newType(0, $kindStruct, "views.Profile", "Profile", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_, Children_, User_, Reminders_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
		this.Children = Children_ !== undefined ? Children_ : sliceType$1.nil;
		this.User = User_ !== undefined ? User_ : ptrType$5.nil;
		this.Reminders = Reminders_ !== undefined ? Reminders_ : sliceType$2.nil;
	});
	RecallForm = $pkg.RecallForm = $newType(0, $kindStruct, "views.RecallForm", "RecallForm", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
	});
	Reminder = $pkg.Reminder = $newType(0, $kindStruct, "views.Reminder", "Reminder", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_, Reminder_, Parent_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
		this.Reminder = Reminder_ !== undefined ? Reminder_ : ptrType$1.nil;
		this.Parent = Parent_ !== undefined ? Parent_ : ptrType$2.nil;
	});
	Signup = $pkg.Signup = $newType(0, $kindStruct, "views.Signup", "Signup", "github.com/fabioberger/recall-frontend/go/views", function(Identifier_) {
		this.$val = this;
		this.Identifier = Identifier_ !== undefined ? Identifier_ : new humble.Identifier.ptr();
	});
		sliceType = $sliceType($emptyInterface);
		ptrType = $ptrType(Reminder);
		sliceType$1 = $sliceType(ptrType);
		ptrType$1 = $ptrType(models.Reminder);
		ptrType$2 = $ptrType(Profile);
		ptrType$3 = $ptrType(App);
		ptrType$4 = $ptrType(Login);
		ptrType$5 = $ptrType(models.User);
		sliceType$2 = $sliceType(ptrType$1);
		ptrType$6 = $ptrType(RecallForm);
		ptrType$7 = $ptrType(Signup);
	App.ptr.prototype.RenderHTML = function() {
		var a;
		a = this;
		return fmt.Sprintf("\n\t<nav class=\"navbar navbar-default\">\n\t\t  <div class=\"container-fluid\">\n\t\t    <div class=\"navbar-header\">\n\t\t      <a class=\"navbar-brand\" href=\"/#/\">\n\t\t        <img alt=\"Brand\" src=\"/images/brain.png\">\n\t\t      </a>\n\t\t    </div>\n\t\t    <div class=\"navbar-right collapse navbar-collapse\">\n\t\t    \t<div id=\"loggedOut\">\n\t\t\t\t    <a href=\"/#/signup\"><button type=\"button\" class=\"btn btn-default navbar-btn\">Sign Up</button></a>\n\t\t\t\t    <a href=\"/#/login\"><button type=\"button\" class=\"btn btn-default navbar-btn\">Log in</button></a>\n\t\t\t\t   </div>\n\t\t\t\t   <div id=\"loggedIn\">\n\t\t\t\t   \t\t<button type=\"button\" class=\"btn btn-default navbar-btn\" id=\"sign-out\">Sign Out</button>\n\t\t\t\t   \t\t<a href=\"/#/profile\">\n\t\t\t\t   \t\t\t<button type=\"button\" class=\"btn btn-default navbar-btn\">Profile</button>\n\t\t\t\t   \t\t</a>\n\t\t\t\t   </div>\n\t\t    </div>\n\t\t  </div>\n\t\t</nav>\n    <div id=\"container\" class=\"container\">\n    </div>\n\t<script src=\"js/app.js\"></script>", new sliceType([]));
	};
	App.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	App.ptr.prototype.OnLoad = function() {
		var err, exists, v;
		v = this;
		exists = cookieExists("isLoggedIn");
		if (exists) {
			doc.GetElementByID("loggedOut").SetAttribute("style", "display: none;");
		} else {
			doc.GetElementByID("loggedIn").SetAttribute("style", "display: none;");
		}
		err = view.AddListener(v, "button#sign-out", "click", $methodVal(v, "logOutClick"));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		return $ifaceNil;
	};
	App.prototype.OnLoad = function() { return this.$val.OnLoad(); };
	App.ptr.prototype.logOutClick = function(event, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, htmlEl, s, v;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_logOutClick = function() { s: while (true) { switch ($s) { case 0:
		v = $this;
		s = new models.Session.ptr(0, "", "", false, "");
		_r = model.Delete(s, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ if (!($interfaceIsEqual(err, $ifaceNil))) {} else { $s = 2; continue; }
			console.Log(new sliceType([new $String("Hit Error")]));
			console.Log(new sliceType([err]));
		/* } */ case 2:
		htmlEl = $assertType(doc, dom.HTMLDocument);
		htmlEl.SetCookie("isLoggedIn==; expires=Thu, 01 Jan 1970 00:00:01 GMT;");
		htmlEl.SetCookie("recall_session==; expires=Thu, 01 Jan 1970 00:00:01 GMT;");
		setVisitorMenu();
		$global.location.hash = $externalize("/", $String);
		/* */ case -1: } return; } }; $blocking_logOutClick.$blocking = true; return $blocking_logOutClick;
	};
	App.prototype.logOutClick = function(event, $b) { return this.$val.logOutClick(event, $b); };
	App.ptr.prototype.OuterTag = function() {
		var v;
		v = this;
		return "div";
	};
	App.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	cookieExists = function(name) {
		var _i, _ref, c, cookie, cookiePairs, cookieStr, htmlEl;
		htmlEl = $assertType(doc, dom.HTMLDocument);
		cookieStr = htmlEl.Cookie();
		if (cookieStr === "") {
			return false;
		}
		cookiePairs = strings.Split(cookieStr, "; ");
		_ref = cookiePairs;
		_i = 0;
		while (_i < _ref.$length) {
			c = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			cookie = strings.Split(c, "=");
			if (((0 < 0 || 0 >= cookie.$length) ? $throwRuntimeError("index out of range") : cookie.$array[cookie.$offset + 0]) === name) {
				return true;
			}
			_i++;
		}
		return false;
	};
	Login.ptr.prototype.RenderHTML = function() {
		var a;
		a = this;
		return fmt.Sprintf("\n\t<form id=\"form-signin\" onsubmit=\"return false;\">\n\t<div class=\"alert alert-warning\" role=\"alert\" id=\"form-alert\"></div>\n  <h2 class=\"form-signin-heading\">Log In</h2>\n  <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n  <input type=\"text\" name=\"email\" id=\"email\" class=\"form-control login-input\" placeholder=\"me@example.com\" required=\"true\" autofocus=\"\">\n  <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control login-input\" placeholder=\"password\" required=\"true\" autofocus=\"\">\n  <div class=\"checkbox\">\n    <label>\n      <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" value=\"true\"> Remember Me\n    </label>\n  </div>\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" id=\"login-submit\">Log In</button>\n</form>\n", new sliceType([]));
	};
	Login.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	Login.ptr.prototype.OnLoad = function() {
		var err, v;
		v = this;
		doc.GetElementByID("form-alert").SetAttribute("style", "display: none;");
		err = view.AddListener(v, "form#form-signin", "submit", $methodVal(v, "logInClick"));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		return $ifaceNil;
	};
	Login.prototype.OnLoad = function() { return this.$val.OnLoad(); };
	Login.ptr.prototype.logInClick = function(event, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, email, err, m, password, rememberMe, v;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_logInClick = function() { s: while (true) { switch ($s) { case 0:
		v = $this;
		console.Log(new sliceType([new $String("Logged In Submitted")]));
		event.PreventDefault();
		email = $internalize(doc.GetElementByID("email").Underlying().value, $String);
		password = $internalize(doc.GetElementByID("password").Underlying().value, $String);
		rememberMe = !!(doc.GetElementByID("remember-me").Underlying().value);
		m = new models.Session.ptr(0, email, password, rememberMe, "");
		_r = model.Create(m, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ if (!($interfaceIsEqual(err, $ifaceNil))) {} else { $s = 2; continue; }
			addAlert("Could not reach server. Please try again later");
			$panic(err);
		/* } */ case 2:
		if (!(m.Error === "")) {
			console.Log(new sliceType([new $String(m.Error)]));
			addAlert(m.Error);
			return;
		}
		setUserMenu();
		$global.location.hash = $externalize("/profile", $String);
		/* */ case -1: } return; } }; $blocking_logInClick.$blocking = true; return $blocking_logInClick;
	};
	Login.prototype.logInClick = function(event, $b) { return this.$val.logInClick(event, $b); };
	addAlert = function(msg) {
		doc.GetElementByID("form-alert").SetAttribute("style", "display: block;");
		doc.GetElementByID("form-alert").SetInnerHTML(msg);
	};
	Login.ptr.prototype.OuterTag = function() {
		var v;
		v = this;
		return "div";
	};
	Login.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	Profile.ptr.prototype.RenderHTML = function() {
		var v;
		v = this;
		return fmt.Sprintf("\n\t\t<h1>Welcome %s!</h1>\n\t\t<p>Notification Email: %s</p>\n\n\t\t<div class=\"new-reminder\">\n\t\t\t<a href=\"/#/\">\n\t\t\t\t<button class=\"btn btn-success\">New Reminder</button>\n\t\t\t</a>\n\t\t</div>\n\n\t\t<div class=\"reminders\">\n\t\t\t<table class=\"table table-hover table-bordered\" id=\"reminder-table\">\n\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Reminders</th>\n\t\t\t\t\t\t\t<th>Created on</th>\n\t\t\t\t\t\t\t<th>Remove</th>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>", new sliceType([new $String(v.User.Name), new $String(v.User.Email)]));
	};
	Profile.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	Profile.ptr.prototype.InitChildren = function(reminders) {
		var _i, _ref, r, reminderView, v;
		v = this;
		v.Children = new sliceType$1([]);
		_ref = reminders;
		_i = 0;
		while (_i < _ref.$length) {
			r = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			reminderView = new Reminder.ptr(new humble.Identifier.ptr(), r, v);
			v.addChild(reminderView);
			_i++;
		}
	};
	Profile.prototype.InitChildren = function(reminders) { return this.$val.InitChildren(reminders); };
	Profile.ptr.prototype.addChild = function(reminderView) {
		var v;
		v = this;
		v.Children = $append(v.Children, reminderView);
	};
	Profile.prototype.addChild = function(reminderView) { return this.$val.addChild(reminderView); };
	Profile.ptr.prototype.removeChild = function(reminderView) {
		var _i, _ref, child, i, v;
		v = this;
		_ref = v.Children;
		_i = 0;
		while (_i < _ref.$length) {
			i = _i;
			child = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			if (child.Identifier.Id === reminderView.Identifier.Id) {
				v.Children = $appendSlice($subslice(v.Children, 0, i), $subslice(v.Children, (i + 1 >> 0)));
			}
			_i++;
		}
	};
	Profile.prototype.removeChild = function(reminderView) { return this.$val.removeChild(reminderView); };
	Profile.ptr.prototype.OnLoad = function($b) {
		var $args = arguments, $r, $s = 0, $this = this, _i, _r, _ref, childView, v;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_OnLoad = function() { s: while (true) { switch ($s) { case 0:
		v = $this;
		_ref = v.Children;
		_i = 0;
		/* while (_i < _ref.$length) { */ case 1: if(!(_i < _ref.$length)) { $s = 2; continue; }
			childView = ((_i < 0 || _i >= _ref.$length) ? $throwRuntimeError("index out of range") : _ref.$array[_ref.$offset + _i]);
			_r = view.AppendToParentHTML(childView, "table#reminder-table tbody", $BLOCKING); /* */ $s = 3; case 3: if (_r && _r.$blocking) { _r = _r(); }
			_r;
			_i++;
		/* } */ $s = 1; continue; case 2:
		return $ifaceNil;
		/* */ case -1: } return; } }; $blocking_OnLoad.$blocking = true; return $blocking_OnLoad;
	};
	Profile.prototype.OnLoad = function($b) { return this.$val.OnLoad($b); };
	Profile.ptr.prototype.OuterTag = function() {
		var v;
		v = this;
		return "div";
	};
	Profile.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	RecallForm.ptr.prototype.RenderHTML = function() {
		var a;
		a = this;
		return fmt.Sprintf("\n\t<form class=\"form-signin\" role=\"form\" id=\"reminder-form\" onsubmit=\"return false;\">\n\t<div class=\"alert alert-warning\" role=\"alert\" id=\"form-alert\"></div>\n  <h2 class=\"form-signin-heading\">What would you like to Recall?</h2>\n  <label for=\"inputEmail\" class=\"sr-only\">Knowledge Title</label>\n  <input type=\"text\" name=\"reminder\" id=\"reminder\" class=\"form-control\" placeholder=\"Crypto Course Week 1...\" required=\"\" autofocus=\"\">\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Recall</button>\n</form>\n", new sliceType([]));
	};
	RecallForm.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	RecallForm.ptr.prototype.OnLoad = function() {
		var err, v;
		v = this;
		doc.GetElementByID("form-alert").SetAttribute("style", "display: none;");
		err = view.AddListener(v, "form#reminder-form", "submit", $methodVal(v, "newReminder"));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		return $ifaceNil;
	};
	RecallForm.prototype.OnLoad = function() { return this.$val.OnLoad(); };
	RecallForm.ptr.prototype.newReminder = function(event, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, m, reminder, v;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_newReminder = function() { s: while (true) { switch ($s) { case 0:
		v = $this;
		event.PreventDefault();
		reminder = $internalize(doc.GetElementByID("reminder").Underlying().value, $String);
		m = new models.Reminder.ptr(0, reminder, 0, "");
		_r = model.Create(m, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ if (!($interfaceIsEqual(err, $ifaceNil))) {} else { $s = 2; continue; }
			addAlert("Could not reach server. Please try again later");
			$panic(err);
		/* } */ case 2:
		if (!(m.Error === "")) {
			console.Log(new sliceType([new $String(m.Error)]));
			addAlert(m.Error);
			return;
		}
		$global.location.hash = $externalize("/profile", $String);
		/* */ case -1: } return; } }; $blocking_newReminder.$blocking = true; return $blocking_newReminder;
	};
	RecallForm.prototype.newReminder = function(event, $b) { return this.$val.newReminder(event, $b); };
	RecallForm.ptr.prototype.OuterTag = function() {
		var v;
		v = this;
		return "div";
	};
	RecallForm.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	Reminder.ptr.prototype.RenderHTML = function() {
		var r;
		r = this;
		return fmt.Sprintf("\n\t<tr>\n\t\t<td>%s</td>\n\t\t<td>%s</td>\n\t\t<td class=\"remove\"><a href=\"javascript:void(0)\" class=\"remove\">X</a></td>\n\t</tr>", new sliceType([new $String(r.Reminder.Reminder), new $String(r.Reminder.GetDate())]));
	};
	Reminder.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	Reminder.ptr.prototype.OnLoad = function() {
		var err, r;
		r = this;
		err = view.AddListener(r, "a.remove", "click", $methodVal(r, "deleteClicked"));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		return $ifaceNil;
	};
	Reminder.prototype.OnLoad = function() { return this.$val.OnLoad(); };
	Reminder.ptr.prototype.deleteClicked = function(event, $b) {
		var $args = arguments, $r, $s = 0, $this = this, r;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_deleteClicked = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		$r = r.remove($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		/* */ case -1: } return; } }; $blocking_deleteClicked.$blocking = true; return $blocking_deleteClicked;
	};
	Reminder.prototype.deleteClicked = function(event, $b) { return this.$val.deleteClicked(event, $b); };
	Reminder.ptr.prototype.remove = function($b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, err, err$1, r;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_remove = function() { s: while (true) { switch ($s) { case 0:
		r = $this;
		err = view.Remove(r);
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			$panic(err);
		}
		_r = model.Delete(r.Reminder, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err$1 = _r;
		/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ if (!($interfaceIsEqual(err$1, $ifaceNil))) {} else { $s = 2; continue; }
			$panic(err$1);
		/* } */ case 2:
		r.Parent.removeChild(r);
		/* */ case -1: } return; } }; $blocking_remove.$blocking = true; return $blocking_remove;
	};
	Reminder.prototype.remove = function($b) { return this.$val.remove($b); };
	Reminder.ptr.prototype.OuterTag = function() {
		var r;
		r = this;
		return "tr";
	};
	Reminder.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	Signup.ptr.prototype.RenderHTML = function() {
		var a;
		a = this;
		return fmt.Sprintf("\n\t\t<form class=\"form-signin\" role=\"form\" id=\"form-signup\" onsubmit=\"return false;\">\n\t  <h2 class=\"form-signin-heading\">Sign Up</h2>\n\t  <div class=\"alert alert-warning\" role=\"alert\" id=\"form-alert\"></div>\n\t  <label for=\"inputName\" class=\"sr-only\">Name</label>\n\t  <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Bob Jones\" required=\"true\" autofocus=\"\">\n\t  <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n\t  <input type=\"text\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"me@example.com\" required=\"true\" autofocus=\"\">\n\t  <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"password\" required=\"true\" autofocus=\"\">\n\t   <input type=\"password\" name=\"confirmPassword\" id=\"confirm_password\" class=\"form-control\" placeholder=\"confirm password\" required=\"true\" autofocus=\"\">\n\t  <button class=\"btn btn-lg btn-primary btn-block\" id=\"new-user\" type=\"submit\">Log In</button>\n\t  </form>\n", new sliceType([]));
	};
	Signup.prototype.RenderHTML = function() { return this.$val.RenderHTML(); };
	Signup.ptr.prototype.OuterTag = function() {
		var v;
		v = this;
		return "div";
	};
	Signup.prototype.OuterTag = function() { return this.$val.OuterTag(); };
	Signup.ptr.prototype.OnLoad = function() {
		var err, v;
		v = this;
		doc.GetElementByID("form-alert").SetAttribute("style", "display: none;");
		err = view.AddListener(v, "form#form-signup", "submit", $methodVal(v, "newUserClick"));
		if (!($interfaceIsEqual(err, $ifaceNil))) {
			return err;
		}
		return $ifaceNil;
	};
	Signup.prototype.OnLoad = function() { return this.$val.OnLoad(); };
	Signup.ptr.prototype.newUserClick = function(event, $b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, confirmPassword, email, err, m, name, password, v;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_newUserClick = function() { s: while (true) { switch ($s) { case 0:
		v = $this;
		event.PreventDefault();
		name = $internalize(doc.GetElementByID("name").Underlying().value, $String);
		email = $internalize(doc.GetElementByID("email").Underlying().value, $String);
		password = $internalize(doc.GetElementByID("password").Underlying().value, $String);
		confirmPassword = $internalize(doc.GetElementByID("confirm_password").Underlying().value, $String);
		m = new models.User.ptr(0, name, email, password, confirmPassword, "");
		_r = model.Create(m, $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ if (!($interfaceIsEqual(err, $ifaceNil))) {} else { $s = 2; continue; }
			addAlert("Could not reach server. Please try again later");
			$panic(err);
		/* } */ case 2:
		if (!(m.Error === "")) {
			addAlert(m.Error);
			return;
		}
		setUserMenu();
		$global.location.hash = $externalize("/profile", $String);
		/* */ case -1: } return; } }; $blocking_newUserClick.$blocking = true; return $blocking_newUserClick;
	};
	Signup.prototype.newUserClick = function(event, $b) { return this.$val.newUserClick(event, $b); };
	setUserMenu = function() {
		doc.GetElementByID("loggedOut").SetAttribute("style", "display: none;");
		doc.GetElementByID("loggedIn").SetAttribute("style", "display: block;");
	};
	setVisitorMenu = function() {
		doc.GetElementByID("loggedOut").SetAttribute("style", "display: block;");
		doc.GetElementByID("loggedIn").SetAttribute("style", "display: none;");
	};
	ptrType$3.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "logOutClick", name: "logOutClick", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([dom.Event], [], false)}];
	ptrType$4.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "logInClick", name: "logInClick", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([dom.Event], [], false)}];
	ptrType$2.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "InitChildren", name: "InitChildren", pkg: "", type: $funcType([sliceType$2], [], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "addChild", name: "addChild", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([ptrType], [], false)}, {prop: "removeChild", name: "removeChild", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([ptrType], [], false)}];
	ptrType$6.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "newReminder", name: "newReminder", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([dom.Event], [], false)}];
	ptrType.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "deleteClicked", name: "deleteClicked", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([dom.Event], [], false)}, {prop: "remove", name: "remove", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([], [], false)}];
	ptrType$7.methods = [{prop: "GetId", name: "GetId", pkg: "", type: $funcType([], [$String], false)}, {prop: "OnLoad", name: "OnLoad", pkg: "", type: $funcType([], [$error], false)}, {prop: "OuterTag", name: "OuterTag", pkg: "", type: $funcType([], [$String], false)}, {prop: "RenderHTML", name: "RenderHTML", pkg: "", type: $funcType([], [$String], false)}, {prop: "newUserClick", name: "newUserClick", pkg: "github.com/fabioberger/recall-frontend/go/views", type: $funcType([dom.Event], [], false)}];
	App.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}]);
	Login.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}]);
	Profile.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}, {prop: "Children", name: "Children", pkg: "", type: sliceType$1, tag: ""}, {prop: "User", name: "User", pkg: "", type: ptrType$5, tag: ""}, {prop: "Reminders", name: "Reminders", pkg: "", type: sliceType$2, tag: ""}]);
	RecallForm.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}]);
	Reminder.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}, {prop: "Reminder", name: "Reminder", pkg: "", type: ptrType$1, tag: ""}, {prop: "Parent", name: "Parent", pkg: "", type: ptrType$2, tag: ""}]);
	Signup.init([{prop: "Identifier", name: "", pkg: "", type: humble.Identifier, tag: ""}]);
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_views = function() { while (true) { switch ($s) { case 0:
		$r = fmt.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = humble.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = model.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = view.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = models.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = console.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = dom.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		$r = strings.$init($BLOCKING); /* */ $s = 9; case 9: if ($r && $r.$blocking) { $r = $r(); }
		doc = dom.GetWindow().Document();
		/* */ } return; } }; $init_views.$blocking = true; return $init_views;
	};
	return $pkg;
})();
$packages["/Users/fberger/gd/go/src/github.com/fabioberger/recall-frontend/go"] = (function() {
	var $pkg = {}, model, router, view, models, views, js, console, dom, structType, sliceType, ptrType, sliceType$1, ptrType$1, ptrType$2, sliceType$2, ptrType$3, doc, elements, init, main;
	model = $packages["github.com/fabioberger/humble/model"];
	router = $packages["github.com/fabioberger/humble/router"];
	view = $packages["github.com/fabioberger/humble/view"];
	models = $packages["github.com/fabioberger/recall-frontend/go/models"];
	views = $packages["github.com/fabioberger/recall-frontend/go/views"];
	js = $packages["github.com/gopherjs/gopherjs/js"];
	console = $packages["honnef.co/go/js/console"];
	dom = $packages["honnef.co/go/js/dom"];
		structType = $structType([{prop: "body", name: "body", pkg: "/Users/fberger/gd/go/src/github.com/fabioberger/recall-frontend/go", type: dom.Element, tag: ""}]);
		sliceType = $sliceType($emptyInterface);
		ptrType = $ptrType(models.Reminder);
		sliceType$1 = $sliceType(ptrType);
		ptrType$1 = $ptrType(sliceType$1);
		ptrType$2 = $ptrType(views.Reminder);
		sliceType$2 = $sliceType(ptrType$2);
		ptrType$3 = $ptrType(models.User);
	init = function() {
		elements.body = doc.QuerySelector("body");
	};
	main = function($b) {
		var $args = arguments, $r, $s = 0, $this = this, _r, appView, err, r;
		/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $blocking_main = function() { s: while (true) { switch ($s) { case 0:
		console.Log(new sliceType([new $String("Starting...")]));
		appView = new views.App.ptr(new $packages["github.com/fabioberger/humble"].Identifier.ptr());
		_r = view.ReplaceParentHTML(appView, "body", $BLOCKING); /* */ $s = 1; case 1: if (_r && _r.$blocking) { _r = _r(); }
		err = _r;
		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ if (!($interfaceIsEqual(err, $ifaceNil))) {} else { $s = 2; continue; }
			$panic(err);
		/* } */ case 2:
		r = router.New();
		r.HandleFunc("/", (function(params, $b) {
			var $args = arguments, $r, $s = 0, $this = this, _r$1, form;
			/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
			form = new views.RecallForm.ptr(new $packages["github.com/fabioberger/humble"].Identifier.ptr());
			_r$1 = view.ReplaceParentHTML(form, "#container", $BLOCKING); /* */ $s = 1; case 1: if (_r$1 && _r$1.$blocking) { _r$1 = _r$1(); }
			_r$1;
			/* */ case -1: } return; } }; $f.$blocking = true; return $f;
		}));
		r.HandleFunc("/login", (function(params, $b) {
			var $args = arguments, $r, $s = 0, $this = this, _r$1, login;
			/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
			login = new views.Login.ptr(new $packages["github.com/fabioberger/humble"].Identifier.ptr());
			_r$1 = view.ReplaceParentHTML(login, "#container", $BLOCKING); /* */ $s = 1; case 1: if (_r$1 && _r$1.$blocking) { _r$1 = _r$1(); }
			_r$1;
			/* */ case -1: } return; } }; $f.$blocking = true; return $f;
		}));
		r.HandleFunc("/signup", (function(params, $b) {
			var $args = arguments, $r, $s = 0, $this = this, _r$1, signup;
			/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
			signup = new views.Signup.ptr(new $packages["github.com/fabioberger/humble"].Identifier.ptr());
			_r$1 = view.ReplaceParentHTML(signup, "#container", $BLOCKING); /* */ $s = 1; case 1: if (_r$1 && _r$1.$blocking) { _r$1 = _r$1(); }
			_r$1;
			/* */ case -1: } return; } }; $f.$blocking = true; return $f;
		}));
		r.HandleFunc("/profile", (function(params, $b) {
			var $args = arguments, $r, $s = 0, $this = this, _r$1, _r$2, _r$3, err$1, err$2, profile, reminders, user;
			/* */ if($b !== $BLOCKING) { $nonblockingCall(); }; var $f = function() { s: while (true) { switch ($s) { case 0:
			user = new models.User.ptr(0, "", "", "", "", "");
			_r$1 = model.Read(user, 0, $BLOCKING); /* */ $s = 1; case 1: if (_r$1 && _r$1.$blocking) { _r$1 = _r$1(); }
			err$1 = _r$1;
			/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ if (!($interfaceIsEqual(err$1, $ifaceNil))) {} else { $s = 2; continue; }
				$panic(err$1);
			/* } */ case 2:
			if (!(user.Error === "")) {
				console.Log(new sliceType([new $String("User doens't exist")]));
				$global.location.hash = $externalize("/", $String);
				return;
			}
			reminders = new sliceType$1([]);
			_r$2 = model.ReadAll(new ptrType$1(function() { return reminders; }, function($v) { reminders = $v; }), $BLOCKING); /* */ $s = 3; case 3: if (_r$2 && _r$2.$blocking) { _r$2 = _r$2(); }
			err$2 = _r$2;
			/* if (!($interfaceIsEqual(err$2, $ifaceNil))) { */ if (!($interfaceIsEqual(err$2, $ifaceNil))) {} else { $s = 4; continue; }
				$panic(err$2);
			/* } */ case 4:
			console.Log(new sliceType([reminders]));
			profile = new views.Profile.ptr(new $packages["github.com/fabioberger/humble"].Identifier.ptr(), sliceType$2.nil, user, reminders);
			profile.InitChildren(reminders);
			_r$3 = view.ReplaceParentHTML(profile, "#container", $BLOCKING); /* */ $s = 5; case 5: if (_r$3 && _r$3.$blocking) { _r$3 = _r$3(); }
			_r$3;
			/* */ case -1: } return; } }; $f.$blocking = true; return $f;
		}));
		$r = r.Start($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		/* */ case -1: } return; } }; $blocking_main.$blocking = true; return $blocking_main;
	};
	$pkg.$init = function() {
		$pkg.$init = function() {};
		/* */ var $r, $s = 0; var $init_main = function() { while (true) { switch ($s) { case 0:
		$r = model.$init($BLOCKING); /* */ $s = 1; case 1: if ($r && $r.$blocking) { $r = $r(); }
		$r = router.$init($BLOCKING); /* */ $s = 2; case 2: if ($r && $r.$blocking) { $r = $r(); }
		$r = view.$init($BLOCKING); /* */ $s = 3; case 3: if ($r && $r.$blocking) { $r = $r(); }
		$r = models.$init($BLOCKING); /* */ $s = 4; case 4: if ($r && $r.$blocking) { $r = $r(); }
		$r = views.$init($BLOCKING); /* */ $s = 5; case 5: if ($r && $r.$blocking) { $r = $r(); }
		$r = js.$init($BLOCKING); /* */ $s = 6; case 6: if ($r && $r.$blocking) { $r = $r(); }
		$r = console.$init($BLOCKING); /* */ $s = 7; case 7: if ($r && $r.$blocking) { $r = $r(); }
		$r = dom.$init($BLOCKING); /* */ $s = 8; case 8: if ($r && $r.$blocking) { $r = $r(); }
		doc = dom.GetWindow().Document();
		elements = new structType.ptr($ifaceNil);
		init();
		$r = main($BLOCKING); /* */ $s = 9; case 9: if ($r && $r.$blocking) { $r = $r(); }
		/* */ } return; } }; $init_main.$blocking = true; return $init_main;
	};
	return $pkg;
})();
$initAnonTypes();
$packages["runtime"].$init()();
$go($packages["/Users/fberger/gd/go/src/github.com/fabioberger/recall-frontend/go"].$init, [], true);
$flushConsole();

})(this);
//# sourceMappingURL=app.js.map
